
&НаСервере
&ИзменениеИКонтроль("ЗаполнитьЭтапыОплаты")
Процедура РСК_ЗаполнитьЭтапыОплаты()

	ПараметрыЗаполнения = ЭтапыОплатыСервер.ПараметрыЗаполненияЭтаповОплаты();
	ПараметрыЗаполнения.ЭтоРасчетыСКлиентами            = Ложь;
	ПараметрыЗаполнения.НакладнаяПоЗаказам              = НакладнаяПоЗаказам;
	ПараметрыЗаполнения.ПорядокРасчетов                 = ПорядокРасчетов;
	ПараметрыЗаполнения.ЭтоЗаказ                        = ЭтоЗаказ;
	ПараметрыЗаполнения.НетКонтроляПредоплаты           = НетКонтроляПредоплаты;
	ПараметрыЗаполнения.ДатаПереходаПраваСобственности  = ДатаПереходаПраваСобственности;

	ЗаполнитьЗначенияСвойств(ПараметрыЗаполнения, ЭтаФорма);
	ПараметрыЗаполнения.СуммаОплаты                     = СуммаОплатыПоДокументу;
	ПараметрыЗаполнения.СуммаЗалогаЗаТару               = СуммаЗалогаПоДокументу;

	Если НесколькоДатОтгрузки Тогда
		ПараметрыЗаполнения.ДатаОтгрузки = ТабличнаяЧасть.Выгрузить();
	КонецЕсли;
	#Вставка
	//++ РС Консалт: Трофимов Евгений 02.03.2023 Задача 23985
	//e1cib/data/Документ.Задание?ref=b37a5a78714d889647e1e0192b7e7134
	ПараметрыЗаполнения.ДатаРазмещения					= ДатаРазмещения;
	//Всегда нужно выгружать табличную часть так как могут быть разные даты прибытия в порт и/или даты окончания производства
	ПараметрыЗаполнения.ДатаОтгрузки = ТабличнаяЧасть.Выгрузить();
	//-- КонецЗадачи 23985	
	#КонецВставки

	ЭтапыОплатыСервер.ЗаполнитьЭтапыОплаты(ЭтапыГрафикаОплаты, ПараметрыЗаполнения);

	Если УпрощенныйРежим Тогда
		ПреобразоватьТаблицуЭтаповВДанныеУпрощенногоРежима(ЭтапыГрафикаОплаты.Выгрузить());
	КонецЕсли;

	ЗаполнитьДатыОтгрузки();

КонецПроцедуры

&НаКлиенте
Процедура РСК_ЭтапыГрафикаОплатыСдвигПриИзмененииВместо(Элемент)
	//++ РС Консалт: Трофимов Евгений 15.03.2023 Задача 23985
	//e1cib/data/Документ.Задание?ref=b37a5a78714d889647e1e0192b7e7134
	ТекущиеДанные = Элементы.ЭтапыГрафикаОплаты.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ОсобыеВариантыОтсчета = Новый Массив;
	ОсобыеВариантыОтсчета.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ДоДатыОкончанияПроизводства"));
	ОсобыеВариантыОтсчета.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ДоДатыПрибытияВПорт"));
	ОсобыеВариантыОтсчета.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ДоДатыРазмещения"));
	ОсобыеВариантыОтсчета.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ОтДатыОкончанияПроизводства"));
	
	Если ТипЗнч(ВладелецФормы) = Тип("ФормаКлиентскогоПриложения") 
		И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ВладелецФормы, "Объект")
		И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ВладелецФормы.Объект, "ХозяйственнаяОперация")
		И (ВладелецФормы.Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути")
		ИЛИ ВладелецФормы.Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути"))
		И ОсобыеВариантыОтсчета.Найти(ТекущиеДанные.ВариантОтсчета) <> Неопределено Тогда
		
		СтрокаТабличнойЧасти = Неопределено;
		Если ЗначениеЗаполнено(ТекущиеДанные.Заказ) Тогда
			СтрокиЗаказа = ТабличнаяЧасть.НайтиСтроки(Новый Структура("Заказ", ТекущиеДанные.Заказ));
			Если СтрокиЗаказа.Количество() > 0 Тогда
				СтрокаТабличнойЧасти = СтрокиЗаказа[0];
			КонецЕсли;
		ИначеЕсли ТабличнаяЧасть.Количество() > 0 Тогда
			СтрокаТабличнойЧасти = ТабличнаяЧасть[0];
		КонецЕсли;
		
		Если СтрокаТабличнойЧасти = Неопределено Тогда
			ПродолжитьВызов(Элемент);
			Возврат;
		КонецЕсли;
		
		ДатаЗаказа = СтрокаТабличнойЧасти.ДатаЗаказа;
		ДатаСогласования = СтрокаТабличнойЧасти.ДатаСогласования;
		Если ТекущиеДанные.ВариантОтсчета = ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ДоДатыОкончанияПроизводства")
			ИЛИ ТекущиеДанные.ВариантОтсчета = ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ОтДатыОкончанияПроизводства") Тогда
			
			ДатаПереходаПраваСобственности = СтрокаТабличнойЧасти.ДатаОкончанияПроизводства;
			
		ИначеЕсли ТекущиеДанные.ВариантОтсчета = ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ДоДатыПрибытияВПорт") Тогда
			ДатаПереходаПраваСобственности = СтрокаТабличнойЧасти.ДатаПрибытияВПорт;
		ИначеЕсли ТекущиеДанные.ВариантОтсчета = ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ДоДатыРазмещения") Тогда
			ДатаПереходаПраваСобственности = ДатаРазмещения;
		КонецЕсли;
		
		
		ЭтапыОплатыКлиент.ЭтапыГрафикаОплатыСдвигВариантОтсчетаПриИзменении(
			Элементы.ЭтапыГрафикаОплаты.ТекущиеДанные,
			ДатаЗаказа,
			ДатаСогласования,
			ДатаОтгрузки,
			СрокПереходаПраваСобственности,
			ДатаПереходаПраваСобственности,
			Календарь);
		
		СортироватьЭтапыОплаты();
		
		
	Иначе
		ПродолжитьВызов(Элемент);
	КонецЕсли;
	//-- КонецЗадачи 23985	
КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("НастроитьЭлементыФормыПоПараметрам")
Процедура РСК_НастроитьЭлементыФормыПоПараметрам()

	НастроитьЭлементыФормыПриИзмененииПорядкаРасчетов();

	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить("СуммаЗалогаЗаТаруКредит");
	МассивЭлементов.Добавить("СуммаЗалогаЗаТаруПредоплата");
	МассивЭлементов.Добавить("ПроцентЗалогаЗаТаруКредит");
	МассивЭлементов.Добавить("ПроцентЗалогаЗаТаруПредоплата");
	МассивЭлементов.Добавить("ВалютаЗалогаЗаТаруКредит");
	МассивЭлементов.Добавить("ВалютаЗалогаЗаТаруПредоплата");
	МассивЭлементов.Добавить("СуммаЗалога");
	МассивЭлементов.Добавить("ВалютаЗалогаПоДокументу");

	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(
	Элементы, МассивЭлементов, "Видимость", Параметры.ТребуетсяЗалогЗаТару);

	Если СуммаОплатыПоДокументу = 0 Тогда 

		МассивЭлементов = Новый Массив;
		МассивЭлементов.Добавить("СуммаПлатежаПредоплата");
		МассивЭлементов.Добавить("СуммаПлатежаКредит");
		МассивЭлементов.Добавить("ПроцентПлатежаПредоплата");
		МассивЭлементов.Добавить("ПроцентПлатежаКредит");

		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "ТолькоПросмотр", Истина);

	КонецЕсли;

	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
	Элементы, "ГруппаИсточникиОплаты", "Видимость", Не Параметры.НеУказыватьИсточникиОплаты);

	Если ИспользоватьОтрицательныеСуммыПлатежа Тогда
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ЭтапыГрафикаОплатыДатаСдвиг", "Заголовок",
		НСтр("ru = 'Дата платежа';
		|en = 'Payment date'"));
	КонецЕсли;

	Если НЕ Параметры.Свойство("Касса") ИЛИ Параметры.Касса = Неопределено Тогда
		Элементы.Касса.Видимость = Ложь;
	КонецЕсли;

	Если НЕ Параметры.Свойство("БанковскийСчет") ИЛИ Параметры.БанковскийСчет = Неопределено Тогда
		Элементы.БанковскийСчет.Видимость = Ложь;
	КонецЕсли;

	Если ЗначениеЗаполнено(АдресВоВременномХранилище) Тогда

		Элементы.ЭтапыГрафикаОплатыВариантОплаты.РежимВыбораИзСписка = Истина;
		Если ЭтоЗаказ Тогда
			Элементы.ЭтапыГрафикаОплатыВариантОплаты.СписокВыбора.Добавить(Перечисления.ВариантыКонтроляОплатыПоставщику.АвансДоПодтверждения);
		КонецЕсли;
		Если НЕ НетКонтроляПредоплаты Тогда
			Элементы.ЭтапыГрафикаОплатыВариантОплаты.СписокВыбора.Добавить(Перечисления.ВариантыКонтроляОплатыПоставщику.ПредоплатаДоПоступления);
		КонецЕсли;
		Элементы.ЭтапыГрафикаОплатыВариантОплаты.СписокВыбора.Добавить(Перечисления.ВариантыКонтроляОплатыПоставщику.КредитСдвиг);
		Элементы.ЭтапыГрафикаОплатыВариантОплаты.СписокВыбора.Добавить(Перечисления.ВариантыКонтроляОплатыПоставщику.КредитПослеПоступления);

		Элементы.ЭтапыГрафикаОплатыВариантОтсчета.РежимВыбораИзСписка = Истина;
		Элементы.ВариантОтсчетаКонтролируемый.РежимВыбораИзСписка = Истина;
		Элементы.ВариантОтсчетаНеКонтролируемый.РежимВыбораИзСписка = Истина;

		Если ЭтоЗаказ Тогда
			Элементы.ЭтапыГрафикаОплатыВариантОтсчета.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ОтДатыЗаказа);
			Элементы.ВариантОтсчетаКонтролируемый.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ОтДатыЗаказа);
			Элементы.ВариантОтсчетаНеКонтролируемый.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ОтДатыЗаказа);

			Элементы.ЭтапыГрафикаОплатыВариантОтсчета.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ОтДатыСогласования);
			Элементы.ВариантОтсчетаКонтролируемый.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ОтДатыСогласования);
			Элементы.ВариантОтсчетаНеКонтролируемый.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ОтДатыСогласования);
			#Вставка
			//++ РС Консалт: Трофимов Евгений 28.03.2023 Задача 23985
			//e1cib/data/Документ.Задание?ref=b37a5a78714d889647e1e0192b7e7134
			Если ТипЗнч(Ключ) = Тип("ДокументСсылка.ЗаказПоставщику") И ЗначениеЗаполнено(Ключ) Тогда
				ХозяйственнаяОперация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ключ, "ХозяйственнаяОперация");
				Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути
					ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути Тогда
					
					Элементы.ЭтапыГрафикаОплатыВариантОтсчета.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ДоДатыРазмещения);
					Элементы.ВариантОтсчетаКонтролируемый.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ДоДатыРазмещения);
					Элементы.ВариантОтсчетаНеКонтролируемый.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ДоДатыРазмещения);
					
					Элементы.ЭтапыГрафикаОплатыВариантОтсчета.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ДоДатыОкончанияПроизводства);
					Элементы.ВариантОтсчетаКонтролируемый.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ДоДатыОкончанияПроизводства);
					Элементы.ВариантОтсчетаНеКонтролируемый.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ДоДатыОкончанияПроизводства);
					
					Элементы.ЭтапыГрафикаОплатыВариантОтсчета.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ОтДатыОкончанияПроизводства);
					Элементы.ВариантОтсчетаКонтролируемый.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ОтДатыОкончанияПроизводства);
					Элементы.ВариантОтсчетаНеКонтролируемый.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ОтДатыОкончанияПроизводства);
					
					Элементы.ЭтапыГрафикаОплатыВариантОтсчета.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ДоДатыПрибытияВПорт);
					Элементы.ВариантОтсчетаКонтролируемый.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ДоДатыПрибытияВПорт);
					Элементы.ВариантОтсчетаНеКонтролируемый.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ДоДатыПрибытияВПорт);
					
				КонецЕсли;
			КонецЕсли;
			//-- КонецЗадачи 23985			
			#КонецВставки

		ИначеЕсли ЗначениеЗаполнено(ГрафикИсполненияДоговора) И Не ЭтоЗаказ Тогда
			Элементы.ЭтапыГрафикаОплатыВариантОтсчета.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ОтДатыЗаказа, НСтр("ru = 'от даты договора';
			|en = 'from contract date'"));
			Элементы.ВариантОтсчетаКонтролируемый.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ОтДатыЗаказа, НСтр("ru = 'от даты договора';
			|en = 'from contract date'"));
			Элементы.ВариантОтсчетаНеКонтролируемый.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ОтДатыЗаказа, НСтр("ru = 'от даты договора';
			|en = 'from contract date'"));
		КонецЕсли;
		Элементы.ЭтапыГрафикаОплатыВариантОтсчета.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ДоДатыОтгрузки);
		Элементы.ВариантОтсчетаКонтролируемый.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ДоДатыОтгрузки);
		Элементы.ВариантОтсчетаНеКонтролируемый.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ДоДатыОтгрузки);

		Элементы.ЭтапыГрафикаОплатыВариантОтсчета.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ОтДатыОтгрузки);
		Элементы.ВариантОтсчетаНеКонтролируемый.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ОтДатыОтгрузки);

		Если ЕстьДатаПереходаПраваСобственности Тогда
			Элементы.ЭтапыГрафикаОплатыВариантОтсчета.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ОтДатыПереходаПраваСобственности);
			Элементы.ВариантОтсчетаНеКонтролируемый.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ОтДатыПереходаПраваСобственности);
		КонецЕсли;

	Иначе

		Элементы.ВариантОтсчетаНеКонтролируемый.ТолькоПросмотр = Истина;
		Элементы.СуммаПлатежаКредит.ТолькоПросмотр = Истина;
		Элементы.ПроцентПлатежаКредит.ТолькоПросмотр = Истина;

	КонецЕсли;

	Элементы.ОплатаВВалюте.Видимость = ВалютаВзаиморасчетов <> ВалютаРеглУчета Или ОплатаВВалюте;

КонецПроцедуры

&НаКлиенте
Процедура РСК_ЭтапыГрафикаОплатыВариантОтсчетаПриИзмененииВместо(Элемент)
	//++ РС Консалт: Трофимов Евгений 28.03.2023 Задача 23985
	//e1cib/data/Документ.Задание?ref=b37a5a78714d889647e1e0192b7e7134
	Если ТипЗнч(Ключ) = Тип("ДокументСсылка.ЗаказПоставщику") И ЗначениеЗаполнено(Ключ) Тогда
		//Сюда мы попадаем, если дата отгрузки одна на весь документ, поэтому в запросе берём всё из шапки
		СтруктЗаказа = ПолучитьСтруктуруЗаказа(Ключ);
		Если СтруктЗаказа.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути")
			ИЛИ СтруктЗаказа.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути") Тогда
			
			ТекущиеДанные = Элементы.ЭтапыГрафикаОплаты.ТекущиеДанные;
			
			Если ЗначениеЗаполнено(ТекущиеДанные.Заказ) Тогда
				СтрокиЗаказа = ТабличнаяЧасть.НайтиСтроки(Новый Структура("Заказ", ТекущиеДанные.Заказ));
				Если СтрокиЗаказа.Количество() > 0 Тогда
					ДатаЗаказа = СтрокиЗаказа[0].ДатаЗаказа;
					ДатаСогласования = СтрокиЗаказа[0].ДатаСогласования;
				КонецЕсли;
			КонецЕсли;
			
			Если ТекущиеДанные.ВариантОтсчета = ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ДоДатыРазмещения") Тогда
				КлючеваяДатаРасчёта = СтруктЗаказа.ДатаРазмещенияВПроизводство;
			ИначеЕсли ТекущиеДанные.ВариантОтсчета = ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ДоДатыОкончанияПроизводства")
				ИЛИ ТекущиеДанные.ВариантОтсчета = ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ОтДатыОкончанияПроизводства") Тогда
				КлючеваяДатаРасчёта = СтруктЗаказа.ДатаЗавершенияПроизводства;
			ИначеЕсли ТекущиеДанные.ВариантОтсчета = ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ДоДатыПрибытияВПорт") Тогда
				КлючеваяДатаРасчёта = СтруктЗаказа.ДатаПрибытияВПорт;
			Иначе
				КлючеваяДатаРасчёта = ДатаПереходаПраваСобственности;
			КонецЕсли;
			
			ЭтапыОплатыКлиент.ЭтапыГрафикаОплатыСдвигВариантОтсчетаПриИзменении(
				ТекущиеДанные,
				ДатаЗаказа,
				ДатаСогласования,
				ДатаОтгрузки,
				СрокПереходаПраваСобственности,
				КлючеваяДатаРасчёта,
				Календарь);
			
			СортироватьЭтапыОплаты();
			
			Возврат;
		КонецЕсли;
	КонецЕсли;	
	
	ПродолжитьВызов(Элемент);
	//-- КонецЗадачи 23985	
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 28.03.2023 Задача 23985
//e1cib/data/Документ.Задание?ref=b37a5a78714d889647e1e0192b7e7134
&НаСервереБезКонтекста
Функция ПолучитьСтруктуруЗаказа(ЗаказПоставщику)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказПоставщику.ДатаПоДаннымПоставщика КАК ДатаРазмещенияВПроизводство,
		|	ЗаказПоставщику.ДатаОтгрузки КАК ДатаЗавершенияПроизводства,
		|	ЕСТЬNULL(ЗаказПоставщикуТовары.ДатаЕТА, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПрибытияВПорт,
		|	ЗаказПоставщику.ДатаПоступления КАК ДатаПоступленияНаСклад,
		|	ЗаказПоставщику.ХозяйственнаяОперация КАК ХозяйственнаяОперация
		|ИЗ
		|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
		|		ПО ЗаказПоставщику.Ссылка = ЗаказПоставщикуТовары.Ссылка
		|			И (ЗаказПоставщикуТовары.НомерСтроки = 1)
		|ГДЕ
		|	ЗаказПоставщику.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ЗаказПоставщику);
	Возврат РСК_ВызовСервера.ЗапросВСтруктуру(Запрос);
	
КонецФункции // ПолучитьСтруктуруЗаказа()
