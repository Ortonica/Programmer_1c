#Область ТрофимовЕВ_05_07_2022_ВыдачаТСР
//Здесь выполнены доработки, чтобы типовая функция видела документы расширения

&НаСервере
Процедура РСК_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)
	//++ РС Консалт: Трофимов Евгений 22.11.2022 Задача 21981
	//e1cib/data/Документ.Задание?ref=a3207eea36779826424b697847e6a3df
	МаксимальноеКоличествоСтрок = УправлениеСвойствами.ЗначениеСвойства(
		ПараметрыСеанса.ТекущийПользователь,
		ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "МаксимальноеКоличествоСтрокВСтруктуреПодчиненности")
	);
	//-- КонецЗадачи 21981
КонецПроцедуры

&НаСервере
&Вместо("ВывестиРодительскиеОбъекты")
Процедура РасшРС_ВывестиРодительскиеОбъекты(ТекущийОбъект, ДеревоРодитель, ВыведенныеОбъекты, 
	СлужебныеОбъекты = Неопределено, ИндексСвязейОбъектов = Неопределено)
	
	//http://unnoesso.blogspot.com/2019/10/8312.html
	СтрокиДерева = ДеревоРодитель.ПолучитьЭлементы(); //ёё
	МетаданныеОбъекта = ТекущийОбъект.Метаданные();
	СписокРеквизитов  = Новый СписокЗначений;
	
	РасширенныйСостав = Новый Массив; //ёё
 	РасширенныйСостав.Добавить(Метаданные.Документы.РСК_Разнарядка.Реквизиты.Контракт);
 	РасширенныйСостав.Добавить(Метаданные.Документы.РСК_Разнарядка.ТабличныеЧасти.Акты.Реквизиты.Акт);
 	РасширенныйСостав.Добавить(Метаданные.Документы.РСК_ОтчетПоВыдачеТСР.Реквизиты.Контракт);
 	РасширенныйСостав.Добавить(Метаданные.Документы.РСК_ОтчетПоВыдачеТСР.ТабличныеЧасти.Реестр.Реквизиты.Акт);
 	РасширенныйСостав.Добавить(Метаданные.Документы.РеализацияТоваровУслуг.Реквизиты.РСК_ДокументОснованиеОтчетПоВыдаче);
 	РасширенныйСостав.Добавить(Метаданные.Документы.ЗаказНаПеремещение.Реквизиты.РСК_ЗаданиеНаПеревозку);
	РасширенныйСостав.Добавить(Метаданные.Документы.ЗаказКлиента.Реквизиты.РСК_ЗаказКлиентаОснование);
	РасширенныйСостав.Добавить(Метаданные.Документы.РеализацияТоваровУслуг.Реквизиты.РСК_ЗаказКлиента);
	РасширенныйСостав.Добавить(Метаданные.Документы.РСК_ПартияПоставки.ТабличныеЧасти.Товары.Реквизиты.ЗаказПоставщику);
	РасширенныйСостав.Добавить(Метаданные.Документы.РСК_ПартияПоставки.ТабличныеЧасти.Контейнеры.Реквизиты.ДокументПриобретения);
	РасширенныйСостав.Добавить(Метаданные.Документы.ПроизводствоБезЗаказа.Реквизиты.ДокументОснование);
	
	Для Каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
		
		Если РасширенныйСостав.Найти(Реквизит) = Неопределено Тогда  //ёё 
			//) 
			Если Не Метаданные.КритерииОтбора.СвязанныеДокументы.Состав.Содержит(Реквизит) Тогда
				Продолжить;
			КонецЕсли;
			//(
		КонецЕсли;
		
		Для Каждого ТекущийТип Из Реквизит.Тип.Типы() Цикл
			
			МетаданныеРеквизита = Метаданные.НайтиПоТипу(ТекущийТип);
			Если МетаданныеРеквизита = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Если Не ОбщегоНазначения.ОбъектМетаданныхДоступенПоФункциональнымОпциям(МетаданныеРеквизита) 
				Или Не ПравоДоступа("Чтение", МетаданныеРеквизита) Тогда
				Продолжить;
			КонецЕсли;
			
			Если Не Метаданные.Документы.Содержит(МетаданныеРеквизита)
				И Не Метаданные.Справочники.Содержит(МетаданныеРеквизита)
				И Не Метаданные.ПланыВидовХарактеристик.Содержит(МетаданныеРеквизита) Тогда
				Продолжить;
			КонецЕсли;
			
			ЗначениеРеквизита = ТекущийОбъект[Реквизит.Имя];
			Если ЗначениеЗаполнено(ЗначениеРеквизита)
				И ТипЗнч(ЗначениеРеквизита) = ТекущийТип
				И ЗначениеРеквизита <> ТекущийОбъект
				И СписокРеквизитов.НайтиПоЗначению(ЗначениеРеквизита) = Неопределено Тогда
				
				ЯвляетсяДокументом  = ОбщегоНазначения.ЭтоДокумент(МетаданныеРеквизита);
				
				Если ЯвляетсяДокументом Тогда
					ДатаДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗначениеРеквизита, "Дата", Истина);
					СписокРеквизитов.Добавить(ЗначениеРеквизита, Формат(ДатаДокумента, "ДЛФ=DT"));
				Иначе
					СписокРеквизитов.Добавить(ЗначениеРеквизита, Дата(1,1,1));
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	Для Каждого ТЧ Из МетаданныеОбъекта.ТабличныеЧасти Цикл
		
		ИменаРеквизитов = "";
		СодержимоеТЧ = ТекущийОбъект[ТЧ.Имя].Выгрузить(); // ТаблицаЗначений
		Для Каждого Реквизит Из ТЧ.Реквизиты Цикл

			Если РасширенныйСостав.Найти(Реквизит) = Неопределено Тогда  //ёё 
				//) 
				Если Не Метаданные.КритерииОтбора.СвязанныеДокументы.Состав.Содержит(Реквизит) Тогда
					Продолжить;
				КонецЕсли;
				//(
			КонецЕсли;
		
			Для Каждого ТекущийТип Из Реквизит.Тип.Типы() Цикл
				
				МетаданныеРеквизита = Метаданные.НайтиПоТипу(ТекущийТип);
				Если МетаданныеРеквизита = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				Если Не ОбщегоНазначения.ОбъектМетаданныхДоступенПоФункциональнымОпциям(МетаданныеРеквизита) 
					Или Не ПравоДоступа("Чтение", МетаданныеРеквизита) Тогда
					Продолжить;
				КонецЕсли;
				
				Если Не Метаданные.Документы.Содержит(МетаданныеРеквизита)
					И Не Метаданные.Справочники.Содержит(МетаданныеРеквизита)
					И Не Метаданные.ПланыВидовХарактеристик.Содержит(МетаданныеРеквизита) Тогда
					Продолжить;
				КонецЕсли;
				
				ИменаРеквизитов = ИменаРеквизитов + ?(ИменаРеквизитов = "", "", ", ") + Реквизит.Имя;
				Прервать;
				
			КонецЦикла;
			
		КонецЦикла;
		
		СодержимоеТЧ.Свернуть(ИменаРеквизитов);
		Для Каждого КолонкаТЧ Из СодержимоеТЧ.Колонки Цикл
			
			Для Каждого СтрокаТЧ Из СодержимоеТЧ Цикл
			
				ЗначениеРеквизита = СтрокаТЧ[КолонкаТЧ.Имя];
				МетаданныеЗначения = Метаданные.НайтиПоТипу(ТипЗнч(ЗначениеРеквизита));
				Если МетаданныеЗначения = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				Если Не ОбщегоНазначения.ОбъектМетаданныхДоступенПоФункциональнымОпциям(МетаданныеЗначения) 
					Или Не ПравоДоступа("Чтение", МетаданныеЗначения) Тогда
					Продолжить;
				КонецЕсли;
				
				Если ЗначениеРеквизита = ТекущийОбъект
					Или СписокРеквизитов.НайтиПоЗначению(ЗначениеРеквизита) <> Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				ЯвляетсяДокументом  = ОбщегоНазначения.ЭтоДокумент(МетаданныеЗначения);
				Если Не ЯвляетсяДокументом И Не Метаданные.Справочники.Содержит(МетаданныеЗначения)
					И Не Метаданные.ПланыВидовХарактеристик.Содержит(МетаданныеЗначения) Тогда
					Продолжить;
				КонецЕсли;
				
				Если ЯвляетсяДокументом Тогда
					ДатаДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗначениеРеквизита, "Дата", Истина);
					СписокРеквизитов.Добавить(ЗначениеРеквизита, Формат(ДатаДокумента, "ДЛФ=DT"));
				Иначе
					СписокРеквизитов.Добавить(ЗначениеРеквизита, Дата(1, 1, 1));
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	СписокРеквизитов.СортироватьПоПредставлению();
	
	Для каждого ЭлементСписка Из СписокРеквизитов Цикл
		
		Выборка = ПолучитьВыборкуПоРеквизитамОбъекта(ЭлементСписка.Значение);
		
		Если Выборка.Следующий() Тогда
			
			НоваяСтрока = ДобавитьСтрокуВДерево(ДеревоРодитель, Выборка, ВыведенныеОбъекты);
			
			Если НоваяСтрока <> Неопределено
				И Не ДобавляемыйОбъектИмеетсяСредиРодителей(ДеревоРодитель, ЭлементСписка.Значение) Тогда
				
				ВывестиРодительскиеОбъекты(ЭлементСписка.Значение, НоваяСтрока, ВыведенныеОбъекты);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры

&НаСервере
&Вместо("ОбъектыПоКритериюОтбора")
Функция РасшРС_ОбъектыПоКритериюОтбора(ЗначениеКритерияОтбора)
    
	Результат = ПродолжитьВызов(ЗначениеКритерияОтбора);

	//http://unnoesso.blogspot.com/2019/10/8312.html
	// делаем примеси для включения реквизитов расширения
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЗначениеКритерияОтбора", ЗначениеКритерияОтбора);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	РСК_Разнарядка.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РСК_Разнарядка.Акты КАК РСК_РазнарядкаАкты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РСК_Разнарядка КАК РСК_Разнарядка
	|		ПО РСК_РазнарядкаАкты.Ссылка = РСК_Разнарядка.Ссылка
	|ГДЕ
	|	(РСК_Разнарядка.Контракт = &ЗначениеКритерияОтбора
	|			ИЛИ РСК_РазнарядкаАкты.Акт = &ЗначениеКритерияОтбора)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РСК_ОтчетПоВыдачеТСР.Ссылка
	|ИЗ
	|	Документ.РСК_ОтчетПоВыдачеТСР.Реестр КАК РСК_ОтчетПоВыдачеТСРРеестр
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РСК_ОтчетПоВыдачеТСР КАК РСК_ОтчетПоВыдачеТСР
	|		ПО РСК_ОтчетПоВыдачеТСРРеестр.Ссылка = РСК_ОтчетПоВыдачеТСР.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
	|		ПО РСК_ОтчетПоВыдачеТСРРеестр.Акт = ЗаданиеНаПеревозкуРаспоряжения.Распоряжение
	|ГДЕ
	|	(РСК_ОтчетПоВыдачеТСР.Контракт = &ЗначениеКритерияОтбора
	|			ИЛИ РСК_ОтчетПоВыдачеТСРРеестр.Акт = &ЗначениеКритерияОтбора
	|			ИЛИ ЕСТЬNULL(ЗаданиеНаПеревозкуРаспоряжения.Ссылка, НЕОПРЕДЕЛЕНО) = &ЗначениеКритерияОтбора)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.РСК_ДокументОснованиеОтчетПоВыдаче = &ЗначениеКритерияОтбора
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаказНаПеремещение.Ссылка
	|ИЗ
	|	Документ.ЗаказНаПеремещение КАК ЗаказНаПеремещение
	|ГДЕ
	|	ЗаказНаПеремещение.РСК_ЗаданиеНаПеревозку = &ЗначениеКритерияОтбора
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.РСК_ЗаказКлиента = &ЗначениеКритерияОтбора
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаказКлиента.Ссылка
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|ГДЕ
	|	ЗаказКлиента.РСК_ЗаказКлиентаОснование = &ЗначениеКритерияОтбора
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка
	|ИЗ
	|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РСК_ОтчетПоВыдачеТСР.Реестр КАК РСК_ОтчетПоВыдачеТСРРеестр
	|		ПО ЗаданиеНаПеревозкуРаспоряжения.Распоряжение = РСК_ОтчетПоВыдачеТСРРеестр.Акт
	|ГДЕ
	|	(ЗаданиеНаПеревозкуРаспоряжения.Распоряжение = &ЗначениеКритерияОтбора
	|			ИЛИ ЕСТЬNULL(РСК_ОтчетПоВыдачеТСРРеестр.Ссылка, НЕОПРЕДЕЛЕНО) = &ЗначениеКритерияОтбора)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РСК_ПартияПоставкиТовары.Ссылка
	|ИЗ
	|	Документ.РСК_ПартияПоставки.Товары КАК РСК_ПартияПоставкиТовары
	|ГДЕ
	|	РСК_ПартияПоставкиТовары.ЗаказПоставщику = &ЗначениеКритерияОтбора
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РСК_ПартияПоставкиКонтейнеры.Ссылка
	|ИЗ
	|	Документ.РСК_ПартияПоставки.Контейнеры КАК РСК_ПартияПоставкиКонтейнеры
	|ГДЕ
	|	РСК_ПартияПоставкиКонтейнеры.ДокументПриобретения = &ЗначениеКритерияОтбора
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПроизводствоБезЗаказа.Ссылка
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа КАК ПроизводствоБезЗаказа
	|ГДЕ
	|	ПроизводствоБезЗаказа.ДокументОснование = &ЗначениеКритерияОтбора";
	
	Если Результат = Неопределено Тогда
		Результат = Запрос.Выполнить().Выгрузить();
	Иначе
		НоваяТаблицаВключаетТипыРасширения = Новый ТаблицаЗначений;
		НоваяТаблицаВключаетТипыРасширения.Колонки.Добавить("Ссылка");
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат, НоваяТаблицаВключаетТипыРасширения);
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Запрос.Выполнить().Выгрузить(), НоваяТаблицаВключаетТипыРасширения);
		Результат = НоваяТаблицаВключаетТипыРасширения;
	КонецЕсли;
		
	Возврат Результат;
КонецФункции

&НаСервере
&Вместо("ДобавитьСтрокуВДерево")
Функция РасшРС_ДобавитьСтрокуВДерево(Родитель, Данные, ВыведенныеОбъекты, ЭтоПодчиненный)
	Результат = ПродолжитьВызов(Родитель, Данные, ВыведенныеОбъекты, ЭтоПодчиненный);
	
	Если Результат <> Неопределено Тогда
		Результат.РСК_Ссылка = Данные.Ссылка;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

&НаСервере
&Вместо("ВывестиПредставлениеИКартинку")
Процедура РасшРС_ВывестиПредставлениеИКартинку(СтрокаДерева, Макет, ЭтоТекущийОбъект, ЭтоПодчиненный)
	
	Если СтрокаДерева.Свойство("РСК_Ссылка") И СтрокаДерева.Ссылка = Неопределено Тогда
		МетаданныеОбъекта = СтрокаДерева.РСК_Ссылка.Метаданные();   //ёё
	Иначе
		МетаданныеОбъекта = СтрокаДерева.Ссылка.Метаданные();   //ёё
	КонецЕсли;
	ЭтоДокумент       = ОбщегоНазначения.ЭтоДокумент(МетаданныеОбъекта);
	
	ЕстьРодителиСуммарно = ДеревоРодительскиеОбъекты.ПолучитьЭлементы().Количество() > 0;
	ЕстьПодчиненныеСуммарно = ДеревоПодчиненныеОбъекты.ПолучитьЭлементы().Количество() > 0;
	ЕстьПодчиненные = ТипЗнч(СтрокаДерева) = Тип("ДанныеФормыЭлементДерева")
		И СтрокаДерева.ПолучитьЭлементы().Количество() > 0;
	
	// Вывод картинки
	Если СтрокаДерева.Проведен Тогда
		Если ЭтоТекущийОбъект Тогда
			Если ЕстьПодчиненныеСуммарно И ЕстьРодителиСуммарно Тогда
				ОбластьКартинка = Макет.ПолучитьОбласть("ДокументПроведенКоннекторВерхНиз");
			ИначеЕсли ЕстьПодчиненныеСуммарно Тогда
				ОбластьКартинка = Макет.ПолучитьОбласть("ДокументПроведенКоннекторНиз");
			Иначе
				ОбластьКартинка = Макет.ПолучитьОбласть("ДокументПроведенКоннекторВерх");
			КонецЕсли;
		ИначеЕсли ЭтоПодчиненный = Истина Тогда
			Если ЕстьПодчиненные Тогда
				ОбластьКартинка = Макет.ПолучитьОбласть("ДокументПроведенКоннекторЛевоНиз");
			Иначе
				ОбластьКартинка = Макет.ПолучитьОбласть("ДокументПроведен");
			КонецЕсли;
		Иначе
			Если ЕстьПодчиненные Тогда
				ОбластьКартинка = Макет.ПолучитьОбласть("ДокументПроведенКоннекторЛевоВерх");
			Иначе
				ОбластьКартинка = Макет.ПолучитьОбласть("ДокументПроведен");
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли СтрокаДерева.ПометкаУдаления Тогда
		Если ЭтоТекущийОбъект Тогда
			Если ЕстьПодчиненныеСуммарно И ЕстьРодителиСуммарно  Тогда
				ИмяОбласти = ?(ЭтоДокумент, "ДокументПомеченНаУдалениеКоннекторВерхНиз", "СправочникПВХПомеченНаУдалениеКоннекторВерхНиз");
				ОбластьКартинка = Макет.ПолучитьОбласть(ИмяОбласти);
			ИначеЕсли ЕстьПодчиненныеСуммарно Тогда
				ИмяОбласти = ?(ЭтоДокумент, "ДокументПомеченНаУдалениеКоннекторНиз", "СправочникПВХПомеченНаУдалениеКоннекторНиз");
				ОбластьКартинка = Макет.ПолучитьОбласть(ИмяОбласти);
			Иначе
				ИмяОбласти = ?(ЭтоДокумент, "ДокументПомеченНаУдалениеКоннекторВерх", "СправочникПВХПомеченНаУдалениеКоннекторВерх");
				ОбластьКартинка = Макет.ПолучитьОбласть(ИмяОбласти);
			КонецЕсли;
		ИначеЕсли ЭтоПодчиненный = Истина Тогда
			Если ЕстьПодчиненные Тогда
				ИмяОбласти = ?(ЭтоДокумент, "ДокументПомеченНаУдалениеКоннекторЛевоНиз", "СправочникПВХПомеченНаУдалениеКоннекторЛевоНиз");
				ОбластьКартинка = Макет.ПолучитьОбласть(ИмяОбласти);
			Иначе
				ИмяОбласти = ?(ЭтоДокумент, "ДокументПомеченНаУдаление", "СправочникПВХПомеченНаУдалениеКоннекторЛево");
				ОбластьКартинка = Макет.ПолучитьОбласть(ИмяОбласти);
			КонецЕсли;
		Иначе
			Если ЕстьПодчиненные Тогда
				ИмяОбласти = ?(ЭтоДокумент, "ДокументПомеченНаУдалениеКоннекторЛевоВерх", "СправочникПВХПомеченНаУдалениеКоннекторЛевоВерх");
				ОбластьКартинка = Макет.ПолучитьОбласть(ИмяОбласти);
			Иначе
				ИмяОбласти = ?(ЭтоДокумент, "ДокументПомеченНаУдаление", "СправочникПВХПомеченНаУдалениеКоннекторЛево");
				ОбластьКартинка = Макет.ПолучитьОбласть(ИмяОбласти);
			КонецЕсли;
		КонецЕсли;
	Иначе
		Если ЭтоТекущийОбъект Тогда
			Если ЕстьПодчиненныеСуммарно И ЕстьРодителиСуммарно Тогда
				ИмяОбласти = ?(ЭтоДокумент, "ДокументЗаписанКоннекторВерхНиз", "СправочникПВХКоннекторВерхНиз");
				ОбластьКартинка = Макет.ПолучитьОбласть(ИмяОбласти);
			ИначеЕсли ЕстьПодчиненныеСуммарно Тогда
				ИмяОбласти = ?(ЭтоДокумент, "ДокументЗаписанКоннекторНиз", "СправочникПВХКоннекторНиз");
				ОбластьКартинка = Макет.ПолучитьОбласть(ИмяОбласти);
			Иначе
				ИмяОбласти = ?(ЭтоДокумент, "ДокументЗаписанКоннекторВерх", "СправочникПВХКоннекторВерх");
				ОбластьКартинка = Макет.ПолучитьОбласть(ИмяОбласти);
			КонецЕсли;
		ИначеЕсли ЭтоПодчиненный = Истина Тогда
			Если ЕстьПодчиненные Тогда
				ИмяОбласти = ?(ЭтоДокумент, "ДокументЗаписанКоннекторЛевоНиз", "СправочникПВХКоннекторЛевоНиз");
				ОбластьКартинка = Макет.ПолучитьОбласть(ИмяОбласти);
			Иначе
				ИмяОбласти = ?(ЭтоДокумент, "ДокументЗаписан", "СправочникПВХКоннекторЛево");
				ОбластьКартинка = Макет.ПолучитьОбласть(ИмяОбласти);
			КонецЕсли;
		Иначе
			Если ЕстьПодчиненные Тогда
				ИмяОбласти = ?(ЭтоДокумент, "ДокументЗаписанКоннекторЛевоВерх", "СправочникПВХКоннекторЛевоВерх");
				ОбластьКартинка = Макет.ПолучитьОбласть(ИмяОбласти);
			Иначе
				ИмяОбласти = ?(ЭтоДокумент, "ДокументЗаписан", "СправочникПВХКоннекторЛево");
				ОбластьКартинка = Макет.ПолучитьОбласть(ИмяОбласти);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ЭтоТекущийОбъект Тогда
		ТаблицаОтчета.Вывести(ОбластьКартинка) 
	Иначе
		ТаблицаОтчета.Присоединить(ОбластьКартинка);
	КонецЕсли;
	
	// Вывод объекта
	ОбластьОбъект = Макет.ПолучитьОбласть(?(ЭтоТекущийОбъект, "ТекущийОбъект", "Объект"));
	ОбластьОбъект.Параметры.ПредставлениеОбъекта = СтрокаДерева.Представление;
	Если СтрокаДерева.Свойство("РСК_Ссылка") И СтрокаДерева.Ссылка = Неопределено Тогда
		ОбластьОбъект.Параметры.Объект = СтрокаДерева.РСК_Ссылка; //ёё
	Иначе
		ОбластьОбъект.Параметры.Объект = СтрокаДерева.Ссылка; //ёё
	КонецЕсли;
	ТаблицаОтчета.Присоединить(ОбластьОбъект);
	
КонецПроцедуры

&НаСервере
&Вместо("ПолучитьВыборкуПоРеквизитамОбъекта")
Функция РасшРС_ПолучитьВыборкуПоРеквизитамОбъекта(ТекущийОбъект)
	
	МетаданныеОбъекта = ТекущийОбъект.Метаданные();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Ссылка,
	|	&Проведен КАК Проведен,
	|	ПометкаУдаления,
	|	&Сумма КАК СуммаДокумента,
	|	&Валюта КАК Валюта,
	|	&Представление
	|ИЗ
	|	&ИмяТаблицы
	|ГДЕ
	|	Ссылка = &Ссылка
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяТаблицы", МетаданныеОбъекта.ПолноеИмя());
	Если ОбщегоНазначения.ЭтоДокумент(МетаданныеОбъекта) Тогда
		ИмяРеквизитаСумма    = ИмяРеквизитаДокумента(МетаданныеОбъекта, "СуммаДокумента");
		ИмяРеквизитаВалюта   = ИмяРеквизитаДокумента(МетаданныеОбъекта, "Валюта");
		ИмяРеквизитаПроведен = "Проведен";
	Иначе
		ИмяРеквизитаСумма    = Неопределено;
		ИмяРеквизитаВалюта   = Неопределено;
		ИмяРеквизитаПроведен = "Ложь";
	КонецЕсли;
	
	ЗаменитьТекстЗапроса(ТекстЗапроса, МетаданныеОбъекта, "&Проведен", ИмяРеквизитаПроведен, Истина);
	ЗаменитьТекстЗапроса(ТекстЗапроса, МетаданныеОбъекта, "&Сумма", ИмяРеквизитаСумма);
	ЗаменитьТекстЗапроса(ТекстЗапроса, МетаданныеОбъекта, "&Валюта", ИмяРеквизитаВалюта);
	
	МассивДопРеквизитов = РеквизитыДляПредставления(МетаданныеОбъекта.ПолноеИмя(), МетаданныеОбъекта.Имя);
	ДополнитьТекстЗапросаПоРеквизитамОбъекта(ТекстЗапроса, МассивДопРеквизитов);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", ТекущийОбъект);
	Возврат Запрос.Выполнить().Выбрать(); 
	
КонецФункции

&НаСервере
&ИзменениеИКонтроль("ВывестиПодчиненныеЭлементыДерева")
Процедура РСК_ВывестиПодчиненныеЭлементыДерева(СтрокиДерева, Макет, УровниРекурсии)

	Для каждого СтрокаДерева Из СтрокиДерева Цикл

		ЭтоИсходныйОбъект = (СтрокаДерева.Ссылка = ИсходныйОбъект);
		ПодчиненныеЭлементыДерева = СтрокаДерева.ПолучитьЭлементы();

		// Вывод коннекторов
		Для Уровень = 1 По УровниРекурсии Цикл

			Если УровниРекурсии > Уровень Тогда

				Если ВыводитьВертикальныйКоннектор(УровниРекурсии - Уровень + 1,СтрокаДерева) Тогда
					Область = Макет.ПолучитьОбласть("КоннекторВерхНиз");
				Иначе
					Область = Макет.ПолучитьОбласть("Отступ");
				КонецЕсли;

			Иначе 

				Если СтрокиДерева.Количество() > 1 И (СтрокиДерева.Индекс(СтрокаДерева) <> (СтрокиДерева.Количество() - 1)) Тогда
					Область = Макет.ПолучитьОбласть("КоннекторВерхПравоНиз");
				Иначе
					Область = Макет.ПолучитьОбласть("КоннекторВерхПраво");
				КонецЕсли;

			КонецЕсли;

			Область.Параметры.Документ = ?(ЭтоИсходныйОбъект, Неопределено, СтрокаДерева.Ссылка);

			Если Уровень = 1 Тогда
				ТаблицаОтчета.Вывести(Область);
			Иначе
				ТаблицаОтчета.Присоединить(Область);
			КонецЕсли;

		КонецЦикла;

		ВывестиПредставлениеИКартинку(СтрокаДерева, Макет, Ложь, Истина);
		
		#Удаление
		ВывестиПодчиненныеЭлементыДерева(ПодчиненныеЭлементыДерева, Макет, УровниРекурсии + 1);
		#КонецУдаления
		#Вставка
		//++ РС Консалт: Трофимов Евгений 22.11.2022 Задача 21981
		//e1cib/data/Документ.Задание?ref=a3207eea36779826424b697847e6a3df
		Если МаксимальноеКоличествоСтрок > 0 И ПодчиненныеЭлементыДерева.Количество() > МаксимальноеКоличествоСтрок Тогда
			//Выводить подчинённые элементы не информативно.
		Иначе
			ВывестиПодчиненныеЭлементыДерева(ПодчиненныеЭлементыДерева, Макет, УровниРекурсии + 1);
		КонецЕсли;
		//-- КонецЗадачи 21981		
		#КонецВставки

	КонецЦикла;

КонецПроцедуры

#КонецОбласти