#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Основание") Тогда
		ДокументОснование = Параметры.Основание;
		Соисполнитель 	  = ПартнерСоисполнительДокументаОснования(ДокументОснование); 
		Сделка			  = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОСнование,"Сделка");
	ИначеЕсли Параметры.Свойство("Соисполнитель") Тогда
		РежимПодбораВДокумент = Истина; 
		Соисполнитель = Параметры.Соисполнитель;
	КонецЕсли; 
	ЗаполнитьСписокДокументов(Сделка);
	УстановитьОформлениеФормы();
	
КонецПроцедуры 

&НаКлиенте
Процедура СписокСтрокКоличествоВДокументПриИзменении(Элемент) 
	
	ТекущиеДанные = Элементы.СписокСтрок.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда 
		Если ТекущиеДанные.Количество > ТекущиеДанные.КоличествоДоступно Тогда
			ТекущиеДанные.Количество = ТекущиеДанные.КоличествоДоступно;	
		КонецЕсли;
		ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;	
	КонецЕсли;  
	
КонецПроцедуры  

&НаКлиенте
Процедура СписокСтрокЦенаПриИзменении(Элемент)
	ТекущиеДанные = Элементы.СписокСтрок.ТекущиеДанные;
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
КонецПроцедуры

&НаКлиенте
Процедура СоисполнительПриИзменении(Элемент)
	ЗаполнитьСписокДокументов();
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы 

&НаКлиенте
Процедура Далее(Команда) 
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПодборСтрок;
	ДалееНаСервере(); 
КонецПроцедуры

&НаСервере
Процедура ДалееНаСервере()
	ЗаполнитьСписокСтрок();
КонецПроцедуры  

&НаКлиенте
Процедура Назад(Команда)
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаПодборДокументов;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокумент(Команда)
	
	ВыбранныеСтроки     = СтрокиДляПереносаВДокумент();  
	Если РежимПодбораВДокумент Тогда 
		СтруктураЗакрытия = Новый Структура("АдресСтрокВоВременномХранилище",ВыбранныеСтроки);
		Закрыть(СтруктураЗакрытия);	
	Иначе
		ПараметрыОснования  = Новый Структура("ДокументОснование,АдресСтрокВоВременномХранилище",ДокументОснование,ВыбранныеСтроки);
		ОткрытьФорму("Документ.ПриобретениеУслугПрочихАктивов.ФормаОбъекта", Новый Структура("Основание",ПараметрыОснования));  
		Закрыть();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОформлениеФормы()
	
	Если РежимПодбораВДокумент Тогда
		Элементы.СоздатьДокумент.Заголовок 	   = "Перенести в документ";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокДокументов(Сделка = Неопределено)
	
	Запрос = Новый Запрос; 
	Запрос.Текст = ТекстЗапросаСписокСделок(); 
	Запрос.УстановитьПараметр("ОтборНеУстановлен",НЕ ЗначениеЗаполнено(Соисполнитель));
	Запрос.УстановитьПараметр("Сделки",Сделка); 
	Запрос.УстановитьПараметр("Партнер",Соисполнитель);
	Запрос.УстановитьПараметр("РольПартнера",Справочники.РолиПартнеровВСделкахИПроектах.НайтиПоНаименованию("Соисполнитель"));
	
	Результат = Запрос.Выполнить().Выгрузить();
	СписокДокументов.Загрузить(Результат);
	
КонецПроцедуры  

&НаСервере
Процедура ЗаполнитьСписокСтрок() 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ИнициализироватьТаблицуВыбранныхОбъектов(Запрос);
	Запрос.Текст = ТекстЗапросаЗаполнитьСтроки();	

	Результат = Запрос.Выполнить().Выгрузить();
	СписокСтрок.Загрузить(Результат);

КонецПроцедуры

&НаСервере
Процедура ИнициализироватьТаблицуВыбранныхОбъектов(Запрос)

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокДокументов.Ссылка КАК Ссылка,
	|	СписокДокументов.Пометка КАК Пометка
	|ПОМЕСТИТЬ ВТ_ДокументыДляФормирования
	|ИЗ
	|	&СписокДокументов КАК СписокДокументов
	|ГДЕ
	|	СписокДокументов.Пометка";
	Запрос.УстановитьПараметр("СписокДокументов",СписокДокументов.Выгрузить());
	Запрос.Выполнить();
	
КонецПроцедуры  

&НаСервере
Функция СтрокиДляПереносаВДокумент() 
		
 	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДанныеОтбора", СписокСтрок.Выгрузить());
	Запрос.УстановитьПараметр("Статья", ПланыВидовХарактеристик.СтатьиРасходов.НайтиПоКоду("121008")); 
	Запрос.УстановитьПараметр("АналитикаРасходов", Соисполнитель);
	Запрос.УстановитьПараметр("СтавкаНДС",Справочники.СтавкиНДС.БезНДС);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеОтбора.Количество КАК Количество,
	|	ДанныеОтбора.Цена КАК Цена,
	|	ДанныеОтбора.Сумма КАК Сумма,
	|	ДанныеОтбора.Документ КАК Документ,
	|	ДанныеОтбора.Услуга КАК Содержание
	|ПОМЕСТИТЬ ВТ_ДанныеОтбора
	|ИЗ
	|	&ДанныеОтбора КАК ДанныеОтбора
	|ГДЕ
	|	ДанныеОтбора.Пометка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеОтбора.Содержание КАК Содержание,
	|	ВТ_ДанныеОтбора.Количество КАК Количество,
	|	ВТ_ДанныеОтбора.Цена КАК Цена,
	|	ВТ_ДанныеОтбора.Сумма КАК Сумма,
	|	&Статья КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	&СтавкаНДС КАК СтавкаНДС,
	|	ВТ_ДанныеОтбора.Сумма КАК СуммаСНДС,
	|	ВТ_ДанныеОтбора.Документ КАК Сделка
	|ИЗ
	|	ВТ_ДанныеОтбора КАК ВТ_ДанныеОтбора"; 
	
	Результат = Запрос.Выполнить().Выгрузить(); 
	СтрокиОснования = ПоместитьВоВременноеХранилище(Результат,Новый УникальныйИдентификатор);
	
	Возврат СтрокиОснования;
	
КонецФункции  

&НаСервереБезКонтекста
Функция ПартнерСоисполнительДокументаОснования(ДокументОснование) 
	
	Склад = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование,"Склад"); 
	Если ЗначениеЗаполнено(Склад) Тогда
		Контрагент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Склад,"Поклажедержатель");
		Если ЗначениеЗаполнено(Контрагент) Тогда
			Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент,"Партнер");	
		КонецЕсли;
	КонецЕсли;
	Возврат Неопределено; 
	
КонецФункции   

&НаСервереБезКонтекста
Функция ТекстЗапросаСписокСделок()

	Текст = "ВЫБРАТЬ
	        |	РСК_УслугиСоисполнителейОстатки.Сделка КАК Ссылка,
	        |	ВЫБОР
	        |		КОГДА РСК_УслугиСоисполнителейОстатки.Сделка В (&Сделки)
	        |			ТОГДА ИСТИНА
	        |		ИНАЧЕ ЛОЖЬ
	        |	КОНЕЦ КАК Пометка
	        |ИЗ
	        |	РегистрНакопления.РСК_УслугиСоисполнителей.Остатки(
	        |			,
	        |			&ОтборНеУстановлен
	        |				ИЛИ Сделка В
	        |					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	        |						СделкиСКлиентамиПартнерыИКонтактныеЛица.Ссылка КАК Ссылка
	        |					ИЗ
	        |						Справочник.СделкиСКлиентами.ПартнерыИКонтактныеЛица КАК СделкиСКлиентамиПартнерыИКонтактныеЛица
	        |					ГДЕ
	        |						СделкиСКлиентамиПартнерыИКонтактныеЛица.Партнер = &Партнер
	        |						И СделкиСКлиентамиПартнерыИКонтактныеЛица.РольПартнера = &РольПартнера)) КАК РСК_УслугиСоисполнителейОстатки
	        |ГДЕ
	        |	РСК_УслугиСоисполнителейОстатки.КоличествоОстаток > 0"; 
	
	Возврат Текст;
	
КонецФункции

&НаСервереБезКонтекста
Функция ТекстЗапросаЗаполнитьСтроки()
	
	Текст = 
	"ВЫБРАТЬ
	|	РСК_УслугиСоисполнителейОстатки.Сделка КАК Документ,
	|	РСК_УслугиСоисполнителейОстатки.Содержание КАК Услуга,
	|	РСК_УслугиСоисполнителейОстатки.КоличествоОстаток КАК КоличествоДоступно
	|ИЗ
	|	РегистрНакопления.РСК_УслугиСоисполнителей.Остатки(
	|			,
	|			Сделка В
	|				(ВЫБРАТЬ
	|					ВТ_ДокументыДляФормирования.Ссылка КАК Ссылка
	|				ИЗ
	|					ВТ_ДокументыДляФормирования КАК ВТ_ДокументыДляФормирования)) КАК РСК_УслугиСоисполнителейОстатки
	|ГДЕ
	|	РСК_УслугиСоисполнителейОстатки.КоличествоОстаток > 0";
	
	Возврат Текст;
	
КонецФункции

#КонецОбласти


