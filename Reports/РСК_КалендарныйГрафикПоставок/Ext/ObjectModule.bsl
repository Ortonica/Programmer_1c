Перем Имя;

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);

	//++ РС Консалт: Трофимов Евгений 12.11.2022 Тикет 21859
	//e1cib/data/Документ.Задание?ref=bfe6392c3b612d934b6f8f4f1aeb17ad
	//Было:
	//КомпоновкаДанныхКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "ТекущаяДата", ТекущаяДатаСеанса(), Истина);
	//КомпоновкаДанныхКлиентСервер.УстановитьПараметр(
	//	КомпоновщикНастроек, 
	//	"ПользовательИмеетПраваПросматриватьСуммы", 
	//	РСК_ВызовСервера.ЕстьРоль("РСК_РедакторПартийПоставок"), 
	//	Истина, 
	//	Истина
	//);
	//
	//СтандартнаяОбработка = Ложь;
	//КомпоновщикМакет = Новый КомпоновщикМакетаКомпоновкиДанных;
	//Макет = КомпоновщикМакет.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);
	//ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	//ПроцессорКомпоновки.Инициализировать(Макет, , ДанныеРасшифровки);
	//ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	//ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	//ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	//
	//ДокументРезультат.ПоказатьУровеньГруппировокСтрок(1);  //не работает на платформе 8.3.20.1789
	
	//Стало:
	//Нужно выполнять запрос без контроля прав доступа, иначе пользователя b2g не видно колонки Заказано и Приход
	//Поэтому отчёт из СКД переехал в обычный запрос
	СтандартнаяОбработка = Ложь;
	ПараметрыЗапроса = Новый Структура;
	НастройкиПользователя = КомпоновщикНастроек.ПолучитьНастройки();
	Парам = НастройкиПользователя.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПериодОтчета"));
	Если Парам <> Неопределено И Парам.Использование Тогда
		ПараметрыЗапроса.Вставить("ПериодОтчета", Парам.Значение);
	КонецЕсли;
	
	ВнешнийНабор = Новый Структура;
	ВнешнийНабор.Вставить("ВнешниеДанные", ПолучитьТаблицуОтчета(ПараметрыЗапроса));
	
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	НастройкиПользователя = КомпоновщикНастроек.ПолучитьНастройки();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,НастройкиПользователя,ДанныеРасшифровки);
	
	ПроцессорКомпановки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпановки.Инициализировать(МакетКомпоновки,ВнешнийНабор,ДанныеРасшифровки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпановки);
	
	ДокументРезультат.ПоказатьУровеньГруппировокСтрок(1);
	//-- КонецТикета 21859	
	
КонецПроцедуры

Функция ПолучитьТаблицуОтчета(ПараметрыЗапроса)

	Запрос = Новый Запрос(ТекстЗапроса());
	Если ПараметрыЗапроса.Свойство("ПериодОтчета") Тогда
		Запрос.УстановитьПараметр("НачалоПериода", ПараметрыЗапроса.ПериодОтчета.ДатаНачала);
		Запрос.УстановитьПараметр("КонецПериода", ПараметрыЗапроса.ПериодОтчета.ДатаОкончания);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&НачалоПериода, &КонецПериода", ",");
	КонецЕсли;
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ПользовательИмеетПраваПросматриватьСуммы", РСК_ВызовСервера.ЕстьРоль("РСК_РедакторПартийПоставок"));
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции // ПолучитьТаблицуОтчета()

Функция ТекстЗапроса()

	Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(РСК_ПартияПоставкиТовары.Ссылка.Номер, """") КАК НомерПоставки,
		|	РСК_ТоварыКПартиямПоставкиОбороты.ЗаказПоставщику КАК ЗаказПоставщику,
		|	ЕСТЬNULL(РСК_ПартияПоставкиТовары.Количество, РСК_ТоварыКПартиямПоставкиОбороты.КоличествоПриход) КАК Заказано,
		|	докЗаказПоставщику.НомерПоДаннымПоставщика КАК НомерЗаказаНаПроизводство,
		|	ЗаказПоставщикуТовары.Номенклатура.Артикул КАК Артикул,
		|	ЗаказПоставщикуТовары.Номенклатура КАК Номенклатура,
		|	ЗаказПоставщикуТовары.Характеристика КАК Характеристика,
		|	ЗаказПоставщикуТовары.Серия КАК Серия,
		|	докЗаказПоставщику.Статус КАК СтатусЗаказа,
		|	ЕСТЬNULL(РСК_ПартияПоставкиТовары.Ссылка.СтатусПартии, ЗНАЧЕНИЕ(Перечисление.РСК_СтатусыПартийПоставки.ПустаяСсылка)) КАК СтатусПартии,
		|	докЗаказПоставщику.ДатаСогласования КАК ДатаСогласования,
		|	ЕСТЬNULL(РСК_ПартияПоставкиКонтейнеры.ДатаЗагрузкиКонтейнера, ВЫБОР
		|			КОГДА докЗаказПоставщику.ПоступлениеОднойДатой
		|				ТОГДА докЗаказПоставщику.ДатаОтгрузки
		|			ИНАЧЕ ЗаказПоставщикуТовары.ДатаОтгрузки
		|		КОНЕЦ) КАК ДатаЗавершенияПроизводства,
		|	ЕСТЬNULL(РСК_ПартияПоставкиТовары.Ссылка.ДатаЕТА, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПриходаВПорт,
		|	РСК_ТоварыКПартиямПоставкиОбороты.НомерСтрокиЗаказа КАК НомерСтрокиЗаказа,
		|	ЕСТЬNULL(ЕСТЬNULL(РСК_ПартияПоставкиКонтейнеры.ДокументПриобретения, ПриобретениеБезКонтейнера.Ссылка), ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка)) КАК ДокументПриобретения,
		|	ВЫБОР
		|		КОГДА докЗаказПоставщику.ПоступлениеОднойДатой
		|			ТОГДА докЗаказПоставщику.ДатаПоступления
		|		ИНАЧЕ ЗаказПоставщикуТовары.ДатаПоступления
		|	КОНЕЦ КАК ДатаПоступления,
		|	РСК_ТоварыКПартиямПоставкиОбороты.Период КАК Период,
		|	ВЫБОР
		|		КОГДА ЗаказПоставщикуТовары.Количество > 0
		|				И &ПользовательИмеетПраваПросматриватьСуммы
		|			ТОГДА ЗаказПоставщикуТовары.СуммаСНДС / ЗаказПоставщикуТовары.Количество
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ЦенаТовараВЗакзе,
		|	ЕСТЬNULL(РСК_ПартияПоставкиКонтейнеры.СтатусКонтейнера, ЗаказПоставщикуТовары.Статус) КАК Статус
		|ПОМЕСТИТЬ Заказы
		|ИЗ
		|	РегистрНакопления.РСК_ТоварыКПартиямПоставки.Обороты(&НачалоПериода, &КонецПериода, Запись, {(ЗаказПоставщику)}) КАК РСК_ТоварыКПартиямПоставкиОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику КАК докЗаказПоставщику
		|		ПО РСК_ТоварыКПартиямПоставкиОбороты.ЗаказПоставщику = докЗаказПоставщику.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РСК_ПартияПоставки.Товары КАК РСК_ПартияПоставкиТовары
		|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.РСК_ПартияПоставки.Контейнеры КАК РСК_ПартияПоставкиКонтейнеры
		|				ПО РСК_ПартияПоставкиТовары.Ссылка = РСК_ПартияПоставкиКонтейнеры.Ссылка
		|					И РСК_ПартияПоставкиТовары.НомерКонтейнера = РСК_ПартияПоставкиКонтейнеры.НомерКонтейнера
		|			ПО ЗаказПоставщикуТовары.Ссылка = РСК_ПартияПоставкиТовары.ЗаказПоставщику
		|				И ЗаказПоставщикуТовары.КодСтроки = РСК_ПартияПоставкиТовары.КодСтроки
		|				И (РСК_ПартияПоставкиТовары.Ссылка.Проведен)
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг.Товары КАК ПриобретениеБезКонтейнера
		|			ПО ЗаказПоставщикуТовары.Ссылка = ПриобретениеБезКонтейнера.ЗаказПоставщику
		|				И ЗаказПоставщикуТовары.КодСтроки = ПриобретениеБезКонтейнера.КодСтроки
		|				И (ПриобретениеБезКонтейнера.Ссылка.Проведен)
		|		ПО РСК_ТоварыКПартиямПоставкиОбороты.ЗаказПоставщику = ЗаказПоставщикуТовары.Ссылка
		|			И РСК_ТоварыКПартиямПоставкиОбороты.НомерСтрокиЗаказа = ЗаказПоставщикуТовары.КодСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Заказы.ЗаказПоставщику КАК ЗаказПоставщику,
		|	Заказы.НомерСтрокиЗаказа КАК НомерСтрокиЗаказа,
		|	Заказы.Номенклатура КАК Номенклатура,
		|	Заказы.Характеристика КАК Характеристика,
		|	Заказы.Серия КАК Серия,
		|	Заказы.ДокументПриобретения КАК ДокументПриобретения,
		|	Заказы.Заказано КАК Заказано,
		|	СУММА(ЕСТЬNULL(Заказы1.Заказано, 0)) - Заказы.Заказано КАК РанееУжеЗаказано
		|ПОМЕСТИТЬ ТоварыЗаказанные
		|ИЗ
		|	Заказы КАК Заказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Заказы КАК Заказы1
		|		ПО Заказы.ДокументПриобретения = Заказы1.ДокументПриобретения
		|			И Заказы.Номенклатура = Заказы1.Номенклатура
		|			И Заказы.Характеристика = Заказы1.Характеристика
		|			И Заказы.Серия = Заказы1.Серия
		|			И Заказы.НомерСтрокиЗаказа >= Заказы1.НомерСтрокиЗаказа
		|			И Заказы.ЗаказПоставщику >= Заказы1.ЗаказПоставщику
		|
		|СГРУППИРОВАТЬ ПО
		|	Заказы.Характеристика,
		|	Заказы.Номенклатура,
		|	Заказы.Серия,
		|	Заказы.ЗаказПоставщику,
		|	Заказы.ДокументПриобретения,
		|	Заказы.Заказано,
		|	Заказы.НомерСтрокиЗаказа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПоступлениеТоваровНаСкладТовары.Номенклатура КАК Номенклатура,
		|	ПоступлениеТоваровНаСкладТовары.Характеристика КАК Характеристика,
		|	ПоступлениеТоваровНаСкладТовары.Серия КАК Серия,
		|	СУММА(ПоступлениеТоваровНаСкладТовары.Количество) КАК Количество,
		|	ПоступлениеТоваровНаСклад.Ссылка КАК ДокументПоступления,
		|	ПоступлениеТоваровНаСклад.Распоряжение КАК ДокументПриобретения
		|ПОМЕСТИТЬ ТоварыПолученные
		|ИЗ
		|	Документ.ПоступлениеТоваровНаСклад КАК ПоступлениеТоваровНаСклад
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровНаСклад.Товары КАК ПоступлениеТоваровНаСкладТовары
		|		ПО ПоступлениеТоваровНаСклад.Ссылка = ПоступлениеТоваровНаСкладТовары.Ссылка
		|ГДЕ
		|	ПоступлениеТоваровНаСклад.Распоряжение В
		|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				Заказы.ДокументПриобретения КАК ДокументПриобретения
		|			ИЗ
		|				Заказы КАК Заказы
		|			ГДЕ
		|				Заказы.ДокументПриобретения <> ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка))
		|	И ПоступлениеТоваровНаСклад.Проведен
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоступлениеТоваровНаСкладТовары.Номенклатура,
		|	ПоступлениеТоваровНаСкладТовары.Характеристика,
		|	ПоступлениеТоваровНаСкладТовары.Серия,
		|	ПоступлениеТоваровНаСклад.Ссылка,
		|	ПоступлениеТоваровНаСклад.Распоряжение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Заказы.НомерПоставки КАК НомерПоставки,
		|	Заказы.ЗаказПоставщику КАК ЗаказПоставщику,
		|	Заказы.Заказано КАК Заказано,
		|	Заказы.НомерЗаказаНаПроизводство КАК НомерЗаказаНаПроизводство,
		|	Заказы.Артикул КАК Артикул,
		|	Заказы.Номенклатура КАК Номенклатура,
		|	Заказы.Характеристика КАК Характеристика,
		|	Заказы.Серия КАК Серия,
		|	Заказы.СтатусЗаказа КАК СтатусЗаказа,
		|	Заказы.СтатусПартии КАК СтатусПартии,
		|	Заказы.ДатаСогласования КАК ДатаСогласования,
		|	Заказы.ДатаЗавершенияПроизводства КАК ДатаЗавершенияПроизводства,
		|	Заказы.ДатаПриходаВПорт КАК ДатаПриходаВПорт,
		|	Заказы.НомерСтрокиЗаказа КАК НомерСтрокиЗаказа,
		|	Заказы.ДокументПриобретения КАК ДокументПриобретения,
		|	ВЫБОР
		|		КОГДА Заказы.Заказано < ЕСТЬNULL(ТоварыПолученные.Количество, 0) - ТоварыЗаказанные.РанееУжеЗаказано
		|			ТОГДА Заказы.Заказано
		|		КОГДА ЕСТЬNULL(ТоварыПолученные.Количество, 0) >= ТоварыЗаказанные.РанееУжеЗаказано
		|			ТОГДА ЕСТЬNULL(ТоварыПолученные.Количество, 0) - ТоварыЗаказанные.РанееУжеЗаказано
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Получено,
		|	Заказы.Заказано - ВЫБОР
		|		КОГДА Заказы.Заказано < ЕСТЬNULL(ТоварыПолученные.Количество, 0) - ТоварыЗаказанные.РанееУжеЗаказано
		|			ТОГДА Заказы.Заказано
		|		КОГДА ЕСТЬNULL(ТоварыПолученные.Количество, 0) >= ТоварыЗаказанные.РанееУжеЗаказано
		|			ТОГДА ЕСТЬNULL(ТоварыПолученные.Количество, 0) - ТоварыЗаказанные.РанееУжеЗаказано
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ОсталосьПолучить,
		|	Заказы.ДатаПоступления КАК ДатаПоступления,
		|	Заказы.Период КАК Период,
		|	ВЫБОР
		|		КОГДА Заказы.ДатаПриходаВПорт = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА -1
		|		ИНАЧЕ РАЗНОСТЬДАТ(&ТекущаяДата, Заказы.ДатаПриходаВПорт, ДЕНЬ)
		|	КОНЕЦ КАК ДнейДоПриходаВПорт,
		|	Заказы.Заказано * Заказы.ЦенаТовараВЗакзе КАК СуммаТовараЗаказанного,
		|	ВЫБОР
		|		КОГДА Заказы.Заказано < ЕСТЬNULL(ТоварыПолученные.Количество, 0) - ТоварыЗаказанные.РанееУжеЗаказано
		|			ТОГДА Заказы.Заказано
		|		КОГДА ЕСТЬNULL(ТоварыПолученные.Количество, 0) >= ТоварыЗаказанные.РанееУжеЗаказано
		|			ТОГДА ЕСТЬNULL(ТоварыПолученные.Количество, 0) - ТоварыЗаказанные.РанееУжеЗаказано
		|		ИНАЧЕ 0
		|	КОНЕЦ * Заказы.ЦенаТовараВЗакзе КАК СуммаТовараПолученного,
		|	(Заказы.Заказано - ВЫБОР
		|		КОГДА Заказы.Заказано < ЕСТЬNULL(ТоварыПолученные.Количество, 0) - ТоварыЗаказанные.РанееУжеЗаказано
		|			ТОГДА Заказы.Заказано
		|		КОГДА ЕСТЬNULL(ТоварыПолученные.Количество, 0) >= ТоварыЗаказанные.РанееУжеЗаказано
		|			ТОГДА ЕСТЬNULL(ТоварыПолученные.Количество, 0) - ТоварыЗаказанные.РанееУжеЗаказано
		|		ИНАЧЕ 0
		|	КОНЕЦ) * Заказы.ЦенаТовараВЗакзе КАК СуммаТовараОставшегося,
		|	Заказы.Статус КАК Статус,
		|	ЕСТЬNULL(ТоварыПолученные.ДокументПоступления, ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровНаСклад.ПустаяСсылка)) КАК ДокументПоступления
		|ИЗ
		|	Заказы КАК Заказы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыЗаказанные КАК ТоварыЗаказанные
		|			ЛЕВОЕ СОЕДИНЕНИЕ ТоварыПолученные КАК ТоварыПолученные
		|			ПО ТоварыЗаказанные.ДокументПриобретения = ТоварыПолученные.ДокументПриобретения
		|				И ТоварыЗаказанные.Номенклатура = ТоварыПолученные.Номенклатура
		|				И ТоварыЗаказанные.Характеристика = ТоварыПолученные.Характеристика
		|				И ТоварыЗаказанные.Серия = ТоварыПолученные.Серия
		|		ПО Заказы.ДокументПриобретения = ТоварыЗаказанные.ДокументПриобретения
		|			И Заказы.ЗаказПоставщику = ТоварыЗаказанные.ЗаказПоставщику
		|			И Заказы.НомерСтрокиЗаказа = ТоварыЗаказанные.НомерСтрокиЗаказа
		|";

	
	Возврат Текст;
КонецФункции // ТекстЗапроса()

Функция СведенияОВнешнейОбработке() Экспорт
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("3.0.1.342");
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительныйОтчет();
	ПараметрыРегистрации.Версия = "3.0.0.0";
	ПараметрыРегистрации.Информация = "Разработчик: ООО ""РС Консалт"", тел.: (3812) 332-331"
	+Символы.ПС+"Автор: Евгений Трофимов, 2022"
	+Символы.ПС+"Добавлено "+ТекущаяДата()+" при версии БСП: "+СтандартныеПодсистемыСервер.ВерсияБиблиотеки();
	Команда = ПараметрыРегистрации.Команды.Добавить();
	Команда.Представление = НСтр("ru = '"+Имя+"'");
	Команда.Идентификатор = ОбщегоНазначения.КонтрольнаяСуммаСтрокой(Имя);
	Команда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	Команда.ПоказыватьОповещение = Истина;
	Возврат ПараметрыРегистрации;
КонецФункции

Имя = ЭтотОбъект.Метаданные().Синоним;