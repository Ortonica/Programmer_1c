
&ИзменениеИКонтроль("ПриКомпоновкеРезультата")
Процедура РСК_ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ПользовательскиеНастройкиМодифицированы = Ложь;

	ЗначениеПоиска = Новый ПараметрКомпоновкиДанных("СтрокаСейчас");
	ЭлементПараметрыДанных = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(ЗначениеПоиска);
	ЭлементПараметрыДанных.Значение = НСтр("ru = 'Сейчас';
	|en = 'Now'");

	ЗначениеПоиска = Новый ПараметрКомпоновкиДанных("СтрокаОжидается");
	ЭлементПараметрыДанных = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(ЗначениеПоиска);
	ЭлементПараметрыДанных.Значение = НСтр("ru = 'Ожидается';
	|en = 'Expected'");

	ЗначениеПоиска = Новый ПараметрКомпоновкиДанных("СтрокаВсего");
	ЭлементПараметрыДанных = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(ЗначениеПоиска);
	ЭлементПараметрыДанных.Значение = НСтр("ru = 'Всего';
	|en = 'Total'");

	УстановитьОбязательныеНастройки(ПользовательскиеНастройкиМодифицированы);
	
	#Вставка 
	//++Конарев Заполнение и запрет редактирования параметров 
	ЗначениеПоиска = Новый ПараметрКомпоновкиДанных("ВидПлана");
	ЭлементПараметрыДанных = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(ЗначениеПоиска); 
	Если ЭлементПараметрыДанных <> Неопределено Тогда
		ЭлементПараметрыДанных.Значение = ПланПродажПараметр();
		ЭлементПараметрыДанных.Использование = Истина;
		ЭлементПараметрыДанных.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	КонецЕсли;
	
	ЗначениеПоиска = Новый ПараметрКомпоновкиДанных("СтрокаПлан");
	ЭлементПараметрыДанных = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(ЗначениеПоиска);
	Если ЭлементПараметрыДанных <> Неопределено Тогда
		ЭлементПараметрыДанных.Использование = Истина;
		ЭлементПараметрыДанных.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
    КонецЕсли;
	#КонецВставки
	// Вызов из самообслуживания.
	Если ОбщегоНазначенияУТКлиентСервер.АвторизованВнешнийПользователь() Тогда
		ПараметрВыводитьОтбор = КомпоновщикНастроек.Настройки.ПараметрыВывода.Элементы.Найти("ВыводитьОтбор");
		Если ПараметрВыводитьОтбор <> Неопределено Тогда
			ПараметрВыводитьОтбор.Использование = Истина;
			ПараметрВыводитьОтбор.Значение = ТипВыводаТекстаКомпоновкиДанных.НеВыводить;
		КонецЕсли;
	КонецЕсли;

	// Стандартная компоновка отчета.
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();

	ПодставитьТекстыЗапросаОстатков(СхемаКомпоновкиДанных);
	ТекстЗапроса = СхемаКомпоновкиДанных.НаборыДанных.Основной.Запрос;


	ТекстЗапроса = СтрЗаменить(
	ТекстЗапроса, 
	"&ТекстЗапросаВесНоменклатуры", 
	Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки("Таблица.Номенклатура.ЕдиницаИзмерения", "Таблица.Номенклатура"));

	ТекстЗапроса = СтрЗаменить(
	ТекстЗапроса, 
	"&ТекстЗапросаОбъемНоменклатуры", 
	Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаОбъемУпаковки("Таблица.Номенклатура.ЕдиницаИзмерения", "Таблица.Номенклатура"));

	СхемаКомпоновкиДанных.НаборыДанных.Основной.Запрос = ТекстЗапроса;

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);

	КомпоновкаДанныхСервер.УстановитьЗаголовкиМакетаКомпоновки(ПараметризуемыеЗаголовкиПолей(), МакетКомпоновки);

	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);

	КомпоновкаДанныхСервер.СкрытьВспомогательныеПараметрыОтчета(СхемаКомпоновкиДанных, КомпоновщикНастроек, ДокументРезультат, ВспомогательныеПараметрыОтчета());

	// Сообщим форме отчета, что настройки модифицированы
	Если ПользовательскиеНастройкиМодифицированы Тогда
		КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("ПользовательскиеНастройкиМодифицированы", Истина);
	КонецЕсли;

КонецПроцедуры   

Функция ПланПродажПараметр() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВидыПланов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыПланов КАК ВидыПланов
	|ГДЕ
	|	ВидыПланов.ТипПлана = ЗНАЧЕНИЕ(Перечисление.ТипыПланов.ПланПродаж)";
		
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Справочники.ВидыПланов.ПустаяСсылка();
	Иначе
		ПланыПродаж = РезультатЗапроса.Выбрать(); 
		ПланыПродаж.Следующий();
		Возврат ПланыПродаж.Ссылка;
	КонецЕсли;
	
КонецФункции
