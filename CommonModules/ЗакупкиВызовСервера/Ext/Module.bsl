
&Вместо("ТекстЗапросаПоЗаказам")
Функция РСК_ТекстЗапросаПоЗаказам()
	
	Результат = ПродолжитьВызов();
	
	//++ РС Консалт: Минаков А.С. Задача 20226
	Если СтрНайти(Результат, "НЕ ЗаказДавальца.Проведен") И СтрНайти(Результат, "НЕ ЗаказПоставщику.Проведен") Тогда	
		Результат = СтрЗаменить(Результат, "НЕ ЗаказДавальца.Проведен", "НЕ ЗаказДавальца.Проведен И ЗаказДавальца.Дата >= ДАТАВРЕМЯ(2022, 1, 1)");
		Результат = СтрЗаменить(Результат, "НЕ ЗаказПоставщику.Проведен", "НЕ ЗаказПоставщику.Проведен И ЗаказПоставщику.Дата >= ДАТАВРЕМЯ(2022, 1, 1)");
	Иначе
		ВызватьИсключение("Расширение ""РСК"" устарело. Требуется обновить модуль ""ЗакупкиВызовСервера""")
	КонецЕсли;
	//++ РС Консалт: Минаков А.С. Задача 20226
		
	Возврат Результат
	
КонецФункции

&ИзменениеИКонтроль("ПроверитьСовместимостьЗаказовВОдномДокументе")
Функция РСК_ПроверитьСовместимостьЗаказовВОдномДокументе(Знач МассивСсылок, ИмяДокумента)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	ДопустимыеОперации = ОбщегоНазначенияУТ.ДопустимыеХозяйственныеОперацииДокумента(ИмяДокумента);
	Запрос.УстановитьПараметр("ДопустимыеОперации", ДопустимыеОперации);
	Запрос.УстановитьПараметр("ИспользоватьРеглУчет", ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет"));
	Запрос.УстановитьПараметр("ИспользоватьПоступлениеПоНесколькимЗаказам",ПолучитьФункциональнуюОпцию("ИспользоватьПоступлениеПоНесколькимЗаказам"));
	
	Запрос.Текст = ТекстЗапросаПоЗаказам();
		
	РезультатЗапроса = Запрос.ВыполнитьПакет(); 
	ВыборкаЗаказы = РезультатЗапроса[РезультатЗапроса.ВГраница()].Выбрать();
	
	ИсключаемыеЗаказы = Новый Массив;
	ВыборкаЗаказыСНедопустимойОперацией = РезультатЗапроса[РезультатЗапроса.ВГраница() - 2].Выбрать();
	
	Пока ВыборкаЗаказыСНедопустимойОперацией.Следующий() Цикл
		
		Если МассивСсылок.Количество() > 1 Тогда
			ТекстСообщения = НСтр("ru = 'Распоряжение %Распоряжение% пропущено, т.к. невозможно оформить документ ""%СинонимДокумента%"" на основании распоряжения с операцией ""%ХозяйственнаяОперация%"".';
									|en = 'The %Распоряжение% reference is skipped as you cannot generate the ""%СинонимДокумента%"" document based on the reference with the ""%ХозяйственнаяОперация%"" operation.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Распоряжение%", ВыборкаЗаказыСНедопустимойОперацией.ЗаказПоставщику);
		Иначе
			ТекстСообщения = НСтр("ru = 'Невозможно оформить документ ""%СинонимДокумента%"" на основании распоряжения с операцией ""%ХозяйственнаяОперация%"".';
									|en = 'Cannot register the ""%СинонимДокумента%"" document based on the reference with the ""%ХозяйственнаяОперация%"" operation.'");
		КонецЕсли;
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СинонимДокумента%", Метаданные.Документы[ИмяДокумента].Синоним);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ХозяйственнаяОперация%", ВыборкаЗаказыСНедопустимойОперацией.ХозяйственнаяОперация);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,ВыборкаЗаказыСНедопустимойОперацией.ЗаказПоставщику);
		
		ИсключаемыеЗаказы.Добавить(ВыборкаЗаказыСНедопустимойОперацией.ЗаказПоставщику);
	КонецЦикла;
	
	Если ВыборкаЗаказыСНедопустимойОперацией.Количество() = МассивСсылок.Количество() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	МассивСсылок = ОбщегоНазначенияКлиентСервер.СократитьМассив(МассивСсылок, ИсключаемыеЗаказы);
	
	ВыборкаРеквизитыШапки = РезультатЗапроса[РезультатЗапроса.ВГраница() - 1].Выбрать();
	ВыборкаРеквизитыШапки.Следующий();
	
	Отказ = Ложь;
	
	ТекстСообщения = НСтр("ru = 'У указанных распоряжений отличается поле ""%ПредставлениеПоля%""';
							|en = 'The ""%ПредставлениеПоля%"" field of the specified references differs.'");
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияПодразделение Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru = 'Подразделение';
																	|en = 'Business unit'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияПартнер Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru = 'Партнер';
																	|en = 'Partner'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияКонтрагент Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru = 'Контрагент';
																	|en = 'Counterparty'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияОрганизация Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru = 'Организация';
																	|en = 'Company'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	#Вставка
	//++ РС Консалт: Трофимов Евгений 14.09.2022 Задача 20340
	//e1cib/data/Документ.Задание?ref=ba4124f237cfc58a43997ea26157c73e
	//Отключение контроля на расхождение соглашений при проведении Приобретения
	Если ИмяДокумента <> "ПриобретениеТоваровУслуг" Тогда
	#КонецВставки
	Если ВыборкаРеквизитыШапки.ЕстьОтличияСоглашение Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru = 'Соглашение';
																	|en = 'Agreement'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	#Вставка
	КонецЕсли;
	//-- КонецЗадачи 20340	
	#КонецВставки
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияДоговор Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru = 'Договор';
																	|en = 'Contract'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияСклад Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru = 'Склад';
																	|en = 'Warehouse'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияХозяйственнаяОперация Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru = 'Операция';
																	|en = 'Transaction'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияВалютаВзаиморасчетов Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru = 'Валюта взаиморасчетов';
																	|en = 'AR/AP currency'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияНалогообложениеНДС Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru = 'Налогообложение НДС';
																	|en = 'VAT taxation'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияЦенаВключаетНДС Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru = 'Цена включает НДС';
																	|en = 'Price includes VAT'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияВернутьМногооборотнуюТару Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru = 'Вернуть многооборотную тару';
																	|en = 'Return reusable packaging'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияСрокВозвратаМногооборотнойТары Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru = 'Срок возврата многооборотной тары';
																	|en = 'Reusable packaging return cycle length'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияТребуетсяЗалогЗаТару Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru = 'Требуется залог за тару';
																	|en = 'Packaging deposit is required'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияПорядокРасчетов Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru = 'Порядок расчетов';
																	|en = 'Payment terms'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияНаправленияДеятельности Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru = 'Направление деятельности';
																	|en = 'Line of business'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияВидЦеныПоставщика Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru = 'Вид цены поставщика';
																	|en = 'Vendor price type'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияВариантПриемкиТоваров Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru = 'Вариант приемки товаров';
																	|en = 'Goods receipt option'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияГруппаФинансовогоУчета Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru = 'Группа финансового учета';
																	|en = 'Financial accounting group'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияБанковскийСчет Тогда
	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru = 'Банковский счет';
																	|en = 'Bank account'")),
			,
			,
			,
			Отказ);
	
	КонецЕсли;
		
	Если ВыборкаРеквизитыШапки.ЕстьОтличияФормаОплаты Тогда
	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru = 'Форма оплаты';
																	|en = 'Payment method'")),
			,
			,
			,
			Отказ);
	
	КонецЕсли;
		
	Если ВыборкаРеквизитыШапки.ЕстьОтличияОплатаВВалюте Тогда
	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru = 'Оплата в валюте';
																	|en = 'Payment in currency'")),
			,
			,
			,
			Отказ);
	
	КонецЕсли;
	
	Если Отказ Тогда
		
		ТекстОшибки = НСтр("ru = 'Ввод одного документа ""%СинонимДокумента%"" на основании указанных распоряжений невозможен';
							|en = 'Cannot generate one document ""%СинонимДокумента%"" based on the selected references'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%СинонимДокумента%", Метаданные.Документы[ИмяДокумента].Синоним);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			,
			,
			,
			Отказ);
		
	Иначе
		
		Пока ВыборкаЗаказы.Следующий() Цикл
		
			Если ВыборкаЗаказы.ЕстьОшибкиПроведен Тогда
				
				ТекстОшибки = НСтр("ru = 'Документ %Документ% не проведен. Ввод документа по непроведенному распоряжению запрещен.';
									|en = 'Document %Документ% is not posted. Entering a document under an unposted reference is not allowed.'");
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаЗаказы.ЗаказПоставщику);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстОшибки,
					ВыборкаЗаказы.ЗаказПоставщику,
					,
					,
					Отказ);
				
			ИначеЕсли ВыборкаЗаказы.ЕстьОшибкиСтатус Тогда
				
				ТекстОшибки = НСтр("ru = 'Документ %Документ% находится в статусе ""%Статус%"". Распоряжение должно быть только в статусах';
									|en = 'Document %Документ% is in the status ""%Статус%"". The reference should be only in statuses'") + " ";
				
				Для Сч = 1 По 3 Цикл
					
					ДопустимыйСтатус = ВыборкаЗаказы["ДопустимыйСтатус" + Сч];
					Если ЗначениеЗаполнено(ДопустимыйСтатус) Тогда
						ТекстОшибки = ТекстОшибки + """" + ДопустимыйСтатус + """, "
					КонецЕсли;
					
				КонецЦикла;
				
				ТекстОшибки = Лев(ТекстОшибки, СтрДлина(ТекстОшибки) - 2); // Обрезаем последнюю запятую
				ТекстОшибки = ТекстОшибки + ".";
				
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаЗаказы.ЗаказПоставщику);
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Статус%",   ВыборкаЗаказы.Статус);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстОшибки,
					ВыборкаЗаказы.ЗаказПоставщику,
					,
					,
					Отказ);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции
