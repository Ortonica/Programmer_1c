
&ИзменениеИКонтроль("ДатаМобайл_Автообработка")
Процедура РСК_ДатаМобайл_Автообработка()

	//ОЧИСТКА ЛОГОВ
	ОчисткаЛогов();	

	//АВТОУДАЛЕНИЕ
	ЗапросШаблоновУдаление=Новый Запрос();
	ЗапросШаблоновУдаление.Текст = "ВЫБРАТЬ
	|	ДатаМобайл_ШаблоныДокументов.УсловиеВыгрузки КАК УсловиеВыгрузки,
	|	ДатаМобайл_ШаблоныДокументов.ВидДокумента КАК ВидДокумента,
	|	ДатаМобайл_ШаблоныДокументов.Ссылка КАК Ссылка,
	|	ДатаМобайл_ШаблоныДокументов.УдалениеСтарыхДокументов КАК УдалениеСтарыхДокументов
	|ИЗ
	|	Справочник.ДатаМобайл_ШаблоныДокументов КАК ДатаМобайл_ШаблоныДокументов
	|ГДЕ
	|	НЕ ДатаМобайл_ШаблоныДокументов.УдалениеСтарыхДокументов = 0 ";

	ШаблоныУдаление=ЗапросШаблоновУдаление.Выполнить().Выгрузить();
	Для Каждого ШаблонУдаление из ШаблоныУдаление цикл	
		ЗапросДокументовУдаление = Новый Запрос();
		ЗапросДокументовУдаление.Текст ="ВЫБРАТЬ
		|	ДатаМобайл_ДокументыТСД.Ссылка КАК Ссылка,
		|	ДатаМобайл_ДокументыТСД.ИсходныйДокумент.Дата КАК ИсходныйДокументДата,
		|	ДатаМобайл_ДокументыТСД.ДатаЗавершения КАК ДатаЗавершения
		|ИЗ
		|	Справочник.ДатаМобайл_ДокументыТСД КАК ДатаМобайл_ДокументыТСД
		|ГДЕ
		|	ДатаМобайл_ДокументыТСД.Шаблон = &Шаблон
		|	И ДатаМобайл_ДокументыТСД.ДатаЗавершения > ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
		ЗапросДокументовУдаление.УстановитьПараметр("Шаблон",ШаблонУдаление.Ссылка);
		ДокументыУдаление = ЗапросДокументовУдаление.Выполнить().Выгрузить();
		Для Каждого ДокументУдаление из ДокументыУдаление Цикл
			СекундыНаДни =  ШаблонУдаление.УдалениеСтарыхДокументов * 86400;

			Если ДокументУдаление.ИсходныйДокументДата = Null Тогда
				ДатаУдаления = ДокументУдаление.ДатаЗавершения + СекундыНаДни;						
			Иначе
				ДатаУдаления = ДокументУдаление.ИсходныйДокументДата + СекундыНаДни;
			КонецЕсли;

			ДатаСегодня = ТекущаяДата();
			Если ДатаСегодня >= ДатаУдаления Тогда
				Попытка 
					ДокументУдаление.Ссылка.ПолучитьОбъект().Удалить();
				Исключение 
					ДокументУдаление.ПолучитьОбъект().УстановитьПометкуУдаления(Истина);
				КонецПопытки;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;    


	//АВТОЗАГРУЗКА	
	ЗапросДокументовАвтозагрузка=Новый Запрос();
	ЗапросДокументовАвтозагрузка.Текст = "ВЫБРАТЬ
	|	ДатаМобайл_ДокументыТСД.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ДатаМобайл_ДокументыТСД КАК ДатаМобайл_ДокументыТСД
	|ГДЕ
	|	ДатаМобайл_ДокументыТСД.Шаблон.ОбрабатыватьРоботом
	|	И НЕ ДатаМобайл_ДокументыТСД.ПометкаУдаления
	|	И ДатаМобайл_ДокументыТСД.ДатаЗавершенияСбора <> ДАТАВРЕМЯ(1, 1, 1)
	|	И ДатаМобайл_ДокументыТСД.ДатаЗавершения = ДАТАВРЕМЯ(1, 1, 1)
	|	И НЕ ДатаМобайл_ДокументыТСД.ОшибкаПриАвтозагрузке";

	ДокументыАвтозагрузка=ЗапросДокументовАвтозагрузка.Выполнить().Выбрать();
	Пока ДокументыАвтозагрузка.Следующий() цикл	
		Об=ДокументыАвтозагрузка.Ссылка.ПолучитьОбъект();
		Об.ДатаПриемкиОператором=ТекущаяДата();
		Об.ОшибкаПриАвтозагрузкеОписание = "";
		Об.Записать();
		СтрокаОшибок="";
		Попытка 
			Док=Обработки.ДатаМобайл_АРМДиспетчера.ВнестиДокументВБазу(Об,СтрокаОшибок);
		Исключение
			СтрокаОшибок=ОписаниеОшибки();
		КонецПопытки;	
		Если СтрокаОшибок<>"" тогда
			Модуль_ОбщегоНазначенияКлиентСервер = ОбщийМодуль("ОбщегоНазначенияКлиентСервер");

			ИмяСобытия = НСтр("ru = 'Документ DataMobile'", Модуль_ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());

			ТекстСообщения = НСтр("ru = 'Не удалось загрузить документ DataMobile: %Справочник% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Справочник%", ДокументыАвтозагрузка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", " "+СтрокаОшибок);
			ЗаписьЖурналаРегистрации(ИмяСобытия,
			УровеньЖурналаРегистрации.Ошибка,
			Справочники.ДатаМобайл_ДокументыТСД,
			ДокументыАвтозагрузка.Ссылка,
			ТекстСообщения);
			Если Об.Шаблон.НеОстанавливатьАвтозагрузкуДокументаПриОшибках тогда
			Иначе	
				Об.ОшибкаПриАвтозагрузке 			= Истина;
				Об.ОшибкаПриАвтозагрузкеОписание 	= СтрокаОшибок;
				Об.Записать();
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;


	//АВТОВЫГРУЗКА	
	ЗапросШаблоновАвтовыгрузка=Новый Запрос();
	ЗапросШаблоновАвтовыгрузка.Текст = "ВЫБРАТЬ
	|	ДатаМобайл_ШаблоныДокументов.УсловиеВыгрузки КАК УсловиеВыгрузки,
	|	ДатаМобайл_ШаблоныДокументов.ВидДокумента КАК ВидДокумента,
	|	ДатаМобайл_ШаблоныДокументов.Ссылка КАК Ссылка,
	|	ДатаМобайл_ШаблоныДокументов.УдалениеСтарыхДокументов КАК УдалениеСтарыхДокументов,
	|	ДатаМобайл_ШаблоныДокументов.МаркировкаВыгружатьРоботом КАК МаркировкаВыгружатьРоботом
	|ИЗ
	|	Справочник.ДатаМобайл_ШаблоныДокументов КАК ДатаМобайл_ШаблоныДокументов
	|ГДЕ
	|	ДатаМобайл_ШаблоныДокументов.ВыгружатьРоботом или ДатаМобайл_ШаблоныДокументов.МаркировкаВыгружатьРоботом";
	ШаблоныАвтовыгрузка=ЗапросШаблоновАвтовыгрузка.Выполнить().Выгрузить();
	Для Каждого ШаблонАвтовыгрузка из ШаблоныАвтовыгрузка цикл

		ЗапросДокументовАвтовыгрузка=Новый Запрос();
		ЗапросДокументовАвтовыгрузка.Текст="ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Документ1С.Ссылка КАК ИсходныйДокумент,
		|	Документ1С.Дата КАК Дата,
		|	Документ1С.Номер КАК Номер,
		|	Документ1С.Комментарий КАК Комментарий
		|ИЗ
		|	Документ.ПриобретениеТоваровУслуг КАК Документ1С
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДатаМобайл_ДокументыТСД КАК ДатаМобайл_ДокументыТСД
		|		ПО Документ1С.Ссылка = ДатаМобайл_ДокументыТСД.ИсходныйДокумент
		|		И ДатаМобайл_ДокументыТСД.Шаблон = &Шаблон
		|ГДЕ
		|	НЕ Документ1С.ПометкаУдаления
		|   И 2=2	
		|	И ДатаМобайл_ДокументыТСД.Ссылка ЕСТЬ NULL
		|	И (&УсловиеВключения)";

		ЗапросДокументовАвтовыгрузка.Текст=СтрЗаменить(ЗапросДокументовАвтовыгрузка.Текст,"ПриобретениеТоваровУслуг",ШаблонАвтовыгрузка.ВидДокумента);
		ЗапросДокументовАвтовыгрузка.Текст=СтрЗаменить(ЗапросДокументовАвтовыгрузка.Текст,"&УсловиеВключения",?(СокрЛП(ШаблонАвтовыгрузка.УсловиеВыгрузки)="","1=1",ШаблонАвтовыгрузка.УсловиеВыгрузки));
		#Вставка
		//++ РС Консалт: Минаков А.С. Задача 20226
		Если ШаблонАвтовыгрузка.ВидДокумента = "ПересчетТоваров" Тогда
			ЗапросДокументовАвтовыгрузка.Текст = СтрЗаменить(ЗапросДокументовАвтовыгрузка.Текст, "Комментарий КАК Комментарий", "Комментарий КАК Комментарий, Документ1С.ТСД КАК ТСД")
		КонецЕсли;
		//++ РС Консалт: Минаков А.С. Задача 20226
		#КонецВставки
		
		Если ШаблонАвтовыгрузка.УдалениеСтарыхДокументов <> 0 Тогда
			ЗапросДокументовАвтовыгрузка.Текст=СтрЗаменить(ЗапросДокументовАвтовыгрузка.Текст,"2=2", "Документ1С.Ссылка.Дата > &ДатаУдаления");
			ЗапросДокументовАвтовыгрузка.УстановитьПараметр("ДатаУдаления",ТекущаяДата() - ШаблонАвтовыгрузка.УдалениеСтарыхДокументов * 86400);				
		КонецЕсли;                                                              
		ЗапросДокументовАвтовыгрузка.УстановитьПараметр("Шаблон",ШаблонАвтовыгрузка.Ссылка);

		Для Каждого СтрПараметра из ШаблонАвтовыгрузка.Ссылка.ПараметрыУсловияВыгрузки цикл
			ЗапросДокументовАвтовыгрузка.УстановитьПараметр(СтрПараметра.ИмяПараметра,СтрПараметра.ЗначениеПараметра);
		КонецЦикла;

		Если Найти(ШаблонАвтовыгрузка.УсловиеВыгрузки,"&ТекущаяДата")>0 тогда
			ЗапросДокументовАвтовыгрузка.УстановитьПараметр("ТекущаяДата",ТекущаяДата()); //ПараметрПоУмолчанию
		КонецЕсли; 

		ДокументыАвтовыгрузка=ЗапросДокументовАвтовыгрузка.Выполнить().Выбрать();
		Пока ДокументыАвтовыгрузка.Следующий() цикл		
			Если ШаблонАвтовыгрузка.МаркировкаВыгружатьРоботом тогда
				ВидПродукцииИСДокумента = ДатаМобайл_Маркировка.ПолучитьВидПродукцииИСДокумента(ДокументыАвтовыгрузка.ИсходныйДокумент);
				Если НЕ ЗначениеЗаполнено(ВидПродукцииИСДокумента) тогда 
					Продолжить;
				КонецЕсли; 

				Если ТипЗнч(ВидПродукцииИСДокумента) = Тип("Массив") тогда
					Если ВидПродукцииИСДокумента.Количество()>0 тогда
						Если Не ЗначениеЗаполнено(ВидПродукцииИСДокумента[0]) тогда
							Продолжить;
						КонецЕсли; 		
					Иначе
						Продолжить;
					КонецЕсли;	
				КонецЕсли; 	
			КонецЕсли; 	

			ДокТСД=Справочники.ДатаМобайл_ДокументыТСД.СоздатьЭлемент();
			ЗаполнитьЗначенияСвойств(ДокТСД,ДокументыАвтовыгрузка);
			ДокТСД.Шаблон=ШаблонАвтовыгрузка.Ссылка;
			ДокТСД.Записать();

		КонецЦикла;

	КонецЦикла;


	//АВТОЗАВЕРШЕНИЕ ГРУППОВОГО ДОКУМЕНТА ПРИ СОВПАДЕНИИ ПЛАН С ФАКТОМ
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДатаМобайл_ДокументыТСД.Ссылка КАК Ссылка,
	|	ДатаМобайл_ДокументыТСД.ИсходныйДокумент КАК ИсходныйДокумент
	|ИЗ
	|	Справочник.ДатаМобайл_ДокументыТСД КАК ДатаМобайл_ДокументыТСД
	|ГДЕ
	|	ДатаМобайл_ДокументыТСД.Шаблон.ВыгружатьВыполненныйНаТСДДокументАвтоматически = ИСТИНА
	|	И ДатаМобайл_ДокументыТСД.Шаблон.ГрупповаяРабота = ИСТИНА
	|	И ДатаМобайл_ДокументыТСД.ДатаЗавершенияСбора = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И ДатаМобайл_ДокументыТСД.ПометкаУдаления = ЛОЖЬ";

	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();

	Пока Выборка.Следующий() Цикл
		Если Обработки.ДатаМобайл_АРМДиспетчера.ПланРавноФакт(Выборка.Ссылка, Выборка.ИсходныйДокумент) Тогда
			СправочникОбъект = Выборка.Ссылка.ПолучитьОбъект();
			СправочникОбъект.ПланРавноФакт = Истина;
			СправочникОбъект.ДатаЗавершенияСбора = ТекущаяДатаСеанса();
			СправочникОбъект.Записать();
		КонецЕсли;
	КонецЦикла;

	//Очистка полного КМ и GS1 в ТЧ документа тсд
	ЗапросШаблоновПолногоКМ=Новый Запрос();
	ЗапросШаблоновПолногоКМ.Текст = "ВЫБРАТЬ
	|	ДатаМобайл_ШаблоныДокументов.УсловиеВыгрузки КАК УсловиеВыгрузки,
	|	ДатаМобайл_ШаблоныДокументов.ВидДокумента КАК ВидДокумента,
	|	ДатаМобайл_ШаблоныДокументов.Ссылка КАК Ссылка,
	|	ДатаМобайл_ШаблоныДокументов.МаркировкаОчищатьПолныеКМ КАК ОчищатьПолныеКМ
	|ИЗ
	|	Справочник.ДатаМобайл_ШаблоныДокументов КАК ДатаМобайл_ШаблоныДокументов
	|ГДЕ
	|	НЕ ДатаМобайл_ШаблоныДокументов.МаркировкаОчищатьПолныеКМ = 0";

	ШаблоныПолногоКМ=ЗапросШаблоновПолногоКМ.Выполнить().Выгрузить();
	Для Каждого ШаблонПолногоКМ из ШаблоныПолногоКМ цикл	
		ЗапросДокументовПолногоКМ = Новый Запрос();
		ЗапросДокументовПолногоКМ.Текст ="ВЫБРАТЬ
		|	ДатаМобайл_ДокументыТСДСобранныеДанныеПодбор.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ДатаМобайл_ДокументыТСД.СобранныеДанныеПодбор КАК ДатаМобайл_ДокументыТСДСобранныеДанныеПодбор
		|ГДЕ
		|	ДатаМобайл_ДокументыТСДСобранныеДанныеПодбор.Дата < &ДатаОтсчета
		|	И (ДатаМобайл_ДокументыТСДСобранныеДанныеПодбор.ПолныйКодМаркировки <> """"
		|			ИЛИ ДатаМобайл_ДокументыТСДСобранныеДанныеПодбор.GS1 <> """")
		|
		|СГРУППИРОВАТЬ ПО
		|	ДатаМобайл_ДокументыТСДСобранныеДанныеПодбор.Ссылка";

		ДатаОтсчета = ТекущаяДата() - ШаблонПолногоКМ.ОчищатьПолныеКМ * 86400;

		ЗапросДокументовПолногоКМ.УстановитьПараметр("Шаблон"		, ШаблонПолногоКМ.Ссылка);
		ЗапросДокументовПолногоКМ.УстановитьПараметр("ДатаОтсчета"	, ДатаОтсчета);

		ДокументыПолногоКМ = ЗапросДокументовПолногоКМ.Выполнить().Выгрузить();
		Для Каждого ДокументПолногоКМ из ДокументыПолногоКМ Цикл
			ДокументОбъект = ДокументПолногоКМ.Ссылка.ПолучитьОбъект();
			СобранныеДанные = ДокументОбъект.СобранныеДанныеПодбор;

			Для каждого СтрокаТЧ Из СобранныеДанные Цикл
				СтрокаТЧ.ПолныйКодМаркировки = "";
				СтрокаТЧ.GS1                 = "";
			КонецЦикла;
			ДокументОбъект.Записать();
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры
