
&ИзменениеИКонтроль("ДокументыКСозданию")
Функция РСК_ДокументыКСозданию(СтрокиГрафика, ТипДокумента, Группировать)

	ДокументыКСозданию = Новый Массив;
	ТаблицаОплаты = РегистрыСведений.ГрафикПлатежей.СоздатьНаборЗаписей().ВыгрузитьКолонки();

	Для каждого СтрокаГрафика Из СтрокиГрафика Цикл
		НоваяСтрока = ТаблицаОплаты.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаГрафика);
	КонецЦикла;

	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаОплаты.ОбъектОплаты КАК ОбъектОплаты
	|ПОМЕСТИТЬ ТаблицаОплаты
	|ИЗ
	|	&ТаблицаОплаты КАК ТаблицаОплаты
	|";

	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(Запрос.Текст);

	ОператорТаблицаОплаты = СхемаЗапроса.ПакетЗапросов[0].Операторы[0]; // ОператорВыбратьСхемыЗапроса
	Для каждого Колонка Из ТаблицаОплаты.Колонки Цикл
		ОператорТаблицаОплаты.ВыбираемыеПоля.Добавить("ТаблицаОплаты." + Колонка.Имя);
	КонецЦикла;

	Запрос.Текст = СхемаЗапроса.ПолучитьТекстЗапроса();
	Запрос.УстановитьПараметр("ТаблицаОплаты", ТаблицаОплаты);
	Запрос.Выполнить();

	ЧастиЗапроса = Новый Массив;
	ЧастиЗапроса.Добавить("
	|ВЫБРАТЬ
	|	ГрафикПлатежей.ОбъектОплаты КАК ОбъектОплаты,
	|	ГрафикПлатежей.ОбъектОплаты КАК ЗаказКлиента,
	|	ГрафикПлатежей.ОбъектОплаты КАК ЗаказПоставщику,
	|	ГрафикПлатежей.ОбъектОплаты КАК ОснованиеПлатежа,
	|	ГрафикПлатежей.ОбъектОплаты КАК ДоговорКредитаДепозита,
	|	ГрафикПлатежей.ОбъектОплаты КАК ДоговорАренды,
	|	ВЫБОР
	|		КОГДА ГрафикПлатежей.ОбъектОплаты ССЫЛКА Справочник.ДоговорыКредитовИДепозитов ТОГДА
	|			ВЫРАЗИТЬ(ГрафикПлатежей.ОбъектОплаты КАК Справочник.ДоговорыКредитовИДепозитов).Партнер
	//++ НЕ УТ
	|		КОГДА ГрафикПлатежей.ОбъектОплаты ССЫЛКА Справочник.ДоговорыАренды ТОГДА
	|			ВЫРАЗИТЬ(ГрафикПлатежей.ОбъектОплаты КАК Справочник.ДоговорыАренды).Партнер
	//-- НЕ УТ
	|	КОНЕЦ КАК Партнер,
	|	ГрафикПлатежей.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	ГрафикПлатежей.БанковскийСчетКасса КАК БанковскийСчет,
	|	ГрафикПлатежей.БанковскийСчетКасса КАК Касса,
	|	ГрафикПлатежей.ДатаПлатежа КАК ДатаПлатежа,
	|	ГрафикПлатежей.ПлательщикПолучатель КАК ПлательщикПолучатель,
	|	ГрафикПлатежей.ПоступлениеСписание КАК ПоступлениеСписание,
	|	ГрафикПлатежей.ТипСуммы КАК ТипСуммы,
	|	ГрафикПлатежей.ТипСуммы КАК ТипСуммыКредитаДепозита,
	|	ГрафикПлатежей.ТипСуммы КАК ТипПлатежаПоАренде,
	|	ГрафикПлатежей.Организация КАК Организация,
	|	ГрафикПлатежей.Подразделение КАК Подразделение,
	|	ГрафикПлатежей.Валюта КАК Валюта,
	|	ГрафикПлатежей.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ГрафикПлатежей.ОбъектОплаты КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).ХозяйственнаяОперацияПоЗарплате, ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)) КАК ХозяйственнаяОперацияПоЗарплате,
	|	ЕСТЬNULL(ГрафикПлатежей.БанковскийСчетКасса.ВалютаДенежныхСредств, ГрафикПлатежей.Валюта) КАК ВалютаДенежныхСредств,
	|	ЕСТЬNULL(ГрафикПлатежей.БанковскийСчетКасса.ВалютаДенежныхСредств, ГрафикПлатежей.Валюта) КАК ВалютаДокумента,
	|	
	|	ВЫБОР
	|		КОГДА ГрафикПлатежей.ОбъектОплаты ССЫЛКА Документ.ЗаявкаНаРасходованиеДенежныхСредств ТОГДА
	|			ВЫРАЗИТЬ(ГрафикПлатежей.ОбъектОплаты КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).БанковскийСчетКонтрагента
	|		КОГДА ГрафикПлатежей.ОбъектОплаты ССЫЛКА Справочник.ДоговорыКредитовИДепозитов ТОГДА
	|			ВЫБОР ГрафикПлатежей.ТипСуммы
	|				КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг) ТОГДА
	|					ВЫРАЗИТЬ(ГрафикПлатежей.ОбъектОплаты КАК Справочник.ДоговорыКредитовИДепозитов).БанковскийСчетКонтрагента
	|				КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты) ТОГДА
	|					ВЫРАЗИТЬ(ГрафикПлатежей.ОбъектОплаты КАК Справочник.ДоговорыКредитовИДепозитов).БанковскийСчетПроцентов
	|				КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия) ТОГДА
	|					ВЫРАЗИТЬ(ГрафикПлатежей.ОбъектОплаты КАК Справочник.ДоговорыКредитовИДепозитов).БанковскийСчетКомиссии
	|			КОНЕЦ
	//++ НЕ УТ
	|		КОГДА ГрафикПлатежей.ОбъектОплаты ССЫЛКА Справочник.ДоговорыАренды ТОГДА
	|			ВЫРАЗИТЬ(ГрафикПлатежей.ОбъектОплаты КАК Справочник.ДоговорыАренды).БанковскийСчетКонтрагента
	//-- НЕ УТ
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
	|	КОНЕЦ КАК БанковскийСчетКонтрагента,
	|	
	|	ГрафикПлатежей.Сумма КАК СуммаКОплате,
	|	ГрафикПлатежей.Сумма КАК Сумма,
	|	
	|	ВЫБОР
	|		КОГДА ГрафикПлатежей.ОбъектОплаты ССЫЛКА Документ.ЗаявкаНаРасходованиеДенежныхСредств ТОГДА
	|			ВЫРАЗИТЬ(ГрафикПлатежей.ОбъектОплаты КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).СписокФизЛиц
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК СписокФизЛиц,
	|	
	|	ГрафикПлатежей.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ГрафикПлатежей.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПустаяСсылка) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|		ИНАЧЕ
	|			ГрафикПлатежей.ФормаОплаты
	|	КОНЕЦ КАК ФормаОплаты,
	|	ВЫБОР
	|		КОГДА ГрафикПлатежей.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствСДругогоСчета),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойКассы),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзБанка),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИнкассацияДенежныхСредствИзБанка),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыПоПлатежнойКарте),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплаты)
	|			) ТОГДА
	|			ЛОЖЬ
	|		КОГДА ГрафикПлатежей.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам)
	|			) И ЕСТЬNULL(ВЫРАЗИТЬ(ГрафикПлатежей.ОбъектОплаты КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).ПеречислениеВБюджет, ЛОЖЬ) ТОГДА
	|			ЛОЖЬ
	|		КОГДА ГрафикПлатежей.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|			И ГрафикПлатежей.ОбъектОплаты ССЫЛКА Документ.ЗаявкаНаРасходованиеДенежныхСредств
	|			И ВЫРАЗИТЬ(ГрафикПлатежей.ОбъектОплаты КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).СписокФизЛиц ТОГДА
	|			ЛОЖЬ
	|		ИНАЧЕ
	|			ИСТИНА
	#Удаление
	|	КОНЕЦ КАК Группируется   
	#КонецУдаления   
	#Вставка
	|	КОНЕЦ КАК Группируется, 
	|	ГрафикПлатежей.ОбъектОплаты.НазначениеПлатежа КАК НазначениеПлатежа  
	#КонецВставки
	|
	|ПОМЕСТИТЬ ТаблицаОплатыПолная
	|ИЗ
	|	РегистрСведений.ГрафикПлатежей КАК ГрафикПлатежей
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаОплаты КАК ТаблицаОплаты
	|	ПО
	|		ТаблицаОплаты.ОбъектОплаты = ГрафикПлатежей.ОбъектОплаты
	|		И (ТаблицаОплаты.БанковскийСчетКасса = ГрафикПлатежей.БанковскийСчетКасса
	|			ИЛИ ГрафикПлатежей.БанковскийСчетКасса = НЕОПРЕДЕЛЕНО И ТаблицаОплаты.БанковскийСчетКасса = НЕОПРЕДЕЛЕНО)
	|		И ТаблицаОплаты.ДатаПлатежа = ГрафикПлатежей.ДатаПлатежа
	|		И ТаблицаОплаты.ПоступлениеСписание = ГрафикПлатежей.ПоступлениеСписание
	|		И ТаблицаОплаты.ПлательщикПолучатель = ГрафикПлатежей.ПлательщикПолучатель
	|		И ТаблицаОплаты.Организация = ГрафикПлатежей.Организация
	|		И ТаблицаОплаты.Валюта = ГрафикПлатежей.Валюта
	|		И ТаблицаОплаты.ТипСуммы = ГрафикПлатежей.ТипСуммы
	|;
	|////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	ТаблицаОплатыПолная
	|ГДЕ
	|	ТаблицаОплатыПолная.ХозяйственнаяОперацияПоЗарплате <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета)
	|	И НЕ ТаблицаОплатыПолная.СписокФизЛиц
	|;
	|////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ТаблицаОплаты.Организация,
	|	ТаблицаОплаты.Подразделение,
	|	ТаблицаОплаты.БанковскийСчетКасса,
	|	ТаблицаОплаты.ПлательщикПолучатель,
	|	ТаблицаОплаты.БанковскийСчетКонтрагента,
	|	ТаблицаОплаты.ХозяйственнаяОперация,
	|	ТаблицаОплаты.ПоступлениеСписание,
	|	ТаблицаОплаты.ФормаОплаты,
	|	ТаблицаОплаты.Валюта,
	|	ТаблицаОплаты.Группируется, 
	#Удаление
	|	СУММА(ТаблицаОплаты.СуммаКОплате) КАК СуммаКОплате  
	#КонецУдаления 
	#Вставка
	|	СУММА(ТаблицаОплаты.СуммаКОплате) КАК СуммаКОплате,  
	|	ТаблицаОплаты.НазначениеПлатежа КАК НазначениеПлатежа 
	#КонецВставки
	|	
	|ИЗ
	|	ТаблицаОплатыПолная КАК ТаблицаОплаты
	|ГДЕ
	|	ТаблицаОплаты.Группируется
	|	И ТаблицаОплаты.ХозяйственнаяОперацияПоЗарплате <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОплаты.Организация,
	|	ТаблицаОплаты.Подразделение,
	|	ТаблицаОплаты.БанковскийСчетКасса,
	|	ТаблицаОплаты.ПлательщикПолучатель,
	|	ТаблицаОплаты.БанковскийСчетКонтрагента,
	|	ТаблицаОплаты.ХозяйственнаяОперация,
	|	ТаблицаОплаты.ПоступлениеСписание,
	|	ТаблицаОплаты.ФормаОплаты,
	|	ТаблицаОплаты.Валюта,
	#Удаление
	|	ТаблицаОплаты.Группируется 
	#КонецУдаления   
	#Вставка
	|	ТаблицаОплаты.Группируется, 
	|	ТаблицаОплаты.НазначениеПлатежа
	#КонецВставки
	|;
	|////////////////////////////////////
	|");

	ИспользоватьНачислениеЗарплаты = ПолучитьФункциональнуюОпцию("ИспользоватьНачислениеЗарплатыУТ");
	//++ Локализация

	//++ НЕ УТ
	Если ИспользоватьНачислениеЗарплаты Тогда
		ЧастиЗапроса.Добавить("
		|ВЫБРАТЬ
		|	ТаблицаОплаты.ОбъектОплаты                                                  КАК ЗаявкаНаРасходованиеДенежныхСредств,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета)  КАК ХозяйственнаяОперация,
		|	ТаблицаОплаты.Организация                                                   КАК Организация,
		|	ТаблицаОплаты.Подразделение                                                 КАК Подразделение,
		|	ВЫБОР
		|		КОГДА ТаблицаОплаты.БанковскийСчетКасса <> НЕОПРЕДЕЛЕНО ТОГДА
		|			ТаблицаОплаты.БанковскийСчетКасса
		|		ИНАЧЕ
		|			ВЫРАЗИТЬ(ТаблицаОплаты.ОбъектОплаты КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).БанковскийСчет
		|	КОНЕЦ КАК БанковскийСчет,
		|	Ведомости.Сотрудник.ФизическоеЛицо                                          КАК ПодотчетноеЛицо,
		|	Ведомости.БанковскийСчет                                                    КАК БанковскийСчетКонтрагента,
		|	Ведомости.Ссылка                                                            КАК Ведомость,
		|	НЕОПРЕДЕЛЕНО                                                                КАК НомерВедомостиНаВыплатуЗарплаты,
		|	НЕОПРЕДЕЛЕНО                                                                КАК ДатаВедомостиНаВыплатуЗарплаты,
		|	ТаблицаОплаты.СтатьяДвиженияДенежныхСредств                                 КАК СтатьяДвиженияДенежныхСредств,
		|	ИСТИНА                                                                      КАК ОплатаПоЗаявкам,
		|	ВЫРАЗИТЬ(ТаблицаОплаты.ОбъектОплаты КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).НазначениеПлатежа КАК НазначениеПлатежа,
		|	ВЫРАЗИТЬ(ТаблицаОплаты.ОбъектОплаты КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).КодВидаДохода КАК КодВидаДохода,
		|	ВЫРАЗИТЬ(ТаблицаОплаты.ОбъектОплаты КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).КодВыплат КАК КодВыплат,
		|	3                                                                           КАК ОчередностьПлатежа,
		|	НЕОПРЕДЕЛЕНО                                                                КАК ДатаАвансовогоОтчета,
		|	СУММА(Ведомости.КВыплате)                                                   КАК Сумма,
		|	СУММА(Ведомости.КВыплате)                                                   КАК СуммаДокумента,
		|	СУММА(Ведомости.КВыплате)                                                   КАК СуммаКОплате
		|ИЗ
		|	ТаблицаОплатыПолная КАК ТаблицаОплаты
		|		
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК ВедомостиЗаявки
		|		ПО ВедомостиЗаявки.Ссылка = ТаблицаОплаты.ОбъектОплаты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВедомостьНаВыплатуЗарплатыПеречислением.Зарплата КАК Ведомости
		|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ВедомостиСписания
		|				ПО Ведомости.Сотрудник.ФизическоеЛицо = ВедомостиСписания.Ссылка.ПодотчетноеЛицо
		|					И Ведомости.БанковскийСчет = ВедомостиСписания.Ссылка.БанковскийСчетКонтрагента
		|					И Ведомости.Ссылка = ВедомостиСписания.Ведомость
		|					И ВедомостиСписания.Ссылка.Проведен
		|			ПО ВедомостиЗаявки.Ведомость = Ведомости.Ссылка
		|ГДЕ
		|	ТаблицаОплаты.ХозяйственнаяОперацияПоЗарплате = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета)
		|	И ВедомостиСписания.Ссылка ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаОплаты.ОбъектОплаты,
		|	ТаблицаОплаты.Организация,
		|	ТаблицаОплаты.Подразделение,
		|	ТаблицаОплаты.БанковскийСчетКасса,
		|	ТаблицаОплаты.СтатьяДвиженияДенежныхСредств,
		|	Ведомости.Сотрудник.ФизическоеЛицо,
		|	Ведомости.БанковскийСчет,
		|	Ведомости.Ссылка
		|");
		ЧастиЗапроса.Добавить("
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|");
		ЧастиЗапроса.Добавить("
		|ВЫБРАТЬ
		|	ТаблицаОплаты.ОбъектОплаты                                                  КАК ЗаявкаНаРасходованиеДенежныхСредств,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета)  КАК ХозяйственнаяОперация,
		|	ТаблицаОплаты.Организация                                                   КАК Организация,
		|	ТаблицаОплаты.Подразделение                                                 КАК Подразделение,
		|	ВЫБОР
		|		КОГДА ТаблицаОплаты.БанковскийСчетКасса <> НЕОПРЕДЕЛЕНО ТОГДА
		|			ТаблицаОплаты.БанковскийСчетКасса
		|		ИНАЧЕ
		|			ВЫРАЗИТЬ(ТаблицаОплаты.ОбъектОплаты КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).БанковскийСчет
		|	КОНЕЦ КАК БанковскийСчет,
		|	Ведомости.ФизическоеЛицо                                                    КАК ПодотчетноеЛицо,
		|	Ведомости.БанковскийСчет                                                    КАК БанковскийСчетКонтрагента,
		|	Ведомости.Ссылка                                                            КАК Ведомость,
		|	НЕОПРЕДЕЛЕНО                                                                КАК НомерВедомостиНаВыплатуЗарплаты,
		|	НЕОПРЕДЕЛЕНО                                                                КАК ДатаВедомостиНаВыплатуЗарплаты,
		|	ТаблицаОплаты.СтатьяДвиженияДенежныхСредств                                 КАК СтатьяДвиженияДенежныхСредств,
		|	ИСТИНА                                                                      КАК ОплатаПоЗаявкам,
		|	ВЫРАЗИТЬ(ТаблицаОплаты.ОбъектОплаты КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).НазначениеПлатежа КАК НазначениеПлатежа,
		|	ВЫРАЗИТЬ(ТаблицаОплаты.ОбъектОплаты КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).КодВидаДохода КАК КодВидаДохода,
		|	ВЫРАЗИТЬ(ТаблицаОплаты.ОбъектОплаты КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).КодВыплат КАК КодВыплат,
		|	3                                                                           КАК ОчередностьПлатежа,
		|	НЕОПРЕДЕЛЕНО                                                                КАК ДатаАвансовогоОтчета,
		|	СУММА(Ведомости.КВыплате)                                                   КАК Сумма,
		|	СУММА(Ведомости.КВыплате)                                                   КАК СуммаДокумента,
		|	СУММА(Ведомости.КВыплате)                                                   КАК СуммаКОплате
		|ИЗ
		|	ТаблицаОплатыПолная КАК ТаблицаОплаты
		|		
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК ВедомостиЗаявки
		|		ПО ВедомостиЗаявки.Ссылка = ТаблицаОплаты.ОбъектОплаты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВедомостьПрочихДоходовПеречислением.Выплаты КАК Ведомости
		|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ВедомостиСписания
		|				ПО Ведомости.ФизическоеЛицо = ВедомостиСписания.Ссылка.ПодотчетноеЛицо
		|					И Ведомости.БанковскийСчет = ВедомостиСписания.Ссылка.БанковскийСчетКонтрагента
		|					И Ведомости.Ссылка = ВедомостиСписания.Ведомость
		|					И ВедомостиСписания.Ссылка.Проведен
		|			ПО ВедомостиЗаявки.Ведомость = Ведомости.Ссылка
		|ГДЕ
		|	ТаблицаОплаты.ХозяйственнаяОперацияПоЗарплате = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета)
		|	И ВедомостиСписания.Ссылка ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаОплаты.ОбъектОплаты,
		|	ТаблицаОплаты.Организация,
		|	ТаблицаОплаты.Подразделение,
		|	ТаблицаОплаты.БанковскийСчетКасса,
		|	ТаблицаОплаты.СтатьяДвиженияДенежныхСредств,
		|	Ведомости.ФизическоеЛицо,
		|	Ведомости.БанковскийСчет,
		|	Ведомости.Ссылка
		|");
		ЧастиЗапроса.Добавить("
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|");
	КонецЕсли;
	//-- НЕ УТ

	//-- Локализация

	ЧастиЗапроса.Добавить("
	|ВЫБРАТЬ
	|	ТаблицаОплаты.ОбъектОплаты                                                  КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	ВЫБОР
	|		КОГДА ТаблицаОплаты.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплаты) ТОГДА
	|			ТаблицаОплаты.ХозяйственнаяОперацияПоЗарплате
	|		ИНАЧЕ
	|			ТаблицаОплаты.ХозяйственнаяОперация
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	
	|	ТаблицаОплаты.Организация                                                   КАК Организация,
	|	ТаблицаОплаты.Подразделение                                                 КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ТаблицаОплаты.БанковскийСчетКасса <> НЕОПРЕДЕЛЕНО ТОГДА
	|			ТаблицаОплаты.БанковскийСчетКасса
	|		ИНАЧЕ
	|			ВЫРАЗИТЬ(ТаблицаОплаты.ОбъектОплаты КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).БанковскийСчет
	|	КОНЕЦ КАК БанковскийСчет,
	|	ЛицевыеСчета.ФизическоеЛицо                                                 КАК ПодотчетноеЛицо,
	|	ЛицевыеСчета.ЛицевойСчет                                                    КАК БанковскийСчетКонтрагента,
	|	НЕОПРЕДЕЛЕНО                                                                КАК Ведомость,
	|	ЛицевыеСчета.Ссылка.НомерВедомостиНаВыплатуЗарплаты                         КАК НомерВедомостиНаВыплатуЗарплаты,
	|	ЛицевыеСчета.Ссылка.ДатаВедомостиНаВыплатуЗарплаты                          КАК ДатаВедомостиНаВыплатуЗарплаты,
	|	ТаблицаОплаты.СтатьяДвиженияДенежныхСредств                                 КАК СтатьяДвиженияДенежныхСредств,
	|	ИСТИНА                                                                      КАК ОплатаПоЗаявкам,
	|	ВЫРАЗИТЬ(ТаблицаОплаты.ОбъектОплаты КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).НазначениеПлатежа КАК НазначениеПлатежа,
	|	ВЫРАЗИТЬ(ТаблицаОплаты.ОбъектОплаты КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).КодВидаДохода КАК КодВидаДохода,
	|	ВЫРАЗИТЬ(ТаблицаОплаты.ОбъектОплаты КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).КодВыплат КАК КодВыплат,
	|	ВЫБОР КОГДА ТаблицаОплаты.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплаты) ТОГДА
	|		3
	|	ИНАЧЕ
	|		5
	|	КОНЕЦ КАК ОчередностьПлатежа,
	|	ВЫРАЗИТЬ(ТаблицаОплаты.ОбъектОплаты
	|		КАК Документ.ЗаявкаНаРасходованиеДенежныхСредств).ДатаАвансовогоОтчета  КАК ДатаАвансовогоОтчета,
	|	ЛицевыеСчета.Сумма                                                          КАК Сумма,
	|	ЛицевыеСчета.Сумма                                                          КАК СуммаДокумента,
	|	СУММА(ТаблицаОплаты.СуммаКОплате)                                           КАК СуммаКОплате
	|ИЗ
	|	ТаблицаОплатыПолная КАК ТаблицаОплаты
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРасходованиеДенежныхСредств.ЛицевыеСчетаСотрудников КАК ЛицевыеСчета
	|		ПО ЛицевыеСчета.Ссылка = ТаблицаОплаты.ОбъектОплаты
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК Списания
	|			ПО Списания.Ссылка.ПодотчетноеЛицо = ЛицевыеСчета.ФизическоеЛицо
	|				И Списания.Ссылка.БанковскийСчетКонтрагента = ЛицевыеСчета.ЛицевойСчет
	|				И Списания.ЗаявкаНаРасходованиеДенежныхСредств = ТаблицаОплаты.ОбъектОплаты
	|				И Списания.Ссылка.Проведен
	|ГДЕ
	|	(ТаблицаОплаты.ХозяйственнаяОперацияПоЗарплате = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета)
	|		И НЕ &ИспользоватьНачислениеЗарплаты
	|	ИЛИ ТаблицаОплаты.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|		И ТаблицаОплаты.СписокФизЛиц)
	|	И Списания.Ссылка ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОплаты.ОбъектОплаты,
	|	ТаблицаОплаты.Организация,
	|	ТаблицаОплаты.Подразделение,
	|	ТаблицаОплаты.БанковскийСчетКасса,
	|	ТаблицаОплаты.СтатьяДвиженияДенежныхСредств,
	|	ЛицевыеСчета.Ссылка,
	|	ЛицевыеСчета.ФизическоеЛицо,
	|	ЛицевыеСчета.ЛицевойСчет,
	|	ЛицевыеСчета.Сумма,
	|	ВЫБОР
	|		КОГДА ТаблицаОплаты.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплаты) ТОГДА
	|			ТаблицаОплаты.ХозяйственнаяОперацияПоЗарплате
	|		ИНАЧЕ
	|			ТаблицаОплаты.ХозяйственнаяОперация
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ТаблицаОплаты.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплаты) ТОГДА
	|		3
	|	ИНАЧЕ
	|		5
	|	КОНЕЦ
	|ИТОГИ ПО
	|	ЗаявкаНаРасходованиеДенежныхСредств
	|");

	Запрос.Текст = СтрСоединить(ЧастиЗапроса);
	Запрос.УстановитьПараметр("ИспользоватьНачислениеЗарплаты", ИспользоватьНачислениеЗарплаты);

	Результат = Запрос.ВыполнитьПакет();

	ТаблицаОплаты = Результат[1].Выгрузить();
	ВыборкаСтроки = Результат[1].Выбрать();
	ВыборкаГруппировки = Результат[2].Выбрать();
	ВыборкаВыплатыПоСписку = Результат[3].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ОтборПлатежей = Новый Структура;
	Для Каждого Колонка Из Результат[2].Колонки Цикл
		ОтборПлатежей.Вставить(Колонка.Имя);
	КонецЦикла;
	ОтборПлатежей.Удалить("СуммаКОплате");

	ОписаниеТипаБанковскийСчет = Новый ОписаниеТипов("СправочникСсылка.БанковскиеСчетаОрганизаций");
	ОписаниеТипаКасса = Новый ОписаниеТипов("СправочникСсылка.Кассы");

	Пока ВыборкаГруппировки.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ОтборПлатежей, ВыборкаГруппировки);

		ОтобранныеПлатежи = ТаблицаОплаты.НайтиСтроки(ОтборПлатежей);

		Если Не ОтобранныеПлатежи.Количество() Тогда
			Продолжить;
		КонецЕсли;

		Если Не ЗначениеЗаполнено(ТипДокумента) Тогда
			ТипДокумента = ОпределитьТипСоздаваемогоДокумента(ВыборкаГруппировки);
		КонецЕсли;

		ДанныеЗаполнения = Неопределено;

		Если ТипЗнч(ОтобранныеПлатежи[0].ОбъектОплаты) = Тип("ДокументСсылка.РаспоряжениеНаПеремещениеДенежныхСредств")
			//++ Локализация
			Или ТипЗнч(ОтобранныеПлатежи[0].ОбъектОплаты) = Тип("ДокументСсылка.УведомлениеОЗачисленииВалюты")
			//-- Локализация
			Или ТипЗнч(ОтобранныеПлатежи[0].ОбъектОплаты) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеДенежныхСредств")
			Или ТипЗнч(ОтобранныеПлатежи[0].ОбъектОплаты) = Тип("ДокументСсылка.ЗаявкаНаКомандировку") Тогда

			МассивСсылок = Новый Массив; СуммыКОплате = Новый Соответствие;
			Для Каждого СтрокаПлатежа Из ОтобранныеПлатежи Цикл
				МассивСсылок.Добавить(СтрокаПлатежа.ОбъектОплаты);
				ЗаписаннаяСумма = СуммыКОплате.Получить(СтрокаПлатежа.ОбъектОплаты);
				Если ЗаписаннаяСумма = Неопределено Тогда
					СуммыКОплате.Вставить(СтрокаПлатежа.ОбъектОплаты, СтрокаПлатежа.СуммаКОплате);
				Иначе
					СуммыКОплате.Вставить(СтрокаПлатежа.ОбъектОплаты, СтрокаПлатежа.СуммаКОплате + ЗаписаннаяСумма);
				КонецЕсли;
			КонецЦикла;

			ДанныеЗаполнения = Новый Структура;
			ДанныеЗаполнения.Вставить("ДокументОснование", МассивСсылок);
			ДанныеЗаполнения.Вставить("БанковскийСчетКасса", ВыборкаГруппировки.БанковскийСчетКасса);
			ДанныеЗаполнения.Вставить("ПлательщикПолучатель", ВыборкаГруппировки.ПлательщикПолучатель);
			ДанныеЗаполнения.Вставить("ХозяйственнаяОперация", ВыборкаГруппировки.ХозяйственнаяОперация);
			ДанныеЗаполнения.Вставить("Сумма", ВыборкаГруппировки.СуммаКОплате);
			ДанныеЗаполнения.Вставить("Валюта", ВыборкаГруппировки.Валюта);
			ДанныеЗаполнения.Вставить("НесколькоЗаявокНаРасходованиеСредств", МассивСсылок.Количество() > 1);
			ДанныеЗаполнения.Вставить("СуммыКОплате", СуммыКОплате);
		Иначе

			ДанныеЗаполнения = Новый Структура;
			ДанныеЗаполнения.Вставить("БанковскийСчет", ОписаниеТипаБанковскийСчет.ПривестиЗначение(ВыборкаГруппировки.БанковскийСчетКасса));
			ДанныеЗаполнения.Вставить("Касса", ОписаниеТипаКасса.ПривестиЗначение(ВыборкаГруппировки.БанковскийСчетКасса));
			ДанныеЗаполнения.Вставить("Контрагент", ВыборкаГруппировки.ПлательщикПолучатель);
			ДанныеЗаполнения.Вставить("Организация", ВыборкаГруппировки.Организация);
			ДанныеЗаполнения.Вставить("Валюта", ВыборкаГруппировки.Валюта);

			Если ВыборкаГруппировки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию Тогда
				Если ТипДокумента = "ПриходныйКассовыйОрдер" Или ТипДокумента = "ПоступлениеБезналичныхДенежныхСредств" Тогда
					ДанныеЗаполнения.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации);
				Иначе
					ДанныеЗаполнения.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
				КонецЕсли;
			ИначеЕсли ВыборкаГруппировки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоКредитам
				Или ВыборкаГруппировки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты
				Или ВыборкаГруппировки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаЗаймов
				//++ НЕ УТ
				Или ВыборкаГруппировки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаАрендодателю
				//-- НЕ УТ
				Или ВыборкаГруппировки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоКредитам
				Или ВыборкаГруппировки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоДепозитам
				Или ВыборкаГруппировки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоЗаймамВыданным Тогда

				ДанныеЗаполнения.Вставить("ХозяйственнаяОперация", ВыборкаГруппировки.ХозяйственнаяОперация);
			КонецЕсли;
			ДанныеЗаполнения.Вставить("Основание", ОбщегоНазначения.ТаблицаЗначенийВМассив(ТаблицаОплаты.Скопировать(ОтобранныеПлатежи)));
		КонецЕсли;

		ДокументКСозданию = Новый Структура;
		ДокументКСозданию.Вставить("ТипДокумента", ТипДокумента);
		ДокументКСозданию.Вставить("ДанныеЗаполнения", ДанныеЗаполнения);
		ДокументыКСозданию.Добавить(ДокументКСозданию);
	КонецЦикла;

	Пока ВыборкаСтроки.НайтиСледующий(Новый Структура("Группируется", Ложь)) Цикл

		ДанныеЗаполнения = Неопределено;

		Если ТипЗнч(ВыборкаСтроки.ОбъектОплаты) = Тип("ДокументСсылка.РаспоряжениеНаПеремещениеДенежныхСредств")
			//++ Локализация
			Или ТипЗнч(ВыборкаСтроки.ОбъектОплаты) = Тип("ДокументСсылка.УведомлениеОЗачисленииВалюты")
			//-- Локализация
			Или ТипЗнч(ВыборкаСтроки.ОбъектОплаты) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеДенежныхСредств")
			Или ТипЗнч(ВыборкаСтроки.ОбъектОплаты) = Тип("ДокументСсылка.ЗаявкаНаКомандировку") Тогда

			МассивСсылок = Новый Массив;
			МассивСсылок.Добавить(ВыборкаСтроки.ОбъектОплаты);

			ДанныеЗаполнения = Новый Структура;
			ДанныеЗаполнения.Вставить("ДокументОснование", МассивСсылок);
			ДанныеЗаполнения.Вставить("БанковскийСчетКасса", ВыборкаСтроки.БанковскийСчетКасса);
			ДанныеЗаполнения.Вставить("ПлательщикПолучатель", ВыборкаСтроки.ПлательщикПолучатель);
			ДанныеЗаполнения.Вставить("ХозяйственнаяОперация", ВыборкаСтроки.ХозяйственнаяОперация);
			ДанныеЗаполнения.Вставить("Сумма", ВыборкаСтроки.СуммаКОплате);
			ДанныеЗаполнения.Вставить("Валюта", ВыборкаСтроки.Валюта);
			ДанныеЗаполнения.Вставить("НесколькоЗаявокНаРасходованиеСредств", Ложь);
			ДанныеЗаполнения.Вставить("ТипСуммы", ВыборкаСтроки.ТипСуммы);

		Иначе

			Если ВыборкаСтроки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет
				Или ВыборкаСтроки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствСДругогоСчета
				Или ВыборкаСтроки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойКассы
				Или ВыборкаСтроки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИнкассацияДенежныхСредствИзБанка
				Или ВыборкаСтроки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОплатыПоПлатежнойКарте
				Или ВыборкаСтроки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КонвертацияВалюты Тогда

				ДанныеЗаполнения = Новый Структура;
				ДанныеЗаполнения.Вставить("Организация", ВыборкаСтроки.Организация);
				ДанныеЗаполнения.Вставить("ХозяйственнаяОперация", ВыборкаСтроки.ХозяйственнаяОперация);
				ДанныеЗаполнения.Вставить("Валюта", ВыборкаСтроки.Валюта);
				ДанныеЗаполнения.Вставить("СуммаДокумента", ВыборкаСтроки.СуммаКОплате);

				ДанныеЗаполнения.Вставить("БанковскийСчетОтправитель", ОписаниеТипаБанковскийСчет.ПривестиЗначение(ВыборкаСтроки.ОбъектОплаты));
				ДанныеЗаполнения.Вставить("КассаОтправитель", ОписаниеТипаКасса.ПривестиЗначение(ВыборкаСтроки.ОбъектОплаты));
				ДанныеЗаполнения.Вставить("Контрагент", ВыборкаСтроки.ОбъектОплаты);
				Если ВыборкаСтроки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИнкассацияДенежныхСредствИзБанка Тогда
					ДанныеЗаполнения.Вставить("БанковскийСчет", ОписаниеТипаБанковскийСчет.ПривестиЗначение(ВыборкаСтроки.ОбъектОплаты));
				Иначе
					ДанныеЗаполнения.Вставить("БанковскийСчет", ОписаниеТипаБанковскийСчет.ПривестиЗначение(ВыборкаСтроки.БанковскийСчет));
				КонецЕсли;
				ДанныеЗаполнения.Вставить("Касса", ВыборкаСтроки.Касса);

			Иначе

				ДанныеЗаполнения = Новый Структура;
				ДанныеЗаполнения.Вставить("БанковскийСчет", ОписаниеТипаБанковскийСчет.ПривестиЗначение(ВыборкаСтроки.БанковскийСчетКасса));
				ДанныеЗаполнения.Вставить("Касса", ОписаниеТипаКасса.ПривестиЗначение(ВыборкаСтроки.БанковскийСчетКасса));
				ДанныеЗаполнения.Вставить("Контрагент", ВыборкаСтроки.ПлательщикПолучатель);
				ДанныеЗаполнения.Вставить("Организация", ВыборкаСтроки.Организация);
				ДанныеЗаполнения.Вставить("Валюта", ВыборкаСтроки.Валюта);
				ДанныеЗаполнения.Вставить("Основание", ВыборкаСтроки.ОбъектОплаты);
			КонецЕсли;
		КонецЕсли;

		ДокументКСозданию = Новый Структура;
		ДокументКСозданию.Вставить("ТипДокумента", ТипДокумента);
		ДокументКСозданию.Вставить("ДанныеЗаполнения", ДанныеЗаполнения);
		ДокументыКСозданию.Добавить(ДокументКСозданию);
	КонецЦикла;

	Пока ВыборкаВыплатыПоСписку.Следующий() Цикл

		СуммаКОплате = ВыборкаВыплатыПоСписку.СуммаКОплате;
		Выборка = ВыборкаВыплатыПоСписку.Выбрать();
		Пока Выборка.Следующий() Цикл

			Если Выборка.Сумма <= СуммаКОплате Тогда

				ДанныеЗаполнения = Новый Структура;
				Для каждого Колонка Из Результат[3].Колонки Цикл
					ДанныеЗаполнения.Вставить(Колонка.Имя);
				КонецЦикла;
				ЗаполнитьЗначенияСвойств(ДанныеЗаполнения, Выборка);

				ДокументКСозданию = Новый Структура;
				ДокументКСозданию.Вставить("ТипДокумента", ТипДокумента);
				ДокументКСозданию.Вставить("ДанныеЗаполнения", ДанныеЗаполнения);
				ДокументыКСозданию.Добавить(ДокументКСозданию);

				СуммаКОплате = СуммаКОплате - Выборка.Сумма;
			Иначе
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

	Возврат ДокументыКСозданию;

КонецФункции
