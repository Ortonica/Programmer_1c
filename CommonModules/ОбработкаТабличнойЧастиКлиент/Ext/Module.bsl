
&ИзменениеИКонтроль("ПолучитьТекущуюСтрокуСтруктурой")
Функция РСК_ПолучитьТекущуюСтрокуСтруктурой(ТекущаяСтрока, СтруктураДействий, ДополнительныеПараметрыЗаполнения)
	Перем СтруктураПараметровДействия;

	СтруктураПолейТЧ = Новый Структура;

	Если СтруктураДействий.Свойство("ПроверитьНеобходимостьОбновленияКолонкиДоступно")
		Или СтруктураДействий.Свойство("ЗаполнитьКолонкуДоступно")
		Или СтруктураДействий.Свойство("ОбновитьКэшНоменклатура") Тогда

		ТекущаяСтруктура = ОбеспечениеВДокументахКлиент.СтруктураПолейПроверитьНеобходимостьОбновленияКолонкиДоступно();
		Если ТипЗнч(ТекущаяСтрока) = Тип("ДанныеФормыЭлементКоллекции") Тогда
			ТекущаяСтруктура.Вставить("ИдентификаторСтрокиПолученный", ТекущаяСтрока.ПолучитьИдентификатор());
		Иначе
			ТекущаяСтруктура.Вставить("ИдентификаторСтрокиПолученный", Неопределено);
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(СтруктураПолейТЧ, ТекущаяСтруктура);

	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьОтгрузитьДляВариантаОформленияЗаказПлюсРеализация") Тогда
		СтруктураПолейТЧ.Вставить("ВариантОформления");
		СтруктураПолейТЧ.Вставить("ВариантОбеспечения");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьНазначениеОбеспеченияВЭтапеПроизводства") Тогда
		СтруктураПолейТЧ.Вставить("Обособленно");
		СтруктураПолейТЧ.Вставить("Производится");
		СтруктураПолейТЧ.Вставить("НазначениеОбеспечения");
		СтруктураПолейТЧ.Вставить("Назначение");
		СтруктураПолейТЧ.Вставить("ТипНоменклатуры");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьНазначениеВЭтапеПроизводства") Тогда
		СтруктураПолейТЧ.Вставить("Обособленно");
		СтруктураПолейТЧ.Вставить("НазначениеОбеспечения");
		СтруктураПолейТЧ.Вставить("Назначение");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПроверитьХарактеристикуПоВладельцу") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Характеристика");
		СтруктураПолейТЧ.Вставить("ХарактеристикиИспользуются");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПроверитьХарактеристикуКиЗПоВладельцу") Тогда
		СтруктураПолейТЧ.Вставить("НоменклатураКиЗ");
		СтруктураПолейТЧ.Вставить("ХарактеристикаКиЗ");
		СтруктураПолейТЧ.Вставить("ХарактеристикиКиЗИспользуются");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПроверитьЗаполнитьУпаковкуПоВладельцу") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Упаковка");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ОчиститьСтатьюАналитикуРасходов", СтруктураПараметровДействия) Тогда
		СтруктураПолейТЧ.Вставить(СтруктураПараметровДействия.СтатьяРасходов);
		СтруктураПолейТЧ.Вставить(СтруктураПараметровДействия.АналитикаРасходов);
		Для каждого Колонка Из СтруктураПараметровДействия.ДополнительныеКолонки Цикл
			СтруктураПолейТЧ.Вставить(Колонка);
		КонецЦикла
	КонецЕсли;

	Если СтруктураДействий.Свойство("ИнициализироватьСтатьюИАналитикуПослеДобавленияСтроки", СтруктураПараметровДействия) Тогда
		Для каждого Колонка Из СтруктураПараметровДействия.КолонкиТабличнойЧасти Цикл
			СтруктураПолейТЧ.Вставить(Колонка);
		КонецЦикла;
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьНастройкуСчетовУчетаПоУмолчанию", СтруктураПараметровДействия) Тогда
		Для каждого Колонка Из СтруктураПараметровДействия.КолонкиТабличнойЧасти Цикл
			СтруктураПолейТЧ.Вставить(Колонка);
		КонецЦикла;
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПредставлениеНастройкиСчетовУчета", СтруктураПараметровДействия) Тогда
		Для каждого Колонка Из СтруктураПараметровДействия.КолонкиТабличнойЧасти Цикл
			СтруктураПолейТЧ.Вставить(Колонка);
		КонецЦикла;
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиниц")
		Или СтруктураДействий.Свойство("ПересчитатьКоличествоУпаковок") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Упаковка");
		СтруктураПолейТЧ.Вставить("КоличествоУпаковок", 0);
		СтруктураПолейТЧ.Вставить("Количество", 0);
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьКоличествоПоРНПТ") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Характеристика");
		СтруктураПолейТЧ.Вставить("НомерГТД");
		СтруктураПолейТЧ.Вставить("Количество");
		СтруктураПолейТЧ.Вставить("КоличествоПоРНПТ");
		СтруктураПолейТЧ.Вставить("ВедетсяУчетПоРНПТ");
		Если СтруктураДействий.ПересчитатьКоличествоПоРНПТ.МестоХраненияВТабличнойЧасти Тогда
			СтруктураПолейТЧ.Вставить(СтруктураДействий.ПересчитатьКоличествоПоРНПТ.ИмяПоляМестоХранения);
		КонецЕсли;
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакРасхождениеЗаказ") Тогда
		СтруктураПолейТЧ.Вставить("РасхождениеЗаказ");
		СтруктураПолейТЧ.Вставить("КодСтроки");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиниц", СтруктураПараметровДействия)
		И СтруктураПараметровДействия <> Неопределено 
		И СтруктураПараметровДействия.Свойство("НужноОкруглять")
		И ТекущаяСтрока.Свойство("НужноОкруглять") Тогда
		СтруктураПолейТЧ.Вставить("НужноОкруглять");	
	КонецЕсли;	

	Если СтруктураДействий.Свойство("ЗаполнитьGTINВСтроке", СтруктураПараметровДействия)  Тогда

		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Характеристика");
		СтруктураПолейТЧ.Вставить("GTIN");

	КонецЕсли;

	Суффикс = Неопределено;

	Если СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиницСуффикс",Суффикс)
		Или СтруктураДействий.Свойство("ПересчитатьКоличествоУпаковокСуффикс",Суффикс) Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Упаковка");
		КоличествоССуффиксом = ОбработкаТабличнойЧастиКлиентСервер.КоличествоССуффиксом(Суффикс);
		СтруктураПолейТЧ.Вставить(КоличествоССуффиксом.КоличествоУпаковок, 0);
		СтруктураПолейТЧ.Вставить(КоличествоССуффиксом.Количество, 0);
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьКоличествоОтклонение") Тогда
		СтруктураПолейТЧ.Вставить("Упаковка");
		СтруктураПолейТЧ.Вставить("КоличествоОтклонение", 0);
		СтруктураПолейТЧ.Вставить("КоличествоУпаковокОтклонение", 0);
		СтруктураПолейТЧ.Вставить("КоличествоФакт", 0);
		СтруктураПолейТЧ.Вставить("КоличествоУпаковокФакт", 0);
		СтруктураПолейТЧ.Вставить("Количество", 0);
		СтруктураПолейТЧ.Вставить("КоличествоУпаковок", 0);
	КонецЕсли; 

	Если СтруктураДействий.Свойство("ПересчитатьКоличествоУпаковокСуффиксИзОтклонения",Суффикс) Тогда
		СтруктураПолейТЧ.Вставить("КоличествоУпаковокОтклонение", 0);
		КоличествоССуффиксом = ОбработкаТабличнойЧастиКлиентСервер.КоличествоССуффиксом(Суффикс);
		СтруктураПолейТЧ.Вставить(КоличествоССуффиксом.КоличествоУпаковок, 0);
		СтруктураПолейТЧ.Вставить("КоличествоУпаковок", 0);
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьВесОбъем",Суффикс) Тогда
		СтруктураПолейТЧ.Вставить("ВесУпаковки", 0);
		СтруктураПолейТЧ.Вставить("ОбъемУпаковки", 0);
		КоличествоССуффиксом = ОбработкаТабличнойЧастиКлиентСервер.КоличествоССуффиксом(Суффикс);
		СтруктураПолейТЧ.Вставить(КоличествоССуффиксом.КоличествоУпаковок, 0);
		СтруктураПолейТЧ.Вставить("Вес", 0);
		СтруктураПолейТЧ.Вставить("Объем", 0);
		СтруктураПолейТЧ.Вставить("ЕдиницаИзмеренияВеса");
		СтруктураПолейТЧ.Вставить("ЕдиницаИзмеренияОбъема");
	КонецЕсли;

	Суффикс = Неопределено;

	Если СтруктураДействий.Свойство("ПересчитатьКоличествоУпаковокПоВесу",Суффикс)
		Или СтруктураДействий.Свойство("ПересчитатьКоличествоУпаковокПоОбъему",Суффикс) Тогда
		СтруктураПолейТЧ.Вставить("ВесУпаковки", 0);
		СтруктураПолейТЧ.Вставить("ОбъемУпаковки", 0);
		КоличествоССуффиксом = ОбработкаТабличнойЧастиКлиентСервер.КоличествоССуффиксом(Суффикс);
		СтруктураПолейТЧ.Вставить(КоличествоССуффиксом.КоличествоУпаковок, 0);
		СтруктураПолейТЧ.Вставить(КоличествоССуффиксом.Количество, 0);
		СтруктураПолейТЧ.Вставить("Вес", 0);
		СтруктураПолейТЧ.Вставить("Объем", 0);
		СтруктураПолейТЧ.Вставить("Упаковка");
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("ЕдиницаИзмеренияВеса");
		СтруктураПолейТЧ.Вставить("ЕдиницаИзмеренияОбъема");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьЦенуПродажи") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Характеристика");
		СтруктураПолейТЧ.Вставить("Серия");
		Если СтруктураДействий.ЗаполнитьЦенуПродажи.Свойство("ИмяКолонкиУпаковка") Тогда
			СтруктураПолейТЧ.Вставить(СтруктураДействий.ЗаполнитьЦенуПродажи.ИмяКолонкиУпаковка);
		Иначе
			СтруктураПолейТЧ.Вставить("Упаковка");
		КонецЕсли;
		Если СтруктураДействий.ЗаполнитьЦенуПродажи.Свойство("ИмяКолонкиВидЦены") Тогда
			СтруктураПолейТЧ.Вставить(СтруктураДействий.ЗаполнитьЦенуПродажи.ИмяКолонкиВидЦены);
		Иначе
			СтруктураПолейТЧ.Вставить("ВидЦены");
		КонецЕсли;
		Если СтруктураДействий.ЗаполнитьЦенуПродажи.Свойство("ИмяПоляЦена") Тогда
			СтруктураПолейТЧ.Вставить(СтруктураДействий.ЗаполнитьЦенуПродажи.ИмяПоляЦена, 0);
		Иначе
			СтруктураПолейТЧ.Вставить("Цена", 0);
		КонецЕсли;
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьЦенуПродажиПоАссортименту") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Характеристика");
		СтруктураПолейТЧ.Вставить("Серия");
		СтруктураПолейТЧ.Вставить("Упаковка");
		СтруктураПолейТЧ.Вставить("ВидЦены");
		СтруктураПолейТЧ.Вставить("Цена", 0);
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьЦенуЗакупки") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Характеристика");
		СтруктураПолейТЧ.Вставить("Серия");
		СтруктураПолейТЧ.Вставить("Упаковка");
		СтруктураПолейТЧ.Вставить("ВидЦеныПоставщика");
		СтруктураПолейТЧ.Вставить("Цена", 0);
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьУсловияЗакупок") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Характеристика");
		СтруктураПолейТЧ.Вставить("Упаковка");
		СтруктураПолейТЧ.Вставить("ВидЦеныПоставщика");
		СтруктураПолейТЧ.Вставить("Цена", 0);
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьНоменклатуруПоНоменклатуреПартнера") Тогда
		СтруктураПолейТЧ.Вставить("НоменклатураПартнера");
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Характеристика");
		СтруктураПолейТЧ.Вставить("Упаковка");
		СтруктураПолейТЧ.Вставить("ХарактеристикиИспользуются");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьНоменклатуруПартнераПоНоменклатуре") Тогда
		СтруктураПолейТЧ.Вставить("НоменклатураПартнера");
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Характеристика");
		СтруктураПолейТЧ.Вставить("Упаковка");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПроверитьСопоставленнуюНоменклатуруПартнера") Тогда
		СтруктураПолейТЧ.Вставить("НомерСтроки");
		СтруктураПолейТЧ.Вставить("НоменклатураПартнера");
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Характеристика");
		СтруктураПолейТЧ.Вставить("Упаковка");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьСтавкуНДС")
		ИЛИ СтруктураДействий.Свойство("ЗаполнитьСтавкуНДСПоНоменклатуре") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("СтавкаНДС");
		СтруктураПолейТЧ.Вставить("ДатаОтгрузки");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьКодТНВЭД") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("КодТНВЭД");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьСтавкуНДСВозвратнойТары") Тогда
		СтруктураПолейТЧ.Вставить("ТипНоменклатуры");
		СтруктураПолейТЧ.Вставить("СтавкаНДС");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьСуммуНДС") Тогда
		СтруктураПолейТЧ.Вставить("Сумма"    , 0);
		СтруктураПолейТЧ.Вставить("СтавкаНДС", 0);
		СтруктураПолейТЧ.Вставить("СуммаНДС" , 0);
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьСуммуСНДС") Тогда
		СтруктураПолейТЧ.Вставить("Сумма"    , 0);
		СтруктураПолейТЧ.Вставить("СуммаНДС" , 0);
		СтруктураПолейТЧ.Вставить("СуммаСНДС", 0);
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьСуммуБезНДС") Тогда
		СтруктураПолейТЧ.Вставить("Сумма"    , 0);
		СтруктураПолейТЧ.Вставить("СуммаНДС" , 0);
		СтруктураПолейТЧ.Вставить("СуммаБезНДС", 0);
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьСуммуРегл") Тогда
		СтруктураПолейТЧ.Вставить("СуммаРегл"    , 0);
		СтруктураПолейТЧ.Вставить("СуммаБезНДС", 0);
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьНДСРегл") Тогда
		СтруктураПолейТЧ.Вставить("СуммаНДС" , 0);
		СтруктураПолейТЧ.Вставить("НДСРегл", 0);
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьСумму") Тогда
		СтруктураПолейТЧ.Вставить("Сумма"             , 0);
		СтруктураПолейТЧ.Вставить("Цена"              , 0);
		СтруктураПолейТЧ.Вставить(?(ПустаяСтрока(СтруктураДействий.ПересчитатьСумму),"КоличествоУпаковок",СтруктураДействий.ПересчитатьСумму), 0);
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьСуммуСУчетомРучнойСкидки") Тогда
		СтруктураПолейТЧ.Вставить("Сумма"              , 0);
		СтруктураПолейТЧ.Вставить("Количество"         , 0);
		СтруктураПолейТЧ.Вставить("Цена      "         , 0);
		СтруктураПолейТЧ.Вставить("СуммаРучнойСкидки"  , 0);
		СтруктураПолейТЧ.Вставить("ПроцентРучнойСкидки", 0);
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьСуммуСУчетомАвтоматическойСкидки") Тогда
		СтруктураПолейТЧ.Вставить("Сумма"                      , 0);
		СтруктураПолейТЧ.Вставить("СуммаАвтоматическойСкидки"  , 0);
		СтруктураПолейТЧ.Вставить("ПроцентАвтоматическойСкидки", 0);
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьСуммуСУчетомСкидкиБонуснымиБаллами") Тогда
		СтруктураПолейТЧ.Вставить("Сумма"                      , 0);
		СтруктураПолейТЧ.Вставить("СуммаБонусныхБалловКСписаниюВВалюте"  , 0);
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьЦенуЗаУпаковку") Тогда
		СтруктураПолейТЧ.Вставить("Цена"      , 0);
		СтруктураПолейТЧ.Вставить("Количество", 0);
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьЦенуЗаказаЗаУпаковку") Тогда
		СтруктураПолейТЧ.Вставить("ЦенаЗаказа"      , 0);
		СтруктураПолейТЧ.Вставить("Количество", 0);
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьСуммуСверхЗаказа") Тогда
		СтруктураПолейТЧ.Вставить("СуммаСНДС" , 0);
		СтруктураПолейТЧ.Вставить("СуммаСверхЗаказа", 0);
		СтруктураПолейТЧ.Вставить("КодСтроки", 1);
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьЦенуСкидкуПоСуммеВПродажах") Тогда
		СтруктураПолейТЧ.Вставить("Цена"                       , 0);
		СтруктураПолейТЧ.Вставить("Сумма"                      , 0);
		СтруктураПолейТЧ.Вставить("СуммаАвтоматическойСкидки"  , 0);
		СтруктураПолейТЧ.Вставить("ПроцентАвтоматическойСкидки", 0);
		СтруктураПолейТЧ.Вставить("СуммаРучнойСкидки"          , 0);
		СтруктураПолейТЧ.Вставить("ПроцентРучнойСкидки"        , 0);
		СтруктураПолейТЧ.Вставить("КоличествоУпаковок "        , 0);
		СтруктураПолейТЧ.Вставить("Количество"  			   , 0);
		СтруктураПолейТЧ.Вставить("ВидЦены");
		Если СтруктураДействий.ПересчитатьЦенуСкидкуПоСуммеВПродажах.Свойство("ИспользоватьБонусныеБаллы") Тогда
			СтруктураПолейТЧ.Вставить("СуммаБонусныхБалловКСписаниюВВалюте"  , 0);
		КонецЕсли;
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьЦенуСкидкуПоСуммеВЗакупках") Тогда
		СтруктураПолейТЧ.Вставить("Цена"                       , 0);
		СтруктураПолейТЧ.Вставить("Сумма"                      , 0);
		СтруктураПолейТЧ.Вставить("СуммаРучнойСкидки"          , 0);
		СтруктураПолейТЧ.Вставить("ПроцентРучнойСкидки"        , 0);
		СтруктураПолейТЧ.Вставить("КоличествоУпаковок "        , 0);
		СтруктураПолейТЧ.Вставить("Количество"   		       , 0);
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьКоличествоУпаковок") Тогда
		СтруктураПолейТЧ.Вставить("Упаковка");
		СтруктураПолейТЧ.Вставить("КоличествоУпаковокПоДаннымУчета", 0);
		СтруктураПолейТЧ.Вставить("КоличествоПоДаннымУчета"        , 0);
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПроверитьЗаполнитьСклад", СтруктураПараметровДействия) Тогда

		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("ТипНоменклатуры");

		ИмяПоляСклад = "Склад";
		Если ТипЗнч(СтруктураПараметровДействия) = Тип("Структура")
			И СтруктураПараметровДействия.Свойство("ИмяПоляСклад") Тогда
			ИмяПоляСклад = СтруктураПараметровДействия.ИмяПоляСклад;
		КонецЕсли;
		СтруктураПолейТЧ.Вставить(ИмяПоляСклад);

	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьУсловияПродаж") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Характеристика");
		СтруктураПолейТЧ.Вставить("Серия");
		СтруктураПолейТЧ.Вставить("Упаковка");
		СтруктураПолейТЧ.Вставить("Цена", 0);
		СтруктураПолейТЧ.Вставить("ВидЦены");
		СтруктураПолейТЧ.Вставить("СтавкаНДС");
		СтруктураПолейТЧ.Вставить("СрокПоставки");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьУсловияРозничныхПродаж") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Характеристика");
		СтруктураПолейТЧ.Вставить("Серия");
		СтруктураПолейТЧ.Вставить("Упаковка");
		СтруктураПолейТЧ.Вставить("Цена", 0);
		СтруктураПолейТЧ.Вставить("СтавкаНДС");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьУсловияПродажУслуги") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Характеристика");
		СтруктураПолейТЧ.Вставить("Цена", 0);
		СтруктураПолейТЧ.Вставить("ВидЦены");
		СтруктураПолейТЧ.Вставить("СтавкаНДС");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьРеквизитыПоНоменклатуре") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("ВестиУчетПоГТД");
		СтруктураПолейТЧ.Вставить("ЭтоУслуга");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакТипНоменклатуры", СтруктураПараметровДействия) 
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда

		Для Каждого Поле Из СтруктураПараметровДействия Цикл
			СтруктураПолейТЧ.Вставить(Поле.Ключ);
			СтруктураПолейТЧ.Вставить(Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакВидНоменклатуры", СтруктураПараметровДействия) 
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда

		Для Каждого Поле Из СтруктураПараметровДействия Цикл
			СтруктураПолейТЧ.Вставить(Поле.Ключ);
			СтруктураПолейТЧ.Вставить(Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакКод", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда

		Для Каждого Поле Из СтруктураПараметровДействия Цикл
			СтруктураПолейТЧ.Вставить(Поле.Ключ);
			СтруктураПолейТЧ.Вставить(Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакОписание", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда

		Для Каждого Поле Из СтруктураПараметровДействия Цикл
			СтруктураПолейТЧ.Вставить(Поле.Ключ);
			СтруктураПолейТЧ.Вставить(Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакЕдиницаИзмерения", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда

		Для Каждого Поле Из СтруктураПараметровДействия Цикл
			СтруктураПолейТЧ.Вставить(Поле.Ключ);
			СтруктураПолейТЧ.Вставить(Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакТипИзмеряемойВеличины", СтруктураПараметровДействия) 
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда

		Для Каждого Поле Из СтруктураПараметровДействия Цикл
			СтруктураПолейТЧ.Вставить(Поле.Ключ);
			СтруктураПолейТЧ.Вставить(Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьВесУпаковки") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Упаковка");
		СтруктураПолейТЧ.Вставить("ВесУпаковки");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьОбъемУпаковки") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Упаковка");
		СтруктураПолейТЧ.Вставить("ОбъемУпаковки");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьЕдиницуИзмеренияВеса") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Упаковка");
		СтруктураПолейТЧ.Вставить("ЕдиницаИзмеренияВеса");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьЕдиницуИзмеренияОбъема") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Упаковка");
		СтруктураПолейТЧ.Вставить("ЕдиницаИзмеренияОбъема");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакСерииИспользуются", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда

		Для Каждого Поле Из СтруктураПараметровДействия Цикл
			СтруктураПолейТЧ.Вставить(Поле.Ключ);
			СтруктураПолейТЧ.Вставить(Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакХарактеристикиИспользуются", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда

		Для Каждого Поле Из СтруктураПараметровДействия Цикл
			СтруктураПолейТЧ.Вставить(Поле.Ключ);
			СтруктураПолейТЧ.Вставить(Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакВедетсяУчетПоГТД", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда

		Для Каждого Поле Из СтруктураПараметровДействия Цикл
			СтруктураПолейТЧ.Вставить(Поле.Ключ);
			СтруктураПолейТЧ.Вставить(Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьСтрануПроисхожденияНоменклатуры", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда

		СтруктураПолейТЧ.Вставить("ВедетсяУчетПоГТД");
		СтруктураПолейТЧ.Вставить("СтранаПроисхождения");

		Для Каждого Поле Из СтруктураПараметровДействия Цикл
			СтруктураПолейТЧ.Вставить(Поле.Значение);
		КонецЦикла;

	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакВедетсяУчетПоРНПТ", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда

		Для Каждого Поле Из СтруктураПараметровДействия Цикл
			СтруктураПолейТЧ.Вставить(Поле.Ключ);
			СтруктураПолейТЧ.Вставить(Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьТипНомераГТД", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда

		СтруктураПолейТЧ.Вставить("НомерГТД");
		СтруктураПолейТЧ.Вставить("ТипНомераГТД");

	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакЭтоУслуга", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда

		Для Каждого Поле Из СтруктураПараметровДействия Цикл
			СтруктураПолейТЧ.Вставить(Поле.Ключ);
			СтруктураПолейТЧ.Вставить(Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	Если СтруктураДействий.Свойство("УстановитьАктивность") Тогда
		СтруктураПолейТЧ.Вставить("Активность");
		СтруктураПолейТЧ.Вставить("ИндексКартинки");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьХарактеристикуНекачественногоТовара") 
		ИЛИ СтруктураДействий.Свойство("ЗаполнитьУпаковкуНекачественногоТовара") Тогда
		СтруктураПолейТЧ.Вставить("НоменклатураИсходногоКачества");
		СтруктураПолейТЧ.Вставить("ХарактеристикиИспользуются");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПроверитьЗаполнитьВариантКомплектацииПоВладельцу") Тогда

		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Характеристика");
		СтруктураПолейТЧ.Вставить("ВариантКомплектации");
		СтруктураПолейТЧ.Вставить("ХарактеристикиИспользуются");

	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьФлагРасхождение") Тогда

		СтруктураПолейТЧ.Вставить("Расхождение");
		СтруктураПолейТЧ.Вставить("КоличествоУпаковок");
		СтруктураПолейТЧ.Вставить("КоличествоУпаковокФакт");

	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьСуммуРасхождения") Тогда

		СтруктураПолейТЧ.Вставить("Цена");
		СтруктураПолейТЧ.Вставить("КоличествоУпаковок");
		СтруктураПолейТЧ.Вставить("КоличествоУпаковокПоДокументу");
		СтруктураПолейТЧ.Вставить("Сумма");
		СтруктураПолейТЧ.Вставить("СуммаПоДокументу");

	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьКоличествоУпаковокОтклонение") Тогда

		СтруктураПолейТЧ.Вставить("КоличествоУпаковокОтклонение");
		СтруктураПолейТЧ.Вставить("КоличествоУпаковок");
		СтруктураПолейТЧ.Вставить("КоличествоУпаковокФакт");

	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьФлагИзлишекПорча") Тогда

		СтруктураПолейТЧ.Вставить("ИзлишекПорча");

	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьФлагИзлишекПорча") Тогда

		СтруктураПолейТЧ.Вставить("ИзлишекПорча");

	КонецЕсли;

	Если СтруктураДействий.Свойство("ОчиститьСуммуВзаиморасчетов") Тогда

		СтруктураПолейТЧ.Вставить("СуммаВзаиморасчетов");

	КонецЕсли;

	Если СтруктураДействий.Свойство("ОчиститьАвтоматическуюСкидку") Тогда

		СтруктураПолейТЧ.Вставить("ПроцентАвтоматическойСкидки");
		СтруктураПолейТЧ.Вставить("СуммаАвтоматическойСкидки");

	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьСодержание") Тогда
		СтруктураПолейТЧ.Вставить("Содержание");
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Характеристика");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьДубликатыЗависимыхРеквизитов", СтруктураПараметровДействия) Тогда
		Для Каждого ПолеСтруктуры Из СтруктураПараметровДействия Цикл
			СтруктураПолейТЧ.Вставить(ПолеСтруктуры.Ключ);
			ЗависимыеРеквизиты = Новый Структура(ПолеСтруктуры.Значение);
			Для Каждого Реквизит Из ЗависимыеРеквизиты Цикл
				СтруктураПолейТЧ.Вставить(Реквизит.Ключ+ПолеСтруктуры.Ключ, 0);
				СтруктураПолейТЧ.Вставить(Реквизит.Ключ, 0);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;

	Если СтруктураДействий.Свойство("ОчиститьСуммуВознаграждения") Тогда
		СтруктураПолейТЧ.Вставить("СуммаВознаграждения");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьСтатьюАналитикуРасходовНоменклатуры", СтруктураПараметровДействия) Тогда

		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить(СтруктураПараметровДействия.СтатьяРасходов);
		СтруктураПолейТЧ.Вставить(СтруктураПараметровДействия.АналитикаРасходов);

		Для каждого Колонка Из СтруктураПараметровДействия.ДополнительныеКолонки Цикл
			СтруктураПолейТЧ.Вставить(Колонка);
		КонецЦикла;

	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакВариантОформленияПродажи") Тогда
		СтруктураПолейТЧ.Вставить("ВариантОформленияПродажи");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакПодакцизныйТовар", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда

		Для Каждого Поле Из СтруктураПараметровДействия Цикл
			СтруктураПолейТЧ.Вставить(Поле.Ключ);
			СтруктураПолейТЧ.Вставить(Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьКоличествоНеОтгружать") Тогда
		СтруктураПолейТЧ.Вставить("КоличествоУпаковок");
		СтруктураПолейТЧ.Вставить("КоличествоУпаковокВДокументе");
		СтруктураПолейТЧ.Вставить("КоличествоУпаковокНеОтгружать");
		СтруктураПолейТЧ.Вставить("КоличествоУпаковокВДокументеНеотгружаемые");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьСуммуПродажи") Тогда
		СтруктураПолейТЧ.Вставить("ЦенаПродажи");
		СтруктураПолейТЧ.Вставить("СуммаПродажи");
		СтруктураПолейТЧ.Вставить("СуммаПродажиНДС");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПроверитьЗаполнитьОбеспечениеВДокументеПродажи") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Характеристика");
		СтруктураПолейТЧ.Вставить("ВариантОбеспечения");
		СтруктураПолейТЧ.Вставить("ДатаОтгрузки");
		СтруктураПолейТЧ.Вставить("Склад");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПроверитьЗаполнитьОбеспечениеВДокументеПродажи") Тогда

		ПараметрыДействия = СтруктураДействий.ПроверитьЗаполнитьОбеспечениеВДокументеПродажи;

		Если Не СтруктураПолейТЧ.Свойство("ДанныеПрограммногоОбъекта") Тогда

			ДанныеПрограммногоОбъекта = ОбеспечениеВДокументахКлиентСервер.ДанныеПрограммногоОбъекта(
			ПараметрыДействия,
			ТекущаяСтрока);

			// Эти данные нужно подать на вход серверной процедуры
			СтруктураПолейТЧ.Вставить("ДанныеПрограммногоОбъекта", ДанныеПрограммногоОбъекта);

		КонецЕсли;

		ПараметрыДействия.Удалить("Форма");

		// Эти поля будут заполнены серверной процедурой
		СтруктураПолейТЧ.Вставить("ВариантОбеспечения");
		СтруктураПолейТЧ.Вставить("Обособленно");

	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьКолонкуДоступно") Тогда

		ПараметрыДействия = СтруктураДействий.ЗаполнитьКолонкуДоступно;

		Если Не СтруктураПолейТЧ.Свойство("ДанныеПрограммногоОбъекта") Тогда

			ДанныеПрограммногоОбъекта = ОбеспечениеВДокументахКлиентСервер.ДанныеПрограммногоОбъекта(
			ПараметрыДействия,
			ТекущаяСтрока);

			// Эти данные нужно подать на вход серверной процедуры
			СтруктураПолейТЧ.Вставить("ДанныеПрограммногоОбъекта", ДанныеПрограммногоОбъекта);

		КонецЕсли;

		ПараметрыДействия.Удалить("Форма");

		// Эти поля будут заполнены серверной процедурой
		СтруктураПолейТЧ.Вставить("Доступно");
		СтруктураПолейТЧ.Вставить("ПерераспределятьЗапасы");
		СтруктураПолейТЧ.Вставить("ОтгружатьЕслиДоступно");

	КонецЕсли;

	//++ НЕ УТКА
	Если СтруктураДействий.Свойство("ПроверитьЗаполнитьОбеспечениеВЭтапеПроизводства", СтруктураПараметровДействия) Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Характеристика");
		СтруктураПолейТЧ.Вставить("Назначение");
		СтруктураПолейТЧ.Вставить("ВариантОбеспечения");
		СтруктураПолейТЧ.Вставить("Обособленно");
		СтруктураПолейТЧ.Вставить("ДатаОтгрузки");
		СтруктураПолейТЧ.Вставить("Склад");
		СтруктураПолейТЧ.Вставить("Производится");
		СтруктураПолейТЧ.Вставить("Спецификация");
		СтруктураПолейТЧ.Вставить("Склад");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПроверитьЗаполнитьСкладПроизводства", СтруктураПараметровДействия) Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Характеристика");
		СписокПолей = СтрРазделить(СтруктураПараметровДействия.ИмяПоляСклад, ",");
		Для каждого ИмяПоляСклад Из СписокПолей Цикл
			СтруктураПолейТЧ.Вставить(ИмяПоляСклад);
		КонецЦикла;
	КонецЕсли;
	//-- НЕ УТКА

	Если СтруктураДействий.Свойство("ПересчитатьУчетноеКоличествоНоменклатуры")
		ИЛИ СтруктураДействий.Свойство("ПересчитатьКоличествоУпаковокПоФакту") Тогда
		СтруктураПолейТЧ.Вставить("КоличествоУпаковокФакт");
		СтруктураПолейТЧ.Вставить("КоличествоУпаковокУчет");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьУчетноеКоличествоНоменклатуры") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Характеристика");
		СтруктураПолейТЧ.Вставить("КоличествоУпаковокФакт");
		СтруктураПолейТЧ.Вставить("КоличествоУпаковокУчет");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакНаличияНоменклатурыПродаваемойСовместно") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Характеристика");
		СтруктураПолейТЧ.Вставить("ИндексСовместноПродаваемыеТовары");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПроверитьАссортиментСтроки") Тогда
		СтруктураПолейТЧ.Вставить("НомерСтроки");
		СтруктураПолейТЧ.Вставить("Номенклатура");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакБезВозвратнойТары", СтруктураПараметровДействия)  Тогда

		СтруктураПолейТЧ.Вставить("ТипНоменклатуры");
		СтруктураПолейТЧ.Вставить("БезВозвратнойТары");

	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакОтмененоБезВозвратнойТары", СтруктураПараметровДействия)  Тогда

		СтруктураПолейТЧ.Вставить("ТипНоменклатуры");
		СтруктураПолейТЧ.Вставить("ОтмененоБезВозвратнойТары");
		СтруктураПолейТЧ.Вставить("Отменено");

	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакАктивностьБезВозвратнойТары", СтруктураПараметровДействия)  Тогда

		СтруктураПолейТЧ.Вставить("ТипНоменклатуры");
		СтруктураПолейТЧ.Вставить("АктивностьБезВозвратнойТары");
		СтруктураПолейТЧ.Вставить("Активность");

	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакАртикул", СтруктураПараметровДействия) 
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда

		Для Каждого Поле Из СтруктураПараметровДействия Цикл
			СтруктураПолейТЧ.Вставить(Поле.Ключ);
			СтруктураПолейТЧ.Вставить(Поле.Значение);
		КонецЦикла; 
		#Вставка
		//++ Конарев Формирование артикула по новому правилу
		СтруктураПолейТЧ.Вставить("Характеристика");
		СтруктураПолейТЧ.Вставить("Серия"); 
		#КонецВставки
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакКод", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда

		Для Каждого Поле Из СтруктураПараметровДействия Цикл
			СтруктураПолейТЧ.Вставить(Поле.Ключ);
			СтруктураПолейТЧ.Вставить(Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакОписание", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда

		Для Каждого Поле Из СтруктураПараметровДействия Цикл
			СтруктураПолейТЧ.Вставить(Поле.Ключ);
			СтруктураПолейТЧ.Вставить(Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	//++ НЕ УТ
	Если СтруктураДействий.Свойство("ЗаполнитьЦенуПередачиПродукцииДавальцу") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Характеристика");
		СтруктураПолейТЧ.Вставить("Серия");
		СтруктураПолейТЧ.Вставить("Упаковка");
		СтруктураПолейТЧ.Вставить("ВидЦены");
		СтруктураПолейТЧ.Вставить("Цена", 0);
	КонецЕсли;
	//-- НЕ УТ

	//++ НЕ УТКА
	Если СтруктураДействий.Свойство("ПроверитьЗаполнитьЦенуВыпуска") Тогда
		СтруктураПолейТЧ.Вставить("ИспользоватьПлановуюСтоимость", Истина);
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Характеристика");
		СтруктураПолейТЧ.Вставить("Серия");
		СтруктураПолейТЧ.Вставить("Упаковка");
		СтруктураПолейТЧ.Вставить("Произведено");
		СтруктураПолейТЧ.Вставить("Цена", 0);
	КонецЕсли;

	Если СтруктураДействий.Свойство("УстановитьПризнакИспользованияПлановойСтоимости") Тогда
		СтруктураПолейТЧ.Вставить("Цена", 0);
		СтруктураПолейТЧ.Вставить("Сумма", 0);
		СтруктураПолейТЧ.Вставить("ИспользоватьПлановуюСтоимость", Ложь);
		СтруктураПолейТЧ.Вставить("ДатаПроизводства");
	КонецЕсли;		
	//-- НЕ УТКА

	Если СтруктураДействий.Свойство("ЗаполнитьПомещение", СтруктураПараметровДействия)  Тогда

		СтруктураПолейТЧ.Вставить("Помещение");

	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПродавца", СтруктураПараметровДействия)  Тогда

		СтруктураПолейТЧ.Вставить("Продавец");

	КонецЕсли;

	Если СтруктураДействий.Свойство("ПроверитьСериюРассчитатьСтатус",СтруктураПараметровДействия) Тогда

		Если СтруктураПараметровДействия.ПараметрыУказанияСерий.ИменаПолейСтатусУказанияСерий.Количество() = 0 Тогда
			СтруктураПолейТЧ.Вставить("Серия");
			СтруктураПолейТЧ.Вставить("Номенклатура");
			СтруктураПолейТЧ.Вставить("Характеристика");

			СтруктураПолейТЧ.Вставить("СтатусУказанияСерий");
		Иначе
			Для Каждого ИмяПоляСтатус Из СтруктураПараметровДействия.ПараметрыУказанияСерий.ИменаПолейСтатусУказанияСерий Цикл
				ИменаПолей = ИменаПолейПоСтатусуУказанияСерий(ИмяПоляСтатус);
				СтруктураПолейТЧ.Вставить(ИмяПоляСтатус);
				Если ТекущаяСтрока.Свойство(ИменаПолей.Серия) Тогда
					СтруктураПолейТЧ.Вставить(ИменаПолей.Серия);
					СтруктураПолейТЧ.Вставить(ИменаПолей.Номенклатура);
					СтруктураПолейТЧ.Вставить(ИменаПолей.Характеристика);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;

		Для Каждого СтрМас Из СтруктураПараметровДействия.ПараметрыУказанияСерий.ПоляСвязи Цикл
			СтруктураПолейТЧ.Вставить(СтрМас);
		КонецЦикла;

		Для Каждого СтрМас Из СтруктураПараметровДействия.ПараметрыУказанияСерий.ИменаПолейДополнительные Цикл
			СтруктураПолейТЧ.Вставить(СтрМас);
		КонецЦикла;

		Если СтруктураПараметровДействия.ПараметрыУказанияСерий.ЭтоЗаказ Тогда
			СтруктураПолейТЧ.Вставить("Отменено");
			СтруктураПолейТЧ.Вставить("ВариантОбеспечения");
		КонецЕсли;

		Если ЗначениеЗаполнено(СтруктураПараметровДействия.ПараметрыУказанияСерий.ИмяПоляКоличество) Тогда
			СтруктураПолейТЧ.Вставить(СтруктураПараметровДействия.ПараметрыУказанияСерий.ИмяПоляКоличество, 0);
		КонецЕсли;

		Если ТекущаяСтрока.Свойство("Назначение") Тогда
			СтруктураПолейТЧ.Вставить("Назначение");
		КонецЕсли;

	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьРасхожденияПослеОтгрузки") Тогда
		СтруктураПолейТЧ.Вставить("КоличествоУпаковокРасхождения");
		СтруктураПолейТЧ.Вставить("СуммаРасхождения");
		СтруктураПолейТЧ.Вставить("СуммаНДСРасхождения");
		СтруктураПолейТЧ.Вставить("СуммаСНДСРасхождения");

		СтруктураПолейТЧ.Вставить("КоличествоУпаковокПоДокументу");
		СтруктураПолейТЧ.Вставить("КоличествоПоДокументу");
		СтруктураПолейТЧ.Вставить("СуммаПоДокументу");
		СтруктураПолейТЧ.Вставить("СуммаНДСПоДокументу");
		СтруктураПолейТЧ.Вставить("СуммаСНДСПоДокументу");
		СтруктураПолейТЧ.Вставить("ЕстьРасхождения");
		СтруктураПолейТЧ.Вставить("Действие");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьРасхожденияПослеПриемки") Тогда
		СтруктураПолейТЧ.Вставить("КоличествоУпаковокРасхождения");
		СтруктураПолейТЧ.Вставить("СуммаРасхождения");
		СтруктураПолейТЧ.Вставить("СуммаНДСРасхождения");
		СтруктураПолейТЧ.Вставить("СуммаСНДСРасхождения");

		СтруктураПолейТЧ.Вставить("Цена");
		СтруктураПолейТЧ.Вставить("СтавкаНДС");

		СтруктураПолейТЧ.Вставить("КоличествоУпаковокПоДокументу");
		СтруктураПолейТЧ.Вставить("КоличествоУпаковок");
		СтруктураПолейТЧ.Вставить("КоличествоПоДокументу");
		СтруктураПолейТЧ.Вставить("Количество");
		СтруктураПолейТЧ.Вставить("СуммаПоДокументу");
		СтруктураПолейТЧ.Вставить("Сумма");
		СтруктураПолейТЧ.Вставить("СуммаНДСПоДокументу");
		СтруктураПолейТЧ.Вставить("СуммаНДС");
		СтруктураПолейТЧ.Вставить("СуммаСНДСПоДокументу");
		СтруктураПолейТЧ.Вставить("СуммаСНДС");
		СтруктураПолейТЧ.Вставить("ЕстьРасхождения");
		СтруктураПолейТЧ.Вставить("Действие");
		СтруктураПолейТЧ.Вставить("ПоВинеСтороннейКомпании");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьРасхождения") Тогда
		СтруктураПолейТЧ.Вставить("КоличествоУпаковокРасхождения");
		СтруктураПолейТЧ.Вставить("КоличествоУпаковокПоДокументу");
		СтруктураПолейТЧ.Вставить("КоличествоПоДокументу");
		СтруктураПолейТЧ.Вставить("ЕстьРасхождения");
		СтруктураПолейТЧ.Вставить("Действие");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакТовМестаТребуетсяОбработка") Тогда
		СтруктураПолейТЧ.Вставить("Штрихкод");
		СтруктураПолейТЧ.Вставить("ШтрихкодНеОпределен");
		СтруктураПолейТЧ.Вставить("ЭтоУпаковочныйЛист");
		СтруктураПолейТЧ.Вставить("УпаковочныйЛист");
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("КоличествоЗаполненныхПодчиненныхПозиций");
		СтруктураПолейТЧ.Вставить("ТребуетсяОбработка");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПроверитьЗаполнитьНазначение") Тогда
		СтруктураПолейТЧ.Вставить("Назначение");
		СтруктураПолейТЧ.Вставить("ТипНоменклатуры");
	КонецЕсли;
	ИмяРеквизитаОтгружатьОбособленно = Неопределено;
	Если СтруктураДействий.Свойство("ЗаполнитьФлагОбособленноПоНазначению", ИмяРеквизитаОтгружатьОбособленно) Тогда
		СтруктураПолейТЧ.Вставить("Назначение");
		СтруктураПолейТЧ.Вставить(ИмяРеквизитаОтгружатьОбособленно);
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПриИзмененииНазначения") Тогда
		СтруктураПолейТЧ.Вставить("Назначение");
		СтруктураПолейТЧ.Вставить("НазначениеОтправителя");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакиКатегорииЭксплуатации") Тогда
		СтруктураПолейТЧ.Вставить("КатегорияЭксплуатации");
		СтруктураПолейТЧ.Вставить("ИнвентарныйУчет");
		СтруктураПолейТЧ.Вставить("УчетПоФизЛицам");
		СтруктураПолейТЧ.Вставить("УчитыватьВВидеГрупповогоОС");
		СтруктураПолейТЧ.Вставить("СпособПогашенияСтоимостиБУ");
		СтруктураПолейТЧ.Вставить("СтатьяРасходов");
		СтруктураПолейТЧ.Вставить("СрокЭксплуатации");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакДвиженияПоСкладскимРегистрам", СтруктураПараметровДействия) Тогда
		СтруктураПолейТЧ.Вставить(СтруктураПараметровДействия);
	КонецЕсли;

	ПризнакНазначения = Неопределено;
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакНазначения", ПризнакНазначения) Тогда
		СтруктураПолейТЧ.Вставить(ПризнакНазначения);
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПриИзмененииТипаНоменклатуры") Тогда

		СтруктураПолейТЧ.Вставить("ТипНоменклатуры");
		СтруктураПолейТЧ.Вставить("Отменено");
		СтруктураПолейТЧ.Вставить("СкладОбязателен");

	КонецЕсли;

	Если СтруктураДействий.Свойство("ПриИзмененииТипаНоменклатурыИлиВариантаОбеспечения") Тогда

		ПараметрыДействия = СтруктураДействий.ПриИзмененииТипаНоменклатурыИлиВариантаОбеспечения;

		Если Не СтруктураПолейТЧ.Свойство("ДанныеПрограммногоОбъекта") Тогда

			ДанныеПрограммногоОбъекта = ОбеспечениеВДокументахКлиентСервер.ДанныеПрограммногоОбъекта(
			ПараметрыДействия,
			ТекущаяСтрока);

			// Эти данные нужно подать на вход серверной процедуры
			СтруктураПолейТЧ.Вставить("ДанныеПрограммногоОбъекта", ДанныеПрограммногоОбъекта);

		КонецЕсли;
		ПараметрыДействия.Удалить("Форма");

		// Эти данные нужно подать на вход серверной процедуры.
		СтруктураПолейТЧ.Вставить("ТипНоменклатуры");
		СтруктураПолейТЧ.Вставить("Отменено");
		СтруктураПолейТЧ.Вставить("ВариантОбеспечения");

		// Эти поля будут заполнены серверной процедурой.
		СтруктураПолейТЧ.Вставить("ДатаОтгрузкиОбязательна");
		СтруктураПолейТЧ.Вставить("СкладОбязателен");

	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьСуммуУслугиЗаказДавальца") Тогда

		СтруктураПолейТЧ.Вставить("СуммаУслуги"       , 0);
		СтруктураПолейТЧ.Вставить("Цена"              , 0);
		СтруктураПолейТЧ.Вставить(?(ПустаяСтрока(СтруктураДействий.ПересчитатьСуммуЗаказДавальца),"КоличествоУпаковок",СтруктураДействий.ПересчитатьСуммуЗаказДавальца), 0);

	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьСуммуЗаказДавальца") Тогда

		СтруктураПолейТЧ.Вставить("СуммаУслуги",                0);
		СтруктураПолейТЧ.Вставить("СуммаСобственныхМатериалов", 0);
		СтруктураПолейТЧ.Вставить("Сумма",                      0);

	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьВариантОтраженияКорректировкиРеализации") Тогда

		СтруктураПолейТЧ.Вставить("ВариантОтражения");

	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьСтрануПроисхожденияДляНомераГТД") Тогда
		СтруктураПолейТЧ.Вставить("СтранаПроисхождения");
	КонецЕсли;

	//++ НЕ УТ
	Если СтруктураДействий.Свойство("ПроверитьЗаполнитьСпецификацию", СтруктураПараметровДействия) Тогда

		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Характеристика");
		СтруктураПолейТЧ.Вставить("ХарактеристикиИспользуются");

		СтруктураПолейТЧ.Вставить("Производится");
		СтруктураПолейТЧ.Вставить(СтруктураПараметровДействия.ИмяПоляСпецификация);

	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьДатуПроизводства") Тогда
		СтруктураПолейТЧ.Вставить("Отменено");
		СтруктураПолейТЧ.Вставить("Произведено");
		СтруктураПолейТЧ.Вставить("ДатаПроизводства");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПризнакЦеховаяКладовая", СтруктураПараметровДействия) Тогда

		СтруктураПолейТЧ.Вставить( 
		?(СтруктураПараметровДействия <> Неопределено И СтруктураПараметровДействия.Свойство("ИмяПоляСклад"), 
		СтруктураПараметровДействия.ИмяПоляСклад,
		"Склад"));

		СтруктураПолейТЧ.Вставить("ЦеховаяКладовая");
		СтруктураПолейТЧ.Вставить("Подразделение");

		Если ТекущаяСтрока.Свойство("НужноОкруглять") Тогда
			СтруктураПолейТЧ.Вставить("НужноОкруглять");	
		КонецЕсли;

	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьНаправлениеВыпуска", СтруктураПараметровДействия) Тогда
		СтруктураПолейТЧ.Вставить("НаправлениеВыпуска");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПолучателяПоНаправлениюВыпуска", СтруктураПараметровДействия) Тогда
		СтруктураПолейТЧ.Вставить("НаправлениеВыпуска");
		СтруктураПолейТЧ.Вставить("Получатель");	
	КонецЕсли;	
	//-- НЕ УТ

	//++ НЕ УТКА
	Если СтруктураДействий.Свойство("ПроверитьЗаполнитьКлючСвязиСпецификации") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Характеристика");
		СтруктураПолейТЧ.Вставить("КлючСвязиСпецификация");
	КонецЕсли;
	//-- НЕ УТКА

	//++ НЕ УТ
	Если СтруктураДействий.Свойство("ПроверитьЗаполнитьДолюСтоимости", СтруктураПараметровДействия)
		ИЛИ СтруктураДействий.Свойство("ПересчитатьДолюСтоимости", СтруктураПараметровДействия) Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Характеристика");
		СтруктураПолейТЧ.Вставить("Серия");
		СтруктураПолейТЧ.Вставить("Упаковка");
		СтруктураПолейТЧ.Вставить("КоличествоУпаковок");
		СтруктураПолейТЧ.Вставить("Количество");
		СтруктураПолейТЧ.Вставить("ДоляСтоимости");
		СтруктураПолейТЧ.Вставить("ДоляСтоимостиНаЕдиницу");
		Если ЗначениеЗаполнено(СтруктураПараметровДействия.ИмяПоляСпособРаспределенияЗатратНаВыходныеИзделия) Тогда
			СтруктураПолейТЧ.Вставить(СтруктураПараметровДействия.ИмяПоляСпособРаспределенияЗатратНаВыходныеИзделия);
		КонецЕсли;
	КонецЕсли;
	//-- НЕ УТ

	//++ НЕ УТКА
	Если СтруктураДействий.Свойство("ЗаполнитьНазначениеМатериалыВСтрокеСверхЗаказа") Тогда

		СтруктураПолейТЧ.Вставить("ЗаказДавальца");
		СтруктураПолейТЧ.Вставить("Назначение");
		СтруктураПолейТЧ.Вставить("КодСтроки");
		СтруктураПолейТЧ.Вставить("ТипНоменклатуры");

	КонецЕсли;
	//-- НЕ УТКА

	//++ НЕ УТ
	Если СтруктураДействий.Свойство("ПересчитатьСуммуРегл") Тогда
		СтруктураПолейТЧ.Вставить("СуммаБезНДС");
		СтруктураПолейТЧ.Вставить("СуммаРегл");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьСуммуПР") Тогда
		СтруктураПолейТЧ.Вставить("ПринимаетсяКНУ");
		СтруктураПолейТЧ.Вставить("СуммаРегл");
		СтруктураПолейТЧ.Вставить("СуммаПР");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьСуммуНУ") Тогда
		СтруктураПолейТЧ.Вставить("СуммаНУ");
		СтруктураПолейТЧ.Вставить("СуммаРегл");
		СтруктураПолейТЧ.Вставить("СуммаПР");
		СтруктураПолейТЧ.Вставить("СуммаВР");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьСуммуВР") Тогда
		СтруктураПолейТЧ.Вставить("СуммаВР");
		СтруктураПолейТЧ.Вставить("СуммаРегл");
		СтруктураПолейТЧ.Вставить("СуммаНУ");
		СтруктураПолейТЧ.Вставить("СуммаПР");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьВариантДействияДляМатериаловПоУмолчанию") Тогда
		СтруктураПолейТЧ.Вставить("Действие");
		СтруктураПолейТЧ.Вставить("ВариантОбеспечения");
	КонецЕсли;
	//-- НЕ УТ

	Если СтруктураДействий.Свойство("ЗаполнитьТипМестаХраненияПоУмолчанию") Тогда
		СтруктураПолейТЧ.Вставить("ТипМестаХранения");
	КонецЕсли;

	//++ НЕ УТКА
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакДоступноОформлениеОтчетаДавальцу") Тогда
		СтруктураПолейТЧ.Вставить("ДоступноОформлениеОтчетаДавальцу");
		СтруктураПолейТЧ.Вставить("ОформитьОтчетДавальцу");
		СтруктураПолейТЧ.Вставить("Назначение");
	КонецЕсли;
	//-- НЕ УТКА

	Если СтруктураДействий.Свойство("ЗаполнитьНаправлениеДеятельности", СтруктураПараметровДействия) Тогда
		СтруктураПолейТЧ.Вставить("НаправлениеДеятельности");
		СтруктураПолейТЧ.Вставить("Назначение");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьСлужебныеРеквизитыПоНазначению") Тогда

		СтруктураПолейТЧ.Вставить("Назначение");
		СтруктураПолейТЧ.Вставить("ТипНазначения");

	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьДанныеПоДокументуПриобретенияВОтчетеКомитентуОЗакупках") Тогда

		СтруктураПолейТЧ.Вставить("Поставщик");
		СтруктураПолейТЧ.Вставить("ТипДокументаПриобретения");

	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПодразделениеВСтрокеТЧ") Тогда

		СтруктураПолейТЧ.Вставить("Подразделение");

	КонецЕсли;

	Если СтруктураДействий.Свойство("ЗаполнитьПартиюТМЦВЭксплуатации") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Характеристика");
		СтруктураПолейТЧ.Вставить("ФизическоеЛицо");
		СтруктураПолейТЧ.Вставить("Партия");
		СтруктураПолейТЧ.Вставить("ИнвентарныйУчет");
		СтруктураПолейТЧ.Вставить("УчетПоФизЛицам");
		СтруктураПолейТЧ.Вставить("КоличествоУпаковок");
		СтруктураПолейТЧ.Вставить("Количество");
		СтруктураПолейТЧ.Вставить("Упаковка");
	КонецЕсли;

	ОбработкаТабличнойЧастиКлиентЛокализация.ПолучитьТекущуюСтрокуСтруктурой(СтруктураДействий, СтруктураПолейТЧ);

	ЗаполнитьЗначенияСвойств(СтруктураПолейТЧ, ТекущаяСтрока);

	Если Не ДополнительныеПараметрыЗаполнения = Неопределено Тогда
		ЗаполнитьЗначенияСвойств(СтруктураПолейТЧ, ДополнительныеПараметрыЗаполнения);
	КонецЕсли;

	Возврат СтруктураПолейТЧ;

КонецФункции
