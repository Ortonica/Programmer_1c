// Установить значение свойства
// РС Консалт, Трофимов Евгений, 25.07.2022 г.
//
// Параметры:
//  ВладелецСвойств	 - ЛюбаяСсылка - например, СправочникСсылка.Номенклатура, ДокументСсылка.ЗаказПокупателя и т.д.
//  Свойство		 - ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения - свойство владельца. 
//  Значение		 - Произвольный - любое значение, допустимое для свойства (указано в элементе свойства). 
//
Процедура УстановитьЗначениеСвойства(ВладелецСвойств, Свойство, Значение) Экспорт

	ТаблицаСвойствИЗначений = Новый ТаблицаЗначений;
	ТаблицаСвойствИЗначений.Колонки.Добавить("Свойство", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения"));
	ТаблицаСвойствИЗначений.Колонки.Добавить("Значение");
	
	НовСтр = ТаблицаСвойствИЗначений.Добавить();
	НовСтр.Свойство = Свойство;
	НовСтр.Значение = Значение;
	
	ЗаписатьСвойстваУОбъекта(ВладелецСвойств, ТаблицаСвойствИЗначений);

КонецПроцедуры

// Создать дополнительное сведение
// РС Консалт: Трофимов Евгений 29.08.2022
//
// Параметры:
//  Имя			 - Строка - Служебное уникальное имя доп.сведения
//  Наименование - Строка - Наименование для пользователей
//  Назначение	 - Строка - (необязательный) Значение реквизита «ИмяПредопределенногоНабора» справочника «Наборы дополнительных реквизитов и сведений»,
//							к которому привязано сведение, как оно задано в e1cib/list/Справочник.НаборыДополнительныхРеквизитовИСведений
//				 - СправочникСсылка.НаборыДополнительныхРеквизитовИСведений - элемент справочника «Наборы дополнительных реквизитов и сведений»		
//  ТипСвойства	 - ОписаниеТипов - (необязательный) По умолчанию ТипСвойства = Новый ОписаниеТипов("Строка");
//                          Может принимать значения типов, ограниченных списком, назначенном в ПВХ
//  Подсказка	 - Строка - (необязательный) Текст будет виден, при нажатии вопросительного знака в диалоге корректироки значения доп.сведения 
//
Процедура СоздатьДополнительноеСведение(Имя, Наименование, Назначение = "", ТипСвойства = Неопределено, Подсказка = "") Экспорт
	
	ДопРеквизит = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", Имя);
	Если ЗначениеЗаполнено(ДопРеквизит) Тогда
		ДопРеквизитОбъект = ДопРеквизит.ПолучитьОбъект();
	Иначе
		ДопРеквизитОбъект = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.СоздатьЭлемент();
		ДопРеквизитОбъект.Имя = Имя;
		ДопРеквизитОбъект.ИдентификаторДляФормул = Имя;
	КонецЕсли;
	
	ДопРеквизитОбъект.Наименование = Наименование;
	ДопРеквизитОбъект.Заголовок = Наименование;
	
	Если ТипЗнч(Назначение) = Тип("Строка") Тогда
		Если ПустаяСтрока(Назначение) Тогда
			ДопРеквизитОбъект.НаборСвойств = Неопределено;
		Иначе
			//В более ранних БСП можно было назначать предопределённое значение. Потом разработчики от них отказались.
			//Ничего более умного, как поиск по наименованию, не придумал.
			ДопРеквизитОбъект.НаборСвойств = Справочники.НаборыДополнительныхРеквизитовИСведений.НайтиПоРеквизиту(
				"ИмяПредопределенногоНабора", 
				Назначение
			);
		КонецЕсли;
	Иначе
		ДопРеквизитОбъект.НаборСвойств = Назначение;
	КонецЕсли;
	
	Если ТипСвойства = Неопределено Тогда
		ДопРеквизитОбъект.ТипЗначения = Новый ОписаниеТипов("Строка");
	Иначе
		ДопРеквизитОбъект.ТипЗначения = ТипСвойства;
	КонецЕсли;
	ДопРеквизитОбъект.Виден = Истина;
	ДопРеквизитОбъект.Доступен = Истина;
	ДопРеквизитОбъект.ЭтоДополнительноеСведение = Истина;
	ДопРеквизитОбъект.Подсказка = Подсказка;
	ДопРеквизитОбъект.Записать();
	
	Если ЗначениеЗаполнено(ДопРеквизитОбъект.НаборСвойств) Тогда
		ОбъектНаборСвойств = ДопРеквизитОбъект.НаборСвойств.ПолучитьОбъект();
		ТабличнаяЧасть = ОбъектНаборСвойств.ДополнительныеСведения;
		НайденнаяСтрока = ТабличнаяЧасть.Найти(ДопРеквизитОбъект.Ссылка, "Свойство");
		Если НайденнаяСтрока = Неопределено Тогда
			НоваяСтрока = ТабличнаяЧасть.Добавить();
			НоваяСтрока.Свойство = ДопРеквизитОбъект.Ссылка;
			ОбъектНаборСвойств.Записать();
		Иначе
			НайденнаяСтрока.Свойство = ДопРеквизитОбъект.Ссылка;
			ОбъектНаборСвойств.Записать();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Возвращает соответствие значений доп.свойств или реквизитов
// РС Консалт: Трофимов Евгений 17.08.2022
//
// Параметры:
//  ОбъектыСоСвойствами				 - Массив      - объекты, для которых нужно получить значения дополнительных свойств.
//                       			 - ЛюбаяСсылка - ссылка на объект, например, СправочникСсылка.Номенклатура,
//                                       ДокументСсылка.ЗаказПокупателя, ... 
//  ИспользоватьИдентификаторФормул	 - Булево - Если Истина, то в качестве ключа будет ИдентификаторДляФормул, 
//										        если Ложь - то значение реквизита Имя
//  ПолучатьДопРеквизиты			 - Булево - в результат включать дополнительные реквизиты. По умолчанию Истина. 
//  ПолучатьДопСведения				 - Булево - в результат включать дополнительные сведения. По умолчанию Истина. 
//  Свойства						 - Массив из ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения - значения
//                            		   которых следует получить. 
// 
Функция ПолучитьСоответствиеСвойств(ОбъектыСоСвойствами, ИспользоватьИдентификаторФормул = Истина,
	ПолучатьДопРеквизиты = Истина, ПолучатьДопСведения = Истина, Свойства = Неопределено) Экспорт

	тзЗначенияСвойств = ЗначенияСвойств(ОбъектыСоСвойствами, ПолучатьДопРеквизиты, ПолучатьДопСведения, Свойства);
	МассивСвойств = тзЗначенияСвойств.ВыгрузитьКолонку("Свойство");
	СоответствиеИдентификаторов = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(МассивСвойств,"ИдентификаторДляФормул,Имя");
	
	Результат = Новый Соответствие;
	
	Для Каждого Запись Из тзЗначенияСвойств Цикл
		Если ИспользоватьИдентификаторФормул Тогда
			Если НЕ ПустаяСтрока(СоответствиеИдентификаторов[Запись.Свойство].ИдентификаторДляФормул) Тогда
				Результат.Вставить(
					СоответствиеИдентификаторов[Запись.Свойство].ИдентификаторДляФормул,
					Запись.Значение
				);
			КонецЕсли;
		Иначе
			Если НЕ ПустаяСтрока(СоответствиеИдентификаторов[Запись.Свойство].Имя) Тогда
				Результат.Вставить(
					СоответствиеИдентификаторов[Запись.Свойство].Имя,
					Запись.Значение
				);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;

КонецФункции // ПолучитьСоответствиеСвойств()
