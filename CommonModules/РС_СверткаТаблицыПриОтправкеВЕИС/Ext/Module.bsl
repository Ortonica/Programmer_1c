 //+РС Консалт Назаров М.Ю. 07.02.2023 10:49:58
 //Вынес в отдельный модуль
 //Заместо переопределения Результата по табличной части, добавляю свертку в массив результатов
Процедура ДобавитьСверткуПоТабличнойЧастиВРезультатЗапроса(МассивРезультатов, НомерРезультатаПоТабличнойЧасти) Экспорт 
	
	РезультатПоТабличнойЧасти = МассивРезультатов[НомерРезультатаПоТабличнойЧасти].Выгрузить();
	Если РезультатПоТабличнойЧасти.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	ТаблицаДляСвертки = РезультатПоТабличнойЧасти.Скопировать();
	ТаблицаДляСвертки.Удалить(0);  // Первая строка - это ИТОГ. Поэтому удаляем её
	
	ОкруглитьЦеныВТаблице(ТаблицаДляСвертки);// Если цены были расчитаны как "стоимость / количество", то свертка по ЦЕНЕ не сработает, если не округлить колонку до "0.00"
	
	СверткаПоТабличнойЧастиРезультатЗапроса = ВыполнитьЗапросНаСверткуТаблицы(ТаблицаДляСвертки);
	
	МассивРезультатов.Добавить(СверткаПоТабличнойЧастиРезультатЗапроса);

КонецПроцедуры  

Процедура ОкруглитьЦеныВТаблице(Таблица)
	
	Для Каждого Стр Из Таблица Цикл
		Стр.Цена = Окр(Стр.Цена, 2, РежимОкругления.Окр15как20);
	КонецЦикла;
	
КонецПроцедуры

Функция ВыполнитьЗапросНаСверткуТаблицы(РезультатПоТабличнойЧасти)
	
	ИмяТаблицы = "ТаблицаТоваров";
	ТекстЗапроса = СформироватьТекстЗапросаНаСверткуТаблицы(ИмяТаблицы, РезультатПоТабличнойЧасти);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр(ИмяТаблицы, РезультатПоТабличнойЧасти);
	НовыйРезультатПоТабличнойЧасти = Запрос.Выполнить();
	
	Возврат НовыйРезультатПоТабличнойЧасти;

КонецФункции

Функция СформироватьТекстЗапросаНаСверткуТаблицы(ИмяТаблицы, Знач РезультатПоТабличнойЧасти)
	
	КолонкиТаблицы 				= РезультатПоТабличнойЧасти.Колонки;
	
	ИмяНовойТаблицы 			= ИмяТаблицы + "2";
	ПолеШаблон 					= "%1.%2 КАК %2";
	ШаблонПоляАгрегатнойФункции = "%1(%2.%3) КАК %3";
	
	// Создание первой выборки
	ПомещаемаяТаблицаЗапрос 	= СформироватьПомещениеТаблицы(ИмяТаблицы, КолонкиТаблицы, ПолеШаблон);
	
	// Создание второй выборки
	ПоляСуммы 		= МассивПолейСуммирования(КолонкиТаблицы);
	ПоляМаксимума 	= МассивПолейМаксимум(КолонкиТаблицы);
	ПоляМинимума 	= МассивПолейМинимум(КолонкиТаблицы);
	ПоляГруппировки = МассивПолейГруппировки(КолонкиТаблицы);
	ПоляРасчета 	= МассивПолейРасчета(ИмяТаблицы);
	ПоляИтогов 		= ПоляСуммы;
	
	Поля = Новый Структура("ПоляГруппировки,ПоляМаксимума,ПоляМинимума,ПоляРасчета,ПоляСуммы,ПоляИтогов", ПоляГруппировки, ПоляМаксимума, ПоляМинимума, ПоляРасчета, ПоляСуммы, ПоляИтогов);
	ПоляТаблицыСвертки 				= СформироватьМассивПолейТаблицыСвертки(ИмяТаблицы, КолонкиТаблицы, ПолеШаблон, Поля, ШаблонПоляАгрегатнойФункции);
	
	ПеречислениеПолейВыборки 		= СоздатьПеречислениеПоМассиву(ПоляТаблицыСвертки);
	ПеречислениеПолейГруппировки 	= СформироватьПоляГруппировки(ИмяТаблицы, ПоляГруппировки);
	
	СвертываемаяТаблицаЗапрос 		= СформироватьСвертываемуюТаблицу(ИмяНовойТаблицы, ИмяТаблицы, ПеречислениеПолейВыборки, ПеречислениеПолейГруппировки);
	
	// Создание третьей выборки
	ВыходнаяТаблицаЗапрос 			= СформироватьИтоговуюТаблицуЗапроса(ИмяНовойТаблицы, ПеречислениеПолейВыборки, ПолеШаблон, ПоляИтогов);
	
	ТекстыЗапроса = Новый Массив;
	ТекстыЗапроса.Добавить(ПомещаемаяТаблицаЗапрос);
	ТекстыЗапроса.Добавить(СвертываемаяТаблицаЗапрос);
	ТекстыЗапроса.Добавить(ВыходнаяТаблицаЗапрос);
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапроса, Символы.ПС + ";" + Символы.ПС + Символы.ПС + "///////////////////////////////////////////////////" + Символы.ПС + Символы.ПС); 
	
	Возврат ТекстЗапроса;

КонецФункции

Функция СформироватьСвертываемуюТаблицу(Знач ИмяНовойТаблицы, Знач ИмяТаблицы, Знач ПеречислениеПолейВыборки, Знач ПеречислениеПолейГруппировки)
	
	СверткаТаблицы = "ВЫБРАТЬ &ПереносСтроки &ПеречислениеПолей &ПереносСтроки ПОМЕСТИТЬ &Табуляция&ИмяНовойТаблицы &ПереносСтроки ИЗ &ПереносСтроки &Табуляция&ИмяТаблицы КАК &ИмяТаблицы &ПереносСтроки СГРУППИРОВАТЬ ПО &Табуляция &ПереносСтроки &ПеречислениеГруппировки &ПереносСтроки";   	
	СверткаТаблицы = СтрЗаменить(СверткаТаблицы, "&ПереносСтроки", 				Символы.ПС);
	СверткаТаблицы = СтрЗаменить(СверткаТаблицы, "&ПеречислениеПолей", 			ПеречислениеПолейВыборки);
	СверткаТаблицы = СтрЗаменить(СверткаТаблицы, "&ИмяТаблицы", 				ИмяТаблицы);
	СверткаТаблицы = СтрЗаменить(СверткаТаблицы, "&ПеречислениеГруппировки", 	ПеречислениеПолейГруппировки);
	СверткаТаблицы = СтрЗаменить(СверткаТаблицы, "&ИмяНовойТаблицы", 			ИмяНовойТаблицы);  
	СверткаТаблицы = СтрЗаменить(СверткаТаблицы, "&Табуляция", 					Символы.Таб);  
	
	Возврат СверткаТаблицы;

КонецФункции

Функция СформироватьПоляГруппировки(Знач ИмяТаблицы, Знач ПоляГруппировки)
	
	ПоляГруппировкиМассив = Новый Массив;
	Для Каждого Поле Из ПоляГруппировки Цикл
		
		ПолеВыбрать = СтрШаблон("%1.%2", ИмяТаблицы, Поле);
		ПоляГруппировкиМассив.Добавить(ПолеВыбрать);   
		
	КонецЦикла;
	
	ПеречислениеПолейГруппировки = СоздатьПеречислениеПоМассиву(ПоляГруппировкиМассив);
	
	Возврат ПеречислениеПолейГруппировки;

КонецФункции

Функция СоздатьПеречислениеПоМассиву(Знач МассивСтрок)
	
	ПеречислениеСтрок = СтрСоединить(МассивСтрок, "," + Символы.ПС + Символы.Таб);
	ПеречислениеСтрок = Символы.Таб + ПеречислениеСтрок;
	
	Возврат ПеречислениеСтрок;

КонецФункции

Функция СформироватьМассивПолейТаблицыСвертки(ИмяТаблицы, Знач КолонкиТаблицы, Знач ПолеШаблон, Поля, Знач ШаблонПоляАгрегатнойФункции)
	
	ПоляГруппировки = Поля.ПоляГруппировки;
	ПоляМаксимума 	= Поля.ПоляМаксимума;
	ПоляМинимума 	= Поля.ПоляМинимума;
	ПоляРасчета 	= Поля.ПоляРасчета;
	ПоляСуммы 		= Поля.ПоляСуммы;
	
	ОтсортированныеКолонки = Новый Массив;
	Для Каждого ПолеМассива Из ПоляГруппировки Цикл
		
		Колонка = КолонкиТаблицы.Найти(ПолеМассива);
		Если Колонка <> Неопределено Тогда 
			ОтсортированныеКолонки.Добавить(Колонка);
		КонецЕсли;
		
	КонецЦикла;  
	
	Для Каждого ПолеМассива Из ПоляМаксимума Цикл
		
		Колонка = КолонкиТаблицы.Найти(ПолеМассива);
		Если Колонка <> Неопределено Тогда 
			ОтсортированныеКолонки.Добавить(Колонка);
		КонецЕсли;
		
	КонецЦикла;  
	
	Для Каждого ПолеМассива Из ПоляМинимума Цикл
		
		Колонка = КолонкиТаблицы.Найти(ПолеМассива);
		Если Колонка <> Неопределено Тогда 
			ОтсортированныеКолонки.Добавить(Колонка);
		КонецЕсли;
		
	КонецЦикла;    
	
	Для Каждого ПолеМассива Из ПоляСуммы Цикл
		
		Колонка = КолонкиТаблицы.Найти(ПолеМассива);
		Если Колонка <> Неопределено Тогда 
			ОтсортированныеКолонки.Добавить(Колонка);
		КонецЕсли;
		
	КонецЦикла; 
	
	ПоляВыборки = Новый Массив; 
	Для Каждого Колонка Из ОтсортированныеКолонки Цикл 
		
		ИмяКолонки = Колонка.Имя;
		
		Поле = "";
		
		Если ПоляГруппировки.Найти(ИмяКолонки) <> Неопределено Тогда 
			Поле = СтрШаблон(ПолеШаблон, ИмяТаблицы, ИмяКолонки);			
		КонецЕсли;
		
		Если ПоляМаксимума.Найти(ИмяКолонки) <> Неопределено Тогда 
			Поле = СтрШаблон(ШаблонПоляАгрегатнойФункции, "МАКСИМУМ", ИмяТаблицы, ИмяКолонки);
		КонецЕсли;  
		
		Если ПоляСуммы.Найти(ИмяКолонки) <> Неопределено Тогда 
			Поле = СтрШаблон(ШаблонПоляАгрегатнойФункции, "СУММА", ИмяТаблицы, ИмяКолонки);
		КонецЕсли;
		
		Если ПоляМинимума.Найти(ИмяКолонки) <> Неопределено Тогда 
			Поле = СтрШаблон(ШаблонПоляАгрегатнойФункции, "МИНИМУМ", ИмяТаблицы, ИмяКолонки);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Поле) Тогда 
			ПоляВыборки.Добавить(Поле);
		КонецЕсли;
		
	КонецЦикла;       
	
	Для Каждого Расчет Из ПоляРасчета Цикл
		ПоляВыборки.Добавить(Расчет);	
	КонецЦикла;        
	
	Возврат ПоляВыборки;

КонецФункции

Функция СформироватьИтоговуюТаблицуЗапроса(НовоеИмяТаблицы, Знач ПеречислениеПолейПрошлойТаблицы, Знач ПолеШаблон, ПоляИтогов)
	
	НовыеПоля = СформироватьМассивПолейВыходнойТаблицыПоПрошлойТаблице(НовоеИмяТаблицы, ПеречислениеПолейПрошлойТаблицы, ПолеШаблон);
	
	// Добавляем поля, которые были опущены в прошлой таблице (чтобы сработала группировка)
	НовыеПоля.Добавить("ДанныеЕдиницыИзмерения.Представление КАК ЕдиницаИзмеренияНаименование");
	НовыеПоля.Добавить("ДанныеЕдиницыИзмерения.Код КАК ЕдиницаИзмеренияКод");
	НовыеПоля.Добавить(СтрШаблон("%1.Номенклатура.ЕдиницаИзмеренияТНВЭД КАК ЕдиницаИзмеренияТНВЭД", НовоеИмяТаблицы));
	НовыеПоля.Добавить(СтрШаблон("%1.Номенклатура.ЕдиницаИзмеренияТНВЭД.Представление КАК ЕдиницаИзмеренияТНВЭДНаименование", НовоеИмяТаблицы));
	НовыеПоля.Добавить(СтрШаблон("%1.Номенклатура.ЕдиницаИзмеренияТНВЭД.Код КАК ЕдиницаИзмеренияТНВЭДКод", НовоеИмяТаблицы));
	НовыеПоля.Добавить("ЕСТЬNULL(ДанныеХарактеристики.НаименованиеПолное, """") КАК ХарактеристикаНаименование");
	НовыеПоля.Добавить("ДанныеСтраныПросхождения.Ссылка КАК СтранаПроисхождения");
	НовыеПоля.Добавить("ДанныеСтраныПросхождения.Код КАК СтранаПроисхожденияКод");
	
	ПеречислениеПолей = СоздатьПеречислениеПоМассиву(НовыеПоля);
	                                                                                              
	// Взято их модуля менеждера СчетФактурыВыданный см. ТекстЗапросаДанныхТабличнойЧастиДляПечатиСчетаФактуры()																								  
	Соединение = СтрШаблон("&ТабуляцияЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		&ТабуляцияПО %1.ЕдиницаИзмерения = ДанныеЕдиницыИзмерения.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ДанныеХарактеристики
	|		&ТабуляцияПО %1.Характеристика = ДанныеХарактеристики.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныПросхождения
	|		&ТабуляцияПО %1.НомерГТДСсылка.СтранаПроисхождения = ДанныеСтраныПросхождения.Ссылка", НовоеИмяТаблицы);
	
	ВыходнаяТаблица = "ВЫБРАТЬ &ПереносСтроки &ПеречислениеПолей &ПереносСтроки ИЗ &ПереносСтроки &Табуляция&ИмяТаблицы КАК &ИмяТаблицы &ПереносСтроки &Соединение &ПереносСтроки ИТОГИ &ПереносСтроки&ПоляИтогов ПО &ПереносСтроки&ТабуляцияССЫЛКА";
	
	//создаем итоговое перечисление
	ПоляИтоговПеречисление = СфромироватьИтоговыеПоля(ПоляИтогов);
	
	ВыходнаяТаблица = СтрЗаменить(ВыходнаяТаблица, "&ПеречислениеПолей", 	ПеречислениеПолей);
	ВыходнаяТаблица = СтрЗаменить(ВыходнаяТаблица, "&ИмяТаблицы", 			НовоеИмяТаблицы);
	ВыходнаяТаблица = СтрЗаменить(ВыходнаяТаблица, "&Соединение", 			Соединение);
	ВыходнаяТаблица = СтрЗаменить(ВыходнаяТаблица, "&ПереносСтроки", 		Символы.ПС);
	ВыходнаяТаблица = СтрЗаменить(ВыходнаяТаблица, "&ПоляИтогов", 			ПоляИтоговПеречисление);
	ВыходнаяТаблица = СтрЗаменить(ВыходнаяТаблица, "&Табуляция", 			Символы.Таб);
	
	Возврат ВыходнаяТаблица;

КонецФункции

Функция СфромироватьИтоговыеПоля(Знач ПоляИтогов)
	
	Поля = Новый Массив;
	Для Каждого ИмяПоля Из ПоляИтогов Цикл 
		Поле = СтрШаблон("%1(%2)", "Сумма", ИмяПоля);
		Поля.Добавить(Поле);
	КонецЦикла;
	
	ПоляИтоговПеречисление = Символы.Таб + СтрСоединить(Поля, "," + Символы.ПС + Символы.Таб) + Символы.ПС;
	
	Возврат ПоляИтоговПеречисление;

КонецФункции

Функция СформироватьМассивПолейВыходнойТаблицыПоПрошлойТаблице(Знач НовоеИмяТаблицы, Знач ПеречислениеПолейПрошлойТаблицы, Знач ПолеШаблон)
	
	ПеречислениеПолей = СтрРазделить(ПеречислениеПолейПрошлойТаблицы, ",");
	
	НовыеПоля = Новый Массив;
	Для Каждого Поли Из ПеречислениеПолей Цикл    
		
		СловоПоиск = "КАК";
		ИндексСловаПоиска 	= СтрНайти(Поли, СловоПоиск) + СтрДлина(СловоПоиск);
		НовоеПоле 			= СокрЛП(Сред(Поли, ИндексСловаПоиска));
		НовоеПоле 			= СтрШаблон(ПолеШаблон, НовоеИмяТаблицы, НовоеПоле);
		
		НовыеПоля.Добавить(НовоеПоле);
	КонецЦикла; 
	
	Возврат НовыеПоля;

КонецФункции

Функция СформироватьПомещениеТаблицы(ИмяТаблицы, Знач КолонкиТаблицы, Знач ПолеШаблон)
	
	ПоляВыборки = Новый Массив;
	
	Для Каждого Колонка Из КолонкиТаблицы Цикл 
		ТекстПоля = СтрШаблон(ПолеШаблон, ИмяТаблицы, Колонка.Имя);
		ПоляВыборки.Добавить(ТекстПоля);
	КонецЦикла; 
	
	ПеречислениеПолей = СоздатьПеречислениеПоМассиву(ПоляВыборки);
	
	ПомещаемаяТаблица = "ВЫБРАТЬ &ПереносСтроки &ПеречислениеПолей &ПереносСтроки ПОМЕСТИТЬ &ИмяТаблицы &ПереносСтроки ИЗ &ПереносСтроки &Табуляция&&ИмяТаблицы КАК &ИмяТаблицы";
	
	ПомещаемаяТаблица = СтрЗаменить(ПомещаемаяТаблица, "&ПереносСтроки", 		Символы.ПС);
	ПомещаемаяТаблица = СтрЗаменить(ПомещаемаяТаблица, "&ПеречислениеПолей", 	ПеречислениеПолей);
	ПомещаемаяТаблица = СтрЗаменить(ПомещаемаяТаблица, "&ИмяТаблицы", 			ИмяТаблицы);
	ПомещаемаяТаблица = СтрЗаменить(ПомещаемаяТаблица, "&Табуляция", 			Символы.Таб);
	
	Возврат ПомещаемаяТаблица;

КонецФункции

Функция МассивПолейРасчета(ИмяТаблицы)
	
	ПоляРасчета = Новый Массив;
														
	Шаблон = ШаблонРасчетаДеленияСуммПолей(ИмяТаблицы, "СуммаСНДС", "Количество", "Цена");
	Шаблон = ШаблонРасчетаДеленияСуммПолей(ИмяТаблицы, "СуммаСНДСДо", "КоличествоДо", "ЦенаДо");
	
	//+РС Консалт Назаров М.Ю. 14.02.2023 12:37:51
	//Убрал добавление в массив	поля Цена и ЦенаДо теперь находятся в Группировке
	//-РС Консалт Назаров М.Ю. 14.02.2023 12:37:51
	
	Возврат ПоляРасчета;

КонецФункции

Функция МассивПолейГруппировки(Знач КолонкиТаблицы)
	
	ПоляГруппировки = Новый Массив;
	
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляГруппировки, "Ссылка");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляГруппировки, "НоменклатураПартнера");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляГруппировки, "ДокументОснование"); 
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляГруппировки, "ЦенаДо");
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляГруппировки, "Цена");
	
	Возврат ПоляГруппировки;

КонецФункции

Функция МассивПолейМинимум(Знач КолонкиТаблицы)
	
	ПоляМинимума = Новый Массив;                                             
	
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМинимума, "НомерСтроки");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМинимума, "НомерСтрокиИсходногоСФ");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМинимума, "НомерСтрокиНаборы");
	
	Возврат ПоляМинимума;

КонецФункции

Функция МассивПолейМаксимум(Знач КолонкиТаблицы)
	
	ПоляМаксимума = Новый Массив;
	
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМаксимума, "Номенклатура");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМаксимума, "НоменклатураНаименование");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМаксимума, "НоменклатураКод");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМаксимума, "КодТНВЭД");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМаксимума, "ЕдиницаИзмерения");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМаксимума, "Упаковка");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМаксимума, "Характеристика");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМаксимума, "СерияНаименование");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМаксимума, "НомерГТД");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМаксимума, "НомерГТДСсылка");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМаксимума, "СтавкаНДС");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМаксимума, "ВариантПредставленияНабораВПечатныхФормах");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМаксимума, "ВариантРасчетаЦеныНабора");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМаксимума, "НоменклатураНабора");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМаксимума, "ХарактеристикаНабора");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМаксимума, "ЭтоКомплектующие");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМаксимума, "ЭтоНабор");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМаксимума, "ПолныйНабор");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМаксимума, "ЭтоВозвратнаяТара");    
	
	// По данным полям не работает МАКСИМУМ
	//ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМаксимума, "ХарактеристикаНаименование");  
	//ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМаксимума, "ЕдиницаИзмеренияНаименование");  
	//ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМаксимума, "ЕдиницаИзмеренияКод");  
	//ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМаксимума, "ЕдиницаИзмеренияТНВЭД");  
	//ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМаксимума, "ЕдиницаИзмеренияТНВЭДНаименование");  
	//ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМаксимума, "ЕдиницаИзмеренияТНВЭДКод");  
	//ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМаксимума, "СтранаПроисхождения");  
	//ДобавитьПолеВМассив(КолонкиТаблицы, ПоляМаксимума, "СтранаПроисхожденияКод");  
	
	Возврат ПоляМаксимума;

 КонецФункции

Функция МассивПолейСуммирования(Знач КолонкиТаблицы)
	
	ПоляСуммы = Новый Массив;
	
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляСуммы, "Количество");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляСуммы, "КоличествоПоРНПТ");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляСуммы, "СуммаБезНДС");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляСуммы, "СуммаНДС");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляСуммы, "СуммаСНДС");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляСуммы, "КоличествоДо");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляСуммы, "КоличествоПоРНПТДо");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляСуммы, "КоличествоПрослежУвеличение");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляСуммы, "КоличествоПрослежУменьшение");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляСуммы, "СуммаБезНДСДо");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляСуммы, "РазницаБезНДСУвеличение");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляСуммы, "РазницаБезНДСУменьшение");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляСуммы, "СуммаНДСДо");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляСуммы, "РазницаНДСУвеличение");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляСуммы, "РазницаНДСУменьшение");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляСуммы, "СуммаСНДСДо");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляСуммы, "РазницаСНДСУвеличение");  
	ДобавитьПолеВМассив(КолонкиТаблицы, ПоляСуммы, "РазницаСНДСУменьшение");
	
	Возврат ПоляСуммы;

КонецФункции

Функция ШаблонРасчетаДеленияСуммПолей(ИмяТаблицы, ДелимоеПоле, ДелительПоле, ЧастоеПоле = "")
	
	Делитель 	= СтрШаблон("%1(%2.%3)", "СУММА", ИмяТаблицы, ДелительПоле);
	Делимое 	= СтрШаблон("%1(%2.%3)", "СУММА", ИмяТаблицы, ДелимоеПоле);
	
	Если ЧастоеПоле <> "" Тогда 
		ЧастоеПоле = " КАК " + ЧастоеПоле;
	КонецЕсли;
	
	Шаблон 		= СтрШаблон("ВЫБОР КОГДА %1 = 0 ТОГДА 0 ИНАЧЕ %2 / %1 КОНЕЦ%3", Делитель, Делимое, ЧастоеПоле);
	
	Возврат Шаблон;

КонецФункции    
    
Процедура ДобавитьПолеВМассив(КолонкиТаблицы, МассивПолей, ИмяПоля)
	
	ЕстьКолонка = КолонкиТаблицы.Найти(ИмяПоля) <> Неопределено;
	
	Если ЕстьКолонка Тогда 
		МассивПолей.Добавить(ИмяПоля);
	КонецЕсли;
	
КонецПроцедуры


//-РС Консалт Назаров М.Ю. 07.02.2023 10:49:58