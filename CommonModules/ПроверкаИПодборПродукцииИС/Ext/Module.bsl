
&ИзменениеИКонтроль("ЗаполнитьКешШтрихкодовУпаковок")
Процедура РСК_ЗаполнитьКешШтрихкодовУпаковок(Форма, Настройки, Инициализация)
	
	Если Не ПравоДоступа("Чтение", Метаданные.Справочники.ШтрихкодыУпаковокТоваров) Тогда
		УстановитьПривилегированныйРежим(Истина);
	КонецЕсли;
	
	Если Настройки = Неопределено Тогда
		Настройки = НастройкиИсточникаКешаШтрихкодовУпаковок(Истина);
	КонецЕсли;
	
	Если Инициализация Тогда
		ПараметрыИнтеграцииГосИС = Новый Соответствие(Форма.ПараметрыИнтеграцииГосИС);
		Если ПараметрыИнтеграцииГосИС.Получить("ДанныеШтрихкодовУпаковокГосИС")<>Неопределено
				И ПараметрыИнтеграцииГосИС.Получить("ДанныеШтрихкодовУпаковокГосИС").Заполнение = Истина Тогда
			Возврат;
		КонецЕсли;
		ПараметрыИнтеграцииГосИС.Вставить("ДанныеШтрихкодовУпаковокГосИС", Новый Структура("Заполнение", Истина));
		Форма.ПараметрыИнтеграцииГосИС = Новый ФиксированноеСоответствие(ПараметрыИнтеграцииГосИС);
	КонецЕсли;
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	РеквизитыФормы = Форма.ПолучитьРеквизиты();
	НетДанныеШтрихкодовУпаковокГосИС = Истина;
	Для Каждого Реквизит Из РеквизитыФормы Цикл
		Если Реквизит.Имя = "ДанныеШтрихкодовУпаковокГосИС" Тогда
			НетДанныеШтрихкодовУпаковокГосИС = Ложь;
			Прервать
		КонецЕсли;
	КонеццИкла;
	Если НетДанныеШтрихкодовУпаковокГосИС Тогда
		Возврат
	КонецЕсли;
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	
	Форма.ДанныеШтрихкодовУпаковокГосИС.Очистить();
	ДанныеШтрихкодовУпаковокГосИС = Форма.ДанныеШтрихкодовУпаковокГосИС.Выгрузить();
	
	Если ЗначениеЗаполнено(Настройки.Объект) Тогда
		Объект = Форма[Настройки.Объект];
	Иначе
		Объект = Форма;
	КонецЕсли;
	
	// Дополнительное поле сравнения
	ЕстьКоличествоПотребительскихКодов = ДанныеШтрихкодовУпаковокГосИС.Колонки.Найти("КоличествоПотребительскихУпаковок")<>Неопределено;
	
	ШтрихкодыУпаковокИсходнаяТаблица = Объект[Настройки.Штрихкоды].Выгрузить();
	
	// Частичное выбытие: строки, где указано количество в табличной части штрихкодов, обрабатываем индивидуально
	Если Настройки.ЧастичноеВыбытие Тогда
		СтрокиЧастичногоВыбытия = ШтрихкодыУпаковокИсходнаяТаблица.СкопироватьКолонки();
		Для Каждого СтрокаШтрихкод Из ШтрихкодыУпаковокИсходнаяТаблица Цикл
			Если ЗначениеЗаполнено(СтрокаШтрихкод.ЧастичноеВыбытиеКоличество) Тогда
				ЗаполнитьЗначенияСвойств(СтрокиЧастичногоВыбытия.Добавить(), СтрокаШтрихкод);
			КонецЕсли;
		КонецЦикла;
		ШтрихкодыУпаковокИсходнаяТаблица = ШтрихкодыУпаковокИсходнаяТаблица.Скопировать(Новый Структура("ЧастичноеВыбытиеКоличество", 0));
	КонецЕсли;
	
	// Дополнительные ключи связи, специфика: берем только строки с заполненными ключами (маркировка).
	ЭтоМаркировкаСоСпецификой = ДанныеШтрихкодовУпаковокГосИС.Колонки.Найти("СрокГодности")<>Неопределено;
	ШтрихкодыУпаковокБезИдентификатора = Новый Массив;
	Если ЭтоМаркировкаСоСпецификой Тогда
		СтрокиОставить = Новый Массив;
		Для Каждого СтрокаШтрихкоды Из ШтрихкодыУпаковокИсходнаяТаблица Цикл
			Если ЗначениеЗаполнено(СтрокаШтрихкоды.СрокГодности)
					Или ЗначениеЗаполнено(СтрокаШтрихкоды.ИдентификаторПроисхожденияВЕТИС) Тогда
				СтрокиОставить.Добавить(СтрокаШтрихкоды);
			Иначе
				ШтрихкодыУпаковокБезИдентификатора.Добавить(СтрокаШтрихкоды.ШтрихкодУпаковки);
			КонецЕсли;
		КонецЦикла;
		Если СтрокиОставить.Количество() Тогда
			
			ШтрихкодыУпаковокБезИдентификатора = ШтрихкодированиеИС.ВложенныеШтрихкодыИзвестныхУпаковок(ШтрихкодыУпаковокБезИдентификатора).ДеревоУпаковок;
			
			ШтрихкодыУпаковокИсходнаяТаблица = ШтрихкодыУпаковокИсходнаяТаблица.Скопировать(СтрокиОставить);
			ШтрихкодыУпаковокИсходнаяТаблица.Индексы.Добавить("ШтрихкодУпаковки");
			
		Иначе
			ЭтоМаркировкаСоСпецификой = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если ЭтоМаркировкаСоСпецификой Тогда
		ПоляПоиска = "Номенклатура,Характеристика,Серия,ИдентификаторПроисхожденияВЕТИС,СрокГодности";
	Иначе
		ПоляПоиска = "Номенклатура,Характеристика,Серия";
	КонецЕсли;
	ДанныеШтрихкодовУпаковокГосИС.Индексы.Добавить(ПоляПоиска);
	
	// Дополнительные ключи связи, специфика: поля поиска для незаполненной номенклатуры.
	ЕстьGTIN = ДанныеШтрихкодовУпаковокГосИС.Колонки.Найти("GTIN")<>Неопределено;
	ПоляПоискаДляПустойНоменклатуры = ПоляПоиска + ",GTIN";
	Если ЕстьGTIN Тогда
		ДанныеШтрихкодовУпаковокГосИС.Индексы.Добавить(ПоляПоискаДляПустойНоменклатуры);
	КонецЕсли;
	
	МассивИменКолонокШтрихкодовУпаковки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(
		Настройки.ШтрихкодУпаковки, ",", Истина);
	ШтрихкодыУпаковок = Неопределено;
	Для Каждого ИмяКолонки Из МассивИменКолонокШтрихкодовУпаковки Цикл
		Если ШтрихкодыУпаковок = Неопределено Тогда
			ШтрихкодыУпаковок = ШтрихкодыУпаковокИсходнаяТаблица.ВыгрузитьКолонку(ИмяКолонки);
		Иначе
			ШтрихкодыУпаковокДополнительное = ШтрихкодыУпаковокИсходнаяТаблица.ВыгрузитьКолонку(ИмяКолонки);
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ШтрихкодыУпаковок, ШтрихкодыУпаковокДополнительное);
		КонецЕсли;
	КонецЦикла;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ШтрихкодыУпаковок.Ссылка            КАК Штрихкод,
	|	ШтрихкодыУпаковок.Номенклатура      КАК Номенклатура,
	|	ШтрихкодыУпаковок.Характеристика    КАК Характеристика,
	|	ШтрихкодыУпаковок.Серия             КАК Серия,
	|	ШтрихкодыУпаковок.Количество        КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ (&ПроизвольнаяЕдиницаУчета)
	|			ТОГДА 0
	|		КОГДА ШтрихкодыУпаковок.КоличествоПотребительскихУпаковок = 0
	|			ТОГДА ШтрихкодыУпаковок.Количество
	|		ИНАЧЕ ШтрихкодыУпаковок.КоличествоПотребительскихУпаковок
	|	КОНЕЦ                               КАК КоличествоПотребительскихУпаковок,
	|	ШтрихкодыУпаковок.ЗначениеШтрихкода КАК ЗначениеШтрихкода,
	|	ЛОЖЬ                                КАК ПодменнаяНоменклатура
	|ИЗ
	|	Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковок
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров.ВложенныеШтрихкоды КАК ЕстьВложенныеШтрихкоды
	|		ПО ЕстьВложенныеШтрихкоды.Ссылка = ШтрихкодыУпаковок.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОписаниеНоменклатурыИС КАК ОписаниеНоменклатурыИС
	|		ПО &ТоварыОписаниеНоменклатурыИС
	|ГДЕ
	|	ШтрихкодыУпаковок.Ссылка В (&ШтрихкодУпаковки)
	|	И (ЕстьВложенныеШтрихкоды.Ссылка ЕСТЬ NULL
	|		ИЛИ &ЭтоШтрихкодУпаковкиНабора)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕстьВложенныеШтрихкоды.Ссылка КАК Родитель,
	|	ЕстьВложенныеШтрихкоды.Штрихкод
	|ИЗ
	|	Справочник.ШтрихкодыУпаковокТоваров.ВложенныеШтрихкоды КАК ЕстьВложенныеШтрихкоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковок
	|		ПО ЕстьВложенныеШтрихкоды.Ссылка = ШтрихкодыУпаковок.Ссылка
	|		И ШтрихкодыУпаковок.Ссылка В (&ШтрихкодУпаковки)
	|ГДЕ
	|	ЕстьВложенныеШтрихкоды.Ссылка В (&ШтрихкодУпаковки)
	|		И Не &ЭтоШтрихкодУпаковкиНабора
	|";
	ИнтеграцияИС.ОбновитьТекстЗапросаСРегистромОписаниеНоменклатурыИС(ТекстЗапроса, "ОписаниеНоменклатурыИС", "ШтрихкодыУпаковок.Номенклатура");
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Если Не Настройки.ВключаяКомплектующие Тогда
		Запрос.Текст = СтрЗаменить(
			Запрос.Текст, "&ЭтоШтрихкодУпаковкиНабора",
			"(ШтрихкодыУпаковок.КоличествоПотребительскихУпаковок = 1
			|	ИЛИ (ШтрихкодыУпаковок.КоличествоПотребительскихУпаковок = 0 И ШтрихкодыУпаковок.Количество = 1))");
	КонецЕсли;
	Запрос.УстановитьПараметр("ЭтоШтрихкодУпаковкиНабора", Ложь);
	
	КешВложенности = Новый Соответствие;
	СтруктураПоиска = Новый Структура(ПоляПоиска);
	СтруктураПоискаДляПустойНоменклатуры = Новый Структура(ПоляПоискаДляПустойНоменклатуры);
	
	ОбходТаблицы = Истина;
	
	Пока ОбходТаблицы Цикл
		
		Запрос.УстановитьПараметр("ШтрихкодУпаковки", ШтрихкодыУпаковок);
		МассивРезультатов = Запрос.ВыполнитьПакет();
		СоставУпаковки = МассивРезультатов[0].Выбрать();
		ВложенныеЗаписи = МассивРезультатов[1].Выбрать();
		НуженОбходДочерних = ВложенныеЗаписи.Количество();
		
		Пока СоставУпаковки.Следующий() Цикл
			
			ИсходныйШтрихкод = КешВложенности.Получить(СоставУпаковки.Штрихкод);
			Если ИсходныйШтрихкод = Неопределено Тогда
				ИсходныйШтрихкод = СоставУпаковки.Штрихкод;
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, СоставУпаковки);
			
			Если ЭтоМаркировкаСоСпецификой Тогда
				Расшифровка = ШтрихкодыУпаковокИсходнаяТаблица.Найти(ИсходныйШтрихкод, "ШтрихкодУпаковки");
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, Расшифровка, "ИдентификаторПроисхожденияВЕТИС, СрокГодности");
			КонецЕсли;
			
			Если ЕстьGTIN И Не ЗначениеЗаполнено(СтруктураПоиска.Номенклатура) Тогда
				ЗаполнитьЗначенияСвойств(СтруктураПоискаДляПустойНоменклатуры, СтруктураПоиска);
				Если СтрНачинаетсяС(СоставУпаковки.ЗначениеШтрихкода, "(") Тогда
					СтруктураПоискаДляПустойНоменклатуры.GTIN = Сред(СоставУпаковки.ЗначениеШтрихкода, 5, 14);
				Иначе 
					СтруктураПоискаДляПустойНоменклатуры.GTIN = Сред(СоставУпаковки.ЗначениеШтрихкода, 1, 14);
				КонецЕсли;
				СтрокиКеша = ДанныеШтрихкодовУпаковокГосИС.НайтиСтроки(СтруктураПоискаДляПустойНоменклатуры);
			Иначе
				СтрокиКеша = ДанныеШтрихкодовУпаковокГосИС.НайтиСтроки(СтруктураПоиска);
			КонецЕсли;
			
			Если СтрокиКеша.Количество() Тогда
				
				СтрокиКеша0 = СтрокиКеша[0];
				Если ЕстьКоличествоПотребительскихКодов И СоставУпаковки.КоличествоПотребительскихУпаковок > 0 Тогда
					Если СоставУпаковки.Количество = 0 Тогда
						СтрокиКеша0.БезКоличества = Истина;
					КонецЕсли;
					СтрокиКеша0.Количество = СтрокиКеша0.Количество + СоставУпаковки.Количество;
					СтрокиКеша0.КоличествоПотребительскихУпаковок = СтрокиКеша0.КоличествоПотребительскихУпаковок + СоставУпаковки.КоличествоПотребительскихУпаковок;
				Иначе
					СтрокиКеша0.Количество = СтрокиКеша0.Количество + ?(СоставУпаковки.Количество = 0, 1, СоставУпаковки.Количество);
				КонецЕсли;
				СтрокиКеша0.ШтрихкодыУпаковок.Вставить(ИсходныйШтрихкод, Истина);
				
			Иначе
				
				НоваяСтрока = ДанныеШтрихкодовУпаковокГосИС.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СоставУпаковки);
				Если СоставУпаковки.КоличествоПотребительскихУпаковок > 0 И СоставУпаковки.Количество = 0 Тогда
					НоваяСтрока.БезКоличества = Истина;
				ИначеЕсли НоваяСтрока.Количество = 0 Тогда
					НоваяСтрока.Количество = 1;
				КонецЕсли;
				Если ЕстьGTIN И Не ЗначениеЗаполнено(СтруктураПоиска.Номенклатура) Тогда
					НоваяСтрока.GTIN = СтруктураПоискаДляПустойНоменклатуры.GTIN;
				КонецЕсли;
				НоваяСтрока.ШтрихкодыУпаковок = Новый Соответствие;
				НоваяСтрока.ШтрихкодыУпаковок.Вставить(ИсходныйШтрихкод, Истина);
				Если ЭтоМаркировкаСоСпецификой Тогда
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураПоиска, "ИдентификаторПроисхожденияВЕТИС, СрокГодности");
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если НуженОбходДочерних Тогда
			ШтрихкодыУпаковок = Новый Массив;
			Пока ВложенныеЗаписи.Следующий() Цикл
				ИсходныйШтрихкод = КешВложенности.Получить(ВложенныеЗаписи.Родитель);
				Если ИсходныйШтрихкод = Неопределено Тогда
					ИсходныйШтрихкод = ВложенныеЗаписи.Родитель;
				КонецЕсли;
				КешВложенности.Вставить(ВложенныеЗаписи.Штрихкод, ИсходныйШтрихкод);
				ШтрихкодыУпаковок.Добавить(ВложенныеЗаписи.Штрихкод);
			КонецЦикла;
		Иначе
			ОбходТаблицы = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЭтоМаркировкаСоСпецификой Тогда
		Для Каждого СтрокаСостав Из ШтрихкодыУпаковокБезИдентификатора.Строки Цикл
			ДополнитьКешШтрихкодамиБезИдентификаторов(СтрокаСостав.ШтрихкодУпаковки, СтрокаСостав.Строки, ДанныеШтрихкодовУпаковокГосИС, ШтрихкодыУпаковокИсходнаяТаблица);
		КонецЦикла;
	КонецЕсли;
	
	// Обработка строк с частичным выбытием
	Если Настройки.ЧастичноеВыбытие И СтрокиЧастичногоВыбытия.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("ШтрихкодыУпаковки", СтрокиЧастичногоВыбытия);
		Запрос.УстановитьПараметр("ПустаяСерия",       ИнтеграцияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
		Запрос.Текст = СтрШаблон(
		"ВЫБРАТЬ
		|	Штрихкоды.%1                             КАК ШтрихкодУпаковки,
		|	Штрихкоды.ЧастичноеВыбытиеКоличество     КАК Количество,
		|	Штрихкоды.ЧастичноеВыбытиеВариантУчета   КАК ВариантУчета,
		|	Штрихкоды.ЧастичноеВыбытиеНоменклатура   КАК НоменклатураЧастичногоВыбытия,
		|	Штрихкоды.ЧастичноеВыбытиеХарактеристика КАК ХарактеристикаЧастичногоВыбытия
		|ПОМЕСТИТЬ ЧастичноеВыбытие
		|ИЗ
		|	&ШтрихкодыУпаковки КАК Штрихкоды
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Штрихкоды.Ссылка КАК Штрихкод,
		|	ВЫБОР
		|		КОГДА ЧастичноеВыбытие.ВариантУчета = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаЧастичногоВыбытияИСМП.НастроеннаяНоменклатура)
		|			ТОГДА ЧастичноеВыбытие.НоменклатураЧастичногоВыбытия
		|		ИНАЧЕ Штрихкоды.Номенклатура
		|	КОНЕЦ КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА ЧастичноеВыбытие.ВариантУчета = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаЧастичногоВыбытияИСМП.НастроеннаяНоменклатура)
		|			ТОГДА ЧастичноеВыбытие.ХарактеристикаЧастичногоВыбытия
		|		ИНАЧЕ Штрихкоды.Характеристика
		|	КОНЕЦ КАК Характеристика,
		|	ВЫБОР
		|		КОГДА ЧастичноеВыбытие.ВариантУчета = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаЧастичногоВыбытияИСМП.НастроеннаяНоменклатура)
		|			ТОГДА &ПустаяСерия
		|		ИНАЧЕ Штрихкоды.Серия
		|	КОНЕЦ КАК Серия,
		|	ВЫБОР
		|		КОГДА ЧастичноеВыбытие.ВариантУчета = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаЧастичногоВыбытияИСМП.НастроеннаяНоменклатура)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПодменнаяНоменклатура,
		|	ЧастичноеВыбытие.Количество КАК Количество,
		|	Штрихкоды.ЗначениеШтрихкода КАК ЗначениеШтрихкода
		|ИЗ
		|	ЧастичноеВыбытие КАК ЧастичноеВыбытие
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК Штрихкоды
		|		ПО Штрихкоды.Ссылка = ЧастичноеВыбытие.ШтрихкодУпаковки
		|", Настройки.ШтрихкодУпаковки);
		СоставУпаковки = Запрос.Выполнить().Выбрать();
		Пока СоставУпаковки.Следующий() Цикл
			
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, СоставУпаковки);
			СтрокиКеша = ДанныеШтрихкодовУпаковокГосИС.НайтиСтроки(СтруктураПоиска);
			
			Если СтрокиКеша.Количество() Тогда
				СтрокиКеша0 = СтрокиКеша[0];
				СтрокиКеша0.Количество = СтрокиКеша0.Количество + СоставУпаковки.Количество;
				СтрокиКеша0.ШтрихкодыУпаковок.Вставить(СоставУпаковки.Штрихкод, Истина);
			Иначе
				НоваяСтрока = ДанныеШтрихкодовУпаковокГосИС.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СоставУпаковки);
				НоваяСтрока.ШтрихкодыУпаковок = Новый Соответствие;
				НоваяСтрока.ШтрихкодыУпаковок.Вставить(СоставУпаковки.Штрихкод, Истина);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Политики учета серий могут предусматривать различное указание серий в разных документах.
	// Если в конкретном документе серии по номенклатуре не указываются, добавление в него кодов маркировки с сериями
	//   ошибкой не является и обрабатывается как код маркировки без серии.
	ЭтоПрикладнойДокумент = Не Настройки.ВсеМаркируемые;
	Если ЭтоПрикладнойДокумент Тогда
		
		ПараметрыСканирования = ШтрихкодированиеИС.ПараметрыСканирования(Форма);
		
		Если ЗначениеЗаполнено(ПараметрыСканирования.ПараметрыУказанияСерий) Тогда
			
			УдалитьСтроки = Новый Массив;
			Для Каждого СтрокаКеша Из ДанныеШтрихкодовУпаковокГосИС Цикл
				
				Если ЗначениеЗаполнено(СтрокаКеша.Серия)
					И Не ИнтеграцияИС.ТребуетсяВыборСерии(СтрокаКеша, ПараметрыСканирования) Тогда
					
					ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаКеша);
					СтруктураПоиска.Серия = ИнтеграцияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры");
					СтрокиБезСерий = ДанныеШтрихкодовУпаковокГосИС.НайтиСтроки(СтруктураПоиска);
					Если СтрокиБезСерий.Количество() Тогда
						СтрокаПриемник = СтрокиБезСерий[0];
						СтрокаПриемник.Количество = СтрокаПриемник.Количество + СтрокаКеша.Количество;
						СтрокаПриемник.БезКоличества = СтрокаПриемник.БезКоличества Или СтрокаКеша.БезКоличества;
						Если ЕстьКоличествоПотребительскихКодов Тогда
							СтрокаПриемник.КоличествоПотребительскихУпаковок = СтрокаПриемник.КоличествоПотребительскихУпаковок + СтрокаКеша.КоличествоПотребительскихУпаковок;
						КонецЕсли;
						Для Каждого ШтрихкодУпаковки Из СтрокаКеша.ШтрихкодыУпаковок Цикл
							СтрокаПриемник.ШтрихкодыУпаковок.Вставить(ШтрихкодУпаковки.Ключ, Истина);
						КонецЦикла;
						УдалитьСтроки.Добавить(СтрокаКеша);
					Иначе
						СтрокаКеша.Серия = ИнтеграцияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры");
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Для Каждого СтрокаКеша Из УдалитьСтроки Цикл
				ДанныеШтрихкодовУпаковокГосИС.Удалить(СтрокаКеша);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из ДанныеШтрихкодовУпаковокГосИС Цикл
		СтрокаТаблицы.ШтрихкодыУпаковок = Новый ФиксированноеСоответствие(СтрокаТаблицы.ШтрихкодыУпаковок);
	КонецЦикла;
	
	Форма.ДанныеШтрихкодовУпаковокГосИС.Загрузить(ДанныеШтрихкодовУпаковокГосИС);
	
КонецПроцедуры