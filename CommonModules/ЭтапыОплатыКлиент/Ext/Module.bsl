
&ИзменениеИКонтроль("ЭтапыГрафикаОплатыПередНачаломИзменения")
Процедура РСК_ЭтапыГрафикаОплатыПередНачаломИзменения(Форма, ПараметрыЭтапов, Отказ, Оповещение)

	Если Форма.НесколькоДатОтгрузки Тогда
		Отказ = Истина;
		ТекущиеДанные = Форма.Элементы.ЭтапыГрафикаОплаты.ТекущиеДанные;
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		Иначе
			ПараметрыЭтапов.Вставить("Операция",        "Изменение");
			ПараметрыЭтапов.Вставить("ВариантОплаты",   ТекущиеДанные.ВариантОплаты);
			ПараметрыЭтапов.Вставить("ВариантОтсчета",  ТекущиеДанные.ВариантОтсчета);
			ПараметрыЭтапов.Вставить("Сдвиг",           ТекущиеДанные.Сдвиг);
			ПараметрыЭтапов.Вставить("ДатаПлатежа",     ТекущиеДанные.ДатаПлатежа);

			ПараметрыЭтапов.Вставить("ВариантОплатыПередИзменением",   ТекущиеДанные.ВариантОплаты);
			ПараметрыЭтапов.Вставить("ВариантОтсчетаПередИзменением",  ТекущиеДанные.ВариантОтсчета);
			ПараметрыЭтапов.Вставить("СдвигПередИзменением",           ТекущиеДанные.Сдвиг);

			ПроцентЗалогаЗаТару = 0;
			ПроцентПлатежа      = 0;
			СуммаЗалогаЗаТару   = 0;
			СуммаПлатежа        = 0;

			Для Каждого Стр Из ПараметрыЭтапов.ЭтапыГрафикаОплаты Цикл
				Если Стр.Сдвиг = ТекущиеДанные.Сдвиг
					И Стр.ВариантОплаты = ТекущиеДанные.ВариантОплаты
					И Стр.ВариантОтсчета = ТекущиеДанные.ВариантОтсчета Тогда
					ПроцентПлатежа = ПроцентПлатежа + Стр.ПроцентПлатежа;
					СуммаПлатежа = СуммаПлатежа + Стр.СуммаПлатежа;
					Если ПараметрыЭтапов.ЕстьТара Тогда
						СуммаЗалогаЗаТару = СуммаЗалогаЗаТару + Стр.СуммаЗалогаЗаТару;
						ПроцентЗалогаЗаТару = ПроцентЗалогаЗаТару + Стр.ПроцентЗалогаЗаТару;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;

			ПараметрыЭтапов.Вставить("ПроцентЗалогаЗаТару", ПроцентЗалогаЗаТару);
			ПараметрыЭтапов.Вставить("ПроцентПлатежа",      ПроцентПлатежа);
			ПараметрыЭтапов.Вставить("СуммаЗалогаЗаТару",   СуммаЗалогаЗаТару);
			ПараметрыЭтапов.Вставить("СуммаПлатежа",        СуммаПлатежа);
		КонецЕсли;
		#Вставка
		//++ РС Консалт: Трофимов Евгений 03.03.2023 Задача 23985
		//e1cib/data/Документ.Задание?ref=b37a5a78714d889647e1e0192b7e7134
		Если ЗначениеЗаполнено(Форма.Ключ) Тогда
			Если ТипЗнч(Форма.Ключ) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
				СтруктЗаказа = РСК_ВызовСервера.ЗначенияРеквизитовОбъекта(Форма.Ключ, "ХозяйственнаяОперация,ДатаПоДаннымПоставщика");
				ПараметрыЭтапов.Вставить("ХозяйственнаяОперация", СтруктЗаказа.ХозяйственнаяОперация);
				ПараметрыЭтапов.Вставить("ДатаРазмещения", СтруктЗаказа.ДатаПоДаннымПоставщика);
			КонецЕсли;
		КонецЕсли;
		//-- КонецЗадачи 23985		
		#КонецВставки

		ДополнительныеПараметры = ОбщегоНазначенияКлиент.СкопироватьРекурсивно(ПараметрыЭтапов);
		ДополнительныеПараметры.Вставить("ОповещениеПослеЗавершения", Оповещение);
		ДополнительныеПараметры.Вставить("Форма", Форма);

		ОповещениеТекущее = Новый ОписаниеОповещения("ЭтапыГрафикаОплатыПередНачаломИзмененияЗавершение", ЭтотОбъект, ДополнительныеПараметры);

		ОткрытьФорму("ОбщаяФорма.ЭтапОплаты",ПараметрыЭтапов, Форма,,,,ОповещениеТекущее,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;

КонецПроцедуры

&ИзменениеИКонтроль("ЭтапыГрафикаОплатыСдвигВариантОтсчетаПриИзменении")
Процедура РСК_ЭтапыГрафикаОплатыСдвигВариантОтсчетаПриИзменении(ТекущиеДанные, ДатаЗаказа, ДатаСогласования, ДатаОтгрузки, СрокПереходаПраваСобственности, ДатаПереходаПраваСобственности, Календарь)

	СтруктураПараметров = ЭтапыОплатыКлиентСервер.ПараметрыРасчетаДатыПлатежа();
	СтруктураПараметров.ВариантОтсчета                 = ТекущиеДанные.ВариантОтсчета;
	СтруктураПараметров.Сдвиг                          = ТекущиеДанные.Сдвиг;
	СтруктураПараметров.ДатаЗаказа                     = ДатаЗаказа;
	СтруктураПараметров.ДатаСогласования               = ДатаСогласования;
	СтруктураПараметров.ДатаОтгрузки                   = ДатаОтгрузки;
	СтруктураПараметров.ДатаПереходаПраваСобственности = ДатаПереходаПраваСобственности;
	СтруктураПараметров.СрокПереходаПраваСобственности = СрокПереходаПраваСобственности;
	СтруктураПараметров.Календарь                      = Календарь;

	#Вставка
	//++ РС Консалт: Трофимов Евгений 03.03.2023 Задача 23985
	//e1cib/data/Документ.Задание?ref=b37a5a78714d889647e1e0192b7e7134
	Если СтруктураПараметров.ВариантОтсчета = ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ДоДатыРазмещения") Тогда
		СтруктураПараметров.ДатаРазмещения = ДатаПереходаПраваСобственности;
	ИначеЕсли СтруктураПараметров.ВариантОтсчета = ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ДоДатыОкончанияПроизводства")
		ИЛИ СтруктураПараметров.ВариантОтсчета = ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ОтДатыОкончанияПроизводства") Тогда
		СтруктураПараметров.ДатаОкончанияПроизводства = ДатаПереходаПраваСобственности;
	ИначеЕсли СтруктураПараметров.ВариантОтсчета = ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ДоДатыПрибытияВПорт") Тогда
		СтруктураПараметров.ДатаПрибытияВПорт = ДатаПереходаПраваСобственности;
	КонецЕсли;
	//-- КонецЗадачи 23985	
	#КонецВставки

	Если ЗначениеЗаполнено(Календарь) Тогда
		ТекущиеДанные.ДатаПлатежа = ЭтапыОплатыВызовСервера.ДатаПлатежаПоКалендарю(СтруктураПараметров);
	Иначе
		ТекущиеДанные.ДатаПлатежа = ЭтапыОплатыКлиентСервер.ДатаПлатежаБезКалендаря(СтруктураПараметров);
	КонецЕсли;

	Если (ТекущиеДанные.ВариантОплаты = ПредопределенноеЗначение("Перечисление.ВариантыКонтроляОплатыКлиентом.АвансДоОбеспечения")
		Или ТекущиеДанные.ВариантОплаты = ПредопределенноеЗначение("Перечисление.ВариантыКонтроляОплатыКлиентом.ПредоплатаДоОтгрузки")
		ИЛИ ТекущиеДанные.ВариантОплаты = ПредопределенноеЗначение("Перечисление.ВариантыКонтроляОплатыКлиентом.ПустаяСсылка")) 
		И (ТекущиеДанные.ВариантОтсчета = ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ОтДатыОтгрузки")
		Или ТекущиеДанные.ВариантОтсчета = ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ОтДатыПереходаПраваСобственности")) Тогда
		ТекущиеДанные.ВариантОплаты = ПредопределенноеЗначение("Перечисление.ВариантыКонтроляОплатыКлиентом.КредитСдвиг");
	ИначеЕсли (ТекущиеДанные.ВариантОплаты = ПредопределенноеЗначение("Перечисление.ВариантыКонтроляОплатыПоставщику.АвансДоПодтверждения")
		Или ТекущиеДанные.ВариантОплаты = ПредопределенноеЗначение("Перечисление.ВариантыКонтроляОплатыПоставщику.ПредоплатаДоПоступления")
		ИЛИ ТекущиеДанные.ВариантОплаты = ПредопределенноеЗначение("Перечисление.ВариантыКонтроляОплатыПоставщику.ПустаяСсылка")) 
		И (ТекущиеДанные.ВариантОтсчета = ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ОтДатыОтгрузки")
		Или ТекущиеДанные.ВариантОтсчета = ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ОтДатыПереходаПраваСобственности")) Тогда
		ТекущиеДанные.ВариантОплаты = ПредопределенноеЗначение("Перечисление.ВариантыКонтроляОплатыПоставщику.КредитСдвиг");
	ИначеЕсли ТекущиеДанные.ВариантОтсчета = ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ДоДатыОтгрузки") 
		И (ТекущиеДанные.ВариантОплаты = ПредопределенноеЗначение("Перечисление.ВариантыКонтроляОплатыКлиентом.КредитСдвиг")
		ИЛИ ТекущиеДанные.ВариантОплаты = ПредопределенноеЗначение("Перечисление.ВариантыКонтроляОплатыКлиентом.ПустаяСсылка")) Тогда
		ТекущиеДанные.ВариантОплаты = ПредопределенноеЗначение("Перечисление.ВариантыКонтроляОплатыКлиентом.ПредоплатаДоОтгрузки");
	ИначеЕсли ТекущиеДанные.ВариантОтсчета = ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ДоДатыОтгрузки") 
		И (ТекущиеДанные.ВариантОплаты = ПредопределенноеЗначение("Перечисление.ВариантыКонтроляОплатыПоставщику.КредитСдвиг")
		ИЛИ ТекущиеДанные.ВариантОплаты = ПредопределенноеЗначение("Перечисление.ВариантыКонтроляОплатыПоставщику.ПустаяСсылка")) Тогда
		ТекущиеДанные.ВариантОплаты = ПредопределенноеЗначение("Перечисление.ВариантыКонтроляОплатыПоставщику.ПредоплатаДоПоступления");
	КонецЕсли;

КонецПроцедуры

&ИзменениеИКонтроль("ЭтапыГрафикаОплатыПередНачаломИзмененияЗавершение")
Процедура РСК_ЭтапыГрафикаОплатыПередНачаломИзмененияЗавершение(Результат, Параметры)

	Если Результат <> Неопределено Тогда

		Форма = Параметры.Форма;
		ТекущиеДанные = Форма.Элементы.ЭтапыГрафикаОплаты.ТекущиеДанные;

		Если ЗначениеЗаполнено(Результат.ДатаПлатежа) Тогда
			ЗаполнитьЗначенияСвойств(ТекущиеДанные, Результат);
		Иначе

			СуммаПлатежаКРаспределению = Результат.СуммаПлатежа;
			ПроцентПлатежаКРаспределению = Результат.ПроцентПлатежа;
			СуммаЗалогаКРаспределению = Результат.СуммаЗалогаЗаТару;
			ПроцентЗалогаКРаспределению = Результат.ПроцентЗалогаЗаТару;

			сч = 0;
			Пока сч < Параметры.ЭтапыГрафикаОплаты.Количество() Цикл
				Строка = Параметры.ЭтапыГрафикаОплаты[сч];
				Если Строка.Сдвиг = Результат.СдвигПередИзменением
					И Строка.ВариантОплаты = Результат.ВариантОплатыПередИзменением
					И Строка.ВариантОтсчета = Результат.ВариантОтсчетаПередИзменением Тогда
					Параметры.ЭтапыГрафикаОплаты.Удалить(сч);
				Иначе
					сч = сч + 1;
				КонецЕсли;

			КонецЦикла;

			ИмяКолонки = ?(Параметры.ДатыОтгрузок.Количество() > 0 
			И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Параметры.ДатыОтгрузок[0],"СуммаПлатежа"),
			"СуммаПлатежа",
			"Сумма");

			сч = 1;
			Для Каждого Стр Из Параметры.ДатыОтгрузок Цикл

				Если Стр[ИмяКолонки] = 0 И (НЕ Параметры.ЕстьТара ИЛИ Стр.СуммаЗалогаЗаТару = 0) Тогда
					сч = сч + 1;
					Продолжить;
				КонецЕсли;

				НовСтр = Параметры.ЭтапыГрафикаОплаты.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр,Результат);
				НовСтр.ДатаОтгрузки = Стр.ДатаОтгрузки;

				Если сч <> Параметры.ДатыОтгрузок.Количество() Тогда
					НовСтр.СуммаПлатежа = Стр[ИмяКолонки]/Параметры.СуммаОплатыПоДокументу * Результат.СуммаПлатежа;
					НовСтр.ПроцентПлатежа = Стр[ИмяКолонки]/Параметры.СуммаОплатыПоДокументу * Результат.ПроцентПлатежа;
					СуммаПлатежаКРаспределению = СуммаПлатежаКРаспределению - НовСтр.СуммаПлатежа;
					ПроцентПлатежаКРаспределению = ПроцентПлатежаКРаспределению - НовСтр.ПроцентПлатежа;

					Если Параметры.ЕстьТара Тогда
						НовСтр.СуммаЗалогаЗаТару = Стр.СуммаЗалогаЗаТару/Параметры.СуммаЗалогаПоДокументу * Результат.СуммаЗалогаЗаТару;
						НовСтр.ПроцентЗалогаЗаТару = Стр.СуммаЗалогаЗаТару/Параметры.СуммаЗалогаПоДокументу * Результат.ПроцентЗалогаЗаТару;
						СуммаЗалогаКРаспределению = СуммаЗалогаКРаспределению - Результат.СуммаЗалогаЗаТару;
						ПроцентЗалогаКРаспределению = ПроцентЗалогаКРаспределению - Результат.ПроцентЗалогаЗаТару;
					КонецЕсли;

				Иначе
					НовСтр.СуммаПлатежа = СуммаПлатежаКРаспределению;
					НовСтр.ПроцентПлатежа = ПроцентПлатежаКРаспределению;
					Если Параметры.ЕстьТара Тогда
						НовСтр.СуммаЗалогаЗаТару = СуммаЗалогаКРаспределению;
						НовСтр.ПроцентЗалогаЗаТару = ПроцентЗалогаКРаспределению;
					КонецЕсли;
				КонецЕсли;
				#Вставка
				//++ РС Консалт: Трофимов Евгений 03.03.2023 Задача 23985
				//e1cib/data/Документ.Задание?ref=b37a5a78714d889647e1e0192b7e7134
				//Используем параметр ДатаПереходаПраваСобственности как переменную для передачи базы расчёта даты платежа
				ДатаПереходаПраваСобственности = Параметры.ДатаПереходаПраваСобственности;
				Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Параметры.ДатыОтгрузок[0],"ДатаОкончанияПроизводства") Тогда
					Если Параметры.ВариантОтсчета = ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ДоДатыОкончанияПроизводства")
						ИЛИ Параметры.ВариантОтсчета = ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ОтДатыОкончанияПроизводства") Тогда
						ДатаПереходаПраваСобственности = Стр.ДатаОкончанияПроизводства;
					ИначеЕсли Параметры.ВариантОтсчета = ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ДоДатыПрибытияВПорт") Тогда
						ДатаПереходаПраваСобственности = Стр.ДатаПрибытияВПорт;
					КонецЕсли;
				КонецЕсли;
				//-- КонецЗадачи 23985				
				#КонецВставки

				ЭтапыГрафикаОплатыСдвигВариантОтсчетаПриИзменении(
				НовСтр,
				Параметры.ДатаЗаказа,
				Параметры.ДатаСогласования,
				НовСтр.ДатаОтгрузки,
				Параметры.СрокПереходаПраваСобственности,
				#Удаление
				Параметры.ДатаПереходаПраваСобственности,
				#КонецУдаления
				#Вставка
				//++ РС Консалт: Трофимов Евгений 03.03.2023 Задача 23985
				//e1cib/data/Документ.Задание?ref=b37a5a78714d889647e1e0192b7e7134
				ДатаПереходаПраваСобственности,
				//-- КонецЗадачи 23985				
				#КонецВставки
				Параметры.Календарь);

				сч = сч + 1;
			КонецЦикла;
		КонецЕсли;

		Форма.Модифицированность = Истина;

		Если Параметры.ОповещениеПослеЗавершения <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(Параметры.ОповещениеПослеЗавершения, Результат);
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры
