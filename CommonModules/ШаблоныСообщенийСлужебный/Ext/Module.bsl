
&ИзменениеИКонтроль("ЗаполнитьПолучателейСообщения")
Процедура РСК_ЗаполнитьПолучателейСообщения(ПараметрыОтправки, ПараметрыШаблона, Результат, МенеджерОбъекта)

	Если ПараметрыОтправки.Свойство("ДополнительныеПараметры")
		И ПараметрыОтправки.ДополнительныеПараметры.Свойство("ПроизвольныеПараметры") Тогда

		ПредметСообщения = Новый Структура("Предмет, ПроизвольныеПараметры");
		ПредметСообщения.Предмет               = ПараметрыОтправки.Предмет;
		ПредметСообщения.ПроизвольныеПараметры = ПараметрыОтправки.ДополнительныеПараметры.ПроизвольныеПараметры;
		ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ПредметСообщения, ПараметрыОтправки.ДополнительныеПараметры, Ложь);

	Иначе

		ПредметСообщения = ПараметрыОтправки.Предмет;

	КонецЕсли;

	Если ПараметрыШаблона.ТипШаблона = "Письмо" Тогда
		Получатели = СформироватьПолучателейПоУмолчанию(ПараметрыОтправки.Предмет, ПараметрыШаблона.ТипШаблона);
		ШаблоныСообщенийПереопределяемый.ПриЗаполненииПочтыПолучателейВСообщении(Получатели, ПараметрыШаблона.ПолноеИмяТипаНазначения, ПредметСообщения);
		Если МенеджерОбъекта <> Неопределено Тогда
			МенеджерОбъекта.ПриЗаполненииПочтыПолучателейВСообщении(Получатели, ПредметСообщения);
		КонецЕсли;

		Если ПараметрыШаблона.Свойство("РасширенныйСписокПолучателей")
			И ПараметрыШаблона.РасширенныйСписокПолучателей Тогда

			Результат.Получатель = Новый Массив;
			Для каждого Получатель Из Получатели Цикл
				Если ЗначениеЗаполнено(Получатель.Адрес) Тогда
					ЗначениеПолучателя = Новый Структура("Адрес, Представление, ИсточникКонтактнойИнформации", 
					Получатель.Адрес, Получатель.Представление, Получатель.Контакт);
					Результат.Получатель.Добавить(ЗначениеПолучателя);
				КонецЕсли;
			КонецЦикла;

		Иначе

			Результат.Получатель = Новый СписокЗначений();
			Для каждого Получатели Из Получатели Цикл
				Если ЗначениеЗаполнено(Получатели.Адрес) Тогда
					Результат.Получатель.Добавить(Получатели.Адрес, Получатели.Представление);
				КонецЕсли;
			КонецЦикла;

		КонецЕсли;

	Иначе

		Получатели = СформироватьПолучателейПоУмолчанию(ПараметрыОтправки.Предмет, ПараметрыШаблона.ТипШаблона);    
		ШаблоныСообщенийПереопределяемый.ПриЗаполненииТелефоновПолучателейВСообщении(Получатели, ПараметрыШаблона.ПолноеИмяТипаНазначения, ПредметСообщения);
		Если МенеджерОбъекта <> Неопределено Тогда
			МенеджерОбъекта.ПриЗаполненииТелефоновПолучателейВСообщении(Получатели, ПредметСообщения);
		КонецЕсли;

		РасширенныйСписокПолучателей = ПараметрыОтправки.ДополнительныеПараметры.Свойство("РасширенныйСписокПолучателей") И ПараметрыОтправки.ДополнительныеПараметры.РасширенныйСписокПолучателей;

		Если РасширенныйСписокПолучателей Или (ПараметрыШаблона.Свойство("РасширенныйСписокПолучателей")
			И ПараметрыШаблона.РасширенныйСписокПолучателей) Тогда

			Результат.Получатель = Новый Массив;
			Для каждого Получатель Из Получатели Цикл
				Если ЗначениеЗаполнено(Получатель.НомерТелефона) Тогда
					ЗначениеПолучателя = Новый Структура("НомерТелефона, Представление, ИсточникКонтактнойИнформации", 
					Получатель.НомерТелефона, Получатель.Представление, Получатель.Контакт);
					Результат.Получатель.Добавить(ЗначениеПолучателя);
				КонецЕсли;
			КонецЦикла;

		Иначе

			Результат.Получатель = Новый СписокЗначений;
			Для каждого Получатели Из Получатели Цикл         
				#Вставка     
				Если ЗначениеЗаполнено(ПараметрыОтправки.ДополнительныеПараметры.ПараметрыСообщения.КонтактныеДанныеЧека) тогда     
					Получатели.НомерТелефона = ПараметрыОтправки.ДополнительныеПараметры.ПараметрыСообщения.КонтактныеДанныеЧека; 
				КонецЕсли;
				#КонецВставки	
				Если ЗначениеЗаполнено(Получатели.НомерТелефона) Тогда
					Результат.Получатель.Добавить(Получатели.НомерТелефона, Получатели.Представление);
				КонецЕсли;
			КонецЦикла;

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&ИзменениеИКонтроль("ОпределитьПредметыШаблонов")
Функция РСК_ОпределитьПредметыШаблонов()
	ИмяМакетаШаблонаПоУмолчанию = "ДанныеШаблонаСообщений";

	ОснованияДляШаблоновСообщений = Новый ТаблицаЗначений;
	ОснованияДляШаблоновСообщений.Колонки.Добавить("Имя", Новый ОписаниеТипов("Строка"));
	ОснованияДляШаблоновСообщений.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	ОснованияДляШаблоновСообщений.Колонки.Добавить("Макет", Новый ОписаниеТипов("Строка"));
	ОснованияДляШаблоновСообщений.Колонки.Добавить("ЗначенияПараметровСКД", Новый ОписаниеТипов("Структура"));

	ТипыПредметовШаблоновСообщений = Метаданные.ОпределяемыеТипы.ПредметШаблонаСообщения.Тип.Типы();
	Для каждого ТипПредметаШаблонаСообщения Из ТипыПредметовШаблоновСообщений Цикл
		Если ТипПредметаШаблонаСообщения <> Тип("СправочникСсылка.ИдентификаторыОбъектовМетаданных") Тогда
			Назначение = ОснованияДляШаблоновСообщений.Добавить();
			МетаданныеОбъект = Метаданные.НайтиПоТипу(ТипПредметаШаблонаСообщения);
			Назначение.Имя = МетаданныеОбъект.ПолноеИмя();
			Назначение.Представление = МетаданныеОбъект.Представление();
			Если МетаданныеОбъект.Макеты.Найти(ИмяМакетаШаблонаПоУмолчанию) <> Неопределено Тогда
				Назначение.Макет = ИмяМакетаШаблонаПоУмолчанию;        
				#Вставка 
				Если ТипПредметаШаблонаСообщения = Тип("ДокументСсылка.ЗаказКлиента") Тогда   
					Назначение.Макет = "РС_ДанныеШаблонаСообщений";  
				КонецЕсли;
				#КонецВставки
				// Параметры СКД
				МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(Назначение.Имя);
				МакетСКД = МенеджерОбъекта.ПолучитьМакет(ИмяМакетаШаблонаПоУмолчанию);
				АдресСхемы = ПоместитьВоВременноеХранилище(МакетСКД);
				КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
				КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы));
				ПараметрПериод  = Новый ПараметрКомпоновкиДанных("Период");

				Для Каждого ДоступныйПараметр Из КомпоновщикНастроек.Настройки.ПараметрыДанных.ДоступныеПараметры.Элементы Цикл
					ИмяПараметра = Строка(ДоступныйПараметр.Параметр);
					Если НЕ (ДоступныйПараметр.Параметр =  ПараметрПериод
						ИЛИ СтрСравнить(ИмяПараметра, МетаданныеОбъект.Имя) = 0) Тогда
						Назначение.ЗначенияПараметровСКД.Вставить(ИмяПараметра, NULL);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Возврат ОснованияДляШаблоновСообщений;

КонецФункции
