 
//++ РС Консалт: Минаков А.С.: Неисправность из-за режима совместимости  
&ИзменениеИКонтроль("ОсобенностиУчетаОтКоторыхЗависятРеквизитыСерий")
Функция РСК_ОсобенностиУчетаОтКоторыхЗависятРеквизитыСерий()

	ОсобенностиУчетаОтКоторыхЗависятРеквизитыСерий = Новый Массив;

	ОписанияИспользованияРеквизитовСерии = Справочники.ВидыНоменклатуры.ОписанияИспользованияРеквизитовСерии();

	Для Каждого Описания из ОписанияИспользованияРеквизитовСерии Цикл

		Если Не ПустаяСтрока(Описания.ОсобенностиУчета) Тогда

			ИменаОсобенностей = СтрРазделить(Описания.ОсобенностиУчета, ",");

			Для Каждого ИмяОсобенности из ИменаОсобенностей Цикл
				
				#Вставка
				//++ РС Консалт: Минаков А.С.: Неисправность из-за режима совместимости 
				Если ИмяОсобенности = "ПродукцияМаркируемаяДляГИСМ" Тогда
					ЗначениеПеречисления = Неопределено
				Иначе
					//++ РС Консалт: Минаков А.С.: Неисправность из-за режима совместимости 
					#КонецВставки
					ЗначениеПеречисления = ПредопределенноеЗначение("Перечисление.ОсобенностиУчетаНоменклатуры." + ИмяОсобенности);
					#Вставка
					//++ РС Консалт: Минаков А.С.: Неисправность из-за режима совместимости 
				КонецЕсли;
				//++ РС Консалт: Минаков А.С.: Неисправность из-за режима совместимости 
				#КонецВставки

				Если ОсобенностиУчетаОтКоторыхЗависятРеквизитыСерий.Найти(ЗначениеПеречисления) = Неопределено Тогда
					ОсобенностиУчетаОтКоторыхЗависятРеквизитыСерий.Добавить(ЗначениеПеречисления);
				КонецЕсли;

			КонецЦикла;

		КонецЕсли;

	КонецЦикла;

	Возврат ОсобенностиУчетаОтКоторыхЗависятРеквизитыСерий;

КонецФункции

//++ Конарев И.И.: Новые правила формирования артикула номенклатуры в документе 
&ИзменениеИКонтроль("ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВСтруктуре")
Процедура РСК_ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВСтруктуре(СтруктураДанных, СтруктураДействий)
	
	#Вставка 
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакАртикул") Тогда 
		СтруктураДействий.Удалить("ЗаполнитьПризнакАртикул");
		ЗаполнитьАртикулСтрокиПоПравилу(СтруктураДанных);
	КонецЕсли;
	#КонецВставки
	ОбработкаТабличнойЧастиСервер.НормализоватьДействия(СтруктураДействий);

	СтруктураДопДанных = ОбработкаТабличнойЧастиСервер.ОписаниеДополнительнойИнформации(СтруктураДействий);

	ТаблицаВыгрузки = Новый ТаблицаЗначений;
	ТаблицаВыгрузки.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"));
	Для Каждого Источник Из СтруктураДопДанных.СтруктураИсточников Цикл
		ТаблицаВыгрузки.Колонки.Добавить(Источник.Ключ, ОбщегоНазначенияУТ.ОписаниеТиповПоТипу(ТипЗнч(СтруктураДанных[Источник.Ключ])));
	КонецЦикла;
	ЗаполнитьЗначенияСвойств(ТаблицаВыгрузки.Добавить(), СтруктураДанных);

	Запрос = Новый Запрос(ОбработкаТабличнойЧастиСервер.ПолучитьТекстЗапросаПоСлужебнымРеквизитамТЧ(СтруктураДействий, СтруктураДопДанных));
	Запрос.УстановитьПараметр("КоллекцияДанных", ТаблицаВыгрузки);

	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураДанных, Выборка, СтруктураДопДанных.РеквизитыЗаполнения);
	КонецЕсли;

КонецПроцедуры 

Процедура ЗаполнитьАртикулСтрокиПоПравилу(СтруктураДанных)
	
	АртикулНоменклатуры   = "";
	АртикулХарактеристики = "";
	АртикулСерии		  = "";  
	
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(СтруктураДанных.Номенклатура);
	Если СтруктураДанных.Свойство("Серия") И ЗначениеЗаполнено(СтруктураДанных.Серия) Тогда
		МассивОбъектов.Добавить(СтруктураДанных.Серия); 
	КонецЕсли; 
	Если СтруктураДанных.Свойство("Характеристика") И ЗначениеЗаполнено(СтруктураДанных.Характеристика)
		И  (ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктураДанных.Характеристика,"Владелец") = СтруктураДанных.Номенклатура
		ИЛИ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктураДанных.Характеристика,"Владелец") = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктураДанных.Номенклатура,"ВладелецХарактеристик")) Тогда
		МассивОбъектов.Добавить(СтруктураДанных.Характеристика); 
	КонецЕсли;
	
	ЗначенияАртикула = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивОбъектов, "Артикул", Истина);  
	
	АртикулНоменклатуры   = ЗначенияАртикула.Получить(СтруктураДанных.Номенклатура);  
	Если СтруктураДанных.Свойство("Характеристика") Тогда
		АртикулХарактеристики = ?(ЗначениеЗаполнено(АртикулНоменклатуры) И ЗначениеЗаполнено(ЗначенияАртикула.Получить(СтруктураДанных.Характеристика)),
								СтрШаблон("-%1",ЗначенияАртикула.Получить(СтруктураДанных.Характеристика)),
								Строка(ЗначенияАртикула.Получить(СтруктураДанных.Характеристика))); 
	КонецЕсли;
	Если СтруктураДанных.Свойство("Серия") Тогда							
    	АртикулСерии          = ?(ЗначениеЗаполнено(ЗначенияАртикула.Получить(СтруктураДанных.Серия)) И (ЗначениеЗаполнено(АртикулНоменклатуры) ИЛИ ЗначениеЗаполнено(АртикулХарактеристики)),
								СтрШаблон("-%1",ЗначенияАртикула.Получить(СтруктураДанных.Серия)),
								Строка(ЗначенияАртикула.Получить(СтруктураДанных.Серия)));
	КонецЕсли;
	//Структура артикула: артикул номенклатуры - артикул характеристки - артикул серии
	Артикул = СтрШаблон("%1%2%3",АртикулНоменклатуры, АртикулХарактеристики, АртикулСерии);  
	Если СтруктураДанных.Свойство("Артикул") Тогда
		СтруктураДанных.Артикул = Артикул;
	КонецЕсли;
	
КонецПроцедуры

&ИзменениеИКонтроль("ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции")
Процедура РСК_ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(КоллекцияДанных, СтруктураДействий, СтрокиЗаполнения)
	
	#Вставка 
	НеобходимоЗаполнитьАртикул = СтруктураДействий.Свойство("ЗаполнитьПризнакАртикул");
	Если НеобходимоЗаполнитьАртикул Тогда
		СтруктураДействий.Удалить("ЗаполнитьПризнакАртикул");		
	КонецЕсли;
	#КонецВставки
	ОбработкаТабличнойЧастиСервер.НормализоватьДействия(СтруктураДействий);

	СтруктураДопДанных = ОбработкаТабличнойЧастиСервер.ОписаниеДополнительнойИнформации(СтруктураДействий);
	Колонки = "НомерСтроки" + СтруктураДопДанных.РеквизитыВыгрузки;

	Если СтрокиЗаполнения = Неопределено Тогда

		Если ТипЗнч(КоллекцияДанных) = Тип("ТаблицаЗначений") Тогда
			ПараметрКоллекция = КоллекцияДанных;
		Иначе
			ПараметрКоллекция = КоллекцияДанных.Выгрузить(, Колонки);
		КонецЕсли;

	ИначеЕсли СтрокиЗаполнения.Количество() > 0 Тогда

		Если ТипЗнч(КоллекцияДанных) = Тип("ТаблицаЗначений") Тогда
			ПараметрКоллекция = КоллекцияДанных.Скопировать(СтрокиЗаполнения, Колонки);
		Иначе
			ПараметрКоллекция = КоллекцияДанных.Выгрузить(СтрокиЗаполнения, Колонки);
		КонецЕсли;

	Иначе
		Возврат;
	КонецЕсли;

	Запрос = Новый Запрос(ОбработкаТабличнойЧастиСервер.ПолучитьТекстЗапросаПоСлужебнымРеквизитамТЧ(СтруктураДействий, СтруктураДопДанных));
	Запрос.УстановитьПараметр("КоллекцияДанных", ПараметрКоллекция);

	Если СтрокиЗаполнения <> Неопределено Тогда

		ТЗРезультат = Запрос.Выполнить().Выгрузить(); // ТабличнаяЧасть
		Для Каждого Стр Из ТЗРезультат Цикл
			ЗаполнитьЗначенияСвойств(КоллекцияДанных[Стр.НомерСтроки - 1], Стр, СтруктураДопДанных.РеквизитыЗаполнения); 
			#Вставка
			Если НеобходимоЗаполнитьАртикул Тогда
				ЗаполнитьАртикулСтрокиПоПравилу(КоллекцияДанных[Стр.НомерСтроки - 1]);	
			КонецЕсли;
			#КонецВставки
		КонецЦикла;

	Иначе

		Выборка = Запрос.Выполнить().Выбрать();
		Для Номер = 0 По КоллекцияДанных.Количество()-1 Цикл
			Выборка.Следующий(); // Количество строк в выборке по запросу всегда равно количеству строк в коллекции
			ЗаполнитьЗначенияСвойств(КоллекцияДанных[Номер], Выборка, СтруктураДопДанных.РеквизитыЗаполнения);
			#Вставка
			Если НеобходимоЗаполнитьАртикул Тогда
				ЗаполнитьАртикулСтрокиПоПравилу(КоллекцияДанных[Номер]);	
			КонецЕсли;
			#КонецВставки
		КонецЦикла;

	КонецЕсли;

КонецПроцедуры


