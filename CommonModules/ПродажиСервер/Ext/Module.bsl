
&ИзменениеИКонтроль("ПроверитьКорректностьЗаполненияДокументаПродажи")
Процедура РСК_ПроверитьКорректностьЗаполненияДокументаПродажи(Знач ДокументПродажи, Отказ)

	// Если документ уже заполнен некорректно - не будем выполнять запросы
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	Если ОбщегоНазначенияУТКлиентСервер.АвторизованВнешнийПользователь() Тогда
		Возврат;
	КонецЕсли;

	РеквизитыДокумента = Новый Структура("Дата, Организация");
	ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ДокументПродажи);

	// Проверим доступность ролей
	ОтклонениеОтУсловийПродаж = ПраваПользователяПовтИсп.ОтклонениеОтУсловийПродаж();
	РеализацияСверхЗаказа     = ПраваПользователяПовтИсп.РеализацияСверхЗаказа();

	УстановитьПривилегированныйРежим(Истина);

	// Проверим нужно ли проверять диапазон допустимых цен
	ВидМаксимальноДопустимыхЦенПродажи = Константы.ВидМаксимальноДопустимыхЦенПродажи.Получить();
	ВидМинимальноДопустимыхЦенПродажи  = Константы.ВидМинимальноДопустимыхЦенПродажи.Получить();
	ПроверятьДиапазонЦен               = ЗначениеЗаполнено(ВидМаксимальноДопустимыхЦенПродажи) Или ЗначениеЗаполнено(ВидМинимальноДопустимыхЦенПродажи);

	// Заполним массив необходимых проверок в зависимости от типа документа
	МассивПроверок    = Новый Массив();
	ТипДокумента      = ТипЗнч(ДокументПродажи);
	ИмяТаблицы        = ОбщегоНазначения.ИмяТаблицыПоСсылке(ДокументПродажи.Ссылка);
	Если ТипДокумента = Тип("ОбработкаОбъект.ПомощникПродаж") Тогда

		ВариантОформленияДокументовПомощникаПродаж = ДокументПродажи.ВариантОформленияДокументов;
		ВозможныеВарианты = Перечисления.ВариантыОформленияДокументовПродажи;

		Если ВариантОформленияДокументовПомощникаПродаж = ВозможныеВарианты.ЗаказКлиента
			ИЛИ ВариантОформленияДокументовПомощникаПродаж = ВозможныеВарианты.ЗаказКлиентаПередачаТоваровХранителю
			ИЛИ ВариантОформленияДокументовПомощникаПродаж = ВозможныеВарианты.ЗаказКлиентаРеализацияТоваровУслуг Тогда
			ИмяТаблицы = ОбщегоНазначения.ИмяТаблицыПоСсылке(Документы.ЗаказКлиента.ПустаяСсылка());
		ИначеЕсли ВариантОформленияДокументовПомощникаПродаж = ВозможныеВарианты.ПередачаТоваровХранителю Тогда
			ИмяТаблицы = ОбщегоНазначения.ИмяТаблицыПоСсылке(Документы.ПередачаТоваровХранителю.ПустаяСсылка());
		ИначеЕсли ВариантОформленияДокументовПомощникаПродаж = ВозможныеВарианты.РеализацияТоваровУслуг Тогда
			ИмяТаблицы = ОбщегоНазначения.ИмяТаблицыПоСсылке(Документы.РеализацияТоваровУслуг.ПустаяСсылка());
		КонецЕсли; 

	КонецЕсли; 
	ИмяТЧ             = ПолучитьИмяТабличнойЧасти(ИмяТаблицы);
	ПредставлениеТЧ   = ПолучитьПредставлениеТабличнойЧасти(ИмяТаблицы);

	СогласованВ1СДокументооборот = Ложь;

	// ИнтеграцияС1СДокументооборотом
	// Проверим возможность и состояние согласования через 1С:Документооборот
	СогласованиеЧерез1СДокументооборот =
	(Константы.ИспользоватьИнтеграциюС1СДокументооборот.Получить()
	Или Константы.ИспользоватьИнтеграциюС1СДокументооборот3.Получить())
	И Константы.ИспользоватьСогласованиеЧерез1СДокументооборот.Получить();
	Если СогласованиеЧерез1СДокументооборот И
		(ТипДокумента = Тип("ДокументОбъект.ЗаказКлиента") Или
		ТипДокумента = Тип("ДокументОбъект.КоммерческоеПредложениеКлиенту") Или
		ТипДокумента = Тип("ДокументОбъект.ЗаявкаНаВозвратТоваровОтКлиента") Или
		ТипДокумента = Тип("СправочникОбъект.СоглашенияСКлиентами")) Тогда
		СогласованВ1СДокументооборот = ИнтеграцияС1СДокументооборотБазоваяФункциональность.СогласованВ1СДокументооборот(
		ДокументПродажи.Ссылка);
	КонецЕсли;
	// Конец ИнтеграцияС1СДокументооборотом

	ВсеСтрокиОтменены = Ложь;
	ОперацииПередачи = ОперацииПередачиТоваров();
	ОперацииВозвратаПереданныхТоваров = ОперацииВозвратаПереданныхТоваров();

	Если ТипДокумента = Тип("ДокументОбъект.ЗаказКлиента") Тогда

		ВсеСтрокиОтменены = ОбщегоНазначенияУТ.ВсеСтрокиОтменены(ДокументПродажи, "Товары", "Отменено");

		НужноСогласовать                            = Не (ВсеСтрокиОтменены ИЛИ ОтклонениеОтУсловийПродаж ИЛИ ДокументПродажи.Согласован ИЛИ СогласованВ1СДокументооборот);
		Если ДокументПродажи.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию Тогда
			НужноСогласоватьРучныеСкидкиПоПользователям = Ложь;
			ИспользоватьСкидки                          = Ложь;
		Иначе
			НужноСогласоватьРучныеСкидкиПоПользователям = Не (ВсеСтрокиОтменены ИЛИ ОтклонениеОтУсловийПродаж ИЛИ ДокументПродажи.Согласован ИЛИ СогласованВ1СДокументооборот);
			ИспользоватьСкидки                          = Истина;
		КонецЕсли;

		//++ НЕ УТКА
	ИначеЕсли ТипДокумента = Тип("ДокументОбъект.ЗаказДавальца") Тогда

		ВсеСтрокиОтменены = ОбщегоНазначенияУТ.ВсеСтрокиОтменены(ДокументПродажи, "Продукция", "Отменено");

		НужноСогласовать                            = Не (ВсеСтрокиОтменены ИЛИ ОтклонениеОтУсловийПродаж ИЛИ ДокументПродажи.Согласован);
		НужноСогласоватьРучныеСкидкиПоПользователям = Ложь;
		ИспользоватьСкидки                          = Ложь;
		//-- НЕ УТКА
		//++ НЕ УТ
	ИначеЕсли ТипДокумента = Тип("ДокументОбъект.ЗаказПереработчику") Тогда

		ВсеСтрокиОтменены = ОбщегоНазначенияУТ.ВсеСтрокиОтменены(ДокументПродажи, "Продукция", "Отменено");
		ВсеСтрокиОтменены =
		ВсеСтрокиОтменены
		И ОбщегоНазначенияУТ.ВсеСтрокиОтменены(
		ДокументПродажи,
		"Материалы",
		"Отменено");

		НужноСогласовать                            = Не (ВсеСтрокиОтменены ИЛИ ДокументПродажи.Согласован);
		НужноСогласоватьРучныеСкидкиПоПользователям = Ложь;
		ИспользоватьСкидки                          = Ложь;

	ИначеЕсли ТипДокумента = Тип("ДокументОбъект.ЗаказПереработчику2_5") Тогда

		ВсеСтрокиОтменены = ОбщегоНазначенияУТ.ВсеСтрокиОтменены(ДокументПродажи, "ВыходныеИзделия", "Отменено");
		ВсеСтрокиОтменены =
		ВсеСтрокиОтменены
		И ОбщегоНазначенияУТ.ВсеСтрокиОтменены(
		ДокументПродажи,
		"ПобочныеИзделия",
		"Отменено");
		ВсеСтрокиОтменены =
		ВсеСтрокиОтменены
		И ОбщегоНазначенияУТ.ВсеСтрокиОтменены(
		ДокументПродажи,
		"ОбеспечениеМатериаламиИРаботами",
		"Отменено");
		ВсеСтрокиОтменены =
		ВсеСтрокиОтменены
		И ОбщегоНазначенияУТ.ВсеСтрокиОтменены(
		ДокументПродажи,
		"Услуги",
		"Отменено");

		НужноСогласовать                            = Ложь;
		НужноСогласоватьРучныеСкидкиПоПользователям = Ложь;
		ИспользоватьСкидки                          = Ложь;

	ИначеЕсли ТипДокумента = Тип("ДокументОбъект.ПередачаСырьяПереработчику") Тогда

		НужноСогласовать                            = Не (ДокументПродажи.Согласован);
		НужноСогласоватьРучныеСкидкиПоПользователям = Ложь;
		ИспользоватьСкидки                          = Ложь;
		//-- НЕ УТ
	ИначеЕсли ТипДокумента = Тип("ДокументОбъект.ПередачаТоваровХранителю") Тогда

		НужноСогласовать                            = Не ОтклонениеОтУсловийПродаж;
		НужноСогласоватьРучныеСкидкиПоПользователям = Ложь;
		ИспользоватьСкидки                          = Ложь;
	ИначеЕсли ТипДокумента = Тип("ДокументОбъект.ВыкупТоваровХранителем") Тогда

		НужноСогласовать                            = Не ОтклонениеОтУсловийПродаж;
		НужноСогласоватьРучныеСкидкиПоПользователям = Ложь;
		ИспользоватьСкидки                          = Ложь;
	ИначеЕсли ТипДокумента = Тип("ДокументОбъект.ОтчетОСписанииТоваровУХранителя") Тогда

		НужноСогласовать                            = Не ОтклонениеОтУсловийПродаж;
		НужноСогласоватьРучныеСкидкиПоПользователям = Ложь;
		ИспользоватьСкидки                          = Ложь;
	ИначеЕсли ТипДокумента = Тип("ДокументОбъект.ОприходованиеИзлишковТоваровУХранителя") Тогда

		НужноСогласовать                            = Не ОтклонениеОтУсловийПродаж;
		НужноСогласоватьРучныеСкидкиПоПользователям = Ложь;
		ИспользоватьСкидки                          = Ложь;
	ИначеЕсли ТипДокумента = Тип("ДокументОбъект.ПоступлениеТоваровОтХранителя") Тогда

		НужноСогласовать                            = Не ОтклонениеОтУсловийПродаж;
		НужноСогласоватьРучныеСкидкиПоПользователям = Ложь;
		ИспользоватьСкидки                          = Ложь;

	ИначеЕсли ТипДокумента = Тип("ДокументОбъект.ЗаявкаНаВозвратТоваровОтКлиента") Тогда

		ВсеСтрокиОтменены = ОбщегоНазначенияУТ.ВсеСтрокиОтменены(ДокументПродажи, "ЗаменяющиеТовары", "Отменено");

		НужноСогласовать                            = Не (ВсеСтрокиОтменены ИЛИ ОтклонениеОтУсловийПродаж ИЛИ ДокументПродажи.Согласован ИЛИ СогласованВ1СДокументооборот);
		НужноСогласоватьРучныеСкидкиПоПользователям = Не (ВсеСтрокиОтменены ИЛИ ОтклонениеОтУсловийПродаж ИЛИ ДокументПродажи.Согласован ИЛИ СогласованВ1СДокументооборот);
		ИспользоватьСкидки                          = Истина;

	ИначеЕсли ТипДокумента = Тип("ДокументОбъект.АктОРасхожденияхПослеОтгрузки")
		Или ТипДокумента = Тип("ДокументОбъект.АктОРасхожденияхПослеПриемки") Тогда

		НужноСогласовать                            = Ложь;
		НужноСогласоватьРучныеСкидкиПоПользователям = Ложь;
		ИспользоватьСкидки                          = Ложь;

	ИначеЕсли ТипДокумента <> Тип("ДокументОбъект.ЗаданиеТорговомуПредставителю")
		И ТипДокумента <> Тип("ДокументОбъект.ВозвратТоваровОтКлиента")
		И ТипДокумента <> Тип("ДокументОбъект.ЧекККМ")
		И ТипДокумента <> Тип("ДокументОбъект.ЧекККМКоррекции")
		И ТипДокумента <> Тип("ОбработкаОбъект.ПомощникПродаж") Тогда

		НужноСогласовать                            = Не (ОтклонениеОтУсловийПродаж ИЛИ ДокументПродажи.Согласован ИЛИ СогласованВ1СДокументооборот);
		НужноСогласоватьРучныеСкидкиПоПользователям = Не (ОтклонениеОтУсловийПродаж ИЛИ ДокументПродажи.Согласован ИЛИ СогласованВ1СДокументооборот);
		ИспользоватьСкидки                          = Истина;

	ИначеЕсли ТипДокумента = Тип("ДокументОбъект.ЧекККМ") Тогда

		НужноСогласовать                            = Ложь;
		НужноСогласоватьРучныеСкидкиПоПользователям = Не ОтклонениеОтУсловийПродаж;
		ИспользоватьСкидки                          = Истина;

	Иначе

		НужноСогласовать                            = Не ОтклонениеОтУсловийПродаж;
		НужноСогласоватьРучныеСкидкиПоПользователям = Не ОтклонениеОтУсловийПродаж;
		ИспользоватьСкидки                          = Истина;

	КонецЕсли;

	ПроверятьСкидкиРассчитаны = Ложь;
	ВозвратМногооборотнойТары = Ложь;
	ТребуетсяЗалогЗаТару = Ложь;
	СуммаВзаиморасчетовРеализации = 0;
	СуммаЗалогаПоРеализации = 0;

	// Проверим нужно ли проверять скидки и наценки
	ИспользоватьАвтоматическиеСкидки             = ПолучитьФункциональнуюОпцию("ИспользоватьАвтоматическиеСкидкиВПродажах");
	ИспользоватьРучныеСкидки                     = ПолучитьФункциональнуюОпцию("ИспользоватьРучныеСкидкиВПродажах");
	ПроверятьСкидкиНаценки                       = ИспользоватьАвтоматическиеСкидки Или ИспользоватьРучныеСкидки;
	ИспользоватьРаздельныйУчетПоНалогообложению  =
	НастройкиНалоговУчетныхПолитикПовтИсп.РаздельныйУчетТоваровПоНалогообложениюНДС(РеквизитыДокумента.Организация, РеквизитыДокумента.Дата);
	ИспользоватьЦеновыеГруппы                    = ПолучитьФункциональнуюОпцию("ИспользоватьЦеновыеГруппы");
	ИспользоватьОграниченияПоПользователям       = ПолучитьФункциональнуюОпцию("ИспользоватьОграниченияРучныхСкидокВПродажахПоПользователям")
	И НужноСогласоватьРучныеСкидкиПоПользователям
	И ИспользоватьСкидки;
	ИспользоватьОграниченияПоСоглашениям         = ПолучитьФункциональнуюОпцию("ИспользоватьОграниченияРучныхСкидокВПродажахПоСоглашениям")
	И НужноСогласовать
	И ИспользоватьСкидки;
	ОграничиватьРучныеСкидки                     = ИспользоватьРучныеСкидки И (ИспользоватьОграниченияПоПользователям ИЛИ ИспользоватьОграниченияПоСоглашениям);

	// Проверим, нужно ли запрещать закрытие заказов без полной отгрузки/оплаты
	ИспользоватьРасширенныеВозможностиЗаказаКлиента = ПолучитьФункциональнуюОпцию("ИспользоватьРасширенныеВозможностиЗаказаКлиента");

	//++ НЕ УТКА
	КонтролироватьРасчетыДавальцев				= ПолучитьФункциональнуюОпцию("НеЗакрыватьЗаказыДавальцевБезПолнойОплаты");
	КонтрольОтгрузкиЗаказаДавальца				= ПолучитьФункциональнуюОпцию("НеЗакрыватьЗаказыДавальцевБезПолнойОтработки");
	ИспользоватьСтатусыЗаказовДавальцев			= ПолучитьФункциональнуюОпцию("ИспользоватьСтатусыЗаказовДавальцев");
	//-- НЕ УТКА

	ИспользоватьСоглашенияСКлиентами = ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами");

	ИспользоватьНоменклатуруПартнеров   = ПолучитьФункциональнуюОпцию("ИспользоватьНоменклатуруПартнеров");

	// ПОМОЩНИК ПРОДАЖ
	Если ТипДокумента = Тип("ОбработкаОбъект.ПомощникПродаж") Тогда

		МассивПроверок.Добавить("ВременнаяТаблицаДокументПродажи");

		МассивПроверок.Добавить("ВременнаяТаблицаТоварыПредварительная");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборыПодготовка");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборыДополнительно");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборы");
		МассивПроверок.Добавить("ВременнаяТаблицаТовары");

		ВозвратМногооборотнойТары = ДокументПродажи.ВернутьМногооборотнуюТару;
		ТребуетсяЗалогЗаТару = ДокументПродажи.ТребуетсяЗалогЗаТару;

		Если НЕ (ДокументПродажи.ВариантОформленияДокументов = Перечисления.ВариантыОформленияДокументовПродажи.ЗаказКлиентаПередачаТоваровХранителю
			ИЛИ ДокументПродажи.ВариантОформленияДокументов = Перечисления.ВариантыОформленияДокументовПродажи.ПередачаТоваровХранителю) Тогда

			МассивПроверок.Добавить("КорректностьВыбораНоменклатурыПоНалогообложениюНДС");
			МассивПроверок.Добавить("КорректностьСуммыИСуммыНДС");

		КонецЕсли;

		// ПОМОЩНИК ПРОДАЖ - ЗАКАЗ КЛИЕНТА

		Если ДокументПродажи.ВариантОформленияДокументов = Перечисления.ВариантыОформленияДокументовПродажи.ЗаказКлиента
			Или ДокументПродажи.ВариантОформленияДокументов = Перечисления.ВариантыОформленияДокументовПродажи.ЗаказКлиентаПередачаТоваровХранителю
			Или ДокументПродажи.ВариантОформленияДокументов = Перечисления.ВариантыОформленияДокументовПродажи.ЗаказКлиентаРеализацияТоваровУслуг Тогда

			Если ИспользоватьРасширенныеВозможностиЗаказаКлиента
				ИЛИ ДокументПродажи.ВариантОформленияДокументов <> Перечисления.ВариантыОформленияДокументовПродажи.ЗаказКлиента Тогда
				МассивПроверок.Добавить("КорректностьЗаполненияСклада");
				МассивПроверок.Добавить("КорректностьЗаполненияСкладаВТабличнойЧастиТовары");
			КонецЕсли;

			МассивПроверок.Добавить("КорректностьЗаполненияПодразделенияВТабличнойЧастиТовары");

			Если НужноСогласовать
				И (ДокументПродажи.СтатусЗаказаКлиента <> Перечисления.СтатусыЗаказовКлиентов.НеСогласован
				ИЛИ НЕ ИспользоватьРасширенныеВозможностиЗаказаКлиента) Тогда

				Если НЕ ДокументПродажи.ВариантОформленияДокументов = Перечисления.ВариантыОформленияДокументовПродажи.ЗаказКлиентаПередачаТоваровХранителю Тогда
					МассивПроверок.Добавить("КорректностьУказанияСтавкиНДС");
					МассивПроверок.Добавить("КорректностьСуммыНДС");
				КонецЕсли;

				МассивПроверок.Добавить("ВременнаяТаблицаКурсыВалют");

				Если ИспользоватьСоглашенияСКлиентами Тогда
					МассивПроверок.Добавить("ВременнаяТаблицаСкладыКорректныеПоСоглашению");
					МассивПроверок.Добавить("СоответствиеШапкиУсловиямПродаж");
					МассивПроверок.Добавить("СоответствиеТоваровУсловиямПродаж");
					МассивПроверок.Добавить("ПринадлежностьПартнераСегментуПартнеров");
					МассивПроверок.Добавить("ПринадлежностьТоваровСегментуНоменклатуры");
				КонецЕсли;

				Если ПроверятьДиапазонЦен Тогда
					МассивПроверок.Добавить("ВхождениеЦенВДопустимыйДиапазон");
				КонецЕсли;

				// Проверка корректности этапов оплаты осуществляется только для
				// заказов, в которых не все строки отменены и  в которых указан график оплаты.

				Если ОперацииПередачи.Найти(ДокументПродажи.ХозяйственнаяОперация) = Неопределено
					И ДокументПродажи.СуммаДокумента <> 0 Тогда

					МассивПроверок.Добавить("ВременнаяТаблицаЭтапыГрафикаОплаты");
					МассивПроверок.Добавить("КорректностьЭтаповГрафикаОплаты");

				КонецЕсли;

				Если ИспользоватьАвтоматическиеСкидки
					И Не ДокументПродажи.СкидкиРассчитаны
					И ОперацииПередачи.Найти(ДокументПродажи.ХозяйственнаяОперация) = Неопределено Тогда

					ПроверятьСкидкиРассчитаны = Истина;

				КонецЕсли;

			КонецЕсли;

			// ПОМОЩНИК ПРОДАЖ - РЕАЛИЗАЦИЯ ТОВАРОВ УСЛУГ

		ИначеЕсли ДокументПродажи.ВариантОформленияДокументов = Перечисления.ВариантыОформленияДокументовПродажи.РеализацияТоваровУслуг Тогда

			Если ПроверятьСкидкиРассчитаны И
				ИспользоватьАвтоматическиеСкидки И
				Не ДокументПродажи.СкидкиРассчитаны И
				ДокументПродажи.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию Тогда
				ПроверятьСкидкиРассчитаны = Истина;
			КонецЕсли;

			Если НужноСогласовать Тогда

				МассивПроверок.Добавить("КорректностьУказанияСтавкиНДС");
				МассивПроверок.Добавить("КорректностьСуммыНДС");
				МассивПроверок.Добавить("ВременнаяТаблицаКурсыВалют");

				Если ИспользоватьСоглашенияСКлиентами Тогда
					МассивПроверок.Добавить("ВременнаяТаблицаСкладыКорректныеПоСоглашению");
					МассивПроверок.Добавить("СоответствиеШапкиУсловиямПродаж");
					МассивПроверок.Добавить("СоответствиеТоваровУсловиямПродаж");
					МассивПроверок.Добавить("ПринадлежностьПартнераСегментуПартнеров");
					МассивПроверок.Добавить("ПринадлежностьТоваровСегментуНоменклатуры");
				КонецЕсли;

				Если ПроверятьДиапазонЦен Тогда
					МассивПроверок.Добавить("ВхождениеЦенВДопустимыйДиапазон");
				КонецЕсли;

				Если ДокументПродажи.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиенту
					ИЛИ ДокументПродажи.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности
					ИЛИ ДокументПродажи.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности
					ИЛИ Не ЗначениеЗаполнено(ДокументПродажи.ХозяйственнаяОперация) Тогда
					МассивПроверок.Добавить("ВременнаяТаблицаЭтапыГрафикаОплаты");
					МассивПроверок.Добавить("КорректностьЭтаповГрафикаОплаты");
				КонецЕсли;

			КонецЕсли;

			МассивПроверок.Добавить("КорректностьЗаполненияПодразделенияВТабличнойЧастиТовары");

			// ПОМОЩНИК ПРОДАЖ - ПЕРЕДАЧА ТОВАРОВ ХРАНИТЕЛЮ

		ИначеЕсли ДокументПродажи.ВариантОформленияДокументов = Перечисления.ВариантыОформленияДокументовПродажи.ПередачаТоваровХранителю Тогда

			Если НужноСогласовать Тогда

				МассивПроверок.Добавить("ВременнаяТаблицаКурсыВалют");

				Если ИспользоватьСоглашенияСКлиентами Тогда
					МассивПроверок.Добавить("ВременнаяТаблицаСкладыКорректныеПоСоглашению");
					МассивПроверок.Добавить("СоответствиеШапкиУсловиямПродаж");
					МассивПроверок.Добавить("СоответствиеТоваровУсловиямПродаж");
					МассивПроверок.Добавить("ПринадлежностьПартнераСегментуПартнеров");
					МассивПроверок.Добавить("ПринадлежностьТоваровСегментуНоменклатуры");
				КонецЕсли;

				Если ПроверятьДиапазонЦен Тогда
					МассивПроверок.Добавить("ВхождениеЦенВДопустимыйДиапазон");
				КонецЕсли;

				МассивПроверок.Добавить("НаличиеГИСМ");
				МассивПроверок.Добавить("НаличиеАлкогольнойПродукции");
				МассивПроверок.Добавить("НаличиеВЕТИС");

			КонецЕсли;
		КонецЕсли;

		Если ОграничиватьРучныеСкидки
			И ОперацииПередачи.Найти(ДокументПродажи.ХозяйственнаяОперация) = Неопределено Тогда

			Если ИспользоватьОграниченияПоПользователям Тогда
				МассивПроверок.Добавить("ВременнаяТаблицаОграничениеРучныхСкидокГруппыПользователей");
				МассивПроверок.Добавить("ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамПользователей");
				МассивПроверок.Добавить("ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамИПользователям");
				МассивПроверок.Добавить("ЦеновыеГруппы");
				МассивПроверок.Добавить("ОграничениеРучныхСкидокПоГруппамИПользователям");
				МассивПроверок.Добавить("ТаблицаОграничений");
			КонецЕсли;

			МассивПроверок.Добавить("ВременнаяТаблицаОграничениеРучныхСкидокОбщиеОграничения");
			МассивПроверок.Добавить("ВременнаяТаблицаОграниченияРучныхСкидок");
			МассивПроверок.Добавить("ДопустимостьРучныхСкидокНаценок");

		КонецЕсли;

		Если ОперацииПередачи.Найти(ДокументПродажи.ХозяйственнаяОперация) <> Неопределено Тогда
			МассивПроверок.Добавить("НаличиеУслугРабот");
		КонецЕсли;

		// СОГЛАШЕНИЕ С КЛИЕНТОМ

	ИначеЕсли ИмяТаблицы = "Справочник.СоглашенияСКлиентами" Тогда

		МассивПроверок.Добавить("ВременнаяТаблицаДокументПродажи");

		ВозвратМногооборотнойТары = ДокументПродажи.ВозвращатьМногооборотнуюТару;
		ТребуетсяЗалогЗаТару = ДокументПродажи.ТребуетсяЗалогЗаТару;

		Если Не ДокументПродажи.Типовое И НужноСогласовать И
			ДокументПродажи.Статус <> Перечисления.СтатусыСоглашенийСКлиентами.НеСогласовано Тогда

			МассивПроверок.Добавить("ВременнаяТаблицаСкладыКорректныеПоСоглашению");
			МассивПроверок.Добавить("СоответствиеШапкиУсловиямПродаж");
			МассивПроверок.Добавить("ПринадлежностьПартнераСегментуПартнеров");
			МассивПроверок.Добавить("ВременнаяТаблицаЭтапыОплатыСоглашенияТипового");
			МассивПроверок.Добавить("ВременнаяТаблицаЭтапыОплатыСоглашенияИндивидуального");
			МассивПроверок.Добавить("КорректностьЭтаповОплатыСоглашения");
			МассивПроверок.Добавить("КорректностьКоличестваЭтаповОплатыСоглашения");

		КонецЕсли;

		МассивПроверок.Добавить("ВременнаяТаблицаТоварыПредварительная");
		МассивПроверок.Добавить("ВременнаяТаблицаТовары");
		МассивПроверок.Добавить("ДублиТоваров");

		Если ОперацииПередачи.Найти(ДокументПродажи.ХозяйственнаяОперация) <> Неопределено Тогда
			МассивПроверок.Добавить("НаличиеУслугРабот");
		КонецЕсли;

		Если НужноСогласовать И ДокументПродажи.Статус <> Перечисления.СтатусыСоглашенийСКлиентами.НеСогласовано Тогда

			Если ЗначениеЗаполнено(ДокументПродажи.СегментНоменклатуры) Тогда
				МассивПроверок.Добавить("ПринадлежностьТоваровСегментуНоменклатуры");
			КонецЕсли;

			Если ПроверятьДиапазонЦен Или Не ДокументПродажи.Типовое Тогда
				МассивПроверок.Добавить("ВременнаяТаблицаКурсыВалют");
			КонецЕсли;

			Если ПроверятьДиапазонЦен Тогда
				МассивПроверок.Добавить("ВхождениеЦенВДопустимыйДиапазон");
			КонецЕсли;

			Если Не ДокументПродажи.Типовое Тогда
				МассивПроверок.Добавить("СоответствиеТоваровУсловиямПродаж");
			КонецЕсли;

		КонецЕсли;

		ИспользоватьЦеновыеГруппы = ПолучитьФункциональнуюОпцию("ИспользоватьЦеновыеГруппы");

		Если ИспользоватьЦеновыеГруппы Тогда

			МассивПроверок.Добавить("ВременнаяТаблицаЦеновыеГруппы");
			МассивПроверок.Добавить("ДублиЦеновыхГрупп");

			Если Не ДокументПродажи.Типовое И НужноСогласовать И
				ДокументПродажи.Статус <> Перечисления.СтатусыСоглашенийСКлиентами.НеСогласовано Тогда
				МассивПроверок.Добавить("СоответствиеЦеновыхГруппУсловиямПродаж");
			КонецЕсли;

		КонецЕсли;

		// ЗАКАЗ КЛИЕНТА

	ИначеЕсли ИмяТаблицы = "Документ.ЗаказКлиента" Тогда

		МассивПроверок.Добавить("ВременнаяТаблицаДокументПродажи");

		МассивПроверок.Добавить("ВременнаяТаблицаТоварыПредварительная");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборыПодготовка");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборыДополнительно");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборы");
		МассивПроверок.Добавить("ВременнаяТаблицаТовары");

		Если ИспользоватьНоменклатуруПартнеров Тогда
			#Вставка
			//++ РС Консалт: Трофимов Евгений 05.07.2022 Тикет 18125
			//e1cib/data/Документ.Задание?ref=be1fbbe55eefcb6e48f7e06fe823144d
                  
			//Отказываемся от проверки заполнения справочника «Номенклатура контрагентов»
			//Если это не сделать то при проведении документа «Заказ клиента» будет ошибка.
			//Ошибка возникает из-за того, что по ТЗ требуется не привязывать номенклатуру
			//контрагента к номенклатуре учётной системы, а типовой алгоритм этого не позволяет.
			#КонецВставки
			#Удаление
			МассивПроверок.Добавить("КорректностьЗаполненияНоменклатурыПартнера");
			#КонецУдаления
			#Вставка
			//-- КонецТикета 18125
			#КонецВставки
		КонецЕсли;

		МассивПроверок.Добавить("КорректностьЗаполненияСкладаВЗаказеКлиента");
		Если НЕ ОбщегоНазначенияУТКлиентСервер.АвторизованВнешнийПользователь() Тогда
			МассивПроверок.Добавить("КорректностьЗаполненияСкладаВТабличнойЧастиТовары");
			МассивПроверок.Добавить("КорректностьЗаполненияПодразделенияВТабличнойЧастиТовары");
		КонецЕсли;

		Если Не ДокументПродажи.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи
			И Не ДокументПродажи.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию
			//++ НЕ УТ
			И Не ДокументПродажи.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПереработчику2_5
			//-- НЕ УТ
			Тогда
			МассивПроверок.Добавить("КонтрольЗаполненияЦенСУчетомОтмененных");
			ВозвратМногооборотнойТары = ДокументПродажи.ВернутьМногооборотнуюТару;
			ТребуетсяЗалогЗаТару = ДокументПродажи.ТребуетсяЗалогЗаТару;

			МассивПроверок.Добавить("КорректностьСуммыИСуммыНДС");
			МассивПроверок.Добавить("КорректностьВыбораНоменклатурыПоНалогообложениюНДС");
		КонецЕсли;

		Если НужноСогласовать 
			И (ДокументПродажи.Статус <> Перечисления.СтатусыЗаказовКлиентов.НеСогласован 
			ИЛИ НЕ ИспользоватьРасширенныеВозможностиЗаказаКлиента) Тогда

			Если НЕ ДокументПродажи.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи
				И Не ДокументПродажи.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию Тогда
				МассивПроверок.Добавить("КорректностьУказанияСтавкиНДС");
				МассивПроверок.Добавить("КорректностьСуммыНДС");
			КонецЕсли;

			МассивПроверок.Добавить("ВременнаяТаблицаКурсыВалют");

			Если ИспользоватьСоглашенияСКлиентами Тогда
				МассивПроверок.Добавить("ВременнаяТаблицаСкладыКорректныеПоСоглашению");
				МассивПроверок.Добавить("СоответствиеШапкиУсловиямПродаж");
				МассивПроверок.Добавить("СоответствиеТоваровУсловиямПродаж");
				МассивПроверок.Добавить("ПринадлежностьПартнераСегментуПартнеров");
				МассивПроверок.Добавить("ПринадлежностьТоваровСегментуНоменклатуры");
			КонецЕсли;

			Если ПроверятьДиапазонЦен Тогда
				МассивПроверок.Добавить("ВхождениеЦенВДопустимыйДиапазон");
			КонецЕсли;

			// Проверка корректности этапов оплаты осуществляется только для
			// заказов, в которых не все строки отменены и  в которых указан график оплаты.

			Если ОперацииПередачи.Найти(ДокументПродажи.ХозяйственнаяОперация) = Неопределено
				И ДокументПродажи.СуммаДокумента <> 0 Тогда

				Если ДокументПродажи.ПорядокРасчетов <> Перечисления.ПорядокРасчетов.ПоНакладным Тогда
					МассивПроверок.Добавить("ВременнаяТаблицаЭтапыГрафикаОплаты");
					МассивПроверок.Добавить("КорректностьЭтаповГрафикаОплаты");
				КонецЕсли;

			КонецЕсли;

			Если ИспользоватьАвтоматическиеСкидки
				И Не ДокументПродажи.СкидкиРассчитаны
				И ОперацииПередачи.Найти(ДокументПродажи.ХозяйственнаяОперация) = Неопределено Тогда

				ПроверятьСкидкиРассчитаны = Истина;

			КонецЕсли;

		КонецЕсли;

		Если ОграничиватьРучныеСкидки
			И ОперацииПередачи.Найти(ДокументПродажи.ХозяйственнаяОперация) = Неопределено
			И (ДокументПродажи.Статус <> Перечисления.СтатусыЗаказовКлиентов.НеСогласован
			ИЛИ НЕ ИспользоватьРасширенныеВозможностиЗаказаКлиента) Тогда

			Если ИспользоватьОграниченияПоПользователям Тогда
				МассивПроверок.Добавить("ВременнаяТаблицаОграничениеРучныхСкидокГруппыПользователей");
				МассивПроверок.Добавить("ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамПользователей");
				МассивПроверок.Добавить("ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамИПользователям");
				МассивПроверок.Добавить("ЦеновыеГруппы");
				МассивПроверок.Добавить("ОграничениеРучныхСкидокПоГруппамИПользователям");
				МассивПроверок.Добавить("ТаблицаОграничений");
			КонецЕсли;

			МассивПроверок.Добавить("ВременнаяТаблицаОграничениеРучныхСкидокОбщиеОграничения");
			МассивПроверок.Добавить("ВременнаяТаблицаОграниченияРучныхСкидок");
			МассивПроверок.Добавить("ДопустимостьРучныхСкидокНаценок");

		КонецЕсли;

		Если ДокументПродажи.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоставкаПодПринципала Тогда
			МассивПроверок.Добавить("НаличиеУслугТары");
		ИначеЕсли ОперацииПередачи.Найти(ДокументПродажи.ХозяйственнаяОперация) <> Неопределено Тогда
			МассивПроверок.Добавить("НаличиеУслугРабот");
		КонецЕсли;

		Если ДокументПродажи.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи Тогда
			МассивПроверок.Добавить("НаличиеГИСМ");
			МассивПроверок.Добавить("НаличиеАлкогольнойПродукции");
			МассивПроверок.Добавить("НаличиеВЕТИС");
		КонецЕсли;

		Если ДокументПродажи.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоставкаПодПринципала Тогда
			МассивПроверок.Добавить("НаправлениеДеятельностиПоУчетуДоховИРасходов");
			МассивПроверок.Добавить("ИспользованиеЗаказаКлиентуПоВариантуОбособления");
		КонецЕсли;

		//++ НЕ УТ
		//++ НЕ УТКА
		// ЗАКАЗ ДАВАЛЬЦА

	ИначеЕсли ИмяТаблицы = "Документ.ЗаказДавальца" Тогда

		МассивПроверок.Добавить("ВременнаяТаблицаДокументПродажи");
		МассивПроверок.Добавить("ВТ_Товары");
		МассивПроверок.Добавить("ВТ_ДопТовары");
		МассивПроверок.Добавить("ВременнаяТаблицаТовары");

		МассивПроверок.Добавить("КорректностьЗаполненияСкладаВЗаказеДавальца");
		МассивПроверок.Добавить("КорректностьЗаполненияСкладаВТабличнойЧастиТоварыЗаказаДавальца");

		ВозвратМногооборотнойТары = Ложь;
		ТребуетсяЗалогЗаТару = Ложь;

		Если НужноСогласовать И ДокументПродажи.Статус <> Перечисления.СтатусыЗаказовДавальцев.НеСогласован Тогда

			// Проверка корректности этапов оплаты осуществляется только для
			// заказов, в которых не все строки отменены и  в которых указан график оплаты.

			Если ДокументПродажи.СуммаДокумента <> 0 Тогда

				Если ДокументПродажи.ПорядокРасчетов <> Перечисления.ПорядокРасчетов.ПоНакладным Тогда
					МассивПроверок.Добавить("ВременнаяТаблицаЭтапыГрафикаОплаты");
					МассивПроверок.Добавить("КорректностьЭтаповГрафикаОплаты");
				КонецЕсли;

			КонецЕсли;

		КонецЕсли;

		Если ДокументПродажи.Статус = Перечисления.СтатусыЗаказовДавальцев.Закрыт И Не ВсеСтрокиОтменены Тогда

			Если ДокументПродажи.ПорядокРасчетов <> Перечисления.ПорядокРасчетов.ПоДоговорамКонтрагентов И КонтролироватьРасчетыДавальцев И ИспользоватьСтатусыЗаказовДавальцев Тогда
				МассивПроверок.Добавить("КонтрольЗавершенияРасчетов");
			КонецЕсли;

			Если КонтрольОтгрузкиЗаказаДавальца И ИспользоватьСтатусыЗаказовДавальцев Тогда
				МассивПроверок.Добавить("КонтрольЗавершенияОтгрузки");
				МассивПроверок.Добавить("КонтрольОформленияОтчетов");
			КонецЕсли;

		КонецЕсли;
		//-- НЕ УТКА

		// ПЕРЕДАЧА СЫРЬЯ ПЕРЕРАБОТЧИКУ
	ИначеЕсли ИмяТаблицы = "Документ.ПередачаСырьяПереработчику" Тогда

		МассивПроверок.Добавить("ВременнаяТаблицаДокументПродажи");

		МассивПроверок.Добавить("ВременнаяТаблицаТовары");

		МассивПроверок.Добавить("КорректностьЗаполненияСклада");
		МассивПроверок.Добавить("КорректностьЗаполненияСкладаВТабличнойЧастиТовары");

		ВозвратМногооборотнойТары = ДокументПродажи.ВернутьМногооборотнуюТару;
		ТребуетсяЗалогЗаТару = Ложь;
		//-- НЕ УТ

		// ПЕРЕДАЧА ТОВАРОВ ХРАНИТЕЛЮ

	ИначеЕсли ИмяТаблицы = "Документ.ПередачаТоваровХранителю" Тогда

		МассивПроверок.Добавить("ВременнаяТаблицаДокументПродажи");

		МассивПроверок.Добавить("ВременнаяТаблицаТовары");
		МассивПроверок.Добавить("ВременнаяТаблицаТоварыПредварительная");

		МассивПроверок.Добавить("ВременнаяТаблицаНаборы");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборыПодготовка");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборыДополнительно");

		МассивПроверок.Добавить("КорректностьЗаполненияСклада");
		МассивПроверок.Добавить("КорректностьЗаполненияСкладаВТабличнойЧастиТовары");

		МассивПроверок.Добавить("НаличиеУслугРабот");

		Если Не ДокументПродажи.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию Тогда
			МассивПроверок.Добавить("НаличиеГИСМ");
			МассивПроверок.Добавить("НаличиеАлкогольнойПродукции");
			МассивПроверок.Добавить("НаличиеВЕТИС");
		КонецЕсли;

		ВозвратМногооборотнойТары = ДокументПродажи.ВернутьМногооборотнуюТару;

		Если НужноСогласовать
			И (РеализацияСверхЗаказа
			Или Не ДокументПродажи.ПередачаПоЗаказам) Тогда

			МассивПроверок.Добавить("ВременнаяТаблицаКурсыВалют");

			Если ИспользоватьСоглашенияСКлиентами Тогда
				Если Не ДокументПродажи.ПередачаПоЗаказам Тогда
					МассивПроверок.Добавить("ВременнаяТаблицаСкладыКорректныеПоСоглашению");
					МассивПроверок.Добавить("СоответствиеШапкиУсловиямПродаж");
					МассивПроверок.Добавить("ПринадлежностьПартнераСегментуПартнеров");
				КонецЕсли;

				МассивПроверок.Добавить("СоответствиеТоваровУсловиямПродаж");
				МассивПроверок.Добавить("ПринадлежностьТоваровСегментуНоменклатуры");
			КонецЕсли;

			Если ПроверятьДиапазонЦен Тогда
				МассивПроверок.Добавить("ВхождениеЦенВДопустимыйДиапазон");
			КонецЕсли;

		КонецЕсли;

		// РЕАЛИЗАЦИЯ ТОВАРОВ И УСЛУГ

	ИначеЕсли ИмяТаблицы = "Документ.РеализацияТоваровУслуг" Тогда

		МассивПроверок.Добавить("ВременнаяТаблицаДокументПродажи");

		МассивПроверок.Добавить("ВременнаяТаблицаТоварыПредварительная");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборыПодготовка");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборыДополнительно");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборы");
		МассивПроверок.Добавить("ВременнаяТаблицаТовары");

		Если Не КомиссионнаяТорговляСервер.РеализацияЧерезКомиссионера(ДокументПродажи.ХозяйственнаяОперация) Тогда
			МассивПроверок.Добавить("КорректностьЗаполненияСклада");
			МассивПроверок.Добавить("КорректностьЗаполненияСкладаВТабличнойЧастиТовары");
		КонецЕсли;

		МассивПроверок.Добавить("КорректностьЗаполненияПодразделенияВТабличнойЧастиТовары");
		МассивПроверок.Добавить("КорректностьВыбораНоменклатурыПоНалогообложениюНДС");
		МассивПроверок.Добавить("КонтрольЗаполненияЦен");
		МассивПроверок.Добавить("КорректностьСуммыИСуммыНДС");

		ВозвратМногооборотнойТары = ДокументПродажи.ВернутьМногооборотнуюТару;
		ТребуетсяЗалогЗаТару = ДокументПродажи.ТребуетсяЗалогЗаТару;

		СуммаВзаиморасчетовРеализации = ДокументПродажи.ДополнительныеСвойства.СуммаВВалютеВзаиморасчетов;
		СуммаЗалогаПоРеализации = ДокументПродажи.ДополнительныеСвойства.СуммаЗалогаВВалютеВзаиморасчетов;

		Если ПроверятьСкидкиРассчитаны И
			ИспользоватьАвтоматическиеСкидки И
			Не ДокументПродажи.СкидкиРассчитаны И
			ДокументПродажи.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию Тогда
			ПроверятьСкидкиРассчитаны = Истина;
		КонецЕсли;

		Если (Не ДокументПродажи.РеализацияПоЗаказам ИЛИ РеализацияСверхЗаказа) И НужноСогласовать Тогда

			Если Не КомиссионнаяТорговляСервер.ПередачаНаКомиссию(ДокументПродажи.ХозяйственнаяОперация) Тогда
				МассивПроверок.Добавить("КорректностьУказанияСтавкиНДС");
			КонецЕсли;
			МассивПроверок.Добавить("КорректностьСуммыНДС");
			МассивПроверок.Добавить("ВременнаяТаблицаКурсыВалют");

			Если ИспользоватьСоглашенияСКлиентами Тогда
				Если НЕ ДокументПродажи.РеализацияПоЗаказам Тогда
					МассивПроверок.Добавить("ВременнаяТаблицаСкладыКорректныеПоСоглашению");
					МассивПроверок.Добавить("СоответствиеШапкиУсловиямПродаж");
					МассивПроверок.Добавить("ПринадлежностьПартнераСегментуПартнеров");
				КонецЕсли;
				МассивПроверок.Добавить("СоответствиеТоваровУсловиямПродаж");
				МассивПроверок.Добавить("ПринадлежностьТоваровСегментуНоменклатуры");
			КонецЕсли;

			Если ПроверятьДиапазонЦен Тогда
				МассивПроверок.Добавить("ВхождениеЦенВДопустимыйДиапазон");
			КонецЕсли;

		КонецЕсли;

		Если НужноСогласовать И ИспользоватьСоглашенияСКлиентами
			И (Не ДокументПродажи.РеализацияПоЗаказам Или ДокументПродажи.ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПоНакладным)  Тогда

			Если ДокументПродажи.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиенту
				ИЛИ ДокументПродажи.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности
				ИЛИ ДокументПродажи.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности
				ИЛИ Не ЗначениеЗаполнено(ДокументПродажи.ХозяйственнаяОперация) Тогда
				МассивПроверок.Добавить("ВременнаяТаблицаЭтапыГрафикаОплаты");
				МассивПроверок.Добавить("КорректностьЭтаповГрафикаОплаты");
			КонецЕсли;

		КонецЕсли;

		Если ОграничиватьРучныеСкидки И ДокументПродажи.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию Тогда

			Если ИспользоватьОграниченияПоПользователям Тогда
				МассивПроверок.Добавить("ВременнаяТаблицаОграничениеРучныхСкидокГруппыПользователей");
				МассивПроверок.Добавить("ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамПользователей");
				МассивПроверок.Добавить("ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамИПользователям");
				МассивПроверок.Добавить("ЦеновыеГруппы");
				МассивПроверок.Добавить("ОграничениеРучныхСкидокПоГруппамИПользователям");
				МассивПроверок.Добавить("ТаблицаОграничений");
			КонецЕсли;

			МассивПроверок.Добавить("ВременнаяТаблицаОграничениеРучныхСкидокОбщиеОграничения");
			МассивПроверок.Добавить("ВременнаяТаблицаОграниченияРучныхСкидок");
			МассивПроверок.Добавить("ДопустимостьРучныхСкидокНаценок");

		КонецЕсли;

		Если ДокументПродажи.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию Тогда
			МассивПроверок.Добавить("НаличиеУслугРабот");
		КонецЕсли;

		// ЗАЯВКА НА ВОЗВРАТ ТОВАРОВ ОТ КЛИЕНТА

	ИначеЕсли ИмяТаблицы = "Документ.ЗаявкаНаВозвратТоваровОтКлиента" Тогда

		НужнаЗаменаТоваров = ДокументПродажи.СпособКомпенсации = Перечисления.СпособыКомпенсацииВозвратовТоваров.ЗаменитьТовары;

		МассивПроверок.Добавить("ВременнаяТаблицаДокументПродажи");

		МассивПроверок.Добавить("ВременнаяТаблицаТоварыПредварительная");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборыПодготовка");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборыДополнительно");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборы");
		МассивПроверок.Добавить("ВременнаяТаблицаТовары");

		МассивПроверок.Добавить("КорректностьЗаполненияСкладаВЗаказеКлиента");
		Если НужнаЗаменаТоваров Тогда
			МассивПроверок.Добавить("КорректностьВыбораНоменклатурыПоНалогообложениюНДС");
			МассивПроверок.Добавить("КорректностьЗаполненияПодразделенияВТабличнойЧастиТовары");
		КонецЕсли;

		Если ОперацииВозвратаПереданныхТоваров.Найти(ДокументПродажи.ХозяйственнаяОперация) = Неопределено
			И НужнаЗаменаТоваров Тогда
			МассивПроверок.Добавить("КонтрольЗаполненияЦен");
		КонецЕсли;

		Если НужнаЗаменаТоваров Тогда
			МассивПроверок.Добавить("КорректностьСуммыИСуммыНДС");
		КонецЕсли;

		ВозвратМногооборотнойТары = ДокументПродажи.ВернутьМногооборотнуюТару;
		ТребуетсяЗалогЗаТару = ДокументПродажи.ТребуетсяЗалогЗаТару;

		Если НужноСогласовать 
			И (ДокументПродажи.Статус <> Перечисления.СтатусыЗаявокНаВозвратТоваровОтКлиентов.НеСогласована 
			ИЛИ НЕ ИспользоватьРасширенныеВозможностиЗаказаКлиента)Тогда

			МассивПроверок.Добавить("ВременнаяТаблицаКурсыВалют");
			Если НужнаЗаменаТоваров Тогда
				МассивПроверок.Добавить("КорректностьУказанияСтавкиНДС");
				МассивПроверок.Добавить("КорректностьСуммыНДС");
			КонецЕсли;

			Если ИспользоватьСоглашенияСКлиентами Тогда
				МассивПроверок.Добавить("ВременнаяТаблицаСкладыКорректныеПоСоглашению");
				МассивПроверок.Добавить("СоответствиеШапкиУсловиямПродаж");
				МассивПроверок.Добавить("ПринадлежностьПартнераСегментуПартнеров");
				Если НужнаЗаменаТоваров Тогда
					МассивПроверок.Добавить("СоответствиеТоваровУсловиямПродаж");
					МассивПроверок.Добавить("ПринадлежностьТоваровСегментуНоменклатуры");
				КонецЕсли;
			КонецЕсли;
			Если НужнаЗаменаТоваров И ПроверятьДиапазонЦен Тогда
				МассивПроверок.Добавить("ВхождениеЦенВДопустимыйДиапазон");
			КонецЕсли;

			// Проверка корректности этапов оплаты осуществляется только для
			// заявок, в которых не все строки отменены и  в которых указан график оплаты.

			Если ОперацииВозвратаПереданныхТоваров.Найти(ДокументПродажи.ХозяйственнаяОперация) = Неопределено
				И ДокументПродажи.ЗаменяющиеТовары.Количество() > 0
				И ДокументПродажи.СуммаДокумента <> 0
				И ДокументПродажи.ПорядокРасчетов <> Перечисления.ПорядокРасчетов.ПоНакладным
				И НужнаЗаменаТоваров Тогда

				МассивПроверок.Добавить("ВременнаяТаблицаЭтапыГрафикаОплаты");
				МассивПроверок.Добавить("КорректностьЭтаповГрафикаОплаты");

			КонецЕсли;

			Если ИспользоватьАвтоматическиеСкидки
				И Не ДокументПродажи.СкидкиРассчитаны
				И ОперацииВозвратаПереданныхТоваров.Найти(ДокументПродажи.ХозяйственнаяОперация) = Неопределено
				И ДокументПродажи.ЗаменяющиеТовары.Количество() > 0 Тогда
				ПроверятьСкидкиРассчитаны = Истина;
			КонецЕсли;

		КонецЕсли;

		Если ОграничиватьРучныеСкидки
			И ОперацииВозвратаПереданныхТоваров.Найти(ДокументПродажи.ХозяйственнаяОперация) = Неопределено
			И (ДокументПродажи.Статус <> Перечисления.СтатусыЗаявокНаВозвратТоваровОтКлиентов.НеСогласована 
			ИЛИ НЕ ИспользоватьРасширенныеВозможностиЗаказаКлиента)
			И НужнаЗаменаТоваров Тогда

			Если ИспользоватьОграниченияПоПользователям Тогда
				МассивПроверок.Добавить("ВременнаяТаблицаОграничениеРучныхСкидокГруппыПользователей");
				МассивПроверок.Добавить("ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамПользователей");
				МассивПроверок.Добавить("ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамИПользователям");
				МассивПроверок.Добавить("ЦеновыеГруппы");
				МассивПроверок.Добавить("ОграничениеРучныхСкидокПоГруппамИПользователям");
				МассивПроверок.Добавить("ТаблицаОграничений");
			КонецЕсли;

			МассивПроверок.Добавить("ВременнаяТаблицаОграничениеРучныхСкидокОбщиеОграничения");
			МассивПроверок.Добавить("ВременнаяТаблицаОграниченияРучныхСкидок");
			МассивПроверок.Добавить("ДопустимостьРучныхСкидокНаценок");

		КонецЕсли;

		Если ДокументПродажи.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера
			И НужнаЗаменаТоваров Тогда
			Если МассивПроверок.Найти("ВременнаяТаблицаТовары") = Неопределено Тогда

				МассивПроверок.Добавить("ВременнаяТаблицаТоварыПредварительная");
				МассивПроверок.Добавить("ВременнаяТаблицаНаборыПодготовка");
				МассивПроверок.Добавить("ВременнаяТаблицаНаборыДополнительно");
				МассивПроверок.Добавить("ВременнаяТаблицаНаборы");
				МассивПроверок.Добавить("ВременнаяТаблицаТовары");

			КонецЕсли;
			МассивПроверок.Добавить("НаличиеУслугРабот");
		КонецЕсли;

		Если ОперацииВозвратаПереданныхТоваров.Найти(ДокументПродажи.ХозяйственнаяОперация) <> Неопределено Тогда
			МассивПроверок.Добавить("НаличиеУслугРабот");
			МассивПроверок.Добавить("НаличиеГИСМ");
			МассивПроверок.Добавить("НаличиеАлкогольнойПродукции");
			МассивПроверок.Добавить("НаличиеВЕТИС");
		КонецЕсли;

		// ЗАДАНИЕ ТОРГОВОМУ ПРЕДСТАВИТЕЛЮ

	ИначеЕсли ИмяТаблицы = "Документ.ЗаданиеТорговомуПредставителю" Тогда
		ВозвратМногооборотнойТары = ДокументПродажи.ВернутьМногооборотнуюТару;
		ТребуетсяЗалогЗаТару = ДокументПродажи.ТребуетсяЗалогЗаТару;

		МассивПроверок.Добавить("ВременнаяТаблицаДокументПродажи");

		Если Не ОтклонениеОтУсловийПродаж И ИспользоватьСоглашенияСКлиентами Тогда
			МассивПроверок.Добавить("ВременнаяТаблицаСкладыКорректныеПоСоглашению");
			МассивПроверок.Добавить("СоответствиеШапкиУсловиямПродаж");
		КонецЕсли;

		МассивПроверок.Добавить("ВременнаяТаблицаТовары");
		МассивПроверок.Добавить("КорректностьВыбораНоменклатурыПоНалогообложениюНДС");

		Если ОперацииПередачи.Найти(ДокументПродажи.ХозяйственнаяОперация) <> Неопределено Тогда
			МассивПроверок.Добавить("НаличиеУслугРабот");
		КонецЕсли;

		// АКТ ВЫПОЛНЕННЫХ РАБОТ

	ИначеЕсли ИмяТаблицы = "Документ.АктВыполненныхРабот" Тогда

		МассивПроверок.Добавить("ВременнаяТаблицаДокументПродажи");

		МассивПроверок.Добавить("ВременнаяТаблицаТоварыПредварительная");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборыПодготовка");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборыДополнительно");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборы");
		МассивПроверок.Добавить("ВременнаяТаблицаТовары");

		Если ПроверятьСкидкиРассчитаны И
			ИспользоватьАвтоматическиеСкидки И
			Не ДокументПродажи.СкидкиРассчитаны Тогда
			ПроверятьСкидкиРассчитаны = Истина;
		КонецЕсли;

		МассивПроверок.Добавить("КорректностьСуммыИСуммыНДС");
		МассивПроверок.Добавить("КорректностьЗаполненияПодразделенияВТабличнойЧастиТовары");

		Если Не ДокументПродажи.АктПоЗаказам И НужноСогласовать Тогда

			МассивПроверок.Добавить("КорректностьУказанияСтавкиНДС");
			МассивПроверок.Добавить("КорректностьСуммыНДС");
			МассивПроверок.Добавить("ВременнаяТаблицаКурсыВалют");

			Если ИспользоватьСоглашенияСКлиентами Тогда
				МассивПроверок.Добавить("ВременнаяТаблицаСкладыКорректныеПоСоглашению");
				МассивПроверок.Добавить("СоответствиеШапкиУсловиямПродаж");
				МассивПроверок.Добавить("СоответствиеТоваровУсловиямПродаж");
				МассивПроверок.Добавить("ПринадлежностьПартнераСегментуПартнеров");
				МассивПроверок.Добавить("ПринадлежностьТоваровСегментуНоменклатуры");
			КонецЕсли;

			Если ПроверятьДиапазонЦен Тогда
				МассивПроверок.Добавить("ВхождениеЦенВДопустимыйДиапазон");
			КонецЕсли;

		КонецЕсли;

		Если НужноСогласовать И ИспользоватьСоглашенияСКлиентами Тогда
			МассивПроверок.Добавить("ВременнаяТаблицаЭтапыГрафикаОплаты");
			МассивПроверок.Добавить("КорректностьЭтаповГрафикаОплаты");
		КонецЕсли;

		Если ОграничиватьРучныеСкидки Тогда

			Если ИспользоватьОграниченияПоПользователям Тогда
				МассивПроверок.Добавить("ВременнаяТаблицаОграничениеРучныхСкидокГруппыПользователей");
				МассивПроверок.Добавить("ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамПользователей");
				МассивПроверок.Добавить("ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамИПользователям");
				МассивПроверок.Добавить("ЦеновыеГруппы");
				МассивПроверок.Добавить("ОграничениеРучныхСкидокПоГруппамИПользователям");
				МассивПроверок.Добавить("ТаблицаОграничений");
			КонецЕсли;

			МассивПроверок.Добавить("ВременнаяТаблицаОграничениеРучныхСкидокОбщиеОграничения");
			МассивПроверок.Добавить("ВременнаяТаблицаОграниченияРучныхСкидок");
			МассивПроверок.Добавить("ДопустимостьРучныхСкидокНаценок");

		КонецЕсли;

		// ВОЗВРАТ ТОВАРОВ ОТ КЛИЕНТА

	ИначеЕсли ИмяТаблицы = "Документ.ВозвратТоваровОтКлиента" Тогда

		Если ДокументПродажи.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера Тогда
			МассивПроверок.Добавить("ВременнаяТаблицаДокументПродажи");

			МассивПроверок.Добавить("ВременнаяТаблицаТоварыПредварительная");
			МассивПроверок.Добавить("ВременнаяТаблицаНаборыПодготовка");
			МассивПроверок.Добавить("ВременнаяТаблицаНаборыДополнительно");
			МассивПроверок.Добавить("ВременнаяТаблицаНаборы");
			МассивПроверок.Добавить("ВременнаяТаблицаТовары");

			МассивПроверок.Добавить("КонтрольЗаполненияЦен");
			МассивПроверок.Добавить("КорректностьСуммыИСуммыНДС");
		КонецЕсли;

		ВозвратМногооборотнойТары = ДокументПродажи.ВозвратПереданнойМногооборотнойТары;
		ТребуетсяЗалогЗаТару = ДокументПродажи.ПредусмотренЗалогЗаТару;

	ИначеЕсли ИмяТаблицы = "Документ.ПоступлениеТоваровОтХранителя" Тогда

		МассивПроверок.Добавить("ВременнаяТаблицаДокументПродажи");

		МассивПроверок.Добавить("ВременнаяТаблицаТоварыПредварительная");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборыПодготовка");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборыДополнительно");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборы");
		МассивПроверок.Добавить("ВременнаяТаблицаТовары");

		МассивПроверок.Добавить("НаличиеУслугРабот");
		МассивПроверок.Добавить("НаличиеГИСМ");
		МассивПроверок.Добавить("НаличиеАлкогольнойПродукции");
		МассивПроверок.Добавить("НаличиеВЕТИС");

	ИначеЕсли ИмяТаблицы = "Документ.ВыкупТоваровХранителем" Тогда

		МассивПроверок.Добавить("ВременнаяТаблицаДокументПродажи");

		МассивПроверок.Добавить("ВременнаяТаблицаТоварыПредварительная");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборыПодготовка");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборыДополнительно");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборы");
		МассивПроверок.Добавить("ВременнаяТаблицаТовары");

		МассивПроверок.Добавить("НаличиеУслугРабот");
		МассивПроверок.Добавить("НаличиеГИСМ");
		МассивПроверок.Добавить("НаличиеАлкогольнойПродукции");
		МассивПроверок.Добавить("НаличиеВЕТИС");

	ИначеЕсли ИмяТаблицы = "Документ.ОтчетОСписанииТоваровУХранителя"
		Или ИмяТаблицы = "Документ.ОприходованиеИзлишковТоваровУХранителя" Тогда

		МассивПроверок.Добавить("ВременнаяТаблицаДокументПродажи");

		МассивПроверок.Добавить("ВременнаяТаблицаТоварыПредварительная");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборыПодготовка");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборыДополнительно");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборы");
		МассивПроверок.Добавить("ВременнаяТаблицаТовары");

		МассивПроверок.Добавить("НаличиеУслугРабот");
		МассивПроверок.Добавить("НаличиеГИСМ");
		МассивПроверок.Добавить("НаличиеАлкогольнойПродукции");
		МассивПроверок.Добавить("НаличиеВЕТИС");

		// АКТ О РАСХОЖДЕНИЯХ ПОСЛЕ ПРИЕМКИ

	ИначеЕсли ИмяТаблицы = "Документ.АктОРасхожденияхПослеПриемки" Тогда

		Если ОперацииВозвратаПереданныхТоваров.Найти(ДокументПродажи.ХозяйственнаяОперация) = Неопределено Тогда
			МассивПроверок.Добавить("ВременнаяТаблицаДокументПродажи");

			МассивПроверок.Добавить("ВременнаяТаблицаТоварыПредварительная");
			МассивПроверок.Добавить("ВременнаяТаблицаНаборыПодготовка");
			МассивПроверок.Добавить("ВременнаяТаблицаНаборыДополнительно");
			МассивПроверок.Добавить("ВременнаяТаблицаНаборы");
			МассивПроверок.Добавить("ВременнаяТаблицаТовары");

			Запрос = Новый Запрос;
			Запрос.Текст = "
			|ВЫБРАТЬ
			|	МАКСИМУМ(ВозвратТоваровОтКлиента.ВозвратПереданнойМногооборотнойТары) КАК ВернутьМногооборотнуюТару,
			|	МАКСИМУМ(ВозвратТоваровОтКлиента.ПредусмотренЗалогЗаТару)             КАК ТребуетсяЗалогЗаТару
			|ИЗ
			|	Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
			|ГДЕ
			|	ВозвратТоваровОтКлиента.Ссылка В(&МассивОснований)";

			Запрос.УстановитьПараметр("МассивОснований", ДокументПродажи.Товары.ВыгрузитьКолонку("ДокументОснование"));

			Выборка = Запрос.Выполнить().Выбрать();

			Если Выборка.Следующий() Тогда
				ВозвратМногооборотнойТары = Выборка.ВернутьМногооборотнуюТару;
				ТребуетсяЗалогЗаТару      = Выборка.ТребуетсяЗалогЗаТару;
			КонецЕсли;


			МассивПроверок.Добавить("КонтрольЗаполненияЦенАкт");
		КонецЕсли;

		// АКТ О РАСХОЖДЕНИЯХ ПОСЛЕ ОТГРУЗКИ

	ИначеЕсли ИмяТаблицы = "Документ.АктОРасхожденияхПослеОтгрузки" Тогда

		МассивПроверок.Добавить("ВременнаяТаблицаДокументПродажи");

		МассивПроверок.Добавить("ВременнаяТаблицаТоварыПредварительная");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборыПодготовка");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборыДополнительно");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборы");
		МассивПроверок.Добавить("ВременнаяТаблицаТовары");

		Если ДокументПродажи.Статус <> Перечисления.СтатусыАктаОРасхождениях.НеСогласовано Тогда
			МассивПроверок.Добавить("КорректностьЗаполненияСкладаВТабличнойЧастиТовары");
		КонецЕсли;

		Если Не ДокументПродажи.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи
			//++ НЕ УТ
			И Не ДокументПродажи.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПереработчику2_5
			//-- НЕ УТ
			И Не ДокументПродажи.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию Тогда

			МассивПроверок.Добавить("КорректностьВыбораНоменклатурыПоНалогообложениюНДС");
			МассивПроверок.Добавить("КонтрольЗаполненияЦенАкт");

		КонецЕсли;

		Если Не ОбщегоНазначенияУТКлиентСервер.АвторизованВнешнийПользователь() Тогда

			Запрос = Новый Запрос;
			Запрос.Текст = "
			|ВЫБРАТЬ
			|	МАКСИМУМ(РеализацияТоваровУслуг.ВернутьМногооборотнуюТару) КАК ВернутьМногооборотнуюТару,
			|	МАКСИМУМ(РеализацияТоваровУслуг.ТребуетсяЗалогЗаТару) КАК ТребуетсяЗалогЗаТару
			|ИЗ
			|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
			|ГДЕ
			|	РеализацияТоваровУслуг.Ссылка В(&МассивРеализаций)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	МАКСИМУМ(ПередачаТоваров.ВернутьМногооборотнуюТару) КАК ВернутьМногооборотнуюТару,
			|	ЛОЖЬ КАК ТребуетсяЗалогЗаТару
			|ИЗ
			|	Документ.ПередачаТоваровХранителю КАК ПередачаТоваров
			|ГДЕ
			|	ПередачаТоваров.Ссылка В(&МассивРеализаций)
			|";

			Запрос.УстановитьПараметр("МассивРеализаций", ДокументПродажи.Товары.ВыгрузитьКолонку("Реализация"));

			Выборка = Запрос.Выполнить().Выбрать();

			Если Выборка.Следующий() Тогда
				ВозвратМногооборотнойТары = Выборка.ВернутьМногооборотнуюТару;
				ТребуетсяЗалогЗаТару      = Выборка.ТребуетсяЗалогЗаТару;
			КонецЕсли;

		КонецЕсли;

		Если ОперацииПередачи.Найти(ДокументПродажи.ХозяйственнаяОперация) <> Неопределено Тогда
			МассивПроверок.Добавить("НаличиеУслугРабот");
		КонецЕсли;

		Если ОперацииПередачи.Найти(ДокументПродажи.ХозяйственнаяОперация) = Неопределено Тогда
			МассивПроверок.Добавить("КорректностьЗаполненияПодразделенияВТабличнойЧастиТовары");
		КонецЕсли;

		// ЧЕК ККМ

	ИначеЕсли ИмяТаблицы = "Документ.ЧекККМ" Тогда

		Если ОграничиватьРучныеСкидки Тогда

			МассивПроверок.Добавить("ВременнаяТаблицаТоварыПредварительная");
			МассивПроверок.Добавить("ВременнаяТаблицаНаборыПодготовка");
			МассивПроверок.Добавить("ВременнаяТаблицаНаборыДополнительно");
			МассивПроверок.Добавить("ВременнаяТаблицаНаборы");
			МассивПроверок.Добавить("ВременнаяТаблицаТовары");

			Если ИспользоватьОграниченияПоПользователям Тогда
				МассивПроверок.Добавить("ВременнаяТаблицаОграничениеРучныхСкидокГруппыПользователей");
				МассивПроверок.Добавить("ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамПользователей");
				МассивПроверок.Добавить("ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамИПользователям");
				МассивПроверок.Добавить("ЦеновыеГруппы");
				МассивПроверок.Добавить("ОграничениеРучныхСкидокПоГруппамИПользователям");
				МассивПроверок.Добавить("ТаблицаОграничений");
			КонецЕсли;

			МассивПроверок.Добавить("ВременнаяТаблицаОграничениеРучныхСкидокОбщиеОграничения");
			МассивПроверок.Добавить("ВременнаяТаблицаОграниченияРучныхСкидок");
			МассивПроверок.Добавить("ДопустимостьРучныхСкидокНаценок");

		КонецЕсли;

		// КОРРЕКТИРОВКА РЕАЛИЗАЦИИ

	ИначеЕсли ИмяТаблицы = "Документ.КорректировкаРеализации" Тогда

		МассивПроверок.Добавить("ВременнаяТаблицаДокументПродажи");

		МассивПроверок.Добавить("ВременнаяТаблицаТоварыПредварительная");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборыПодготовка");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборыДополнительно");
		МассивПроверок.Добавить("ВременнаяТаблицаНаборы");
		МассивПроверок.Добавить("ВременнаяТаблицаТовары");

		ПроверкаПоСкладу = Истина;

		Если ТипЗнч(ДокументПродажи.ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			ДокументОснованиеХозяйственнаяОперация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументПродажи.ДокументОснование, "ХозяйственнаяОперация");
			Если КомиссионнаяТорговляСервер.РеализацияЧерезКомиссионера(ДокументОснованиеХозяйственнаяОперация) Тогда
				ПроверкаПоСкладу = Ложь;
			КонецЕсли;
			//++ НЕ УТКА
		ИначеЕсли ТипЗнч(ДокументПродажи.ДокументОснование) = Тип("ДокументСсылка.ОтчетДавальцу") Тогда
			ПроверкаПоСкладу = Ложь;
			//-- НЕ УТКА
		КонецЕсли;

		Если ПроверкаПоСкладу Тогда
			МассивПроверок.Добавить("КорректностьЗаполненияСклада");
			МассивПроверок.Добавить("КорректностьЗаполненияСкладаВТабличнойЧастиТовары");
		КонецЕсли;

		МассивПроверок.Добавить("КорректностьЗаполненияПодразделенияВТабличнойЧастиТовары");
		МассивПроверок.Добавить("КорректностьВыбораНоменклатурыПоНалогообложениюНДС");

		МассивПроверок.Добавить("КонтрольЗаполненияЦен");
		МассивПроверок.Добавить("КорректностьСуммыИСуммыНДС");

		Если ТипЗнч(ДокументПродажи.ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			ВозвратМногооборотнойТары = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументПродажи.ДокументОснование, "ВернутьМногооборотнуюТару");
			ТребуетсяЗалогЗаТару = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументПродажи.ДокументОснование, "ТребуетсяЗалогЗаТару");
		КонецЕсли;

	Иначе

		УстановитьПривилегированныйРежим(Ложь);
		Возврат;

	КонецЕсли;

	УчитыватьСкидкиНаценки = Не ((ИмяТаблицы = "Справочник.СоглашенияСКлиентами") 
	Или (ИмяТаблицы = "Документ.ЗаданиеТорговомуПредставителю")
	Или (ИмяТаблицы = "Документ.ВозвратТоваровОтКлиента"));

	// Сформируем текст запроса необходимых проверок в соответствие с массивом проверок

	ТекстЗапроса     = "";
	ПараметрыЗапроса = Новый Структура();

	НеПроверятьКодСтроки = Не (ТипДокумента = Тип("ДокументОбъект.РеализацияТоваровУслуг")
	Или ТипДокумента = Тип("ДокументОбъект.ПередачаТоваровХранителю"));

	ПараметрыЗапроса.Вставить("Дата",          ДокументПродажи.Дата);
	ПараметрыЗапроса.Вставить("ЭтоСоглашение", ТипДокумента = Тип("СправочникОбъект.СоглашенияСКлиентами"));
	ПараметрыЗапроса.Вставить("Ссылка",        ДокументПродажи.Ссылка);
	ПараметрыЗапроса.Вставить("Пользователь",  Пользователи.АвторизованныйПользователь());
	ПараметрыЗапроса.Вставить("ИспользоватьГрафикиОплаты", ПолучитьФункциональнуюОпцию("ИспользоватьГрафикиОплаты"));
	ПараметрыЗапроса.Вставить("ИспользоватьСтатусыРеализацийТоваровУслуг", ПолучитьФункциональнуюОпцию("ИспользоватьСтатусыРеализацийТоваровУслуг"));
	ПараметрыЗапроса.Вставить("ВозвратМногооборотнойТары", ВозвратМногооборотнойТары);
	ПараметрыЗапроса.Вставить("ТребуетсяЗалогЗаТару", ТребуетсяЗалогЗаТару);
	ПараметрыЗапроса.Вставить("СуммаВзаиморасчетовРеализации", СуммаВзаиморасчетовРеализации);
	ПараметрыЗапроса.Вставить("СуммаЗалогаПоРеализации", СуммаЗалогаПоРеализации);
	ПараметрыЗапроса.Вставить("НеЗаданаСуммаЗалога", Ложь);
	ПараметрыЗапроса.Вставить("НеПроверятьКодСтроки", НеПроверятьКодСтроки);
	ПараметрыЗапроса.Вставить("ИспользоватьСоглашенияСКлиентами", ИспользоватьСоглашенияСКлиентами);
	ПараметрыЗапроса.Вставить("СтранаРегистрации", ЗначениеНастроекКлиентСерверПовтИсп.СтранаРегистрацииОрганизации(
	ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументПродажи.Ссылка, "Организация")));

	Если ИспользоватьОграниченияПоСоглашениям Тогда
		ПараметрыЗапроса.Вставить("СоглашениеСКлиентом", ДокументПродажи.Соглашение);
	КонецЕсли;

	ИспользоватьПроверкиПоЦенам = ЦенообразованиеВызовСервера.ИспользуетсяЦенообразование25(ДокументПродажи.Дата) 
	И (МассивПроверок.Найти("ВхождениеЦенВДопустимыйДиапазон") <> Неопределено
	Или МассивПроверок.Найти("СоответствиеТоваровУсловиямПродаж") <> Неопределено);

	Для Каждого ТекЭлемент Из МассивПроверок Цикл

		Если ТекЭлемент = "ВременнаяТаблицаДокументПродажи" Тогда

			СформироватьЗапросВременнаяТаблицаШапкаДокументаПродажи(ТекстЗапроса, ПараметрыЗапроса, ДокументПродажи);

		ИначеЕсли ТекЭлемент = "ВременнаяТаблицаТовары" Тогда

			СформироватьЗапросВременнаяТаблицаТоварыДокументаПродажи(ТекстЗапроса, 
			ПараметрыЗапроса, 
			ДокументПродажи, 
			ИмяТаблицы, 
			УчитыватьСкидкиНаценки,
			,
			ИспользоватьПроверкиПоЦенам);

		ИначеЕсли ТекЭлемент = "ВременнаяТаблицаЦеновыеГруппы" Тогда

			СформироватьЗапросВременнаяТаблицаЦеновыеГруппыДокументаПродажи(ТекстЗапроса, ПараметрыЗапроса, ДокументПродажи);

		ИначеЕсли ТекЭлемент = "ВременнаяТаблицаЭтапыГрафикаОплаты" Тогда

			СформироватьЗапросВременнаяТаблицаЭтапыОплатыДокументаПродажи(ТекстЗапроса, ПараметрыЗапроса, ДокументПродажи);

		ИначеЕсли ТекЭлемент = "ВременнаяТаблицаКурсыВалют" Тогда

			СформироватьЗапросВременнаяТаблицаКурсыВалют(ТекстЗапроса, ПараметрыЗапроса, ДокументПродажи);

		ИначеЕсли ТекЭлемент = "ВременнаяТаблицаСкладыКорректныеПоСоглашению" Тогда

			СформироватьЗапросВременнаяТаблицаСкладыКорректныеПоСоглашению(ТекстЗапроса);

		ИначеЕсли ТекЭлемент = "СоответствиеШапкиУсловиямПродаж" Тогда

			СформироватьЗапросШапкаДокументаПродажи(ТекстЗапроса, ИмяТаблицы);

		ИначеЕсли ТекЭлемент = "ДублиТоваров" Тогда

			СформироватьЗапросНаличиеДублейТоваровДокументаПродажи(ТекстЗапроса);

		ИначеЕсли ТекЭлемент = "СоответствиеТоваровУсловиямПродаж" Тогда

			СформироватьЗапросТоварыДокументаПродажи(ТекстЗапроса, ИмяТаблицы, ИспользоватьПроверкиПоЦенам);

		ИначеЕсли ТекЭлемент = "ДублиЦеновыхГрупп" Тогда

			СформироватьЗапросНаличиеДублейЦеновыхГруппДокументаПродажи(ТекстЗапроса);

		ИначеЕсли ТекЭлемент = "СоответствиеЦеновыхГруппУсловиямПродаж" Тогда

			СформироватьЗапросСоответствиеГруппЦенНоменклатурыУсловиямПродаж(ТекстЗапроса);

		ИначеЕсли ТекЭлемент = "ПринадлежностьТоваровСегментуНоменклатуры" Тогда

			СформироватьЗапросПринадлежностьТоваровСегментуНоменклатуры(ТекстЗапроса);

		ИначеЕсли ТекЭлемент = "ПринадлежностьПартнераСегментуПартнеров" Тогда

			СформироватьЗапросПринадлежностьПартнераСегментуПартнеров(ТекстЗапроса);

		ИначеЕсли ТекЭлемент = "КорректностьЭтаповГрафикаОплаты" Тогда

			СформироватьЗапросКорректностьЭтаповГрафикаОплаты(ТекстЗапроса, ПараметрыЗапроса);

		ИначеЕсли ТекЭлемент = "ВхождениеЦенВДопустимыйДиапазон" Тогда

			СформироватьЗапросВхождениеЦенВДопустимыйДиапазон(ТекстЗапроса, ИспользоватьПроверкиПоЦенам);

		ИначеЕсли ТекЭлемент = "НаличиеУслугРабот" Тогда

			СформироватьЗапросНаличиеУслугРаботВДокументеПродажи(ТекстЗапроса);

		ИначеЕсли ТекЭлемент = "НаличиеУслугТары" Тогда

			СформироватьЗапросНаличиеУслугТарыВДокументеПродажи(ТекстЗапроса);

			//++ НЕ УТ
		ИначеЕсли ТекЭлемент = "КорректностьЗаполненияСкладаВЗаказеДавальца" Тогда

			СформироватьЗапросКорректностьЗаполненияСкладаВЗаказеДавальца(ТекстЗапроса);

		ИначеЕсли ТекЭлемент = "КорректностьЗаполненияСкладаВТабличнойЧастиТоварыЗаказаДавальца" Тогда

			СформироватьЗапросКорректностьЗаполненияСкладовВТабличнойЧастиТоварыЗаказаДавальца(ТекстЗапроса);

			//-- НЕ УТ
		ИначеЕсли ТекЭлемент = "КорректностьЗаполненияСклада" Тогда

			СформироватьЗапросКорректностьЗаполненияСклада(ТекстЗапроса);

		ИначеЕсли ТекЭлемент = "КорректностьЗаполненияСкладаВЗаказеКлиента" Тогда

			СформироватьЗапросКорректностьЗаполненияСкладаВЗаказеКлиента(ТекстЗапроса);

		ИначеЕсли ТекЭлемент = "КорректностьЗаполненияСкладаВТабличнойЧастиТовары" Тогда

			СформироватьЗапросКорректностьЗаполненияСкладовВТабличнойЧастиТовары(ТекстЗапроса, ИмяТаблицы);

		ИначеЕсли ТекЭлемент = "КорректностьЗаполненияПодразделенияВТабличнойЧастиТовары" Тогда

			СформироватьЗапросКорректностьЗаполненияПодразделенийВТабличнойЧастиТовары(ТекстЗапроса, ИмяТаблицы);

		ИначеЕсли ТекЭлемент = "ВременнаяТаблицаОграничениеРучныхСкидокГруппыПользователей" Тогда

			НастройкиПродажДляПользователейСервер.СформироватьЗапросВременнаяТаблицаОграничениеРучныхСкидокГруппыПользователей(ТекстЗапроса);

		ИначеЕсли ТекЭлемент = "ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамПользователей" Тогда

			НастройкиПродажДляПользователейСервер.СформироватьЗапросВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамПользователей(ТекстЗапроса, ИспользоватьЦеновыеГруппы);

		ИначеЕсли ТекЭлемент = "ВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамИПользователям" Тогда

			НастройкиПродажДляПользователейСервер.СформироватьЗапросВременнаяТаблицаОграничениеРучныхСкидокОграниченияПоГруппамИПользователям(ТекстЗапроса, ИспользоватьЦеновыеГруппы);

		ИначеЕсли ТекЭлемент = "ВременнаяТаблицаОграничениеРучныхСкидокОбщиеОграничения" Тогда

			НастройкиПродажДляПользователейСервер.СформироватьЗапросВременнаяТаблицаОграничениеРучныхСкидокОбщиеОграничения(ТекстЗапроса, ИспользоватьЦеновыеГруппы, ИспользоватьОграниченияПоПользователям, ИспользоватьОграниченияПоСоглашениям);

		ИначеЕсли ТекЭлемент = "ВременнаяТаблицаОграниченияРучныхСкидок" Тогда

			НастройкиПродажДляПользователейСервер.СформироватьЗапросВременнаяТаблицаОграниченияРучныхСкидок(ТекстЗапроса);

		ИначеЕсли ТекЭлемент = "ДопустимостьРучныхСкидокНаценок" Тогда

			СформироватьЗапросДопустимостьРучныхСкидокНаценок(ТекстЗапроса);

		ИначеЕсли ТекЭлемент = "ВременнаяТаблицаЭтапыОплатыСоглашенияТипового" Тогда

			СформироватьЗапросВременнаяТаблицаЭтапыОплатыСоглашенияТипового(ТекстЗапроса, ПараметрыЗапроса, ДокументПродажи);

		ИначеЕсли ТекЭлемент = "ВременнаяТаблицаЭтапыОплатыСоглашенияИндивидуального" Тогда

			СформироватьЗапросВременнаяТаблицаЭтапыОплатыСоглашенияИндивидуального(ТекстЗапроса, ПараметрыЗапроса, ДокументПродажи);

		ИначеЕсли ТекЭлемент = "КорректностьЭтаповОплатыСоглашения" Тогда

			СформироватьЗапросКорректностьЭтаповОплатыСоглашения(ТекстЗапроса);

		ИначеЕсли ТекЭлемент = "КорректностьКоличестваЭтаповОплатыСоглашения" Тогда

			СформироватьЗапросКорректностьКоличестваЭтаповОплатыСоглашения(ТекстЗапроса);

		ИначеЕсли ТекЭлемент = "ВременнаяТаблицаСуммыВзаиморасчетов" Тогда

			СформироватьЗапросВременнаяТаблицаСуммыВзаиморасчетов(ТекстЗапроса);

		ИначеЕсли ТекЭлемент = "СоответствиеСуммыПредоплатыГрафикуОплат" Тогда

			СформироватьЗапросСоответствиеСуммыПредоплатыГрафикуОплат(ТекстЗапроса);

			//++ НЕ УТКА
		ИначеЕсли ТекЭлемент = "КонтрольЗавершенияРасчетов" Тогда

			СформироватьЗапросКонтрольЗавершенияРасчетов(ТекстЗапроса);

		ИначеЕсли ТекЭлемент = "КонтрольЗавершенияОтгрузки" Тогда

			СформироватьЗапросКонтрольЗавершенияОтгрузки(ТекстЗапроса);

			//-- НЕ УТКА
		ИначеЕсли ТекЭлемент = "КонтрольЗаполненияЦен" Тогда

			СформироватьЗапросКонтрольЗаполненияЦен(ТекстЗапроса);

		ИначеЕсли ТекЭлемент = "КонтрольЗаполненияЦенАкт" Тогда

			СформироватьЗапросКонтрольЗаполненияЦенАкт(ТекстЗапроса);

			//++ НЕ УТКА
		ИначеЕсли ТекЭлемент = "КонтрольОформленияОтчетов" Тогда

			СформироватьЗапросКонтрольОформленияОтчетов(ТекстЗапроса);

			//-- НЕ УТКА
		ИначеЕсли ТекЭлемент = "КонтрольЗаполненияЦенСУчетомОтмененных" Тогда

			СформироватьЗапросКонтрольЗаполненияЦенСУчетомОтмененных(ТекстЗапроса);

		ИначеЕсли ТекЭлемент = "НаличиеГИСМ" Тогда

			СформироватьЗапросНаличиеТоваровГИСМВДокументеПродажи(ТекстЗапроса);

		ИначеЕсли ТекЭлемент = "НаличиеАлкогольнойПродукции" Тогда

			СформироватьЗапросНаличиеАлкогольнойПродукцииВДокументеПродажи(ТекстЗапроса);

		ИначеЕсли ТекЭлемент = "НаличиеВЕТИС" Тогда

			СформироватьЗапросНаличиеТоваровВЕТИСВДокументеПродажи(ТекстЗапроса);

		ИначеЕсли ТекЭлемент = "КорректностьЗаполненияНоменклатурыПартнера" Тогда

			НоменклатураПартнеровСервер.СформироватьЗапросКорректностьЗаполненияНоменклатурыПартнера(ТекстЗапроса, ПараметрыЗапроса);

		ИначеЕсли ТекЭлемент = "КорректностьСуммыНДС" Тогда

			СформироватьЗапросКорректностьСуммыНДС(ТекстЗапроса, ПараметрыЗапроса);

		ИначеЕсли ТекЭлемент = "КорректностьУказанияСтавкиНДС" Тогда

			СформироватьЗапросКорректностьУказанияСтавкиНДСПродажи(ТекстЗапроса);

		ИначеЕсли ТекЭлемент = "КорректностьСуммыИСуммыНДС" Тогда

			СформироватьЗапросКорректностьСуммыИСуммыНДС(ТекстЗапроса);

		ИначеЕсли ТекЭлемент = "КорректностьВыбораНоменклатурыПоНалогообложениюНДС" Тогда
			ТекстЗапроса = ТекстЗапроса 
			+ УчетНДСУП.ТекстЗапросаКорректностьВыбораНоменклатурыПоНалогообложениюНДСПродажи(ПараметрыЗапроса);

		ИначеЕсли ТекЭлемент = "НаправлениеДеятельностиПоУчетуДоховИРасходов" Тогда

			СформироватьЗапросПроверкиНаправленияДеятельностиПоУчетуДоходовИРасходов(ТекстЗапроса);

		ИначеЕсли ТекЭлемент = "ИспользованиеЗаказаКлиентуПоВариантуОбособления" Тогда

			СформироватьЗапросПроверкиВозможностиИспользованияЗаказаКлиентаПоВариантуОбособления(ТекстЗапроса);

		КонецЕсли;

	КонецЦикла;

	Если Не ЗначениеЗаполнено(ТекстЗапроса) Тогда
		УстановитьПривилегированныйРежим(Ложь);
		Возврат;
	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);

	Для Каждого ПараметрЗапроса Из ПараметрыЗапроса Цикл
		Запрос.УстановитьПараметр(ПараметрЗапроса.Ключ, ПараметрЗапроса.Значение);
	КонецЦикла;

	МассивРезультатов = Запрос.ВыполнитьПакет(); 

	// Сообщим пользователю о результатах проверки для каждого результата запроса

	Если ПроверятьСкидкиРассчитаны Тогда
		СообщитьОбОшибкахСкидкиНеРассчитаны(ДокументПродажи, Отказ);
	КонецЕсли;

	НевозможноПровестиБезСогласования = Ложь;
	Для ТекИндекс = 0 По МассивРезультатов.Количество()-1 Цикл

		Выборка = МассивРезультатов[ТекИндекс].Выбрать();

		Если МассивПроверок[ТекИндекс] = "СоответствиеШапкиУсловиямПродаж" Тогда

			СообщитьОбОшибкахШапкаДокументаПродажи(Выборка,ДокументПродажи,НевозможноПровестиБезСогласования);

		ИначеЕсли МассивПроверок[ТекИндекс] = "ДублиТоваров" Тогда

			СообщитьОбОшибкахНаличиеДублейТоваровДокументаПродажи(Выборка, ДокументПродажи, Отказ);

		ИначеЕсли МассивПроверок[ТекИндекс] = "СоответствиеТоваровУсловиямПродаж" Тогда

			СообщитьОбОшибкахТоварыДокументаПродажи(Выборка, ДокументПродажи, НевозможноПровестиБезСогласования);

		ИначеЕсли МассивПроверок[ТекИндекс] = "ДублиЦеновыхГрупп" Тогда

			СообщитьОбОшибкахНаличиеДублейЦеновыхГруппДокументаПродажи(Выборка, ДокументПродажи, Отказ);

		ИначеЕсли МассивПроверок[ТекИндекс] = "СоответствиеЦеновыхГруппУсловиямПродаж" Тогда

			СообщитьОбОшибкахСоответствиеГруппЦенНоменклатурыУсловиямПродаж(Выборка, ДокументПродажи, НевозможноПровестиБезСогласования);

		ИначеЕсли МассивПроверок[ТекИндекс] = "ПринадлежностьТоваровСегментуНоменклатуры" Тогда

			СообщитьОбОшибкахПринадлежностьТоваровСегментуНоменклатуры(Выборка, ДокументПродажи, НевозможноПровестиБезСогласования);

		ИначеЕсли МассивПроверок[ТекИндекс] = "ПринадлежностьПартнераСегментуПартнеров" Тогда

			СообщитьОбОшибкахПринадлежностьПартнераСегментуПартнеров(Выборка, ДокументПродажи, НевозможноПровестиБезСогласования);

		ИначеЕсли МассивПроверок[ТекИндекс] = "КорректностьЭтаповГрафикаОплаты" Тогда

			СообщитьОбОшибкахКорректностьЭтаповГрафикаОплаты(Выборка, ДокументПродажи, НевозможноПровестиБезСогласования);

		ИначеЕсли МассивПроверок[ТекИндекс] = "ВхождениеЦенВДопустимыйДиапазон" Тогда

			СообщитьОбОшибкахВхождениеЦенВДопустимыйДиапазон(Выборка, ДокументПродажи, НевозможноПровестиБезСогласования, ИспользоватьРучныеСкидки Или ИспользоватьАвтоматическиеСкидки);

		ИначеЕсли МассивПроверок[ТекИндекс] = "НаличиеУслугРабот" Тогда

			СообщитьОбОшибкахНаличиеУслугРаботВДокументеПродажи(Выборка, ДокументПродажи, ИмяТЧ, ПредставлениеТЧ, Отказ);

		ИначеЕсли МассивПроверок[ТекИндекс] = "НаличиеУслугТары" Тогда

			СообщитьОбОшибкахНаличиеУслугТарыВДокументеПродажи(Выборка, ДокументПродажи, ИмяТЧ, ПредставлениеТЧ, Отказ);

		ИначеЕсли МассивПроверок[ТекИндекс] = "НаличиеГИСМ" Тогда

			СообщитьОбОшибкахНаличиеТоваровГИСМВДокументеПродажи(Выборка, ДокументПродажи, ИмяТЧ, ПредставлениеТЧ, Отказ);

		ИначеЕсли МассивПроверок[ТекИндекс] = "НаличиеАлкогольнойПродукции" Тогда

			СообщитьОбОшибкахНаличиеАлкогольнойПродукцииВДокументеПродажи(Выборка, ДокументПродажи, ИмяТЧ, ПредставлениеТЧ, Отказ);

		ИначеЕсли МассивПроверок[ТекИндекс] = "НаличиеВЕТИС" Тогда

			СообщитьОбОшибкахНаличиеТоваровВЕТИСВДокументеПродажи(Выборка, ДокументПродажи, ИмяТЧ, ПредставлениеТЧ, Отказ);

		ИначеЕсли МассивПроверок[ТекИндекс] = "ДопустимостьРучныхСкидокНаценок" Тогда

			СообщитьОбОшибкахДопустимостьРучныхСкидокНаценок(Выборка, ДокументПродажи, Отказ);

			//++ НЕ УТ
		ИначеЕсли МассивПроверок[ТекИндекс] = "КорректностьЗаполненияСкладаВЗаказеДавальца" Тогда

			СообщитьОбОшибкахКорректностьЗаполненияСкладаЗаказаДавальца(Выборка, ДокументПродажи, Отказ);

		ИначеЕсли МассивПроверок[ТекИндекс] = "КорректностьЗаполненияСкладаВТабличнойЧастиТоварыЗаказаДавальца" Тогда

			СообщитьОбОшибкахКорректностьЗаполненияСкладаВТабличнойЧастиТоварыЗаказаДавальца(Выборка, ДокументПродажи, Отказ);

			//-- НЕ УТ
		ИначеЕсли МассивПроверок[ТекИндекс] = "КорректностьЗаполненияСклада"
			ИЛИ МассивПроверок[ТекИндекс] = "КорректностьЗаполненияСкладаВЗаказеКлиента" Тогда

			СообщитьОбОшибкахКорректностьЗаполненияСклада(Выборка, ДокументПродажи, Отказ);

		ИначеЕсли МассивПроверок[ТекИндекс] = "КорректностьЗаполненияСкладаВТабличнойЧастиТовары" Тогда

			СообщитьОбОшибкахКорректностьЗаполненияСкладаВТабличнойЧастиТовары(Выборка, ДокументПродажи, Отказ);

		ИначеЕсли МассивПроверок[ТекИндекс] = "КорректностьЗаполненияПодразделенияВТабличнойЧастиТовары" Тогда

			СообщитьОбОшибкахКорректностьЗаполненияПодразделенияВТабличнойЧастиТовары(Выборка, ДокументПродажи, Отказ);

		ИначеЕсли МассивПроверок[ТекИндекс] = "КорректностьЭтаповОплатыСоглашения" Тогда

			СообщитьОбОшибкахКорректностьЭтаповОплатыСоглашения(Выборка, ДокументПродажи, НевозможноПровестиБезСогласования);

		ИначеЕсли МассивПроверок[ТекИндекс] = "КорректностьКоличестваЭтаповОплатыСоглашения" Тогда

			СообщитьОбОшибкахКорректностьКоличестваЭтаповОплатыСоглашения(Выборка, ДокументПродажи, Отказ);

		ИначеЕсли МассивПроверок[ТекИндекс] = "СоответствиеСуммыПредоплатыГрафикуОплат" Тогда

			СообщитьОбОшибкахСоответствиеСуммыПредоплатыГрафикуОплат(Выборка, ДокументПродажи, Отказ);

			//++ НЕ УТКА
		ИначеЕсли МассивПроверок[ТекИндекс] = "КонтрольЗавершенияРасчетов" Тогда

			СообщитьОбОшибкахКонтрольЗавершенияРасчетов(Выборка, ДокументПродажи, Отказ);

		ИначеЕсли МассивПроверок[ТекИндекс] = "КонтрольЗавершенияОтгрузки" Тогда

			СообщитьОбОшибкахКонтрольЗавершенияОтгрузки(Выборка, ДокументПродажи, Отказ);

		ИначеЕсли МассивПроверок[ТекИндекс] = "КонтрольОформленияОтчетов" Тогда

			СообщитьОбОшибкахКонтрольОформленияОтчетов(Выборка, ДокументПродажи, Отказ);

			//-- НЕ УТКА
		ИначеЕсли МассивПроверок[ТекИндекс] = "КонтрольЗаполненияЦен" 
			ИЛИ МассивПроверок[ТекИндекс] = "КонтрольЗаполненияЦенСУчетомОтмененных"
			ИЛИ МассивПроверок[ТекИндекс] = "КонтрольЗаполненияЦенАкт" Тогда

			СообщитьОбОшибкахКонтрольЗаполненияЦен(Выборка, ДокументПродажи, ИмяТЧ, ПредставлениеТЧ, Отказ);

		ИначеЕсли МассивПроверок[ТекИндекс] = "КорректностьЗаполненияНоменклатурыПартнера" Тогда

			НоменклатураПартнеровСервер.СообщитьОбОшибкахКорректностьЗаполненияНоменклатурыПартнера(Выборка, ДокументПродажи, Отказ);

		ИначеЕсли МассивПроверок[ТекИндекс] = "КорректностьСуммыНДС" Тогда 

			СообщитьОбОшибкахКорректностьСуммыНДС(Выборка, ДокументПродажи, ИмяТЧ, ПредставлениеТЧ, Отказ);

		ИначеЕсли МассивПроверок[ТекИндекс] = "КорректностьУказанияСтавкиНДС" Тогда

			СообщитьОбОшибкахКорректностьУказанияСтавкиНДСПродажи(Выборка, ДокументПродажи, ИмяТЧ, ПредставлениеТЧ, Отказ);

		ИначеЕсли МассивПроверок[ТекИндекс] = "КорректностьСуммыИСуммыНДС" Тогда 

			СообщитьОбОшибкахКорректностьСуммыИСуммыНДС(Выборка, ДокументПродажи, ИмяТЧ, ПредставлениеТЧ, Отказ);

		ИначеЕсли  МассивПроверок[ТекИндекс] = "КорректностьВыбораНоменклатурыПоНалогообложениюНДС" Тогда

			УчетНДСУП.СообщитьОбОшибкахКорректностьВыбораНоменклатурыПоНалогообложениюНДСПродажи(Выборка, ДокументПродажи, ИмяТЧ, ПредставлениеТЧ, Отказ);

		ИначеЕсли МассивПроверок[ТекИндекс] = "НаправлениеДеятельностиПоУчетуДоховИРасходов" Тогда

			СообщитьОбОшибкеВыбораНаправленияДеятельности(Выборка, ДокументПродажи, Отказ);

		ИначеЕсли МассивПроверок[ТекИндекс] = "ИспользованиеЗаказаКлиентуПоВариантуОбособления" Тогда

			СообщитьОбОшибкеВозможностиИспользованияЗаказаКлиента(Выборка, ДокументПродажи, Отказ);

		КонецЕсли;

	КонецЦикла;

	Если НевозможноПровестиБезСогласования Тогда
		ТекстОшибки = НСтр("ru = 'Недостаточно прав на отклонение от условий продаж.';
		|en = 'Insufficient rights to deviate from sales terms and conditions.'");

		Если (ИмяТаблицы = "Документ.ЗаказКлиента"
			ИЛИ ИмяТаблицы = "Документ.ЗаявкаНаВозвратТоваровОтКлиента") И ИспользоватьРасширенныеВозможностиЗаказаКлиента Тогда
			ТекстОшибки = ТекстОшибки + " " + НСтр("ru = 'Документ необходимо провести в статусе ""На согласовании"".';
			|en = 'Post the document in the ""Pending approval"" status.'");
		КонецЕсли;

		СообщитьПользователюОбОшибке(
		ТекстОшибки,
		ДокументПродажи,
		,
		Отказ);
	КонецЕсли;

	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

&ИзменениеИКонтроль("СоздатьДокументПродажи")
Процедура РСК_СоздатьДокументПродажи(ПоляДокумента, ПараметрыОснования, МассивДокументов, ПараметрыФормирования)

	МенеджерНакладной = Документы.РеализацияТоваровУслуг;

	СоздаватьДокументПродажи			= ПараметрыФормирования.СоздаватьДокументПродажи;
	СоздаватьПриходныйКассовыйОрдер		= ПараметрыФормирования.СоздаватьПриходныйКассовыйОрдер;
	//++ Локализация
	СоздаватьСчетФактуру				= ПараметрыФормирования.СоздаватьСчетФактуру;
	//-- Локализация

	Печатать = Ложь;

	Если ПоляДокумента.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента Тогда

		МенеджерНакладной = Документы.ВозвратТоваровОтКлиента;
		НовыйДокумент = Документы.ВозвратТоваровОтКлиента.СоздатьДокумент();

	ИначеЕсли ПоляДокумента.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи Тогда

		МенеджерНакладной = Документы.ПередачаТоваровХранителю;
		НовыйДокумент = Документы.ПередачаТоваровХранителю.СоздатьДокумент();

		Печатать = ПараметрыФормирования.ПечататьПередачуТоваровХранителю;

		//++ НЕ УТ
	ИначеЕсли ПоляДокумента.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПереработчику2_5 Тогда

		МенеджерНакладной = Документы.ПередачаТоваровХранителю;
		НовыйДокумент = Документы.ПередачаТоваровХранителю.СоздатьДокумент();

		Печатать = ПараметрыФормирования.ПечататьПередачуТоваровХранителю;

		//-- НЕ УТ
	ИначеЕсли ПоляДокумента.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию 
		И ПоляДокумента.Договор.КомиссионныеПродажи25 Тогда
		МенеджерНакладной = Документы.ПередачаТоваровХранителю;
		НовыйДокумент = Документы.ПередачаТоваровХранителю.СоздатьДокумент();

	ИначеЕсли ПоляДокумента.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтХранителя Тогда

		МенеджерНакладной = Документы.ПоступлениеТоваровОтХранителя;
		НовыйДокумент = Документы.ПоступлениеТоваровОтХранителя.СоздатьДокумент();

	ИначеЕсли ПоляДокумента.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера Тогда

		МенеджерНакладной = Документы.ВозвратТоваровОтКлиента;
		НовыйДокумент = Документы.ВозвратТоваровОтКлиента.СоздатьДокумент();

	ИначеЕсли ПоляДокумента.ХозяйственнаяОперация =  Перечисления.ХозяйственныеОперации.ПоставкаПодПринципала Тогда

		МенеджерНакладной = Документы.ОтгрузкаТоваровСХранения;
		НовыйДокумент = Документы.ОтгрузкаТоваровСХранения.СоздатьДокумент();

	ИначеЕсли ПоляДокумента.ВариантОформленияПродажи = Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг Тогда

		НовыйДокумент = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
		НовыйДокумент.Статус = Перечисления.СтатусыРеализацийТоваровУслуг.Отгружено;
		НовыйДокумент.ВариантОформленияПродажи = Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг;

		Печатать = ПараметрыФормирования.ПечататьРеализациюТоваровУслуг;

	ИначеЕсли ПоляДокумента.ВариантОформленияПродажи = Перечисления.ВариантыОформленияПродажи.АктНаПередачуПрав Тогда

		НовыйДокумент = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
		НовыйДокумент.Статус = Перечисления.СтатусыРеализацийТоваровУслуг.Отгружено;
		НовыйДокумент.ВариантОформленияПродажи = Перечисления.ВариантыОформленияПродажи.АктНаПередачуПрав;

		Печатать = ПараметрыФормирования.ПечататьРеализациюТоваровУслуг;

	Иначе

		НовыйДокумент = Документы.АктВыполненныхРабот.СоздатьДокумент();
		Печатать = ПараметрыФормирования.ПечататьАктВыполненныхРабот;

	КонецЕсли;

	НовыйДокумент.Дата = ТекущаяДатаСеанса();
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	Если ПараметрыФормирования.Свойство("ДатаДокумента") Тогда
		НовыйДокумент.Дата = ПараметрыФормирования.ДатаДокумента
	КонецЕсли;
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	НовыйДокумент.Заполнить(ПараметрыОснования);

	Если ПоляДокумента.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента
		И ПоляДокумента.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера
		И ПоляДокумента.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи
		//++ НЕ УТ
		И ПоляДокумента.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ПередачаПереработчику2_5
		//-- НЕ УТ
		И ПоляДокумента.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию
		И ПоляДокумента.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВозвратОтХранителя
		И ПоляДокумента.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ПоставкаПодПринципала Тогда
		НовыйДокумент.СкидкиРассчитаны = Истина;
	КонецЕсли;

	Если ПоляДокумента.ВариантОформленияПродажи = Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг
		Или ПоляДокумента.ВариантОформленияПродажи = Перечисления.ВариантыОформленияПродажи.АктНаПередачуПрав Тогда
		ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(НовыйДокумент, МенеджерНакладной);
		НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(НовыйДокумент, ПараметрыУказанияСерий);
	КонецЕсли;

	ДокументПроведен = Ложь;

	НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	Если ПараметрыФормирования.Свойство("ВключитьВЗадание") 
		И ПараметрыФормирования.ВключитьВЗадание Тогда
		
		ПараметрыОбновленияНакладной = РСК_ВызовСервера.ПараметрыОбновленияНакладной(); 
		ПараметрыОбновленияНакладной.Накладная = НовыйДокумент.Ссылка;
		ПараметрыОбновленияНакладной.ЗаполнитьЗадание = Истина;
		
		РСК_ВызовСервера.ИзменитьНакладную(ПараметрыОбновленияНакладной, Ложь)	
	КонецЕсли;
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки

	НовыйДокументСтруктура = НовыйСозданныйДокумент();
	ЗаполнитьЗначенияСвойств(НовыйДокументСтруктура, НовыйДокумент);
	НовыйДокументСтруктура.Документ 			= НовыйДокумент.Ссылка;
	НовыйДокументСтруктура.МассивРаспоряжений 	= ПараметрыОснования.ДокументОснование;

	Если НовыйДокумент.ПроверитьЗаполнение() Тогда

		Если СоздаватьДокументПродажи Тогда
			Попытка
				НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
				ДокументПроведен = Истина;
				НовыйДокументСтруктура.Проведен 			= Истина;
				НовыйДокументСтруктура.Печатать 			= Печатать;
			Исключение
				НовыйДокументСтруктура.Проведен 			= Ложь;
				НовыйДокументСтруктура.ЕстьОшибки 			= Истина;

				ТекстОшибки = НСтр("ru = 'Проведение документа %1 завершено с ошибкой';
				|en = 'An error occurred when posting document %1'");
				ТекстОшибки = СтрШаблон(ТекстОшибки, НовыйДокумент);
				ЗаписьЖурналаРегистрации(ТекстОшибки,
				УровеньЖурналаРегистрации.Ошибка,,,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки;
		Иначе
			Печатать = Ложь;
			НовыйДокументСтруктура.Проведен 			= Ложь;
			НовыйДокументСтруктура.Печатать 			= Печатать;
		КонецЕсли;

		//++ Локализация
		Если ПоляДокумента.НалогообложениеНДС <> Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС
			И (ДокументПроведен
			И ((ПоляДокумента.ВариантОформленияПродажи = Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг
			Или ПоляДокумента.ВариантОформленияПродажи = Перечисления.ВариантыОформленияПродажи.АктНаПередачуПрав)
			И Не (ПоляДокумента.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию
			Или ПоляДокумента.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи
			//++ НЕ УТ
			Или ПоляДокумента.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПереработчику2_5
			//-- НЕ УТ
			Или ПоляДокумента.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтХранителя
			Или ПоляДокумента.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента
			Или ПоляДокумента.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера
			Или ПоляДокумента.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоставкаПодПринципала))
			Или ПоляДокумента.ВариантОформленияПродажи = Перечисления.ВариантыОформленияПродажи.АктВыполненныхРабот)
			#Вставка
			//++ РС Консалт: Минаков А.С. Задача 20226
			И Не ТипЗнч(НовыйДокумент.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг")
			//++ РС Консалт: Минаков А.С. Задача 20226
			#КонецВставки
			И СоздаватьСчетФактуру Тогда

			ИмяДокумента = УчетНДСУП.ПолноеИмяСчетФактурыВыданный();
			Если ЗначениеЗаполнено(ИмяДокумента) Тогда
				МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ИмяДокумента);
				ДокументОбъект = МенеджерДокумента.СоздатьДокумент();
				ПараметрыРегистрации = УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурВыданных();
				ПараметрыРегистрации.Ссылка = НовыйДокумент.Ссылка;
				ПараметрыРегистрации.Дата = НовыйДокумент.Дата;
				ПараметрыРегистрации.Организация = НовыйДокумент.Организация;
				ПараметрыРегистрации.Контрагент = НовыйДокумент.Контрагент;
				ПараметрыРегистрации.Организация = НовыйДокумент.Организация;
				ПараметрыРегистрации.НалогообложениеНДС = НовыйДокумент.НалогообложениеНДС;
				ПараметрыРегистрации.РеализацияТоваров = Истина;
				ПараметрыРегистрации.РеализацияРаботУслуг = Истина;
				Результат = УчетНДСУП.ЗаполнитьСчетФактураВыданный(ДокументОбъект, ПараметрыРегистрации);

				НовыйДокументСФСтруктура = НовыйСозданныйДокумент();
				НовыйДокументСФСтруктура.Документ 				= ДокументОбъект.Ссылка;
				НовыйДокументСФСтруктура.Печатать 				= Ложь;
				НовыйДокументСФСтруктура.МассивРаспоряжений 	= ПараметрыОснования.ДокументОснование;
				НовыйДокументСФСтруктура.Организация 			= ДокументОбъект.Организация;
				НовыйДокументСФСтруктура.Проведен 				= Результат.Проведен;
				МассивДокументов.Добавить(НовыйДокументСФСтруктура);
			КонецЕсли;
		КонецЕсли;
		//-- Локализация

		Если СоздаватьПриходныйКассовыйОрдер И ДокументПроведен Тогда
			СоздатьДокументОплаты(НовыйДокумент.Ссылка, МассивДокументов, ПараметрыФормирования, ПараметрыОснования.ДокументОснование);
		КонецЕсли;

	Иначе
		НовыйДокументСтруктура.ЕстьОшибки 			= Истина;
	КонецЕсли;

	МассивДокументов.Добавить(НовыйДокументСтруктура);

КонецПроцедуры

&ИзменениеИКонтроль("ТекстЗапросаПоЗначащимРеквизитамРаспоряжений")
Функция РСК_ТекстЗапросаПоЗначащимРеквизитамРаспоряжений()

	ПравоДоступаЗаказКлиента = ПравоДоступа("Чтение", Метаданные.Документы.ЗаказКлиента);

	ТекстыЗапроса = Новый Массив;

	Если ПравоДоступаЗаказКлиента Тогда

		ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ
		|	ТаблицаЗаказов.Ключ КАК Ссылка,
		|	ТаблицаЗаказов.Склад КАК Склад
		|ПОМЕСТИТЬ
		|	ВТЗаказовПоСкладам
		|ИЗ
		|	&ТаблицаЗаказов КАК ТаблицаЗаказов
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	Склад
		|;
		|ВЫБРАТЬ
		|	ТаблицаЗаказов.Ссылка КАК Ссылка,
		|	ТаблицаЗаказов.Склад КАК Склад
		|ПОМЕСТИТЬ ВТЗаказов
		|ИЗ ВТЗаказовПоСкладам КАК ТаблицаЗаказов
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаказКлиентаТовары.Ссылка КАК Ссылка,
		|	ЗаказКлиентаТовары.Склад КАК Склад
		|ИЗ Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК ЗаказКлиента
		|		ПО ЗаказКлиентаТовары.Ссылка = ЗаказКлиента.Ссылка
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|		ПО ЗаказКлиента.Склад = Склады.Ссылка
		|
		|ГДЕ ЗаказКлиентаТовары.Ссылка В (&МассивСсылок)
		|	И Склады.ЭтоГруппа
		|	И Склады.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
		|	И (НЕ &ИспользоватьОтборПоСкладу
		|						ИЛИ ЗаказКлиентаТовары.Склад В(&Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)))
		|");

		ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЗаказКлиента.Ссылка КАК Ссылка,
		|	ЗаказКлиента.Партнер КАК Партнер,
		|	ЗаказКлиента.Контрагент КАК Контрагент,
		|	ЗаказКлиента.Договор КАК Договор,
		|	ЗаказКлиента.Организация КАК Организация,
		|	ЗаказКлиента.Соглашение КАК Соглашение,
		|	ЗаказКлиента.Сделка КАК Сделка,
		|	ЗаказКлиента.Склад КАК Склад,
		|	ВЫБОР
		|		КОГДА Склады.ЭтоГруппа
		|			И Склады.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК СкладВШапкеЗаказа,
		|	ЗаказКлиента.Подразделение КАК Подразделение,
		|	ЗаказКлиента.Валюта КАК Валюта,
		|	ЗаказКлиента.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ЗаказКлиента.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
		|	ЗаказКлиента.СпособДоставки КАК СпособДоставки,
		|	ЗаказКлиента.ВернутьМногооборотнуюТару КАК ВернутьМногооборотнуюТару,
		|	ЗаказКлиента.СрокВозвратаМногооборотнойТары КАК СрокВозвратаМногооборотнойТары,
		|	ЗаказКлиента.ТребуетсяЗалогЗаТару КАК ТребуетсяЗалогЗаТару,
		|	ЗаказКлиента.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ЗаказКлиента.ПорядокРасчетов КАК ПорядокРасчетов,
		|	ЗаказКлиента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ЗаказКлиента.ПеревозчикПартнер КАК ПеревозчикПартнер,
		|	ЗаказКлиента.АдресДоставки КАК АдресДоставки,
		|	ЗаказКлиента.АдресДоставкиПеревозчика КАК АдресДоставкиПеревозчика
		|ПОМЕСТИТЬ ВтЗаказыКлиентов
		|ИЗ
		|	Документ.ЗаказКлиента КАК ЗаказКлиента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|			ПО ЗаказКлиента.Склад = Склады.Ссылка
		|ГДЕ
		|	ЗаказКлиента.Ссылка В (&МассивСсылок)
		|	И НЕ (Склады.ЭтоГруппа
		|		И Склады.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах))
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаказКлиента.Ссылка КАК Ссылка,
		|	ЗаказКлиента.Партнер КАК Партнер,
		|	ЗаказКлиента.Контрагент КАК Контрагент,
		|	ЗаказКлиента.Договор КАК Договор,
		|	ЗаказКлиента.Организация КАК Организация,
		|	ЗаказКлиента.Соглашение КАК Соглашение,
		|	ЗаказКлиента.Сделка КАК Сделка,
		|	ВТЗаказов.Склад КАК Склад,
		|	ЛОЖЬ КАК СкладВШапкеЗаказа,
		|	ЗаказКлиента.Подразделение КАК Подразделение,
		|	ЗаказКлиента.Валюта КАК Валюта,
		|	ЗаказКлиента.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ЗаказКлиента.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
		|	ЗаказКлиента.СпособДоставки КАК СпособДоставки,
		|	ЗаказКлиента.ВернутьМногооборотнуюТару КАК ВернутьМногооборотнуюТару,
		|	ЗаказКлиента.СрокВозвратаМногооборотнойТары КАК СрокВозвратаМногооборотнойТары,
		|	ЗаказКлиента.ТребуетсяЗалогЗаТару КАК ТребуетсяЗалогЗаТару,
		|	ЗаказКлиента.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ЗаказКлиента.ПорядокРасчетов КАК ПорядокРасчетов,
		|	ЗаказКлиента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ЗаказКлиента.ПеревозчикПартнер КАК ПеревозчикПартнер,
		|	ЗаказКлиента.АдресДоставки КАК АдресДоставки,
		|	ЗаказКлиента.АдресДоставкиПеревозчика КАК АдресДоставкиПеревозчика
		|ИЗ
		|	ВТЗаказов КАК ВТЗаказов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК ЗаказКлиента
		|			ПО ЗаказКлиента.Ссылка = ВТЗаказов.Ссылка
		|");

	КонецЕсли;

	ТекстыЗапроса.Добавить(
	"ВЫБРАТЬ
	|	ТаблицаСостояний.Ключ КАК Ссылка,
	|	ТаблицаСостояний.СостояниеНакладной КАК СостояниеНакладной,
	|	ТаблицаСостояний.СостояниеОрдера КАК СостояниеОрдера
	|ПОМЕСТИТЬ
	|	ВТСостоянияБезСкладов
	|ИЗ
	|	&ТаблицаСостояний КАК ТаблицаСостояний
	|
	|;
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаЗаказов.Ключ КАК Ссылка,
	|	ТаблицаЗаказов.СостояниеНакладной КАК СостояниеНакладной,
	|	ТаблицаЗаказов.СостояниеОрдера КАК СостояниеОрдера
	|ПОМЕСТИТЬ
	|	ВТСостоянияПоСкладам
	|ИЗ
	|	&ТаблицаЗаказов КАК ТаблицаЗаказов
	|;
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТСостоянияБезСкладов.Ссылка КАК Ссылка,
	|	ВТСостоянияБезСкладов.СостояниеНакладной КАК СостояниеНакладной,
	|	ВТСостоянияБезСкладов.СостояниеОрдера КАК СостояниеОрдера
	|ПОМЕСТИТЬ
	|	ВТСостояния
	|ИЗ ВТСостоянияБезСкладов КАК ВТСостоянияБезСкладов
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТСостоянияПоСкладам.Ссылка КАК Ссылка,
	|	ВТСостоянияПоСкладам.СостояниеНакладной КАК СостояниеНакладной,
	|	ВТСостоянияПоСкладам.СостояниеОрдера КАК СостояниеОрдера
	|ИЗ ВТСостоянияПоСкладам КАК ВТСостоянияПоСкладам
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	РаспоряжениеНаОформление.Партнер,
	|	РаспоряжениеНаОформление.Контрагент,
	|	РаспоряжениеНаОформление.Договор,
	|	РаспоряжениеНаОформление.Организация,
	|	РаспоряжениеНаОформление.Соглашение,
	|	РаспоряжениеНаОформление.Сделка,
	|	РаспоряжениеНаОформление.Склад,
	|	РаспоряжениеНаОформление.Подразделение,
	|	РаспоряжениеНаОформление.СкладОтгрузки,
	|	РаспоряжениеНаОформление.ЗапрещеноВыбиратьГруппуСкладов,
	|	РаспоряжениеНаОформление.ХозяйственнаяОперация,
	|	СУММА(РаспоряжениеНаОформление.КОформлениюОстаток) КАК КОформлениюОстаток,
	|	РаспоряжениеНаОформление.ВалютаВзаиморасчетов,
	|	РаспоряжениеНаОформление.НалогообложениеНДС,
	|	РаспоряжениеНаОформление.ЦенаВключаетНДС,
	|	РаспоряжениеНаОформление.ВариантОформленияПродажи,
	|	РаспоряжениеНаОформление.СпособДоставки,
	|	РаспоряжениеНаОформление.ПеревозчикПартнер,
	|	РаспоряжениеНаОформление.АдресДоставки,
	|	РаспоряжениеНаОформление.АдресДоставкиПеревозчика,
	|	РаспоряжениеНаОформление.ЗаказКлиента КАК Ссылка,
	|	РаспоряжениеНаОформление.ВернутьМногооборотнуюТару,
	|	РаспоряжениеНаОформление.СрокВозвратаМногооборотнойТары,
	|	РаспоряжениеНаОформление.ТребуетсяЗалогЗаТару,
	|	РаспоряжениеНаОформление.КалендарьВозвратаТары,
	|	РаспоряжениеНаОформление.РассчитыватьДатуВозвратаТарыПоКалендарю,
	|	РаспоряжениеНаОформление.НаправлениеДеятельности,
	|	РаспоряжениеНаОформление.ВидГОСИС,
	|	РаспоряжениеНаОформление.ПорядокРасчетов
	|ПОМЕСТИТЬ
	|	ВТРаспоряжения
	|ИЗ
	|	&ТекстыРаспоряжениеНаОформление КАК РаспоряжениеНаОформление
	|
	|СГРУППИРОВАТЬ ПО
	|	РаспоряжениеНаОформление.ВалютаВзаиморасчетов,
	|	РаспоряжениеНаОформление.ВариантОформленияПродажи,
	|	РаспоряжениеНаОформление.ЦенаВключаетНДС,
	|	РаспоряжениеНаОформление.ХозяйственнаяОперация,
	|	РаспоряжениеНаОформление.НалогообложениеНДС,
	|	РаспоряжениеНаОформление.ПеревозчикПартнер,
	|	РаспоряжениеНаОформление.СпособДоставки,
	|	РаспоряжениеНаОформление.АдресДоставкиПеревозчика,
	|	РаспоряжениеНаОформление.Организация,
	|	РаспоряжениеНаОформление.Договор,
	|	РаспоряжениеНаОформление.Соглашение,
	|	РаспоряжениеНаОформление.Контрагент,
	|	РаспоряжениеНаОформление.Партнер,
	|	РаспоряжениеНаОформление.КалендарьВозвратаТары,
	|	РаспоряжениеНаОформление.РассчитыватьДатуВозвратаТарыПоКалендарю,
	|	РаспоряжениеНаОформление.ТребуетсяЗалогЗаТару,
	|	РаспоряжениеНаОформление.АдресДоставки,
	|	РаспоряжениеНаОформление.ЗаказКлиента,
	|	РаспоряжениеНаОформление.ВернутьМногооборотнуюТару,
	|	РаспоряжениеНаОформление.СкладОтгрузки,
	|	РаспоряжениеНаОформление.Подразделение,
	|	РаспоряжениеНаОформление.Сделка,
	|	РаспоряжениеНаОформление.ЗапрещеноВыбиратьГруппуСкладов,
	|	РаспоряжениеНаОформление.Склад,
	|	РаспоряжениеНаОформление.СрокВозвратаМногооборотнойТары,
	|	РаспоряжениеНаОформление.НаправлениеДеятельности,
	|	РаспоряжениеНаОформление.ВидГОСИС,
	|	РаспоряжениеНаОформление.ПорядокРасчетов
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Распоряжения.Ссылка,
	|	Распоряжения.Партнер,
	|	Распоряжения.Контрагент,
	|	Распоряжения.Договор,
	|	Распоряжения.Организация,
	|	Распоряжения.Соглашение,
	|	Распоряжения.Сделка,
	|	Распоряжения.Склад,
	|	Распоряжения.Подразделение,
	|	Распоряжения.СкладОтгрузки,
	|	Распоряжения.ЗапрещеноВыбиратьГруппуСкладов,
	|	Распоряжения.ХозяйственнаяОперация,
	|	Распоряжения.КОформлениюОстаток,
	|	Распоряжения.ВалютаВзаиморасчетов,
	|	Распоряжения.НалогообложениеНДС,
	|	Распоряжения.ЦенаВключаетНДС,
	|	Распоряжения.ВариантОформленияПродажи,
	|	Распоряжения.СпособДоставки,
	|	Распоряжения.ПеревозчикПартнер,
	|	Распоряжения.АдресДоставки,
	|	Распоряжения.АдресДоставкиПеревозчика,
	|	Распоряжения.ВернутьМногооборотнуюТару,
	|	Распоряжения.СрокВозвратаМногооборотнойТары,
	|	Распоряжения.ТребуетсяЗалогЗаТару,
	|	Распоряжения.КалендарьВозвратаТары,
	|	Распоряжения.РассчитыватьДатуВозвратаТарыПоКалендарю,
	|	Распоряжения.НаправлениеДеятельности,
	|	Распоряжения.ВидГОСИС,
	|	Распоряжения.ПорядокРасчетов,
	|	Состояния.СостояниеНакладной,
	|	Состояния.СостояниеОрдера
	|ИЗ
	|	ВТРаспоряжения КАК Распоряжения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСостояния КАК Состояния
	|		ПО Состояния.Ссылка = Распоряжения.Ссылка
	|ГДЕ
	|	ВЫБОР
	|		КОГДА (Распоряжения.Ссылка ССЫЛКА Документ.ЗаказКлиента) ТОГДА
	|			ВЫБОР КОГДА (Распоряжения.Склад.ЭтоГруппа
	|				И Распоряжения.Склад.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах))
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|			КОНЕЦ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Распоряжения.ВариантОформленияПродажи,
	|	Распоряжения.Партнер,
	|	Распоряжения.Контрагент,
	|	Распоряжения.Договор,
	|	Распоряжения.Организация,
	|	Распоряжения.Соглашение,
	|	Распоряжения.Сделка,
	|	Распоряжения.Подразделение,
	|	Распоряжения.СкладОтгрузки,
	|	Распоряжения.ХозяйственнаяОперация,
	|	Распоряжения.ВалютаВзаиморасчетов,
	|	Распоряжения.НалогообложениеНДС,
	|	Распоряжения.ЦенаВключаетНДС,
	|	Распоряжения.ЗапрещеноВыбиратьГруппуСкладов,
	|	Распоряжения.ВернутьМногооборотнуюТару,
	|	Распоряжения.СрокВозвратаМногооборотнойТары,
	|	Распоряжения.ТребуетсяЗалогЗаТару,
	|	Распоряжения.КалендарьВозвратаТары,
	|	Распоряжения.РассчитыватьДатуВозвратаТарыПоКалендарю,
	|	Распоряжения.НаправлениеДеятельности,
	|	Распоряжения.ПорядокРасчетов,
	|	Распоряжения.ВидГОСИС
	|");

	ТекстыРаспоряжениеНаОформление = Новый Массив;
	ТекстыРаспоряжениеНаОформление.Добавить(
	"	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.Партнер КАК Партнер,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.Контрагент КАК Контрагент,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.Договор КАК Договор,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.Организация КАК Организация,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.Соглашение КАК Соглашение,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.Сделка КАК Сделка,
	|		ВЫБОР
	//++ НЕ УТ

	//++ НЕ УТКА
	|			КОГДА ТИПЗНАЧЕНИЯ(ЗаказыКлиентовОстатки.ЗаказКлиента) = ТИП(Документ.ЗаказПереработчику2_5)
	|				И ВЫРАЗИТЬ(ЗаказыКлиентовОстатки.ЗаказКлиента КАК Документ.ЗаказПереработчику2_5).ГруппировкаЗатрат =
	|					ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВЗаказеПереработчику.ПоЭтапамПроизводства)
	|				ТОГДА ЗаказыКлиентовОстатки.Склад
	//-- НЕ УТКА
	|			КОГДА ТИПЗНАЧЕНИЯ(ЗаказыКлиентовОстатки.ЗаказКлиента) = ТИП(Документ.ЗаказПереработчику2_5)
	|				ТОГДА ВЫРАЗИТЬ(ЗаказыКлиентовОстатки.ЗаказКлиента КАК Документ.ЗаказПереработчику2_5).СкладМатериалов
	//-- НЕ УТ
	|			КОГДА ИСТИНА
	|				ТОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.Склад
	|		КОНЕЦ КАК Склад,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.Подразделение КАК Подразделение,
	|		ВЫБОР
	//++ НЕ УТ

	//++ НЕ УТКА
	|			КОГДА ТИПЗНАЧЕНИЯ(ЗаказыКлиентовОстатки.ЗаказКлиента) = ТИП(Документ.ЗаказПереработчику2_5)
	|				И ВЫРАЗИТЬ(ЗаказыКлиентовОстатки.ЗаказКлиента КАК Документ.ЗаказПереработчику2_5).ГруппировкаЗатрат =
	|					ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВЗаказеПереработчику.ПоЭтапамПроизводства)
	|				И ЗаказыКлиентовОстатки.Склад.ЭтоГруппа
	|				И ЗаказыКлиентовОстатки.Склад.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	//-- НЕ УТКА
	|			КОГДА ТИПЗНАЧЕНИЯ(ЗаказыКлиентовОстатки.ЗаказКлиента) = ТИП(Документ.ЗаказПереработчику2_5)
	|				И ВЫРАЗИТЬ(ЗаказыКлиентовОстатки.ЗаказКлиента КАК Документ.ЗаказПереработчику2_5).СкладМатериалов.ЭтоГруппа
	|				И ВЫРАЗИТЬ(ЗаказыКлиентовОстатки.ЗаказКлиента КАК Документ.ЗаказПереработчику2_5).СкладМатериалов.ВыборГруппы =
	|					ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	//-- НЕ УТ
	|			КОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.Склад.ЭтоГруппа
	|					И ЗаказыКлиентовОстатки.ЗаказКлиента.Склад.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|			ИНАЧЕ ЗаказыКлиентовОстатки.ЗаказКлиента.Склад
	|		КОНЕЦ КАК СкладОтгрузки,
	|		ВЫБОР
	//++ НЕ УТ

	//++ НЕ УТКА
	|			КОГДА ТИПЗНАЧЕНИЯ(ЗаказыКлиентовОстатки.ЗаказКлиента) = ТИП(Документ.ЗаказПереработчику2_5)
	|				И ВЫРАЗИТЬ(ЗаказыКлиентовОстатки.ЗаказКлиента КАК Документ.ЗаказПереработчику2_5).ГруппировкаЗатрат =
	|					ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВЗаказеПереработчику.ПоЭтапамПроизводства)
	|				И ЗаказыКлиентовОстатки.Склад.ЭтоГруппа
	|				И ЗаказыКлиентовОстатки.Склад.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
	|				ТОГДА ИСТИНА
	//-- НЕ УТКА
	|			КОГДА ТИПЗНАЧЕНИЯ(ЗаказыКлиентовОстатки.ЗаказКлиента) = ТИП(Документ.ЗаказПереработчику2_5)
	|				И ВЫРАЗИТЬ(ЗаказыКлиентовОстатки.ЗаказКлиента КАК Документ.ЗаказПереработчику2_5).СкладМатериалов.ЭтоГруппа
	|				И ВЫРАЗИТЬ(ЗаказыКлиентовОстатки.ЗаказКлиента КАК Документ.ЗаказПереработчику2_5).СкладМатериалов.ВыборГруппы =
	|					ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
	|				ТОГДА ИСТИНА
	//-- НЕ УТ
	|			КОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.Склад.ЭтоГруппа
	|					И ЗаказыКлиентовОстатки.ЗаказКлиента.Склад.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ЗапрещеноВыбиратьГруппуСкладов,
	|		ВЫБОР
	|			КОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)
	|					ИЛИ ЗаказыКлиентовОстатки.ЗаказКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
	|			КОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
	|			КОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтХранителя)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи)
	//++ НЕ УТ
	|			КОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПроизводствоУПереработчика2_5)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПереработчику2_5)
	//-- НЕ УТ
	|			ИНАЧЕ ЗаказыКлиентовОстатки.ЗаказКлиента.ХозяйственнаяОперация
	|		КОНЕЦ КАК ХозяйственнаяОперация,
	|		ЗаказыКлиентовОстатки.КОформлениюОстаток КАК КОформлениюОстаток,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.Валюта КАК ВалютаВзаиморасчетов,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.НалогообложениеНДС КАК НалогообложениеНДС,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|		ЗаказыКлиентовОстатки.Номенклатура.ВариантОформленияПродажи КАК ВариантОформленияПродажи,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.СпособДоставки КАК СпособДоставки,
	|		ВЫБОР
	#Удаление
	|			КОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
	|			КОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
	#КонецВставки
	|					ИЛИ ЗаказыКлиентовОстатки.ЗаказКлиента.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
	|				ТОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.ПеревозчикПартнер
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|		КОНЕЦ КАК ПеревозчикПартнер,
	|		ВЫБОР
	|			КОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.СпособДоставки <> ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.Самовывоз)
	|				ИЛИ ЗаказыКлиентовОстатки.ЗаказКлиента.АдресДоставки <> """"
	|				ТОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.АдресДоставки
	|			ИНАЧЕ """"
	|		КОНЕЦ КАК АдресДоставки,
	|		ВЫБОР
	#Удаление
	|			КОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
	|			КОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
	#КонецВставки
	|					ИЛИ ЗаказыКлиентовОстатки.ЗаказКлиента.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
	|				ТОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.АдресДоставкиПеревозчика
	|			ИНАЧЕ """"
	|		КОНЕЦ КАК АдресДоставкиПеревозчика,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента КАК ЗаказКлиента,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.ВернутьМногооборотнуюТару КАК ВернутьМногооборотнуюТару,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.СрокВозвратаМногооборотнойТары КАК СрокВозвратаМногооборотнойТары,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.ТребуетсяЗалогЗаТару КАК ТребуетсяЗалогЗаТару,
	|		ВЫБОР
	|			КОГДА &ИспользоватьСоглашенияСКлиентами
	|				ТОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.Соглашение.КалендарьВозвратаТары
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПроизводственныеКалендари.ПустаяСсылка)
	|		КОНЕЦ КАК КалендарьВозвратаТары,
	|		ВЫБОР
	|			КОГДА &ИспользоватьСоглашенияСКлиентами
	|				ТОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.Соглашение.РассчитыватьДатуВозвратаТарыПоКалендарю
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК РассчитыватьДатуВозвратаТарыПоКалендарю,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		&ВидГОСИСЗаказыКлиентовОстатки КАК ВидГОСИС,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.ПорядокРасчетов КАК ПорядокРасчетов
	|	ИЗ
	|		РегистрНакопления.ЗаказыКлиентов.Остатки(
	|				,
	|				ЗаказКлиента В (&МассивСсылок)
	|					И (НЕ &ИспользоватьОтборПоСкладу
	|						ИЛИ Склад В(&Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)))
	|					И Номенклатура.ВариантОформленияПродажи В(
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыОформленияПродажи.РеализацияТоваровУслуг),
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыОформленияПродажи.АктНаПередачуПрав))
	|			) КАК ЗаказыКлиентовОстатки
	|	ГДЕ
	|		НЕ &ПоОрдерам
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.Партнер,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.Контрагент,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.Договор,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.Организация,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.Соглашение,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.Сделка,
	|		НЕОПРЕДЕЛЕНО,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.Подразделение,
	|		НЕОПРЕДЕЛЕНО,
	|		ЛОЖЬ,
	|		НЕОПРЕДЕЛЕНО,
	|		ЗаказыКлиентовОстатки.КОформлениюОстаток,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.Валюта,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.НалогообложениеНДС,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.ЦенаВключаетНДС,
	|		ЗаказыКлиентовОстатки.Номенклатура.ВариантОформленияПродажи,
	|		НЕОПРЕДЕЛЕНО,
	|		НЕОПРЕДЕЛЕНО,
	|		НЕОПРЕДЕЛЕНО,
	|		НЕОПРЕДЕЛЕНО,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.ВернутьМногооборотнуюТару,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.СрокВозвратаМногооборотнойТары,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.ТребуетсяЗалогЗаТару,
	|		ВЫБОР
	|			КОГДА &ИспользоватьСоглашенияСКлиентами
	|				ТОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.Соглашение.КалендарьВозвратаТары
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПроизводственныеКалендари.ПустаяСсылка)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА &ИспользоватьСоглашенияСКлиентами
	|				ТОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.Соглашение.РассчитыватьДатуВозвратаТарыПоКалендарю
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.НаправлениеДеятельности,
	|		&ВидГОСИСЗаказыКлиентовОстатки КАК ВидГОСИС,
	|		ЗаказыКлиентовОстатки.ЗаказКлиента.ПорядокРасчетов
	|	ИЗ
	|		РегистрНакопления.ЗаказыКлиентов.Остатки(
	|				,
	|				ЗаказКлиента В (&МассивСсылок)
	|					И (НЕ &ИспользоватьОтборПоСкладу
	|						ИЛИ Склад В(&Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)))
	|					И Номенклатура.ВариантОформленияПродажи = ЗНАЧЕНИЕ(Перечисление.ВариантыОформленияПродажи.АктВыполненныхРабот)) КАК ЗаказыКлиентовОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).Партнер
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).Партнер
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Партнер
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Партнер
	//++ НЕ УТ
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказПереработчику2_5 ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).Партнер
	//-- НЕ УТ
	|		КОНЕЦ КАК Партнер,
	|		ВЫБОР
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).Контрагент
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).Контрагент
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Контрагент
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Контрагент
	//++ НЕ УТ
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказПереработчику2_5 ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).Контрагент
	//-- НЕ УТ
	|		КОНЕЦ КАК Контрагент,
	|		ВЫБОР
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).Договор
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).Договор
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Договор
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Договор
	//++ НЕ УТ
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказПереработчику2_5 ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).Договор
	//-- НЕ УТ
	|		КОНЕЦ КАК Договор,
	|		ВЫБОР
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).Организация
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).Организация
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Организация
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Организация
	//++ НЕ УТ
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказПереработчику2_5 ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).Организация
	//-- НЕ УТ
	|		КОНЕЦ КАК Организация,
	|		ВЫБОР
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).Соглашение
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).Соглашение
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Соглашение
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Соглашение
	|		КОНЕЦ КАК Соглашение,
	|		ВЫБОР
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).Сделка
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).Сделка
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Сделка
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Сделка
	//++ НЕ УТ
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказПереработчику2_5 ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).Сделка
	//-- НЕ УТ
	|		КОНЕЦ КАК Сделка,
	|		ВЫБОР
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).Склад
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).Склад
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Склад
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Склад
	//++ НЕ УТ

	//++ НЕ УТКА
	|			КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки) = ТИП(Документ.ЗаказПереработчику2_5)
	|				И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).ГруппировкаЗатрат =
	|					ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВЗаказеПереработчику.ПоЭтапамПроизводства)
	|				ТОГДА ТоварыКОтгрузкеОстатки.Склад
	//-- НЕ УТКА
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказПереработчику2_5 ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).СкладМатериалов
	//-- НЕ УТ
	|		КОНЕЦ КАК Склад,
	|		ВЫБОР
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).Подразделение
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).Подразделение
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Подразделение
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Подразделение
	//++ НЕ УТ
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказПереработчику2_5 ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).Подразделение
	//-- НЕ УТ
	|		КОНЕЦ КАК Подразделение,
	|		ВЫБОР
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).Склад.ЭтоГруппа
	|					И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).Склад.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
	|					И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).Склад.ЭтоГруппа
	|					И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).Склад.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Склад.ЭтоГруппа
	|					И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Склад.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Склад.ЭтоГруппа
	|					И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Склад.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	//++ НЕ УТ

	//++ НЕ УТКА
	|			КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки) = ТИП(Документ.ЗаказПереработчику2_5)
	|				И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).ГруппировкаЗатрат =
	|					ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВЗаказеПереработчику.ПоЭтапамПроизводства)
	|				И ТоварыКОтгрузкеОстатки.Склад.ЭтоГруппа
	|				И ТоварыКОтгрузкеОстатки.Склад.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	//-- НЕ УТКА
	|			КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки) = ТИП(Документ.ЗаказПереработчику2_5)
	|				И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).СкладМатериалов.ЭтоГруппа
	|				И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).СкладМатериалов.ВыборГруппы =
	|					ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	//-- НЕ УТ
	|			ИНАЧЕ ВЫБОР
	|				КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг ТОГДА
	|					ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).Склад
	|				КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
	|					ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).Склад
	|				КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента ТОГДА
	|					ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Склад
	|				КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента ТОГДА
	|					ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Склад
	//++ НЕ УТ

	//++ НЕ УТКА
	|				КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки) = ТИП(Документ.ЗаказПереработчику2_5)
	|					И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).ГруппировкаЗатрат =
	|						ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВЗаказеПереработчику.ПоЭтапамПроизводства)
	|					ТОГДА ТоварыКОтгрузкеОстатки.Склад
	//-- НЕ УТКА
	|				КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки) = ТИП(Документ.ЗаказПереработчику2_5)
	|					ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).СкладМатериалов
	//-- НЕ УТ
	|				КОНЕЦ
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).Склад.ЭтоГруппа
	|					И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).Склад.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
	|				ТОГДА ИСТИНА
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
	|					И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).Склад.ЭтоГруппа
	|					И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).Склад.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
	|				ТОГДА ИСТИНА
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Склад.ЭтоГруппа
	|					И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Склад.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
	|				ТОГДА ИСТИНА
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Склад.ЭтоГруппа
	|					И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Склад.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
	|				ТОГДА ИСТИНА
	//++ НЕ УТ

	//++ НЕ УТКА
	|			КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки) = ТИП(Документ.ЗаказПереработчику2_5)
	|				И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).ГруппировкаЗатрат =
	|					ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВЗаказеПереработчику.ПоЭтапамПроизводства)
	|				И ТоварыКОтгрузкеОстатки.Склад.ЭтоГруппа
	|				И ТоварыКОтгрузкеОстатки.Склад.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
	|				ТОГДА ИСТИНА
	//-- НЕ УТКА
	|			КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки) = ТИП(Документ.ЗаказПереработчику2_5)
	|				И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).СкладМатериалов.ЭтоГруппа
	|				И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).СкладМатериалов.ВыборГруппы =
	|					ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
	|				ТОГДА ИСТИНА
	//-- НЕ УТ
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
	|					И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)
	|					ИЛИ ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
	|					И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
	|					И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтХранителя)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи)
	|			ИНАЧЕ ВЫБОР
	|				КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг ТОГДА
	|					ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).ХозяйственнаяОперация
	|				КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
	|					ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).ХозяйственнаяОперация
	|				КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента ТОГДА
	|					ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).ХозяйственнаяОперация
	|				КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента ТОГДА
	|					ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).ХозяйственнаяОперация
	//++ НЕ УТ
	|				КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказПереработчику2_5 ТОГДА
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПереработчику2_5)
	//-- НЕ УТ
	|				КОНЕЦ
	|		КОНЕЦ,
	|		ТоварыКОтгрузкеОстатки.КОформлениюОстаток + ТоварыКОтгрузкеОстатки.КОтгрузкеОстаток,
	|		ВЫБОР
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).Валюта
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).Валюта
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Валюта
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Валюта
	//++ НЕ УТ
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказПереработчику2_5 ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).Валюта
	//-- НЕ УТ
	|		КОНЕЦ КАК Валюта,
	|		ВЫБОР
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).НалогообложениеНДС
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).НалогообложениеНДС
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).НалогообложениеНДС
	//++ НЕ УТ
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказПереработчику2_5 ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).НалогообложениеНДС
	//-- НЕ УТ
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		КОНЕЦ КАК НалогообложениеНДС,
	|		ВЫБОР
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).ЦенаВключаетНДС
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
	|				ТОГДА ЛОЖЬ
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).ЦенаВключаетНДС
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).ЦенаВключаетНДС
	//++ НЕ УТ
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказПереработчику2_5 ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).ЦенаВключаетНДС
	//-- НЕ УТ
	|		КОНЕЦ КАК ЦенаВключаетНДС,
	|		ТоварыКОтгрузкеОстатки.Номенклатура.ВариантОформленияПродажи,
	|		ВЫБОР
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).СпособДоставки
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).СпособДоставки
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).СпособДоставки
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).СпособДоставки
	//++ НЕ УТ
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказПереработчику2_5 ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).СпособДоставки
	//-- НЕ УТ
	|		КОНЕЦ КАК СпособДоставки,
	|		ВЫБОР
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг
	#Удаление
	|					И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
	|					И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
	#КонецВставки
	|					ИЛИ ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу))
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).ПеревозчикПартнер
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
	#Удаление
	|					И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
	|					И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
	#КонецВставки
	|						ИЛИ ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу))
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).ПеревозчикПартнер
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента
	#Удаление
	|					И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
	|					И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
	#КонецВставки
	|					ИЛИ ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу))
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).ПеревозчикПартнер
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
	#Удаление
	|					И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
	|					И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
	#КонецВставки
	|					ИЛИ ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу))
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).ПеревозчикПартнер
	//++ НЕ УТ
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказПереработчику2_5
	#Удаление
	|					И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
	|					И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
	#КонецВставки
	|					ИЛИ ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу))
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).ПеревозчикПартнер
	//-- НЕ УТ
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг
	|				И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).СпособДоставки <> ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.Самовывоз)
	|					ИЛИ ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).АдресДоставки <> """") ТОГДА
	|					ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).АдресДоставки
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
	|					И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).СпособДоставки <> ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.Самовывоз)
	|						ИЛИ ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).АдресДоставки <> """")
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).АдресДоставки
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента
	|				И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).СпособДоставки <> ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.Самовывоз)
	|					ИЛИ ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).АдресДоставки <> """") ТОГДА
	|					ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).АдресДоставки
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента 
	|				И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).СпособДоставки <> ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.Самовывоз)
	|					ИЛИ ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).АдресДоставки <> """") ТОГДА
	|					ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).АдресДоставки
	//++ НЕ УТ
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказПереработчику2_5
	|				И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).СпособДоставки <> ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.Самовывоз)
	|					ИЛИ ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).АдресДоставки <> """") ТОГДА
	|					ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).АдресДоставки
	//-- НЕ УТ
	|			ИНАЧЕ """"
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг
	#Удаление
	|				И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
	|				И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
	#КонецВставки
	|					ИЛИ ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу))
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).АдресДоставкиПеревозчика
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
	#Удаление
	|					И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
	|					И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
	#КонецВставки
	|						ИЛИ ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу))
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).АдресДоставкиПеревозчика
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента
	#Удаление
	|				И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
	|				И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
	#КонецВставки
	|					ИЛИ ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу))
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).АдресДоставкиПеревозчика
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
	#Удаление
	|				И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
	|				И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
	#КонецВставки
	|					ИЛИ ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу))
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).АдресДоставкиПеревозчика
	//++ НЕ УТ
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказПереработчику2_5
	#Удаление
	|				И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
	|				И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
	#КонецВставки
	|					ИЛИ ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу))
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).АдресДоставкиПеревозчика
	//-- НЕ УТ
	|			ИНАЧЕ """"
	|		КОНЕЦ,
	|		ТоварыКОтгрузкеОстатки.ДокументОтгрузки,
	|		ВЫБОР
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).ВернутьМногооборотнуюТару
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).ВернутьМногооборотнуюТару
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).ВернутьМногооборотнуюТару
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).ВернутьМногооборотнуюТару
	|		КОНЕЦ КАК ВернутьМногооборотнуюТару,
	|		ВЫБОР
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг ТОГДА
	|				0
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
	|				ТОГДА 0
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).СрокВозвратаМногооборотнойТары
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).СрокВозвратаМногооборотнойТары
	|		КОНЕЦ КАК СрокВозвратаМногооборотнойТары,
	|		ВЫБОР
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).ТребуетсяЗалогЗаТару
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
	|				ТОГДА ЛОЖЬ
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).ТребуетсяЗалогЗаТару
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).ТребуетсяЗалогЗаТару
	|		КОНЕЦ КАК ТребуетсяЗалогЗаТару,
	|		ВЫБОР
	|			КОГДА &ИспользоватьСоглашенияСКлиентами И ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг 
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).Соглашение.КалендарьВозвратаТары
	|			КОГДА &ИспользоватьСоглашенияСКлиентами
	|					И ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).Соглашение.КалендарьВозвратаТары
	|			КОГДА &ИспользоватьСоглашенияСКлиентами И ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Соглашение.КалендарьВозвратаТары
	|			КОГДА &ИспользоватьСоглашенияСКлиентами И ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента 
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Соглашение.КалендарьВозвратаТары
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПроизводственныеКалендари.ПустаяСсылка)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА &ИспользоватьСоглашенияСКлиентами И ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).Соглашение.РассчитыватьДатуВозвратаТарыПоКалендарю
	|			КОГДА &ИспользоватьСоглашенияСКлиентами
	|					И ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).Соглашение.РассчитыватьДатуВозвратаТарыПоКалендарю
	|			КОГДА &ИспользоватьСоглашенияСКлиентами И ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Соглашение.РассчитыватьДатуВозвратаТарыПоКалендарю
	|			КОГДА &ИспользоватьСоглашенияСКлиентами И ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Соглашение.РассчитыватьДатуВозвратаТарыПоКалендарю
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).НаправлениеДеятельности
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
	|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ПередачаТоваровХранителю).НаправлениеДеятельности
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).НаправлениеДеятельности
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).НаправлениеДеятельности
	//++ НЕ УТ
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказПереработчику2_5 ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).НаправлениеДеятельности
	//-- НЕ УТ
	|		КОНЕЦ КАК НаправлениеДеятельности,
	|		&ВидГОСИСТоварыКОтгрузке КАК ВидГОСИС,
	|		ВЫБОР
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).ПорядокРасчетов
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).ПорядокРасчетов
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).ПорядокРасчетов
	//++ НЕ УТ
	|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказПереработчику2_5 ТОГДА
	|				ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказПереработчику2_5).ПорядокРасчетов
	//-- НЕ УТ
	|		КОНЕЦ КАК ПорядокРасчетов
	|	ИЗ
	|		РегистрНакопления.ТоварыКОтгрузке.Остатки(,
	|				ДокументОтгрузки В (&МассивСсылок)
	|					И (НЕ &ИспользоватьОтборПоСкладу
	|						ИЛИ Склад В(&Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)))
	|		) КАК ТоварыКОтгрузкеОстатки
	|	ГДЕ
	|		&ПоОрдерам
	|");



	Если ПравоДоступаЗаказКлиента Тогда

		ТекстыРаспоряжениеНаОформление.Добавить(
		"	ВЫБРАТЬ
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.Партнер КАК Партнер,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.Контрагент КАК Контрагент,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.Договор КАК Договор,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.Организация КАК Организация,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.Соглашение КАК Соглашение,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.Сделка КАК Сделка,
		|		ЗаказыКлиентовОстатки.Склад КАК Склад,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.Подразделение КАК Подразделение,
		|		ВЫБОР
		|			КОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.Склад.ЭтоГруппа
		|					И ЗаказыКлиентовОстатки.ЗаказКлиента.Склад.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
		|				ТОГДА ЗаказыКлиентовОстатки.Склад
		|			ИНАЧЕ ЗаказыКлиентовОстатки.ЗаказКлиента.Склад
		|		КОНЕЦ КАК СкладОтгрузки,
		|		ВЫБОР
		|			КОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.Склад.ЭтоГруппа
		|					И ЗаказыКлиентовОстатки.ЗаказКлиента.Склад.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ КАК ЗапрещеноВыбиратьГруппуСкладов,
		|		ВЫБОР
		|			КОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)
		|					ИЛИ ЗаказыКлиентовОстатки.ЗаказКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя)
		|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
		|			КОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
		|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
		|			КОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтХранителя)
		|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи)
		//++ НЕ УТ
		|			КОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПроизводствоУПереработчика2_5)
		|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПереработчику2_5)
		//-- НЕ УТ
		|			ИНАЧЕ ЗаказыКлиентовОстатки.ЗаказКлиента.ХозяйственнаяОперация
		|		КОНЕЦ КАК ХозяйственнаяОперация,
		|		ЗаказыКлиентовОстатки.КОформлениюОстаток КАК КОформлениюОстаток,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.Валюта КАК ВалютаВзаиморасчетов,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.НалогообложениеНДС КАК НалогообложениеНДС,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
		|		ЗаказыКлиентовОстатки.Номенклатура.ВариантОформленияПродажи КАК ВариантОформленияПродажи,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.СпособДоставки КАК СпособДоставки,
		|		ВЫБОР
		#Удаление
		|			КОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		#КонецУдаления
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
		|			КОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
		#КонецВставки
		|					ИЛИ ЗаказыКлиентовОстатки.ЗаказКлиента.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
		|				ТОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.ПеревозчикПартнер
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|		КОНЕЦ КАК ПеревозчикПартнер,
		|		ВЫБОР
		|			КОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.СпособДоставки <> ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.Самовывоз)
		|				ИЛИ ЗаказыКлиентовОстатки.ЗаказКлиента.АдресДоставки <> """"
		|				ТОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.АдресДоставки
		|			ИНАЧЕ """"
		|		КОНЕЦ КАК АдресДоставки,
		|		ВЫБОР
		#Удаление
		|			КОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		#КонецУдаления
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
		|			КОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
		#КонецВставки
		|					ИЛИ ЗаказыКлиентовОстатки.ЗаказКлиента.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
		|				ТОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.АдресДоставкиПеревозчика
		|			ИНАЧЕ """"
		|		КОНЕЦ КАК АдресДоставкиПеревозчика,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента КАК ЗаказКлиента,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.ВернутьМногооборотнуюТару КАК ВернутьМногооборотнуюТару,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.СрокВозвратаМногооборотнойТары КАК СрокВозвратаМногооборотнойТары,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.ТребуетсяЗалогЗаТару КАК ТребуетсяЗалогЗаТару,
		|		ВЫБОР
		|			КОГДА &ИспользоватьСоглашенияСКлиентами
		|				ТОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.Соглашение.КалендарьВозвратаТары
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПроизводственныеКалендари.ПустаяСсылка)
		|		КОНЕЦ КАК КалендарьВозвратаТары,
		|		ВЫБОР
		|			КОГДА &ИспользоватьСоглашенияСКлиентами
		|				ТОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.Соглашение.РассчитыватьДатуВозвратаТарыПоКалендарю
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ КАК РассчитыватьДатуВозвратаТарыПоКалендарю,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|		&ВидГОСИСЗаказыКлиентовОстатки КАК ВидГОСИС,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.ПорядокРасчетов КАК ПорядокРасчетов
		|	ИЗ
		|		РегистрНакопления.ЗаказыКлиентов.Остатки(
		|				,
		|				(ЗаказКлиента, Склад) В (ВЫБРАТЬ Ссылка, Склад ИЗ ВТЗаказов)
		|					И Номенклатура.ВариантОформленияПродажи В(
		|						ЗНАЧЕНИЕ(Перечисление.ВариантыОформленияПродажи.РеализацияТоваровУслуг),
		|						ЗНАЧЕНИЕ(Перечисление.ВариантыОформленияПродажи.АктНаПередачуПрав))
		|			) КАК ЗаказыКлиентовОстатки
		|	ГДЕ
		|		НЕ &ПоОрдерам
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.Партнер,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.Контрагент,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.Договор,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.Организация,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.Соглашение,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.Сделка,
		|		НЕОПРЕДЕЛЕНО,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.Подразделение,
		|		НЕОПРЕДЕЛЕНО,
		|		ЛОЖЬ,
		|		НЕОПРЕДЕЛЕНО,
		|		ЗаказыКлиентовОстатки.КОформлениюОстаток,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.Валюта,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.НалогообложениеНДС,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.ЦенаВключаетНДС,
		|		ЗаказыКлиентовОстатки.Номенклатура.ВариантОформленияПродажи,
		|		НЕОПРЕДЕЛЕНО,
		|		НЕОПРЕДЕЛЕНО,
		|		НЕОПРЕДЕЛЕНО,
		|		НЕОПРЕДЕЛЕНО,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.ВернутьМногооборотнуюТару,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.СрокВозвратаМногооборотнойТары,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.ТребуетсяЗалогЗаТару,
		|		ВЫБОР
		|			КОГДА &ИспользоватьСоглашенияСКлиентами
		|				ТОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.Соглашение.КалендарьВозвратаТары
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПроизводственныеКалендари.ПустаяСсылка)
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА &ИспользоватьСоглашенияСКлиентами
		|				ТОГДА ЗаказыКлиентовОстатки.ЗаказКлиента.Соглашение.РассчитыватьДатуВозвратаТарыПоКалендарю
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.НаправлениеДеятельности,
		|		&ВидГОСИСЗаказыКлиентовОстатки КАК ВидГОСИС,
		|		ЗаказыКлиентовОстатки.ЗаказКлиента.ПорядокРасчетов
		|	ИЗ
		|		РегистрНакопления.ЗаказыКлиентов.Остатки(
		|				,
		|				(ЗаказКлиента, Склад) В (ВЫБРАТЬ Ссылка, Склад ИЗ ВТЗаказов)
		|					И Номенклатура.ВариантОформленияПродажи = ЗНАЧЕНИЕ(Перечисление.ВариантыОформленияПродажи.АктВыполненныхРабот)) КАК ЗаказыКлиентовОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Партнер КАК Партнер,
		|		ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Контрагент КАК Контрагент,
		|		ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Договор КАК Договор,
		|		ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Организация КАК Организация,
		|		ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Соглашение КАК Соглашение,
		|		ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Сделка КАК Сделка,
		|		ТоварыКОтгрузкеОстатки.Склад КАК Склад,
		|		ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Подразделение КАК Подразделение,
		|		ВЫБОР
		|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Склад.ЭтоГруппа
		|					И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Склад.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
		|				ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|			ИНАЧЕ ВЫБОР
		|				КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента ТОГДА
		|					ТоварыКОтгрузкеОстатки.Склад
		|				КОНЕЦ
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Склад.ЭтоГруппа
		|					И ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Склад.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ,
		|		ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).ХозяйственнаяОперация,
		|		ТоварыКОтгрузкеОстатки.КОформлениюОстаток + ТоварыКОтгрузкеОстатки.КОтгрузкеОстаток,
		|		ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Валюта КАК Валюта,
		|		ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).НалогообложениеНДС КАК НалогообложениеНДС,
		|		ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).ЦенаВключаетНДС КАК ЦенаВключаетНДС,
		|		ТоварыКОтгрузкеОстатки.Номенклатура.ВариантОформленияПродажи,
		|		ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).СпособДоставки КАК СпособДоставки,
		|		ВЫБОР
		|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента
		#Удаление
		|					И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		#КонецУдаления
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
		|					И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
		#КонецВставки
		|					ИЛИ ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу))
		|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).ПеревозчикПартнер
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента
		|				И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).СпособДоставки <> ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.Самовывоз)
		|					ИЛИ ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).АдресДоставки <> """") ТОГДА
		|					ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).АдресДоставки
		|			ИНАЧЕ """"
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента
		#Удаление
		|				И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		#КонецУдаления
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
		|				И (ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
		#КонецВставки
		|					ИЛИ ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу))
		|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).АдресДоставкиПеревозчика
		|			ИНАЧЕ """"
		|		КОНЕЦ,
		|		ТоварыКОтгрузкеОстатки.ДокументОтгрузки,
		|		ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).ВернутьМногооборотнуюТару КАК ВернутьМногооборотнуюТару,
		|		ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).СрокВозвратаМногооборотнойТары КАК СрокВозвратаМногооборотнойТары,
		|		ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).ТребуетсяЗалогЗаТару КАК ТребуетсяЗалогЗаТару,
		|		ВЫБОР
		|			КОГДА &ИспользоватьСоглашенияСКлиентами И ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента
		|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Соглашение.КалендарьВозвратаТары
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПроизводственныеКалендари.ПустаяСсылка)
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА &ИспользоватьСоглашенияСКлиентами И ТоварыКОтгрузкеОстатки.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента
		|				ТОГДА ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).Соглашение.РассчитыватьДатуВозвратаТарыПоКалендарю
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ,
		|		ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).НаправлениеДеятельности КАК НаправлениеДеятельности,
		|		&ВидГОСИСТоварыКОтгрузке КАК ВидГОСИС,
		|		ВЫРАЗИТЬ(ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК Документ.ЗаказКлиента).ПорядокРасчетов КАК ПорядокРасчетов
		|	ИЗ
		|		РегистрНакопления.ТоварыКОтгрузке.Остатки(,
		|				(ДокументОтгрузки, Склад) В (ВЫБРАТЬ Ссылка, Склад ИЗ ВТЗаказов)
		|		) КАК ТоварыКОтгрузкеОстатки
		|	ГДЕ
		|		&ПоОрдерам
		|");

		ТекстыРаспоряжениеНаОформление.Добавить(
		"	ВЫБРАТЬ
		|		ЗаказКлиента.Партнер КАК Партнер,
		|		ЗаказКлиента.Контрагент КАК Контрагент,
		|		ЗаказКлиента.Договор КАК Договор,
		|		ЗаказКлиента.Организация КАК Организация,
		|		ЗаказКлиента.Соглашение КАК Соглашение,
		|		ЗаказКлиента.Сделка КАК Сделка,
		|		ЗаказКлиента.Склад КАК Склад,
		|		ЗаказКлиента.Подразделение КАК Подразделение,
		|		ВЫБОР
		|			КОГДА ЗаказКлиента.СкладВШапкеЗаказа
		|				ТОГДА ЗаказКлиента.Склад
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|		КОНЕЦ КАК СкладОтгрузки,                
		|		НЕ ЗаказКлиента.СкладВШапкеЗаказа КАК ЗапрещеноВыбиратьГруппуСкладов,
		//|		ВЫБОР
		//|			КОГДА ЗаказКлиента.Склад.ЭтоГруппа
		//|					И ЗаказКлиента.Склад.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
		//|				ТОГДА ИСТИНА
		//|			ИНАЧЕ ЛОЖЬ
		//|		КОНЕЦ КАК ЗапрещеноВыбиратьГруппуСкладов,
		|		ВЫБОР
		|			КОГДА ЗаказКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)
		|					ИЛИ ЗаказКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя)
		|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
		|			КОГДА ЗаказКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
		|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
		|			КОГДА ЗаказКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтХранителя)
		|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи)
		|			ИНАЧЕ ЗаказКлиента.ХозяйственнаяОперация
		|		КОНЕЦ КАК ХозяйственнаяОперация,
		|		ЗаказКлиентаТовары.Количество КАК КОформлениюОстаток,
		|		ЗаказКлиента.Валюта КАК ВалютаВзаиморасчетов,
		|		ЗаказКлиента.НалогообложениеНДС КАК НалогообложениеНДС,
		|		ЗаказКлиента.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
		|		ЗаказКлиентаТовары.Номенклатура.ВариантОформленияПродажи КАК ВариантОформленияПродажи,
		|		ЗаказКлиента.СпособДоставки КАК СпособДоставки,
		|		ВЫБОР
		#Удаление
		|			КОГДА ЗаказКлиента.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		#КонецУдаления
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
		|			КОГДА ЗаказКлиента.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
		#КонецВставки
		|					ИЛИ ЗаказКлиента.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
		|				ТОГДА ЗаказКлиента.ПеревозчикПартнер
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|		КОНЕЦ КАК ПеревозчикПартнер,
		|		ВЫБОР
		|			КОГДА ЗаказКлиента.СпособДоставки <> ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.Самовывоз)
		|				ИЛИ ЗаказКлиента.АдресДоставки <> """"
		|				ТОГДА ЗаказКлиента.АдресДоставки
		|			ИНАЧЕ """"
		|		КОНЕЦ КАК АдресДоставки,
		|		ВЫБОР
		#Удаление
		|			КОГДА ЗаказКлиента.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		#КонецУдаления
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
		|			КОГДА ЗаказКлиента.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
		#КонецВставки
		|					ИЛИ ЗаказКлиента.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
		|				ТОГДА ЗаказКлиента.АдресДоставкиПеревозчика
		|			ИНАЧЕ """"
		|		КОНЕЦ КАК АдресДоставкиПеревозчика,
		|		ЗаказКлиента.Ссылка КАК ЗаказКлиента,
		|		ЗаказКлиента.ВернутьМногооборотнуюТару КАК ВернутьМногооборотнуюТару,
		|		ЗаказКлиента.СрокВозвратаМногооборотнойТары КАК СрокВозвратаМногооборотнойТары,
		|		ЗаказКлиента.ТребуетсяЗалогЗаТару КАК ТребуетсяЗалогЗаТару,
		|		ВЫБОР
		|			КОГДА &ИспользоватьСоглашенияСКлиентами
		|				ТОГДА ЗаказКлиента.Соглашение.КалендарьВозвратаТары
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПроизводственныеКалендари.ПустаяСсылка)
		|		КОНЕЦ КАК КалендарьВозвратаТары,
		|		ВЫБОР
		|			КОГДА &ИспользоватьСоглашенияСКлиентами
		|				ТОГДА ЗаказКлиента.Соглашение.РассчитыватьДатуВозвратаТарыПоКалендарю
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ КАК РассчитыватьДатуВозвратаТарыПоКалендарю,
		|		ЗаказКлиента.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|		&ВидГОСИСЗаказКлиентаТовары КАК ВидГОСИС,
		|		ЗаказКлиента.ПорядокРасчетов КАК ПорядокРасчетов
		|	ИЗ
		|		ВтЗаказыКлиентов КАК ЗаказКлиента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
		|			ПО ЗаказКлиента.Ссылка = ЗаказКлиентаТовары.Ссылка
		|			И (ЗаказКлиента.СкладВШапкеЗаказа ИЛИ ЗаказКлиента.Склад = ЗаказКлиентаТовары.Склад)
		|
		|	ГДЕ
		|		(НЕ &ИспользоватьОтборПоСкладу
		|			ИЛИ ЗаказКлиента.Склад В(&Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)))
		|		И ЗаказКлиентаТовары.Номенклатура.ВариантОформленияПродажи В(
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыОформленияПродажи.РеализацияТоваровУслуг),
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыОформленияПродажи.АктНаПередачуПрав))
		|		И НЕ &ИспользоватьРасширенныеВозможностиЗаказаКлиента
		|");

	КонецЕсли;

	ТекстЗапроса = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	ТекстЗапроса =
	СтрЗаменить(
	ТекстЗапроса,
	"&ТекстыРаспоряжениеНаОформление",
	"(" + СтрСоединить(ТекстыРаспоряжениеНаОформление, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении()) + ")");

	Возврат ТекстЗапроса;

КонецФункции

&ИзменениеИКонтроль("ПолучитьРеквизитыРаспоряжений")
Функция РСК_ПолучитьРеквизитыРаспоряжений(МассивРаспоряжений)

	СтруктураРеквизитов = Новый Структура();

	ЕстьДоступКЗаказамКлиентов      = ПравоДоступа("Чтение", Метаданные.Документы.ЗаказКлиента);
	ЕстьДоступКЗаявкамНаВозврат     = ПравоДоступа("Чтение", Метаданные.Документы.ЗаявкаНаВозвратТоваровОтКлиента);
	//++ НЕ УТ
	ЕстьДоступКЗаказамПереработчика = ПравоДоступа("Чтение", Метаданные.Документы.ЗаказПереработчику2_5);
	//-- НЕ УТ

	Если Не ЕстьДоступКЗаказамКлиентов
		//++ НЕ УТ
		И Не ЕстьДоступКЗаказамПереработчика
		//-- НЕ УТ
		И Не ЕстьДоступКЗаявкамНаВозврат Тогда
		Возврат СтруктураРеквизитов;
	КонецЕсли;

	ТекстыИсточниковДанных = Новый Массив();

	Если ЕстьДоступКЗаказамКлиентов Тогда
		ТекстЗапросаЗаказыКлиентов = 
		"	ВЫБРАТЬ
		|		ЗаказКлиента.Контрагент                            КАК Контрагент,
		|		ЗаказКлиента.Организация                           КАК Организация,
		|		ЗаказКлиента.БанковскийСчет                        КАК БанковскийСчет,
		|		ЗаказКлиента.БанковскийСчетКонтрагента             КАК БанковскийСчетКонтрагента,
		|		ЗаказКлиента.Грузоотправитель                      КАК Грузоотправитель,
		|		ЗаказКлиента.Грузополучатель                       КАК Грузополучатель,
		|		ЗаказКлиента.БанковскийСчетГрузоотправителя        КАК БанковскийСчетГрузоотправителя,
		|		ЗаказКлиента.БанковскийСчетГрузополучателя         КАК БанковскийСчетГрузополучателя,
		|		ЗаказКлиента.Касса                                 КАК Касса,
		|		ЗаказКлиента.ФормаОплаты                           КАК ФормаОплаты,
		|		ЗаказКлиента.СпособДоставки                        КАК СпособДоставки,
		|		ЗаказКлиента.АдресДоставкиЗначенияПолей            КАК АдресДоставкиЗначенияПолей,
		|		ЗаказКлиента.АдресДоставкиПеревозчикаЗначенияПолей КАК АдресДоставкиПеревозчикаЗначенияПолей,
		|		ЗаказКлиента.ЗонаДоставки                          КАК ЗонаДоставки,
		|		ЗаказКлиента.ВремяДоставкиС                        КАК ВремяДоставкиС,
		|		ЗаказКлиента.ВремяДоставкиПо                       КАК ВремяДоставкиПо,
		|		ЗаказКлиента.ДополнительнаяИнформацияПоДоставке    КАК ДополнительнаяИнформацияПоДоставке,
		|		ЗаказКлиента.ЦенаВключаетНДС                       КАК ЦенаВключаетНДС,
		|		ЗаказКлиента.НалогообложениеНДС                    КАК НалогообложениеНДС,
		|		ЗаказКлиента.Договор                               КАК Договор,
		|		ЗаказКлиента.Соглашение                            КАК Соглашение,
		|		ЗНАЧЕНИЕ(Перечисление.СпособыКомпенсацииВозвратовТоваров.ПустаяСсылка) КАК СпособКомпенсации,
		|		ЛОЖЬ                                               КАК ВозвратПорчи
		|	ПОМЕСТИТЬ ВТИсточникиДанных
		|	ИЗ
		|		Документ.ЗаказКлиента КАК ЗаказКлиента
		|	ГДЕ
		|		ЗаказКлиента.Ссылка В(&МассивРаспоряжений)";
		ТекстыИсточниковДанных.Добавить(ТекстЗапросаЗаказыКлиентов);
	КонецЕсли;
	Если ЕстьДоступКЗаявкамНаВозврат Тогда
		ТекстЗапросаЗаявкиНаВозврат = 
		"	ВЫБРАТЬ
		|		ЗаявкаНаВозвратТоваровОтКлиента.Контрагент,
		|		ЗаявкаНаВозвратТоваровОтКлиента.Организация,
		|		ЗаявкаНаВозвратТоваровОтКлиента.БанковскийСчет,
		|		ЗаявкаНаВозвратТоваровОтКлиента.БанковскийСчетКонтрагента,
		|		ЗаявкаНаВозвратТоваровОтКлиента.Грузоотправитель,
		|		ЗаявкаНаВозвратТоваровОтКлиента.Грузополучатель,
		|		ЗаявкаНаВозвратТоваровОтКлиента.БанковскийСчетГрузоотправителя,
		|		ЗаявкаНаВозвратТоваровОтКлиента.БанковскийСчетГрузополучателя,
		|		ЗаявкаНаВозвратТоваровОтКлиента.Касса,
		|		ЗаявкаНаВозвратТоваровОтКлиента.ФормаОплаты,
		|		ЗаявкаНаВозвратТоваровОтКлиента.СпособДоставки,
		|		ЗаявкаНаВозвратТоваровОтКлиента.АдресДоставкиЗначенияПолей,
		|		ЗаявкаНаВозвратТоваровОтКлиента.АдресДоставкиПеревозчикаЗначенияПолей,
		|		ЗаявкаНаВозвратТоваровОтКлиента.ЗонаДоставки,
		|		ЗаявкаНаВозвратТоваровОтКлиента.ВремяДоставкиС,
		|		ЗаявкаНаВозвратТоваровОтКлиента.ВремяДоставкиПо,
		|		ЗаявкаНаВозвратТоваровОтКлиента.ДополнительнаяИнформацияПоДоставке,
		|		ЗаявкаНаВозвратТоваровОтКлиента.ЦенаВключаетНДС,
		|		ЗаявкаНаВозвратТоваровОтКлиента.НалогообложениеНДС,
		|		ЗаявкаНаВозвратТоваровОтКлиента.Договор,
		|		ЗаявкаНаВозвратТоваровОтКлиента.Соглашение,
		|		ЗНАЧЕНИЕ(Перечисление.СпособыКомпенсацииВозвратовТоваров.ПустаяСсылка) КАК СпособКомпенсации,
		|		ЗаявкаНаВозвратТоваровОтКлиента.ВозвратПорчи
		|	,&ВТИсточникиДанных
		|	ИЗ
		|		Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозвратТоваровОтКлиента
		|	ГДЕ
		|		ЗаявкаНаВозвратТоваровОтКлиента.Ссылка В(&МассивРаспоряжений)";
		Если ТекстыИсточниковДанных.Количество() = 0 Тогда
			ТекстЗапросаЗаявкиНаВозврат = СтрЗаменить(ТекстЗапросаЗаявкиНаВозврат, ",&ВТИсточникиДанных", "ПОМЕСТИТЬ ВТИсточникиДанных");
		Иначе	
			ТекстЗапросаЗаявкиНаВозврат = СтрЗаменить(ТекстЗапросаЗаявкиНаВозврат, ",&ВТИсточникиДанных", "");
		КонецЕсли;
		ТекстыИсточниковДанных.Добавить(ТекстЗапросаЗаявкиНаВозврат);
	КонецЕсли;

	//++ НЕ УТ
	Если ЕстьДоступКЗаказамПереработчика Тогда
		ТекстЗапросаЗаказыПереработчикам = 
		"	ВЫБРАТЬ
		|		ЗаказПереработчику2_5.Контрагент,
		|		ЗаказПереработчику2_5.Организация,
		|		ЗаказПереработчику2_5.БанковскийСчет,
		|		НЕОПРЕДЕЛЕНО КАК БанковскийСчетКонтрагента,
		|		НЕОПРЕДЕЛЕНО КАК Грузоотправитель,
		|		НЕОПРЕДЕЛЕНО КАК Грузополучатель,
		|		НЕОПРЕДЕЛЕНО КАК БанковскийСчетГрузоотправителя,
		|		НЕОПРЕДЕЛЕНО КАК БанковскийСчетГрузополучателя,
		|		ЗаказПереработчику2_5.Касса,
		|		ЗаказПереработчику2_5.ФормаОплаты,
		|		ЗаказПереработчику2_5.СпособДоставки,
		|		ЗаказПереработчику2_5.АдресДоставкиЗначенияПолей,
		|		ЗаказПереработчику2_5.АдресДоставкиПеревозчикаЗначенияПолей,
		|		ЗаказПереработчику2_5.ЗонаДоставки,
		|		ЗаказПереработчику2_5.ВремяДоставкиС,
		|		ЗаказПереработчику2_5.ВремяДоставкиПо,
		|		ЗаказПереработчику2_5.ДополнительнаяИнформацияПоДоставке,
		|		ЗаказПереработчику2_5.ЦенаВключаетНДС,
		|		ЗаказПереработчику2_5.НалогообложениеНДС,
		|		ЗаказПереработчику2_5.Договор,
		|		НЕОПРЕДЕЛЕНО КАК Соглашение,
		|		ЗНАЧЕНИЕ(Перечисление.СпособыКомпенсацииВозвратовТоваров.ПустаяСсылка) КАК СпособКомпенсации,
		|		ЛОЖЬ КАК ВозвратПорчи
		|	,&ВТИсточникиДанных
		|	ИЗ
		|		Документ.ЗаказПереработчику2_5 КАК ЗаказПереработчику2_5
		|	ГДЕ
		|		ЗаказПереработчику2_5.Ссылка В(&МассивРаспоряжений)
		|";

		Если ТекстыИсточниковДанных.Количество() = 0 Тогда
			ТекстЗапросаЗаказыПереработчикам = СтрЗаменить(ТекстЗапросаЗаказыПереработчикам, ",&ВТИсточникиДанных", "ПОМЕСТИТЬ ВТИсточникиДанных");
		Иначе	
			ТекстЗапросаЗаказыПереработчикам = СтрЗаменить(ТекстЗапросаЗаказыПереработчикам, ",&ВТИсточникиДанных", "");
		КонецЕсли;

		ТекстыИсточниковДанных.Добавить(ТекстЗапросаЗаказыПереработчикам);

	КонецЕсли;
	//-- НЕ УТ

	ТекстЗапросаИсточникиДанных = СтрСоединить(ТекстыИсточниковДанных, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());

	ТекстЗапроса = "ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|						КОГДА ЗаказКлиента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
	|							ТОГДА ЗаказКлиента.БанковскийСчет
	|						ИНАЧЕ NULL
	|					КОНЕЦ) = 1
	|				И КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Организация) = 1
	|			ТОГДА МАКСИМУМ(ЗаказКлиента.БанковскийСчет)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
	|	КОНЕЦ КАК БанковскийСчет,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|						КОГДА ЗаказКлиента.БанковскийСчетКонтрагента <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
	|							ТОГДА ЗаказКлиента.БанковскийСчетКонтрагента
	|						ИНАЧЕ NULL
	|					КОНЕЦ) = 1
	|				И КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Контрагент) = 1
	|			ТОГДА МАКСИМУМ(ЗаказКлиента.БанковскийСчетКонтрагента)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
	|	КОНЕЦ КАК БанковскийСчетКонтрагента,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|					КОГДА ЗаказКлиента.Грузоотправитель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|						ТОГДА ЗаказКлиента.Грузоотправитель
	|					ИНАЧЕ NULL
	|				КОНЕЦ) = 1
	|			ТОГДА МАКСИМУМ(ЗаказКлиента.Грузоотправитель)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|					КОГДА ЗаказКлиента.Грузополучатель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|						ТОГДА ЗаказКлиента.Грузополучатель
	|					ИНАЧЕ NULL
	|				КОНЕЦ) = 1
	|			ТОГДА МАКСИМУМ(ЗаказКлиента.Грузополучатель)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|						КОГДА ЗаказКлиента.БанковскийСчетГрузоотправителя <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
	|							ТОГДА ЗаказКлиента.БанковскийСчетГрузоотправителя
	|						ИНАЧЕ NULL
	|					КОНЕЦ) = 1
	|				И КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|						КОГДА ЗаказКлиента.Грузоотправитель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|							ТОГДА ЗаказКлиента.Грузоотправитель
	|						ИНАЧЕ NULL
	|					КОНЕЦ) = 1
	|			ТОГДА МАКСИМУМ(ЗаказКлиента.БанковскийСчетГрузоотправителя)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
	|	КОНЕЦ КАК БанковскийСчетГрузоотправителя,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|						КОГДА ЗаказКлиента.БанковскийСчетГрузополучателя <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
	|							ТОГДА ЗаказКлиента.БанковскийСчетГрузополучателя
	|						ИНАЧЕ NULL
	|					КОНЕЦ) = 1
	|				И КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|						КОГДА ЗаказКлиента.Грузополучатель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|							ТОГДА ЗаказКлиента.Грузополучатель
	|						ИНАЧЕ NULL
	|					КОНЕЦ) = 1
	|			ТОГДА МАКСИМУМ(ЗаказКлиента.БанковскийСчетГрузополучателя)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
	|	КОНЕЦ КАК БанковскийСчетГрузополучателя,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|					КОГДА ЗаказКлиента.Касса <> ЗНАЧЕНИЕ(Справочник.Кассы.ПустаяСсылка)
	|						ТОГДА ЗаказКлиента.Касса
	|					ИНАЧЕ NULL
	|				КОНЕЦ) = 1
	|			ТОГДА МАКСИМУМ(ЗаказКлиента.Касса)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Кассы.ПустаяСсылка)
	|	КОНЕЦ КАК Касса,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.ФормаОплаты) > 1
	|		ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПустаяСсылка)
	|		ИНАЧЕ
	|			МИНИМУМ(ЗаказКлиента.ФормаОплаты)
	|	КОНЕЦ КАК ФормаОплаты,	
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫРАЗИТЬ(ЗаказКлиента.АдресДоставкиЗначенияПолей КАК СТРОКА(1000))) = 1
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК АдресДоставкиЗначенияПолей,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	#Удаление
	|					КОГДА ЗаказКлиента.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
	|					КОГДА ЗаказКлиента.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
	#КонецВставки
	|							ИЛИ ЗаказКлиента.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
	|						ТОГДА ВЫРАЗИТЬ(ЗаказКлиента.АдресДоставкиПеревозчикаЗначенияПолей КАК СТРОКА(1000))
	|					ИНАЧЕ NULL
	|				КОНЕЦ) = 1
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК АдресДоставкиПеревозчикаЗначенияПолей,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|					КОГДА (ЗаказКлиента.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ДоКлиента)
	|							ИЛИ ЗаказКлиента.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу))
	|							И ЗаказКлиента.ЗонаДоставки <> ЗНАЧЕНИЕ(Справочник.ЗоныДоставки.ПустаяСсылка)
	|						ТОГДА ЗаказКлиента.ЗонаДоставки
	|					ИНАЧЕ NULL
	|				КОНЕЦ) = 1
	|			ТОГДА МАКСИМУМ(ЗаказКлиента.ЗонаДоставки)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ЗоныДоставки.ПустаяСсылка)
	|	КОНЕЦ КАК ЗонаДоставки,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|					КОГДА ЗаказКлиента.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ДоКлиента)
	|							ИЛИ ЗаказКлиента.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
	|						ТОГДА ЗаказКлиента.ВремяДоставкиС
	|					ИНАЧЕ NULL
	|				КОНЕЦ) = 1
	|			ТОГДА МАКСИМУМ(ЗаказКлиента.ВремяДоставкиС)
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ВремяДоставкиС,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|					КОГДА ЗаказКлиента.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ДоКлиента)
	|							ИЛИ ЗаказКлиента.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
	|						ТОГДА ЗаказКлиента.ВремяДоставкиПо
	|					ИНАЧЕ NULL
	|				КОНЕЦ) = 1
	|			ТОГДА МАКСИМУМ(ЗаказКлиента.ВремяДоставкиПо)
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ВремяДоставкиПо,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫРАЗИТЬ(ЗаказКлиента.ДополнительнаяИнформацияПоДоставке КАК СТРОКА(1000))) = 1
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ДополнительнаяИнформацияПоДоставке,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.ЦенаВключаетНДС) = 1
	|			ТОГДА МАКСИМУМ(ЗаказКлиента.ЦенаВключаетНДС)
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЦенаВключаетНДС,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.НалогообложениеНДС) = 1
	|			ТОГДА МАКСИМУМ(ЗаказКлиента.НалогообложениеНДС)
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Договор) = 1
	|			ТОГДА МАКСИМУМ(ЗаказКлиента.Договор)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|	КОНЕЦ КАК Договор,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Соглашение) = 1
	|			ТОГДА МАКСИМУМ(ЗаказКлиента.Соглашение)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка)
	|	КОНЕЦ КАК Соглашение,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.СпособКомпенсации) = 1
	|			ТОГДА МАКСИМУМ(ЗаказКлиента.СпособКомпенсации)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыКомпенсацииВозвратовТоваров.ПустаяСсылка)
	|	КОНЕЦ КАК СпособКомпенсации,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.ВозвратПорчи) = 1
	|			ТОГДА МАКСИМУМ(ЗаказКлиента.ВозвратПорчи)
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВозвратПорчи
	|ПОМЕСТИТЬ ВТРеквизитыШапки
	|ИЗ
	|	ВТИсточникиДанных КАК ЗаказКлиента
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ШапкаДокумента.БанковскийСчет КАК БанковскийСчет,
	|	ШапкаДокумента.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента,
	|	ШапкаДокумента.Грузоотправитель КАК Грузоотправитель,
	|	ШапкаДокумента.Грузополучатель КАК Грузополучатель,
	|	ШапкаДокумента.БанковскийСчетГрузоотправителя КАК БанковскийСчетГрузоотправителя,
	|	ШапкаДокумента.БанковскийСчетГрузополучателя КАК БанковскийСчетГрузополучателя,
	|	ШапкаДокумента.Касса КАК Касса,
	|	ШапкаДокумента.ФормаОплаты КАК ФормаОплаты,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.АдресДоставкиЗначенияПолей
	|			ТОГДА ШапкаЗаказа.АдресДоставкиЗначенияПолей
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК АдресДоставкиЗначенияПолей,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.АдресДоставкиПеревозчикаЗначенияПолей
	|			ТОГДА ШапкаЗаказа.АдресДоставкиПеревозчикаЗначенияПолей
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК АдресДоставкиПеревозчикаЗначенияПолей,
	|	ШапкаДокумента.ЗонаДоставки КАК ЗонаДоставки,
	|	ШапкаДокумента.ВремяДоставкиС КАК ВремяДоставкиС,
	|	ШапкаДокумента.ВремяДоставкиПо КАК ВремяДоставкиПо,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ДополнительнаяИнформацияПоДоставке
	|			ТОГДА ШапкаЗаказа.ДополнительнаяИнформацияПоДоставке
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ДополнительнаяИнформацияПоДоставке,
	|	ШапкаДокумента.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ШапкаДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ШапкаДокумента.Договор КАК Договор,
	|	ШапкаДокумента.Соглашение КАК Соглашение,
	|	ШапкаДокумента.СпособКомпенсации КАК СпособКомпенсации,
	|	ШапкаДокумента.ВозвратПорчи КАК ВозвратПорчи
	|ИЗ
	|	ВТРеквизитыШапки КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсточникиДанных КАК ШапкаЗаказа
	|		ПО ШапкаДокумента.ФормаОплаты = ШапкаЗаказа.ФормаОплаты
	|";

	ТекстыЗапросов = Новый Массив();
	ТекстыЗапросов.Добавить(ТекстЗапросаИсточникиДанных);
	ТекстыЗапросов.Добавить(ТекстЗапроса);

	Запрос = Новый Запрос();
	Запрос.Текст = СтрСоединить(ТекстыЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());

	Запрос.УстановитьПараметр("МассивРаспоряжений", МассивРаспоряжений);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();

	СтруктураРеквизитов.Вставить("БанковскийСчет",                 Выборка.БанковскийСчет);
	СтруктураРеквизитов.Вставить("БанковскийСчетКонтрагента",      Выборка.БанковскийСчетКонтрагента);
	СтруктураРеквизитов.Вставить("Грузоотправитель",               Выборка.Грузоотправитель);
	СтруктураРеквизитов.Вставить("Грузополучатель",                Выборка.Грузополучатель);
	СтруктураРеквизитов.Вставить("БанковскийСчетГрузоотправителя", Выборка.БанковскийСчетГрузоотправителя);
	СтруктураРеквизитов.Вставить("БанковскийСчетГрузополучателя",  Выборка.БанковскийСчетГрузополучателя);
	СтруктураРеквизитов.Вставить("Касса",                          Выборка.Касса);
	СтруктураРеквизитов.Вставить("ФормаОплаты",                    Выборка.ФормаОплаты);
	СтруктураРеквизитов.Вставить("ЦенаВключаетНДС",                Выборка.ЦенаВключаетНДС);
	СтруктураРеквизитов.Вставить("НалогообложениеНДС",             Выборка.НалогообложениеНДС);
	СтруктураРеквизитов.Вставить("Договор",                        Выборка.Договор);
	СтруктураРеквизитов.Вставить("Соглашение",                     Выборка.Соглашение);
	СтруктураРеквизитов.Вставить("СпособКомпенсации",              Выборка.СпособКомпенсации);
	СтруктураРеквизитов.Вставить("ВозвратПорчи",                   Выборка.ВозвратПорчи);

	СтруктураРеквизитов.Вставить("АдресДоставкиЗначенияПолей",            Выборка.АдресДоставкиЗначенияПолей);
	СтруктураРеквизитов.Вставить("АдресДоставкиПеревозчикаЗначенияПолей", Выборка.АдресДоставкиПеревозчикаЗначенияПолей);
	СтруктураРеквизитов.Вставить("ЗонаДоставки",                          Выборка.ЗонаДоставки);
	СтруктураРеквизитов.Вставить("ВремяДоставкиС",                        Выборка.ВремяДоставкиС);
	СтруктураРеквизитов.Вставить("ВремяДоставкиПо",                       Выборка.ВремяДоставкиПо);
	СтруктураРеквизитов.Вставить("ДополнительнаяИнформацияПоДоставке",    Выборка.ДополнительнаяИнформацияПоДоставке);

	Возврат СтруктураРеквизитов;

КонецФункции
