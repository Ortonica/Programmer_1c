

&ИзменениеИКонтроль("ПодборВРасшифровкуПлатежа")
Процедура РСК_ПодборВРасшифровкуПлатежа(Форма, ИмяЭлемента, Оповещение, ДополнительныеОтборы)
	
	Попытка
		Форма.ЗаблокироватьДанныеФормыДляРедактирования();
	Исключение
		ПоказатьПредупреждение(Неопределено, КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат;
	КонецПопытки;
	
	ПараметрыМеханизма = ОбщегоНазначенияУТКлиентСервер.ПолучитьДанныеМеханизмаИзКэшаФормы(Форма, "Взаиморасчеты");
	СтруктураПараметров = ВзаиморасчетыКлиентСервер.СтруктураПараметровПоИмениЭлемента(ПараметрыМеханизма.МассивПараметров, ИмяЭлемента);
	
	ПартнерПрочиеОтношения = СтруктураПараметров.ПартнерПрочиеОтношения;
	ПодборДебиторскойЗадолженности = СтруктураПараметров.ПодборДебиторскойЗадолженности;
	ПодборТолькоБезусловнойЗадолженности = СтруктураПараметров.ПодборТолькоБезусловнойЗадолженности;
	
	Контрагент           = ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.Контрагент);
	Ссылка               = ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.Ссылка);
	Организация          = ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.Организация);
	Валюта               = ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.ВалютаДокумента);
	СуммаДокумента       = ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.СуммаДокумента);
	Дата                 = ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.Дата);
	ИдентификаторПлатежа = ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.ИдентификаторПлатежа);
	ТипРасчетов          = СтруктураПараметров.ТипРасчетов;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ОбъектСсылка",                          Ссылка);
	ПараметрыОткрытия.Вставить("АдресПлатежейВХранилище",               СтруктураПараметров.АдресРасшифровкаПлатежа);
	ПараметрыОткрытия.Вставить("Организация",                           Организация);
	ПараметрыОткрытия.Вставить("Контрагент",                            Контрагент);
	ПараметрыОткрытия.Вставить("ВалютаДокумента",                       Валюта);
	ПараметрыОткрытия.Вставить("СуммаДокумента",                        СуммаДокумента);
	ПараметрыОткрытия.Вставить("ДатаДокумента",                         Дата);
	ПараметрыОткрытия.Вставить("ТипРасчетов",                           ТипРасчетов);
	ПараметрыОткрытия.Вставить("ИдентификаторПлатежа",                  ИдентификаторПлатежа);
	ПараметрыОткрытия.Вставить("ПартнерПрочиеОтношения",                ПартнерПрочиеОтношения);
	ПараметрыОткрытия.Вставить("УчитыватьФилиалы",                      Истина);
	ПараметрыОткрытия.Вставить("ПодборДебиторскойЗадолженности",        ПодборДебиторскойЗадолженности);
	ПараметрыОткрытия.Вставить("ПодборТолькоБезусловнойЗадолженности",  ПодборТолькоБезусловнойЗадолженности);
	ПараметрыОткрытия.Вставить("ДополнительныеОтборы",                  ДополнительныеОтборы);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", Форма);
	ДополнительныеПараметры.Вставить("СтруктураПараметров", СтруктураПараметров);
	ДополнительныеПараметры.Вставить("ОповещениеПослеЗавершения", Оповещение);
	ДополнительныеПараметры.Вставить("ПараметрыМеханизма", ПараметрыМеханизма);
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПодборВРасшифровкуПлатежаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	#Удаление
	ОткрытьФорму(
		"Справочник.ОбъектыРасчетов.Форма.ПодборОбъектовРасчетов",
		ПараметрыОткрытия, 
		Форма,,,,
		ОповещениеОЗакрытии,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	#КонецУдаления
	#Вставка
	ОткрытьФорму(
	"Справочник.ОбъектыРасчетов.Форма.РС_ПодборОбъектовРасчетов",
	ПараметрыОткрытия, 
	Форма,,,,
	ОповещениеОЗакрытии,
	РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
	#КонецВставки
	
КонецПроцедуры

&ИзменениеИКонтроль("НадписьЭтапыОплатыНажатие")
Процедура РСК_НадписьЭтапыОплатыНажатие(Форма, Элемент, СтандартнаяОбработка, Оповещение)

	Попытка
		Форма.ЗаблокироватьДанныеФормыДляРедактирования();
	Исключение
		ПоказатьПредупреждение(Неопределено, КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат;
	КонецПопытки;

	ПараметрыМеханизма = ОбщегоНазначенияУТКлиентСервер.ПолучитьДанныеМеханизмаИзКэшаФормы(Форма, "Взаиморасчеты");
	СистемныеНастройки = ПараметрыМеханизма.СистемныеНастройки;
	СтандартнаяОбработка = Ложь;
	СтруктураПараметров = ВзаиморасчетыКлиентСервер.СтруктураПараметровПоИмениЭлемента(ПараметрыМеханизма.МассивПараметров, Элемент.Имя);

	Если НЕ ЗначениеЗаполнено(СтруктураПараметров.ПутьКДаннымТЧЭтапыОплаты) Тогда
		ВзаиморасчетыКлиентСервер.ПроверитьОбязательныеПараметры(СтруктураПараметров, "ДатаПлатежа");
	КонецЕсли;

	ПорядокРасчетов = ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.ПорядокРасчетов);
	ЭтоЗаказ        = СтруктураПараметров.ЭтоЗаказ;

	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("ТолькоПросмотр",                          Форма.ТолькоПросмотр ИЛИ СтруктураПараметров.ЭтапыОплатыТолькоПросмотр);

	Если ЗначениеЗаполнено(СтруктураПараметров.СуммаЗалогаЗаТаруФорма) Тогда
		СуммаЗалоговойТары = ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.СуммаЗалогаЗаТаруФорма);
	Иначе
		СуммаЗалоговойТары = 0;
	КонецЕсли;

	ПараметрыОткрытия.Вставить("СуммаЗалогаПоДокументу",                  СуммаЗалоговойТары);
	СуммаВсего = ВзаиморасчетыКлиентСервер.СуммаКОплате(Форма, СтруктураПараметров);
	ПараметрыОткрытия.Вставить("СуммаОплатыПоДокументу",                  СуммаВсего - СуммаЗалоговойТары);

	Если (ПорядокРасчетов = ПредопределенноеЗначение("Перечисление.ПорядокРасчетов.ПоДоговорамНакладным")
		ИЛИ ПорядокРасчетов = ПредопределенноеЗначение("Перечисление.ПорядокРасчетов.ПоЗаказамНакладным"))
		И ЗначениеЗаполнено(СтруктураПараметров.ПутьКДаннымТЧРасшифровкаПлатежа) Тогда
		ПараметрыОткрытия.Вставить("СуммаОбязательнойПредоплаты", СтруктураПараметров.СуммаРасшифровкиПлатежа);
	Иначе
		ПараметрыОткрытия.Вставить("СуммаОбязательнойПредоплаты", 0);
	КонецЕсли;

	ПараметрыОткрытия.Вставить("ТребуетсяЗалогЗаТару",                    СуммаЗалоговойТары <> 0);

	ЭтапыОплаты = ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.ПутьКДаннымТЧЭтапыОплаты);
	ЕстьСуммаОтклоненияМерныхТоваров = СистемныеНастройки.ИспользоватьДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров
	И ЭтапыОплаты <> Неопределено
	И ЭтапыОплаты.Количество() > 0
	И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ЭтапыОплаты[0],"СуммаОтклоненияМерныхТоваров");
	Если ЕстьСуммаОтклоненияМерныхТоваров Тогда
		СуммаОтклоненияМерныхТоваров = ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.ПутьКДаннымТЧЭтапыОплаты).Итог("СуммаОтклоненияМерныхТоваров");
	Иначе
		СуммаОтклоненияМерныхТоваров = 0;
	КонецЕсли;
	ПараметрыОткрытия.Вставить("СуммаОтклоненияПоДокументу",                 СуммаОтклоненияМерныхТоваров);

	//реквизиты формы
	ПараметрыОткрытия.Вставить("УникальныйИдентификатор",                 Форма.УникальныйИдентификатор);
	ПараметрыОткрытия.Вставить("Ключ",                                    Форма.Объект.Ссылка);
	ПараметрыОткрытия.Вставить("ПараметрыВыбораРеквизитов",               СтруктураПараметров.ПараметрыВыбораРеквизитов);

	//реквизиты объекта
	ПараметрыОткрытия.Вставить("Партнер",                                 ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.Партнер));
	ПараметрыОткрытия.Вставить("Соглашение",                              ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.Соглашение));
	ПараметрыОткрытия.Вставить("Договор",                                 ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.Договор));
	ПараметрыОткрытия.Вставить("Дата",                                    ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.Дата));
	ПараметрыОткрытия.Вставить("Валюта",                                  ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.ВалютаДокумента));
	ПараметрыОткрытия.Вставить("ГрафикОплаты",                            ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.ГрафикОплаты));
	ПараметрыОткрытия.Вставить("ФормаОплаты",                             ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.ФормаОплаты));
	ПараметрыОткрытия.Вставить("Касса",                                   ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.Касса));
	ПараметрыОткрытия.Вставить("БанковскийСчет",                          ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.БанковскийСчетОрганизации));
	ПараметрыОткрытия.Вставить("Организация",                             ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.Организация));
	ПараметрыОткрытия.Вставить("ИдентификаторПлатежа",                    ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.ИдентификаторПлатежа));

	ПараметрыОткрытия.Вставить("ПорядокРасчетов",                         ПорядокРасчетов);
	ПараметрыОткрытия.Вставить("НаправлениеДеятельности",                 ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.НаправлениеДеятельности));
	ПараметрыОткрытия.Вставить("ОплатаВВалюте",                           ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.ОплатаВВалюте));
	ПараметрыОткрытия.Вставить("ДатаПлатежа",                             ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.ДатаПлатежа));

	ПутьКДаннымВалютаВзаиморасчетов = ?(СтруктураПараметров.ВалютаВзаиморасчетов = "", СтруктураПараметров.ВалютаДокумента, СтруктураПараметров.ВалютаВзаиморасчетов);
	ПараметрыОткрытия.Вставить("ВалютаВзаиморасчетов",                    ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, ПутьКДаннымВалютаВзаиморасчетов));

	//настройки
	НакладнаяПоЗаказам = ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.НакладнаяПоЗаказам,, Ложь);
	ПараметрыОткрытия.Вставить("НакладнаяПоЗаказам",                      НакладнаяПоЗаказам);

	ПараметрыОткрытия.Вставить("ЭтоЗаказ",                                ЭтоЗаказ);
	ПараметрыОткрытия.Вставить("ИмяПоляЗаказ",                            СтруктураПараметров.ИмяРеквизитаТЧЗаказ);
	ПараметрыОткрытия.Вставить("ЗаказКакСчет",                            СтруктураПараметров.ЗаказКакСчет);

	Если ЭтоЗаказ Тогда
		ПараметрыОткрытия.Вставить("ДатаСогласования",                    ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.ДатаСогласования));
		ПараметрыОткрытия.Вставить("ДатаЗаказа",                          ПараметрыОткрытия.Дата);
	КонецЕсли;

	Если СтруктураПараметров.ДокументРасчетовСКлиентами
		И СтруктураПараметров.ЭтоПродажаЗакупка Тогда
		ПараметрыОткрытия.Вставить("ДатаОтгрузки",                        ПараметрыОткрытия.Дата);
		ПараметрыОткрытия.Вставить("НесколькоДатОтгрузки",                Ложь);
	ИначеЕсли СтрЧислоВхождений(СтруктураПараметров.ДатаОтгрузки, ".") > 1 Тогда
		ПараметрыОткрытия.Вставить("ДатаОтгрузки",                        Дата(1,1,1));
		ПараметрыОткрытия.Вставить("НесколькоДатОтгрузки",                Истина);
	Иначе
		ПараметрыОткрытия.Вставить("ДатаОтгрузки",                        ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.ДатаОтгрузки));
		ПараметрыОткрытия.Вставить("НесколькоДатОтгрузки",                Ложь);
	КонецЕсли;

	Если СтруктураПараметров.ДокументРасчетовСПоставщиками Тогда
		ПараметрыОткрытия.Вставить(
		"ОтключитьЗаполнениеПоПредыдущимЗаказам",
		//++ НЕ УТ
		ТипЗнч(Форма.Объект.Ссылка) <> Тип("ДокументСсылка.ЗаказПереработчику2_5") И
		//-- НЕ УТ
		ТипЗнч(Форма.Объект.Ссылка) <> Тип("ДокументСсылка.ЗаказПоставщику"));
	КонецЕсли;

	ПараметрыОткрытия.Вставить("ДатаПереходаПраваСобственности",          ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.ДатаПереходаПраваСобственности));
	ПараметрыОткрытия.Вставить("РежимСамообслуживания",                   ОбщегоНазначенияУТКлиентСервер.АвторизованВнешнийПользователь());
	ПараметрыОткрытия.Вставить("АдресВоВременномХранилище",               СтруктураПараметров.АдресЭтапыОплаты);
	ПараметрыОткрытия.Вставить("АдресСуммПоЗаказам",                      СтруктураПараметров.АдресСуммПоЗаказам);
	ПараметрыОткрытия.Вставить("ЗаданГрафикИсполнения",                   СтруктураПараметров.ЗаданГрафикИсполнения);
	ПараметрыОткрытия.Вставить("ГрафикИсполненияДоговора",                СтруктураПараметров.ГрафикИсполненияДоговора);
	ПараметрыОткрытия.Вставить("СпециальныеЗаголовкиЭтаповДляВозврата", ТипЗнч(Форма.Объект.Ссылка) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента"));
	ПараметрыОткрытия.Вставить("НетКонтроляПредоплаты",                   СтруктураПараметров.НетКонтроляПредоплаты);
	ПараметрыОткрытия.Вставить("ЕстьДатаПереходаПраваСобственности",      СтруктураПараметров.ЕстьДатаПереходаПраваСобственности);

	Если  ТипЗнч(Форма.Объект.Ссылка) = Тип("ДокументСсылка.КорректировкаРеализации")
		ИЛИ ТипЗнч(Форма.Объект.Ссылка) = Тип("ДокументСсылка.КорректировкаПриобретения") Тогда
		ПараметрыОткрытия.Вставить("ДоступныеПорядкиРасчетов", ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПараметрыОткрытия.ПорядокРасчетов));
	ИначеЕсли ТипЗнч(Форма.Объект.Ссылка) = Тип("ДокументСсылка.ОтчетКомиссионера")
		И ЗначениеЗаполнено(ОбщегоНазначенияУТКлиентСервер.ДанныеПоПути(Форма, СтруктураПараметров.ДоговорКомиссионера)) Тогда
		СписокПорядков = Новый СписокЗначений;
		СписокПорядков.Добавить(ПредопределенноеЗначение("Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов"));
		СписокПорядков.Добавить(ПредопределенноеЗначение("Перечисление.ПорядокРасчетов.ПоЗаказам"));
		ПараметрыОткрытия.Вставить("ДоступныеПорядкиРасчетов", СписокПорядков);
	#Вставка
	//++ РС Консалт: Трофимов Евгений 02.03.2023 Задача 23985
	//e1cib/data/Документ.Задание?ref=b37a5a78714d889647e1e0192b7e7134
	ИначеЕсли ТипЗнч(Форма.Объект.Ссылка) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		ПараметрыОткрытия.Вставить("ДатаРазмещения", Форма.Объект.ДатаПоДаннымПоставщика); 
	//-- КонецЗадачи 23985	
	#КонецВставки
	КонецЕсли;

	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", Форма);
	ДополнительныеПараметры.Вставить("Элемент", Элемент);
	ДополнительныеПараметры.Вставить("СтруктураПараметров", СтруктураПараметров);
	ДополнительныеПараметры.Вставить("ОповещениеПослеЗавершения", Оповещение);
	ДополнительныеПараметры.Вставить("ПараметрыМеханизма", ПараметрыМеханизма);

	ОповещениеОЗакрытии = Новый ОписаниеОповещения("НадписьЭтапыОплатыНажатиеЗавершение", ЭтотОбъект, ДополнительныеПараметры);

	Если СтруктураПараметров.ДокументРасчетовСКлиентами Тогда
		ОткрытьФорму("ОбщаяФорма.ЭтапыОплатыКлиентом", 
		ПараметрыОткрытия,
		Форма,,,,
		ОповещениеОЗакрытии,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Иначе
		ОткрытьФорму("ОбщаяФорма.ЭтапыОплатыПоставщику", 
		ПараметрыОткрытия,
		Форма,,,,
		ОповещениеОЗакрытии,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры
