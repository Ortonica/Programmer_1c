
&ИзменениеИКонтроль("ОбновитьСписокРаспоряженийНаДоставку")
Процедура РСК_ОбновитьСписокРаспоряженийНаДоставку(Форма, ОбновляемыеРаспоряжения)

	ДопустимоеОтклонениеПроцент = Константы.ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров.Получить();

	РаспоряженияНаДоставку 		= Форма.РаспоряженияНаДоставку;
	ТоварыРаспоряженийКДоставке = Форма.ТоварыРаспоряженийКДоставке;
	ОтборПоТипуИсполнителей 	= Форма.ОтборПоТипуИсполнителей;
	Зона 						= Форма.Зона;
	Склад 						= Форма.Склад;
	ДатаРаспоряжений 			= Форма.ДатаРаспоряжений;
	ЗонаГруппаИлиПустая 		= НЕ ЗначениеЗаполнено(Зона) ИЛИ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Зона,"ЭтоГруппа");

	ВыборочноеОбновление = (ОбновляемыеРаспоряжения <> Неопределено);

	ВесОбъемРаспоряженийПоДатам = Новый ТаблицаЗначений;
	ВесОбъемРаспоряженийПоДатам.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
	ВесОбъемРаспоряженийПоДатам.Колонки.Добавить("Вес", ОбщегоНазначения.ОписаниеТипаЧисло(15,3));
	ВесОбъемРаспоряженийПоДатам.Колонки.Добавить("Количество", ОбщегоНазначения.ОписаниеТипаЧисло(15,3));
	ВесОбъемРаспоряженийПоДатам.Колонки.Добавить("Объем", ОбщегоНазначения.ОписаниеТипаЧисло(18,6));
	ВесОбъемРаспоряженийПоДатам.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ВесОбъемРаспоряженийПоДатам.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ВесОбъемРаспоряженийПоДатам.Колонки.Добавить("Назначение", Новый ОписаниеТипов("СправочникСсылка.Назначения"));
	ВесОбъемРаспоряженийПоДатам.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));

	КешДобавляемыхСтрок = Новый Массив;

	КоллекцияРаспоряжений = РаспоряженияНаДоставку.ПолучитьЭлементы();
	ВесОбъем = Новый Структура;

	Если Не ВыборочноеОбновление Тогда
		ВесОбъем.Вставить("ИтогоВес", 0);
		ВесОбъем.Вставить("ИтогоОбъем",0);
		КоллекцияРаспоряжений.Очистить();
		ТоварыРаспоряженийКДоставке.Очистить();
	Иначе
		СтруктураПоиска = Новый Структура("Склад, Распоряжение");

		Для Каждого Стр Из ОбновляемыеРаспоряжения Цикл

			// При выборочном обновлении сначала нужно удалить строки обновляемых распоряжений,
			// для этого воспользуемся списком товаров по распоряжениям.
			ПредыдущийИдентификатор = Неопределено;

			ЗаполнитьЗначенияСвойств(СтруктураПоиска, Стр);

			НайденныеСтроки = ТоварыРаспоряженийКДоставке.НайтиСтроки(СтруктураПоиска);
			Для Каждого СтрокаТовары Из НайденныеСтроки Цикл
				Идентификатор = СтрокаТовары.ИдентификаторВДеревеРаспоряжений;
				Если ПредыдущийИдентификатор = Идентификатор
					Или Не ЗначениеЗаполнено(Идентификатор) Тогда
					Продолжить;
				КонецЕсли;
				СтрокаРаспоряжение = РаспоряженияНаДоставку.НайтиПоИдентификатору(Идентификатор);
				Если СтрокаРаспоряжение <> Неопределено Тогда
					Если ЗонаГруппаИлиПустая Тогда
						ТекущаяВетка = СтрокаРаспоряжение.ПолучитьРодителя();
						КоллекцияТекущаяВетка = ТекущаяВетка.ПолучитьЭлементы();
						// Если удаляем последний элемент в ветке, удалим родителя.
						Если КоллекцияТекущаяВетка.Количество() = 1 Тогда
							КоллекцияРаспоряжений.Удалить(ТекущаяВетка);
						Иначе
							ТекущаяВетка.Вес = ТекущаяВетка.Вес - СтрокаРаспоряжение.Вес;
							ТекущаяВетка.Объем = ТекущаяВетка.Объем - СтрокаРаспоряжение.Объем;
							КоллекцияТекущаяВетка.Удалить(СтрокаРаспоряжение);
						КонецЕсли;
					Иначе
						КоллекцияРаспоряжений.Удалить(СтрокаРаспоряжение);
					КонецЕсли;
				КонецЕсли;
				ТоварыРаспоряженийКДоставке.Удалить(СтрокаТовары);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;

	СтруктураЗадание = Новый Структура("ЗаданиеНаПеревозку", Неопределено);
	ЗаполнитьЗначенияСвойств(СтруктураЗадание, Форма);

	Запрос = Новый Запрос;
	ИсходящаяДоставка = Форма.ВидДоставки = Перечисления.ВидыДоставки.СоСклада;

	ЕстьОрдерныйНаОтгрузкуСклад      = Ложь;
	ЕстьНеОрдерныйНаОтгрузкуСклад    = Ложь;
	ЕстьОрдерныйНаПоступлениеСклад   = Ложь;
	ЕстьНеОрдерныйНаПоступлениеСклад = Ложь;

	Если ИсходящаяДоставка Тогда
		ЕстьОрдерныйНаОтгрузкуСклад = СкладыСервер.ЕстьОрдерныйНаОтгрузкуСклад(Склад);
		ЕстьНеОрдерныйНаОтгрузкуСклад = СкладыСервер.ЕстьНеОрдерныйНаОтгрузкуСклад(Склад);
	Иначе
		ЕстьОрдерныйНаПоступлениеСклад = СкладыСервер.ЕстьОрдерныйНаПоступлениеСклад(Склад);
		ЕстьНеОрдерныйНаПоступлениеСклад = СкладыСервер.ЕстьНеОрдерныйНаПоступлениеСклад(Склад);
	КонецЕсли;

	ТекстЗапроса = "";
	Если ИсходящаяДоставка Тогда

		ТекстЗапроса = ТекстЗапросаРаспоряженияНаДоставку(ВыборочноеОбновление,
		ЕстьОрдерныйНаОтгрузкуСклад,
		ЕстьНеОрдерныйНаОтгрузкуСклад,
		Истина);

		Запрос.УстановитьПараметр("СпособыДоставкиНашимиСиламиКПолучателю", СпособыДоставкиНашимиСиламиКПолучателю());
		Запрос.УстановитьПараметр("СпособыДоставкиПеревозчикомКПолучателю", СпособыДоставкиПеревозчикомКПолучателю());

	Иначе

		ТекстЗапроса = ТекстЗапросаРаспоряженияНаДоставку(ВыборочноеОбновление,
		ЕстьОрдерныйНаПоступлениеСклад,
		ЕстьНеОрдерныйНаПоступлениеСклад,
		Ложь);

		Запрос.УстановитьПараметр("ДатаОтбора", НачалоДня(ТекущаяДатаСеанса()));
		Запрос.УстановитьПараметр("СпособыДоставкиНашимиСиламиОтОтправителя", СпособыДоставкиНашимиСиламиОтОтправителя());
		Запрос.УстановитьПараметр("СпособыДоставкиПеревозчикомОтОтправителя", СпособыДоставкиПеревозчикомОтОтправителя());

	КонецЕсли;

	Запрос.Текст = ТекстЗапроса;
	#Вставка
	//++ РС Консалт: Трофимов Евгений 13.10.2022 Тикет 20965
	//e1cib/data/Документ.Задание?ref=bdc83380f664d5bb4898b38b648fea97
	ВСписокРаспоряженийДобавитьОтборПоАктамВыдачиТСР(Запрос, Форма);
	//-- КонецТикета 20965	
	#КонецВставки

	БезОтбораПоЗоне = Зона = Справочники.ЗоныДоставки.ПустаяСсылка();

	Запрос.УстановитьПараметр("Зона",                              Зона);
	Запрос.УстановитьПараметр("Склад",                             Склад);
	Запрос.УстановитьПараметр("БезОтбораПоЗоне",                   БезОтбораПоЗоне);
	Запрос.УстановитьПараметр("ОбновляемыеРаспоряжения",           ОбновляемыеРаспоряжения);
	Запрос.УстановитьПараметр("ЗаданиеНаПеревозкуПодбор",          СтруктураЗадание.ЗаданиеНаПеревозку);
	Запрос.УстановитьПараметр("ЗаданиеНаПеревозкуПустаяСсылка",    Документы.ЗаданиеНаПеревозку.ПустаяСсылка());
	Запрос.УстановитьПараметр("СтатусЗаданияЗакрыто",              Перечисления.СтатусыЗаданийНаПеревозку.Закрыто);
	Запрос.УстановитьПараметр("ОтборПоТипуИсполнителей",           ОтборПоТипуИсполнителей);
	Запрос.УстановитьПараметр("ТекущаяДатаСеанса",                 ТекущаяДатаСеанса());

	Пакет = Запрос.ВыполнитьПакет();
	РезультатЗапроса = Пакет[Пакет.ВГраница()-1]; // РезультатЗапроса
	ДвиженияКРаспределению = РезультатЗапроса.Выгрузить();
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	//++ РС Консалт: Трофимов Евгений 13.10.2022 Тикет 20965
	//e1cib/data/Документ.Задание?ref=bdc83380f664d5bb4898b38b648fea97
	//Пересчёт веса брутто и объёма по данным упаковок (как было в УТ)
	//Распоряжения = ОбщегоНазначения.ВыгрузитьКолонку(ДвиженияКРаспределению, "Распоряжение", Истина);
	//тзВГХ = РСК_ВызовСервера.ПолучитьВГХпоДаннымУпаковки(Распоряжения);
	//Для Каждого Стр Из ДвиженияКРаспределению Цикл
	//	СтрокаВГХ = тзВГХ.Найти(Стр.Распоряжение, "Распоряжение");
	//	Если СтрокаВГХ <> Неопределено Тогда
	//		ЗаполнитьЗначенияСвойств(Стр, СтрокаВГХ);
	//	КонецЕсли;
	//КонецЦикла;
	//-- КонецТикета 20965
	//++ РС Консалт: Минаков А.С. Задача 20226   
	#КонецВставки

	ПоляОтбораДвижений = Новый Массив();
	ПоляОтбораДвижений.Добавить("Распоряжение");
	ПоляОтбораДвижений.Добавить("Склад");
	ПоляОтбораДвижений.Добавить("Номенклатура");
	ПоляОтбораДвижений.Добавить("Характеристика");
	ПоляОтбораДвижений.Добавить("Назначение");
	Если ДвиженияКРаспределению.Колонки.Найти("Серия") <> Неопределено Тогда
		ПоляОтбораДвижений.Добавить("Серия");
	КонецЕсли;
	ПоляОтбораДвиженийКРаспределению = СтрСоединить(ПоляОтбораДвижений, ",");

	Если ИсходящаяДоставка
		Или ЕстьОрдерныйНаПоступлениеСклад Тогда
		ДвиженияКРаспределению.Индексы.Добавить(ПоляОтбораДвиженийКРаспределению);
	КонецЕсли;

	РезультатЗапроса = Пакет[Пакет.ВГраница()]; // РезультатЗапроса
	Выборка = РезультатЗапроса.Выбрать();
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	//++ РС Консалт: Трофимов Евгений 13.10.2022 Тикет 20965
	//e1cib/data/Документ.Задание?ref=bdc83380f664d5bb4898b38b648fea97
	//Пересчёт веса брутто и объёма по данным упаковок (как было в УТ)
	//Распоряжения = ОбщегоНазначения.ВыгрузитьКолонку(РезультатЗапроса.Выгрузить(), "Распоряжение", Истина);
	//тзВГХ = РСК_ВызовСервера.ПолучитьВГХпоДаннымУпаковки(Распоряжения);
	//-- КонецТикета 20965
	//++ РС Консалт: Минаков А.С. Задача 20226
	//++ Конарев И.И. Пересчет ВГХ по характеристикам
	тзВГХ = РСК_ВызовСервера.ПересчитатьВГХПоХарактеристикамТовара(РезультатЗапроса.Выгрузить()); 
	//--
	#КонецВставки

	Пока Выборка.СледующийПоЗначениюПоля("Зона") Цикл

		Если ВыборочноеОбновление Тогда

		ИначеЕсли ЗонаГруппаИлиПустая Тогда
			ТекущаяВетка = КоллекцияРаспоряжений.Добавить();
			ТекущаяВетка.Адрес = Строка(Выборка.Зона);
			ТекущаяВетка.Зона = Выборка.Зона;
			КоллекцияТекущаяВетка = ТекущаяВетка.ПолучитьЭлементы();
		Иначе
			КоллекцияТекущаяВетка = КоллекцияРаспоряжений;
		КонецЕсли;

		ВесПоЗоне = 0;
		ОбъемПоЗоне = 0;

		Пока Выборка.СледующийПоЗначениюПоля("Распоряжение") Цикл

			Если ВыборочноеОбновление Тогда
				СтруктураЗонаАдрес = Новый Структура("Зона, Адрес");
				ЗаполнитьЗначенияСвойств(СтруктураЗонаАдрес, Выборка);
				ПозицияДляВставки = ПолучитьПозициюДляВставки(РаспоряженияНаДоставку, ЗонаГруппаИлиПустая, СтруктураЗонаАдрес);
				Если ЗонаГруппаИлиПустая Тогда
					ТекущаяВетка = КоллекцияРаспоряжений[ПозицияДляВставки.Зона];
					КоллекцияТекущаяВетка = ТекущаяВетка.ПолучитьЭлементы();
				Иначе
					КоллекцияТекущаяВетка = КоллекцияРаспоряжений;
				КонецЕсли;
				ПозицияДляВставки = ПозицияДляВставки.Распоряжение;
			КонецЕсли;

			Если Выборка.ВидРаспоряжения = Тип("ДокументСсылка.ПоручениеЭкспедитору") Тогда

				Если ЗначениеЗаполнено(ДатаРаспоряжений)
					И ЗначениеЗаполнено(Выборка.Дата)
					И НачалоДня(Выборка.Дата) > ДатаРаспоряжений Тогда
					Продолжить;
				КонецЕсли;

				Если ВыборочноеОбновление Тогда
					СтрокаРаспоряжение = КоллекцияТекущаяВетка.Вставить(ПозицияДляВставки);
					ПозицияДляВставки = ПозицияДляВставки + 1;
				Иначе
					СтрокаРаспоряжение = КоллекцияТекущаяВетка.Добавить();
				КонецЕсли;
				ЗаполнитьЗначенияСвойств(СтрокаРаспоряжение, Выборка);
				СтрокаРаспоряжение.ПолучательОтправительПредставление = Выборка.ПолучательОтправитель;
				СтрокаРаспоряжение.Время = ДоставкаТоваровКлиентСервер.ПредставлениеВремениДоставки(Выборка.ВремяС, Выборка.ВремяПо);

				СтрокаДляХраненияИдентификатора = ТоварыРаспоряженийКДоставке.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаДляХраненияИдентификатора, Выборка);
				СтрокаДляХраненияИдентификатора.ИдентификаторВДеревеРаспоряжений = СтрокаРаспоряжение.ПолучитьИдентификатор();

				Продолжить;

			КонецЕсли;
			#Вставка
			//++ РС Консалт: Минаков А.С. Задача 20226
			//++ РС Консалт: Трофимов Евгений 13.10.2022 Тикет 20965
			//e1cib/data/Документ.Задание?ref=bdc83380f664d5bb4898b38b648fea97
			//Пересчёт веса брутто и объёма по данным упаковок (как было в УТ)
			//СтрокаВГХ = тзВГХ.Найти(Выборка.Распоряжение, "Распоряжение");
			//-- КонецТикета 20965
			//++ РС Консалт: Минаков А.С. Задача 20226
			#КонецВставки

			Пока Выборка.СледующийПоЗначениюПоля("Склад") Цикл

				Номенклатура   = Неопределено;
				Характеристика = Неопределено;
				Назначение     = Неопределено;
				Серия          = Неопределено;

				ВесОбъемРаспоряженийПоДатам.Очистить();
				КешДобавляемыхСтрок.Очистить();
				ПотребностьПоТовару = 0;
				ПроверитьОтклонение = Ложь;

				Пока Выборка.Следующий() Цикл 
					
                    #Вставка 
					//++ Конарев И.И. Пересчет ВГХ по характеристикам
					СтруктураПоиска = Новый Структура("Номенклатура,Характеристика,Серия,Количество,Распоряжение");
					ЗаполнитьЗначенияСвойств(СтруктураПоиска, Выборка);
					ОтобранныеСтроки = тзВгх.НайтиСтроки(СтруктураПоиска);
					Если ОтобранныеСтроки.Количество() Тогда
						СтрокаВГХ = ОтобранныеСтроки[0];		
					КонецЕсли;  
					//--
					#КонецВставки
					Если Номенклатура      <> Выборка.Номенклатура
						Или Характеристика <> Выборка.Характеристика
						Или Назначение     <> Выборка.Назначение
						Или Серия          <> Выборка.Серия Тогда
						// перешли к другому товару

						Номенклатура   = Выборка.Номенклатура;
						Характеристика = Выборка.Характеристика;
						Назначение     = Выборка.Назначение;
						Серия          = Выборка.Серия;

						Если ПроверитьОтклонение Тогда
							ДопустимоеОтклонение = ДопустимоеОтклонениеПроцент/100 * ПотребностьПоТовару;
							// Не нужно выводить строки с мерным товаром, если остаток к доставке не превысил допустимое отклонение;
							Для Каждого Стр Из КешДобавляемыхСтрок Цикл
								Если Стр.Количество <= ДопустимоеОтклонение Тогда
									ВесОбъемРаспоряженийПоДатам.Удалить(Стр);
								КонецЕсли;
							КонецЦикла;
						КонецЕсли;
						КешДобавляемыхСтрок.Очистить();
						ПотребностьПоТовару = 0;

						ПроверитьОтклонение = Выборка.МернаяЕдиницаИзмерения И ДопустимоеОтклонениеПроцент > 0;

					КонецЕсли;

					Если ИсходящаяДоставка Тогда

						ОсталосьРаспределить = Выборка.Количество;

						ПараметрыОтбора = Новый Структура(ПоляОтбораДвиженийКРаспределению);
						ЗаполнитьЗначенияСвойств(ПараметрыОтбора, Выборка);
						ДетальныеДанные = ДвиженияКРаспределению.НайтиСтроки(ПараметрыОтбора);
						Для Каждого СтрокаДетальныхДанных Из ДетальныеДанные Цикл
							Списываем = Мин(ОсталосьРаспределить, СтрокаДетальныхДанных.Количество);
							ОсталосьРаспределить = ОсталосьРаспределить - Списываем;
							СтрокаДетальныхДанных.Количество = СтрокаДетальныхДанных.Количество - Списываем;

							Если ОсталосьРаспределить = 0 Тогда
								Прервать;
							КонецЕсли;
						КонецЦикла;

						Если ОсталосьРаспределить > 0 Тогда
							ТекущаяСтрокаВесОбъем = ВесОбъемРаспоряженийПоДатам.Добавить();
							ЗаполнитьЗначенияСвойств(ТекущаяСтрокаВесОбъем, Выборка);
							ТекущаяСтрокаВесОбъем.Количество = ОсталосьРаспределить;
							ТекущаяСтрокаВесОбъем.Вес = ОсталосьРаспределить * (Выборка.Вес / Выборка.Количество);
							ТекущаяСтрокаВесОбъем.Объем = ОсталосьРаспределить * (Выборка.Объем / Выборка.Количество);
							#Вставка
							//++ РС Консалт: Минаков А.С. Задача 20226
							//++ РС Консалт: Трофимов Евгений 13.10.2022 Тикет 20965
							//e1cib/data/Документ.Задание?ref=bdc83380f664d5bb4898b38b648fea97
							//Пересчёт веса брутто и объёма по данным упаковок (как было в УТ)
							//Если СтрокаВГХ <> Неопределено Тогда
							//	ТекущаяСтрокаВесОбъем.Вес = ОсталосьРаспределить * (СтрокаВГХ.Вес / Выборка.Количество);
							//	ТекущаяСтрокаВесОбъем.Объем = ОсталосьРаспределить * (СтрокаВГХ.Объем / Выборка.Количество);
							//КонецЕсли;
							//-- КонецТикета 20965
							//++ РС Консалт: Минаков А.С. Задача 20226 
							//++ Конарев И.И. Пересчет ВГХ по характеристикам
							Если СтрокаВГХ <> Неопределено Тогда
								ТекущаяСтрокаВесОбъем.Вес = ОсталосьРаспределить * (СтрокаВГХ.Вес / Выборка.Количество);
								ТекущаяСтрокаВесОбъем.Объем = ОсталосьРаспределить * (СтрокаВГХ.Объем / Выборка.Количество);
							КонецЕсли; 
							//--
							#КонецВставки

							КешДобавляемыхСтрок.Добавить(ТекущаяСтрокаВесОбъем);
							ПотребностьПоТовару = ПотребностьПоТовару + ОсталосьРаспределить;
						КонецЕсли;

					ИначеЕсли Не ЕстьОрдерныйНаПоступлениеСклад Тогда

						ТекущаяСтрокаВесОбъем = ВесОбъемРаспоряженийПоДатам.Добавить();
						ЗаполнитьЗначенияСвойств(ТекущаяСтрокаВесОбъем, Выборка);
						КешДобавляемыхСтрок.Добавить(ТекущаяСтрокаВесОбъем);
						ПотребностьПоТовару = ПотребностьПоТовару + Выборка.Количество;
						#Вставка
						//++ РС Консалт: Минаков А.С. Задача 20226
						//++ РС Консалт: Трофимов Евгений 13.10.2022 Тикет 20965
						//e1cib/data/Документ.Задание?ref=bdc83380f664d5bb4898b38b648fea97
						//Пересчёт веса брутто и объёма по данным упаковок (как было в УТ)
						//Если СтрокаВГХ <> Неопределено Тогда
						//	ТекущаяСтрокаВесОбъем.Вес = СтрокаВГХ.Вес;
						//	ТекущаяСтрокаВесОбъем.Объем = СтрокаВГХ.Объем;
						//КонецЕсли;
						//-- КонецТикета 20965
						//++ РС Консалт: Минаков А.С. Задача 20226  
						//++ Конарев И.И. Пересчет ВГХ по характеристикам
						Если СтрокаВГХ <> Неопределено Тогда
							ТекущаяСтрокаВесОбъем.Вес = СтрокаВГХ.Вес;
							ТекущаяСтрокаВесОбъем.Объем = СтрокаВГХ.Объем;
						КонецЕсли;
                        //--
						#КонецВставки

					Иначе

						ПараметрыОтбора = Новый Структура(ПоляОтбораДвиженийКРаспределению);
						ЗаполнитьЗначенияСвойств(ПараметрыОтбора, Выборка);
						ДетальныеДанные = ДвиженияКРаспределению.НайтиСтроки(ПараметрыОтбора);

						ОсталосьРаспределить = Выборка.Количество;
						// Распределение товаров по датам поступления;
						Для Каждого СтрокаДетальныхДанных Из ДетальныеДанные Цикл

							Списываем = Мин(ОсталосьРаспределить, СтрокаДетальныхДанных.Количество);
							ОсталосьРаспределить = ОсталосьРаспределить - Списываем;

							ТекущаяСтрокаВесОбъем = ВесОбъемРаспоряженийПоДатам.Добавить();
							ЗаполнитьЗначенияСвойств(ТекущаяСтрокаВесОбъем, Выборка,,"Количество,Вес,Объем");
							ТекущаяСтрокаВесОбъем.Дата = СтрокаДетальныхДанных.Период;
							ТекущаяСтрокаВесОбъем.Количество = Списываем;
							ТекущаяСтрокаВесОбъем.Вес = Списываем * СтрокаДетальныхДанных.Вес / СтрокаДетальныхДанных.Количество;
							ТекущаяСтрокаВесОбъем.Объем = Списываем * СтрокаДетальныхДанных.Объем / СтрокаДетальныхДанных.Количество;
							КешДобавляемыхСтрок.Добавить(ТекущаяСтрокаВесОбъем);

							Если ОсталосьРаспределить <= 0 Тогда
								Прервать;
							КонецЕсли;

						КонецЦикла;

						Если ОсталосьРаспределить > 0 Тогда
							ТекущаяСтрокаВесОбъем = ВесОбъемРаспоряженийПоДатам.Добавить();
							ЗаполнитьЗначенияСвойств(ТекущаяСтрокаВесОбъем, Выборка,,"Количество,Вес,Объем");
							ТекущаяСтрокаВесОбъем.Дата = НачалоДня(ТекущаяДатаСеанса());
							ТекущаяСтрокаВесОбъем.Количество = ОсталосьРаспределить;
							ТекущаяСтрокаВесОбъем.Вес = ОсталосьРаспределить 	* Выборка.Вес 	/ Выборка.Количество;
							ТекущаяСтрокаВесОбъем.Объем = ОсталосьРаспределить 	* Выборка.Объем / Выборка.Количество;
							КешДобавляемыхСтрок.Добавить(ТекущаяСтрокаВесОбъем);
							#Вставка
							//++ РС Консалт: Минаков А.С. Задача 20226
							//++ РС Консалт: Трофимов Евгений 13.10.2022 Тикет 20965
							//e1cib/data/Документ.Задание?ref=bdc83380f664d5bb4898b38b648fea97
							//Пересчёт веса брутто и объёма по данным упаковок (как было в УТ)
							//Если СтрокаВГХ <> Неопределено Тогда
							//	ТекущаяСтрокаВесОбъем.Вес = ОсталосьРаспределить 	* СтрокаВГХ.Вес / Выборка.Количество;
							//	ТекущаяСтрокаВесОбъем.Объем = ОсталосьРаспределить 	* СтрокаВГХ.Объем / Выборка.Количество;
							//КонецЕсли;
							//-- КонецТикета 20965
							//++ РС Консалт: Минаков А.С. Задача 20226 
							//++ Конарев И.И. Пересчет ВГХ по характеристикам
							Если СтрокаВГХ <> Неопределено Тогда
								ТекущаяСтрокаВесОбъем.Вес = ОсталосьРаспределить 	* СтрокаВГХ.Вес / Выборка.Количество;
								ТекущаяСтрокаВесОбъем.Объем = ОсталосьРаспределить 	* СтрокаВГХ.Объем / Выборка.Количество;
							КонецЕсли; 
							//--
							#КонецВставки
						КонецЕсли;
						ПотребностьПоТовару = ПотребностьПоТовару + Выборка.Количество;
					КонецЕсли;
				КонецЦикла;

				// Нужно проверить последний добавленный товар распоряжения;
				Если ПроверитьОтклонение Тогда
					ДопустимоеОтклонение = ДопустимоеОтклонениеПроцент/100 * ПотребностьПоТовару;
					// Не нужно выводить строки с мерным товаром, если остаток к доставке не превысил допустимое отклонение;
					Для Каждого Стр Из КешДобавляемыхСтрок Цикл
						Если Стр.Количество <= ДопустимоеОтклонение Тогда
							ВесОбъемРаспоряженийПоДатам.Удалить(Стр);
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;

				ВесОбъемРаспоряженийПоДатам.Сортировать("Дата");

				ТекущаяДата = Неопределено;

				Для Каждого СтрокаВесОбъемДата Из ВесОбъемРаспоряженийПоДатам Цикл

					Если ЗначениеЗаполнено(ДатаРаспоряжений)
						И СтрокаВесОбъемДата.Дата > ДатаРаспоряжений Тогда
						Прервать;
					КонецЕсли;

					СтрокаТовар = ТоварыРаспоряженийКДоставке.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТовар, Выборка);
					ЗаполнитьЗначенияСвойств(СтрокаТовар, СтрокаВесОбъемДата);

					Если ТекущаяДата <> СтрокаВесОбъемДата.Дата Тогда

						ТекущаяДата = СтрокаВесОбъемДата.Дата;

						Если ВыборочноеОбновление Тогда
							СтрокаРаспоряжение = КоллекцияТекущаяВетка.Вставить(ПозицияДляВставки);
							ПозицияДляВставки = ПозицияДляВставки + 1;
						Иначе
							СтрокаРаспоряжение = КоллекцияТекущаяВетка.Добавить();
						КонецЕсли;

						ЗаполнитьЗначенияСвойств(СтрокаРаспоряжение, Выборка);

						Если СтрокаРаспоряжение.Свойство("АдресДоставкиЗначенияПолей") Тогда
							СтрокаРаспоряжение.АдресДоставкиЗначенияПолей = Выборка.АдресЗначенияПолей;
						КонецЕсли;

						СтрокаРаспоряжение.Дата = ТекущаяДата;
						СтрокаРаспоряжение.Вес = 0;
						СтрокаРаспоряжение.Объем = 0;
						
						#Вставка
						//++ РС Консалт: Минаков А.С. Задача 20226
						Если Выборка.Распоряжение.Метаданные().Реквизиты.Найти("Контрагент") = Неопределено Тогда		
							//++ РС Консалт: Минаков А.С. Задача 20226
							#КонецВставки
							СтрокаРаспоряжение.ПолучательОтправительПредставление = ДоставкаТоваровКлиентСервер.ПредставлениеПолучателяОтправителя(Выборка.ПолучательОтправитель, Выборка.Перевозчик, Форма.ВидДоставки);
							#Вставка
							//++ РС Консалт: Минаков А.С. Задача 20226
						Иначе
							СтрокаРаспоряжение.ПолучательОтправительПредставление = ДоставкаТоваровКлиентСервер.ПредставлениеПолучателяОтправителя(
							ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.Распоряжение, "Контрагент"), Выборка.Перевозчик, Форма.ВидДоставки)		
						КонецЕсли;
						//++ РС Консалт: Минаков А.С. Задача 20226
						#КонецВставки
                        СтрокаРаспоряжение.Время = ДоставкаТоваровКлиентСервер.ПредставлениеВремениДоставки(Выборка.ВремяС, Выборка.ВремяПо);
							
						ИдентификаторВДеревеРаспоряжений = СтрокаРаспоряжение.ПолучитьИдентификатор();

					КонецЕсли;

					СтрокаТовар.ИдентификаторВДеревеРаспоряжений = ИдентификаторВДеревеРаспоряжений;

					СтрокаРаспоряжение.Вес = СтрокаРаспоряжение.Вес + СтрокаВесОбъемДата.Вес;
					СтрокаРаспоряжение.Объем = СтрокаРаспоряжение.Объем + СтрокаВесОбъемДата.Объем;

					ВесПоЗоне   = ВесПоЗоне   + СтрокаВесОбъемДата.Вес;
					ОбъемПоЗоне = ОбъемПоЗоне + СтрокаВесОбъемДата.Объем;

				КонецЦикла;

			КонецЦикла; // Склад
		КонецЦикла; // Распоряжение

		Если Не ВыборочноеОбновление Тогда
			ВесОбъем.ИтогоВес = ВесОбъем.ИтогоВес + ВесПоЗоне;
			ВесОбъем.ИтогоОбъем = ВесОбъем.ИтогоОбъем  + ОбъемПоЗоне;
		КонецЕсли;

		Если ЗонаГруппаИлиПустая Тогда

			Если КоллекцияТекущаяВетка.Количество() = 0 Тогда
				КоллекцияРаспоряжений.Удалить(ТекущаяВетка);
			Иначе
				Если ВыборочноеОбновление Тогда
					ТекущаяВетка.Вес   = ТекущаяВетка.Вес + ВесПоЗоне;
					ТекущаяВетка.Объем = ТекущаяВетка.Объем + ОбъемПоЗоне;
				Иначе
					ТекущаяВетка.Вес   = ВесПоЗоне;
					ТекущаяВетка.Объем = ОбъемПоЗоне;
				КонецЕсли;
				ТекущаяВетка.ОформлениеСтроки = 5;
				ТекущаяВетка.Зона = Выборка.Зона;
			КонецЕсли;
		Иначе
			Прервать;
		КонецЕсли;

	КонецЦикла; // Зона

	ЗаполнитьЗначенияСвойств(Форма, ВесОбъем);
	ЗаполнитьПризнакиОформленияРаспоряжений(РаспоряженияНаДоставку, ЗонаГруппаИлиПустая);

КонецПроцедуры

// В список распоряжений добавить отбор по актам выдачи ТСР
//++ РС Консалт: Трофимов Евгений 13.10.2022 Тикет 20965
//e1cib/data/Документ.Задание?ref=bdc83380f664d5bb4898b38b648fea97
//
// Параметры:
//  Запрос	 - Запрос - Запрос из процедуры ОбновитьСписокРаспоряженийНаДоставку() 
//
Процедура ВСписокРаспоряженийДобавитьОтборПоАктамВыдачиТСР(Запрос, Форма)
	
	Если РСК_ВызовСервера.ЕстьРоль("РСК_МенеджерПоВыдачеТСР") 
		ИЛИ Форма.ВидДоставки <> Перечисления.ВидыДоставки.СоСклада Тогда
		Возврат;
	КонецЕсли;

	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"УПОРЯДОЧИТЬ ПО",
		"ГДЕ
		|	ВЫБОР
		|			КОГДА ТаблицыИсточника.Распоряжение ССЫЛКА Документ.ПоручениеЭкспедитору
		|				ТОГДА НЕ ВЫРАЗИТЬ(ТаблицыИсточника.Распоряжение КАК Документ.ПоручениеЭкспедитору).РСК_АктВыдачиТСР
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
        |
		|УПОРЯДОЧИТЬ ПО"
	);
	
КонецПроцедуры

&ИзменениеИКонтроль("ТекстЗапросаЗаполненияЗаданияНаПеревозкуПоРасходнымОрдерам")
Функция РСК_ТекстЗапросаЗаполненияЗаданияНаПеревозкуПоРасходнымОрдерам()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗаданияНаПеревозкуРаспоряжения.Распоряжение КАК Распоряжение,
	|	ЗаданияНаПеревозкуРаспоряжения.Склад КАК Склад,
	|	ЗаданияНаПеревозкуРаспоряжения.НомерСтроки КАК НомерСтроки,
	|	ЗаданияНаПеревозкуРаспоряжения.Вес КАК Вес,
	|	ЗаданияНаПеревозкуРаспоряжения.Объем КАК Объем,
	|	ЗаданияНаПеревозкуРаспоряжения.ДоставляетсяПолностью КАК ДоставляетсяПолностью,
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	|	ЗаданияНаПеревозкуРаспоряжения.РСК_Транзитная КАК Транзитная,
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	|	ЗаданияНаПеревозкуРаспоряжения.КлючСвязи КАК КлючСвязи
	|ПОМЕСТИТЬ ЗаданияНаПеревозкуРаспоряжения
	|ИЗ
	|	&ЗаданиеНаПеревозкуРаспоряжения КАК ЗаданияНаПеревозкуРаспоряжения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Распоряжение,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаданияНаПеревозкуМаршрут.НомерСтроки КАК НомерСтроки,
	|	ЗаданияНаПеревозкуМаршрут.КлючСвязи КАК КлючСвязи
	|ПОМЕСТИТЬ ЗаданияНаПеревозкуМаршрут
	|ИЗ
	|	&ЗаданиеНаПеревозкуМаршрут КАК ЗаданияНаПеревозкуМаршрут
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасходныйОрдерНаТовары.Ссылка,
	|	РасходныйОрдерНаТовары.Склад
	|ПОМЕСТИТЬ ОрдераФильтр
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
	|ГДЕ
	|	РасходныйОрдерНаТовары.Проведен
	|	И РасходныйОрдерНаТовары.ОтгрузкаПоЗаданиюНаПеревозку
	|	И РасходныйОрдерНаТовары.ЗаданиеНаПеревозку = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасходныйОрдерНаТовары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрдеров.Номенклатура,
	|	ТоварыОрдеров.Характеристика,
	|	ТоварыОрдеров.Назначение,
	|	ТоварыОрдеров.Серия,
	|	ТоварыОрдеров.Распоряжение,
	|	СУММА(ТоварыОрдеров.Количество) КАК Количество,
	|	ОрдераФильтр.Склад
	|ПОМЕСТИТЬ ТоварыОрдеров
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК ТоварыОрдеров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОрдераФильтр КАК ОрдераФильтр
	|		ПО ТоварыОрдеров.Ссылка = ОрдераФильтр.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрдеров.Распоряжение,
	|	ТоварыОрдеров.Назначение,
	|	ТоварыОрдеров.Характеристика,
	|	ТоварыОрдеров.Номенклатура,
	|	ТоварыОрдеров.Серия,
	|	ОрдераФильтр.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Распоряжение,
	|	ОрдераФильтр.Склад
	|ПОМЕСТИТЬ РаспоряженияВОрдерах
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК РасходныйОрдерНаТоварыТоварыПоРаспоряжениям
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОрдераФильтр КАК ОрдераФильтр
	|		ПО (ОрдераФильтр.Ссылка = РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Распоряжение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	|" + СтрЗаменить(РСК_ВызовСервера.ТекстЗапросаВесОбъем(),
	"&ОтборПоРаспоряжениям", 
	"ТаблицаТовары.Ссылка В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					РаспоряженияВОрдерах.Распоряжение
	|				ИЗ
	|					РаспоряженияВОрдерах КАК РаспоряженияВОрдерах)") + "
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	|ВЫБРАТЬ
	|	ТоварыКОтгрузке.Номенклатура КАК Номенклатура,
	|	ТоварыКОтгрузке.Характеристика КАК Характеристика,
	|	ТоварыКОтгрузке.Назначение КАК Назначение,
	|	ТоварыКОтгрузке.Склад КАК Склад,
	|	ТоварыКОтгрузке.Серия КАК Серия,
	|	ТоварыКОтгрузке.Получатель КАК Получатель,
	|	ТоварыКОтгрузке.КОтгрузкеПриход КАК КОтгрузкеПриход,
	|	ТоварыОрдеров.Распоряжение КАК Распоряжение,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыОрдеров.Количество, 0) > ТоварыКОтгрузке.КОтгрузкеПриход
	|			ТОГДА ТоварыКОтгрузке.КОтгрузкеПриход
	|		ИНАЧЕ ТоварыОрдеров.Количество
	|	КОНЕЦ КАК Количество,
	#Удаление
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыОрдеров.Количество, 0) > ТоварыКОтгрузке.КОтгрузкеПриход
	|			ТОГДА ТоварыКОтгрузке.КОтгрузкеПриход * &ТекстЗапросаВесУпаковки
	|		ИНАЧЕ ТоварыОрдеров.Количество * &ТекстЗапросаВесУпаковки
	|	КОНЕЦ КАК Вес,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыОрдеров.Количество, 0) > ТоварыКОтгрузке.КОтгрузкеПриход
	|			ТОГДА ТоварыКОтгрузке.КОтгрузкеПриход * &ТекстЗапросаОбъемУпаковки
	|		ИНАЧЕ ТоварыОрдеров.Количество * &ТекстЗапросаОбъемУпаковки
	|	КОНЕЦ КАК Объем
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	|		ЕСТЬNULL(ВтВесОбъем.Вес, 0) * ВЫБОР
	|			КОГДА ЕСТЬNULL(ТоварыОрдеров.Количество, 0) > ТоварыКОтгрузке.КОтгрузкеПриход
	|				ТОГДА ТоварыКОтгрузке.КОтгрузкеПриход
	|			ИНАЧЕ ТоварыОрдеров.Количество
	|		КОНЕЦ / ЕСТЬNULL(ВтВесОбъем.Количество, 1) КАК Вес,
	|		ЕСТЬNULL(ВтВесОбъем.Объем, 0) * ВЫБОР
	|			КОГДА ЕСТЬNULL(ТоварыОрдеров.Количество, 0) > ТоварыКОтгрузке.КОтгрузкеПриход
	|				ТОГДА ТоварыКОтгрузке.КОтгрузкеПриход
	|			ИНАЧЕ ТоварыОрдеров.Количество
	|		КОНЕЦ / ЕСТЬNULL(ВтВесОбъем.Количество, 1) КАК Объем
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	|ПОМЕСТИТЬ ТоварыОрдеровИКОтгрузке
	|ИЗ
	|	РегистрНакопления.ТоварыКОтгрузке.Обороты(
	|			,
	|			,
	|			,
	|			(ДокументОтгрузки, Склад) В
	|				(ВЫБРАТЬ
	|					РаспоряженияВОрдерах.Распоряжение,
	|					РаспоряженияВОрдерах.Склад
	|				ИЗ
	|					РаспоряженияВОрдерах)) КАК ТоварыКОтгрузке
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыОрдеров КАК ТоварыОрдеров
	|		ПО ТоварыКОтгрузке.ДокументОтгрузки = ТоварыОрдеров.Распоряжение
	|			И ТоварыКОтгрузке.Склад = ТоварыОрдеров.Склад
	|			И ТоварыКОтгрузке.Номенклатура = ТоварыОрдеров.Номенклатура
	|			И ТоварыКОтгрузке.Характеристика = ТоварыОрдеров.Характеристика
	|			И ТоварыКОтгрузке.Назначение = ТоварыОрдеров.Назначение
	|			И ТоварыКОтгрузке.Серия = ТоварыОрдеров.Серия
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО (СправочникНоменклатура.Ссылка = ТоварыКОтгрузке.Номенклатура)
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтВесОбъем КАК ВтВесОбъем
	|			ПО ТоварыКОтгрузке.ДокументОтгрузки = ВтВесОбъем.Распоряжение 
	|				И ТоварыКОтгрузке.Склад = ВтВесОбъем.Склад
	|				И ТоварыКОтгрузке.Номенклатура = ВтВесОбъем.Номенклатура
	|				И ТоварыКОтгрузке.Характеристика = ВтВесОбъем.Характеристика
	|				И ТоварыКОтгрузке.Назначение = ВтВесОбъем.Назначение
	|				И ТоварыКОтгрузке.Серия = ВтВесОбъем.Серия
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	|ГДЕ
	|	ТоварыКОтгрузке.КОтгрузкеПриход > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрдеровИКОтгрузке.Склад,
	|	ТоварыОрдеровИКОтгрузке.Распоряжение,
	|	ТоварыОрдеровИКОтгрузке.Получатель,
	|	СУММА(ТоварыОрдеровИКОтгрузке.Вес) КАК Вес,
	|	СУММА(ТоварыОрдеровИКОтгрузке.Объем) КАК Объем
	|ПОМЕСТИТЬ ВесОбъемПоРаспоряжениям
	|ИЗ
	|	ТоварыОрдеровИКОтгрузке КАК ТоварыОрдеровИКОтгрузке
	|ГДЕ
	|	ТоварыОрдеровИКОтгрузке.Количество > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрдеровИКОтгрузке.Склад,
	|	ТоварыОрдеровИКОтгрузке.Распоряжение,
	|	ТоварыОрдеровИКОтгрузке.Получатель" + ОбщегоНазначенияУТ.РазделительЗапросовВПакете();
	

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаВесУпаковки", Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки("СправочникНоменклатура.ЕдиницаИзмерения", "СправочникНоменклатура"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаОбъемУпаковки", Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаОбъемУпаковки("СправочникНоменклатура.ЕдиницаИзмерения", "СправочникНоменклатура"));

	ШаблонТекстаЗапросаПоРаспоряжению =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РаспоряженияНаДоставку.Ссылка КАК Ссылка,
	|	ТИПЗНАЧЕНИЯ(РаспоряженияНаДоставку.Ссылка) КАК ВидРаспоряжения,
	|	РаспоряженияНаДоставку.Номер КАК Номер,
	|	ВЫБОР
	|		КОГДА РаспоряженияНаДоставку.СпособДоставки = &ДоставкаСиламиПеревозчикаПоАдресу
	|			ТОГДА РаспоряженияНаДоставку.АдресДоставкиПеревозчика
	|		ИНАЧЕ РаспоряженияНаДоставку.АдресДоставки
	|	КОНЕЦ КАК АдресДоставки,
	|	РаспоряженияНаДоставку.СпособДоставки КАК СпособДоставки,
	|	РаспоряженияНаДоставку.ЗонаДоставки КАК ЗонаДоставки,
	|	РаспоряженияНаДоставку.ПеревозчикПартнер КАК ПеревозчикПартнер,
	|	ВЫБОР
	|		КОГДА РаспоряженияНаДоставку.СпособДоставки = &ДоставкаСиламиПеревозчикаПоАдресу
	|			ТОГДА РаспоряженияНаДоставку.АдресДоставкиПеревозчикаЗначенияПолей
	|		ИНАЧЕ РаспоряженияНаДоставку.АдресДоставкиЗначенияПолей
	|	КОНЕЦ КАК АдресДоставкиЗначенияПолей,
	|	РаспоряженияНаДоставку.ВремяДоставкиС КАК ВремяДоставкиС,
	|	РаспоряженияНаДоставку.ВремяДоставкиПо КАК ВремяДоставкиПо,
	|	РаспоряженияНаДоставку.ДополнительнаяИнформацияПоДоставке КАК ДополнительнаяИнформацияПоДоставке
	|ИЗ
	|	Документ.ЗаказКлиента КАК РаспоряженияНаДоставку
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РаспоряженияВОрдерах КАК РаспоряженияВОрдерах
	|		ПО (РаспоряженияВОрдерах.Распоряжение = РаспоряженияНаДоставку.Ссылка)
	|ГДЕ
	|	РаспоряженияНаДоставку.СпособДоставки В(&СпособыДоставки)
	|	И РаспоряженияНаДоставку.Проведен";

	ЭтоПервый = Истина;

	Для Каждого ТипРаспоряжениеНаДоставку Из Метаданные.ОпределяемыеТипы.РаспоряжениеНаДоставку.Тип.Типы() Цикл

		// Текст запроса собирается по документам, а не по регистру СостоянияИРеквизитыДоставки,
		// чтобы поддержать перезаполнение закрытых заданий,
		// т.к. данные регистра по распоряжениям очищаются после закрытия заданий на перевозку по этим распоряжениям.
		Если ТипРаспоряжениеНаДоставку = Тип("СправочникСсылка.СоглашенияСПоставщиками")
			Или ТипРаспоряжениеНаДоставку = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			Продолжить;
		КонецЕсли;

		МетаданныеРаспоряжения = Метаданные.НайтиПоТипу(ТипРаспоряжениеНаДоставку);
		ПолноеИмяДокумента = МетаданныеРаспоряжения.ПолноеИмя();
		ТекстЗапросаПоРаспоряжению = СтрЗаменить(ШаблонТекстаЗапросаПоРаспоряжению, "Документ.ЗаказКлиента", ПолноеИмяДокумента);

		Если ЭтоПервый Тогда
			ТекстЗапросаПоРаспоряжению = СтрЗаменить(ТекстЗапросаПоРаспоряжению, "КАК ДополнительнаяИнформацияПоДоставке",
			"КАК ДополнительнаяИнформацияПоДоставке
			|ПОМЕСТИТЬ РаспоряженияНаДоставку");

			ЭтоПервый = Ложь;
		Иначе
			ТекстЗапросаПоРаспоряжению = СтрЗаменить(ТекстЗапросаПоРаспоряжению, "РАЗРЕШЕННЫЕ", "");
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|";
		КонецЕсли;

		Если Не ОбщегоНазначения.ЕстьРеквизитОбъекта("АдресДоставкиПеревозчика", МетаданныеРаспоряжения) Тогда
			// Не во всех распоряжениях полный состав реквизитов доставки
			ТекстЗапросаПоРаспоряжению = СтрЗаменить(ТекстЗапросаПоРаспоряжению, "АдресДоставкиПеревозчика", "АдресДоставки");
			ТекстЗапросаПоРаспоряжению = СтрЗаменить(ТекстЗапросаПоРаспоряжению, "АдресДоставкиПеревозчикаЗначенияПолей", "АдресДоставкиЗначенияПолей");
		КонецЕсли;
		Если Не ОбщегоНазначения.ЕстьРеквизитОбъекта("ЗонаДоставки", МетаданныеРаспоряжения) Тогда
			ТекстЗапросаПоРаспоряжению = СтрЗаменить(ТекстЗапросаПоРаспоряжению, "РаспоряженияНаДоставку.ЗонаДоставки", "ЗНАЧЕНИЕ(Справочник.ЗоныДоставки.ПустаяСсылка)");
		КонецЕсли;
		Если Не ОбщегоНазначения.ЕстьРеквизитОбъекта("ВремяДоставкиС", МетаданныеРаспоряжения) Тогда
			ТекстЗапросаПоРаспоряжению = СтрЗаменить(ТекстЗапросаПоРаспоряжению, "РаспоряженияНаДоставку.ВремяДоставкиС", "ДАТАВРЕМЯ(1,1,1)");
			ТекстЗапросаПоРаспоряжению = СтрЗаменить(ТекстЗапросаПоРаспоряжению, "РаспоряженияНаДоставку.ВремяДоставкиПо", "ДАТАВРЕМЯ(1,1,1)");
		КонецЕсли;
		Если Не ОбщегоНазначения.ЕстьРеквизитОбъекта("ПеревозчикПартнер", МетаданныеРаспоряжения) Тогда
			ТекстЗапросаПоРаспоряжению = СтрЗаменить(ТекстЗапросаПоРаспоряжению, "РаспоряженияНаДоставку.ПеревозчикПартнер", "ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)");
		КонецЕсли;

		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаПоРаспоряжению;

	КонецЦикла;

	ТекстЗапроса = ТекстЗапроса + "
	|ИНДЕКСИРОВАТЬ ПО
	|	РаспоряженияНаДоставку.Ссылка" + ОбщегоНазначенияУТ.РазделительЗапросовВПакете() + 
	"ВЫБРАТЬ
	|	РаспоряженияУдалить.НомерСтроки КАК НомерСтроки,
	|	Маршрут.НомерСтроки КАК МаршрутНомерСтроки
	|ИЗ
	|	ЗаданияНаПеревозкуРаспоряжения КАК РаспоряженияУдалить
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВесОбъемПоРаспоряжениям КАК ВесОбъемПоРаспоряжениям
	|		ПО РаспоряженияУдалить.Распоряжение = ВесОбъемПоРаспоряжениям.Распоряжение
	|			И РаспоряженияУдалить.Склад = ВесОбъемПоРаспоряжениям.Склад
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗаданияНаПеревозкуМаршрут КАК Маршрут
	|		ПО (РаспоряженияУдалить.КлючСвязи = Маршрут.КлючСвязи)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК СправочникСклады
	|		ПО (СправочникСклады.Ссылка = РаспоряженияУдалить.Склад)
	|			И (СправочникСклады.ИспользоватьОрдернуюСхемуПриОтгрузке)
	|			И (&ДатаВремяРейсаПланС >= СправочникСклады.ДатаНачалаОрдернойСхемыПриОтгрузке)
	|ГДЕ
	|	ВесОбъемПоРаспоряжениям.Распоряжение ЕСТЬ NULL
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	|	И НЕ РаспоряженияУдалить.Транзитная
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	|	И НЕ РаспоряженияУдалить.Распоряжение ССЫЛКА Документ.ПоручениеЭкспедитору
	|
	|СГРУППИРОВАТЬ ПО
	|	РаспоряженияУдалить.НомерСтроки,
	|	Маршрут.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	РаспоряженияУдалить.НомерСтроки УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиМаршрутаУдалить.НомерСтроки КАК МаршрутНомерСтроки
	|ИЗ
	|	ЗаданияНаПеревозкуМаршрут КАК СтрокиМаршрутаУдалить
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗаданияНаПеревозкуРаспоряжения КАК ЗаданияНаПеревозкуРаспоряжения
	|		ПО (ЗаданияНаПеревозкуРаспоряжения.КлючСвязи = СтрокиМаршрутаУдалить.КлючСвязи)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВесОбъемПоРаспоряжениям КАК ВесОбъемПоРаспоряжениям
	|		ПО (ЗаданияНаПеревозкуРаспоряжения.Распоряжение = ВесОбъемПоРаспоряжениям.Распоряжение)
	|			И (ЗаданияНаПеревозкуРаспоряжения.Склад = ВесОбъемПоРаспоряжениям.Склад)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СправочникСклады
	|		ПО (СправочникСклады.Ссылка = ЗаданияНаПеревозкуРаспоряжения.Склад)
	|
	|СГРУППИРОВАТЬ ПО
	|	СтрокиМаршрутаУдалить.НомерСтроки
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НЕ ВесОбъемПоРаспоряжениям.Распоряжение ЕСТЬ NULL
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	|					ИЛИ ЗаданияНаПеревозкуРаспоряжения.Транзитная
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	|					ИЛИ НЕ СправочникСклады.ИспользоватьОрдернуюСхемуПриОтгрузке
	|					ИЛИ &ДатаВремяРейсаПланС < СправочникСклады.ДатаНачалаОрдернойСхемыПриОтгрузке
	|					ИЛИ ЗаданияНаПеревозкуРаспоряжения.Распоряжение ССЫЛКА Документ.ПоручениеЭкспедитору
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	МаршрутНомерСтроки УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РаспоряженияИзменить.НомерСтроки КАК НомерСтроки,
	|	ВесОбъемПоРаспоряжениям.Вес КАК Вес,
	|	ВесОбъемПоРаспоряжениям.Объем КАК Объем,
	|	Маршрут.НомерСтроки КАК МаршрутНомерСтроки
	|ИЗ
	|	ЗаданияНаПеревозкуРаспоряжения КАК РаспоряженияИзменить
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВесОбъемПоРаспоряжениям КАК ВесОбъемПоРаспоряжениям
	|		ПО РаспоряженияИзменить.Распоряжение = ВесОбъемПоРаспоряжениям.Распоряжение
	|			И РаспоряженияИзменить.Склад = ВесОбъемПоРаспоряжениям.Склад
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗаданияНаПеревозкуМаршрут КАК Маршрут
	|		ПО (Маршрут.КлючСвязи = РаспоряженияИзменить.КлючСвязи)
	|ГДЕ
	|	(ВесОбъемПоРаспоряжениям.Вес <> РаспоряженияИзменить.Вес
	|			ИЛИ ВесОбъемПоРаспоряжениям.Объем <> РаспоряженияИзменить.Объем)
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	|	И НЕ РаспоряженияИзменить.Транзитная
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВесОбъемПоРаспоряжениям.Вес КАК Вес,
	|	ВесОбъемПоРаспоряжениям.Объем КАК Объем,
	|	ВесОбъемПоРаспоряжениям.Склад КАК Склад,
	|	ВесОбъемПоРаспоряжениям.Распоряжение КАК Распоряжение,
	|	НовыеРаспоряжения.ВидРаспоряжения,
	|	НовыеРаспоряжения.Номер,
	|	НовыеРаспоряжения.АдресДоставки,
	|	НовыеРаспоряжения.СпособДоставки,
	|	НовыеРаспоряжения.ЗонаДоставки,
	|	ВесОбъемПоРаспоряжениям.Получатель КАК ПолучательОтправитель,
	|	НовыеРаспоряжения.ПеревозчикПартнер,
	|	НовыеРаспоряжения.АдресДоставкиЗначенияПолей,
	|	НовыеРаспоряжения.ВремяДоставкиС КАК ВремяС,
	|	НовыеРаспоряжения.ВремяДоставкиПо КАК ВремяПо,
	|	НовыеРаспоряжения.ДополнительнаяИнформацияПоДоставке
	|ИЗ
	|	РаспоряженияНаДоставку КАК НовыеРаспоряжения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВесОбъемПоРаспоряжениям КАК ВесОбъемПоРаспоряжениям
	|		ПО НовыеРаспоряжения.Ссылка = ВесОбъемПоРаспоряжениям.Распоряжение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаданияНаПеревозкуРаспоряжения КАК ЗаданияНаПеревозкуРаспоряжения
	|		ПО (ЗаданияНаПеревозкуРаспоряжения.Распоряжение = ВесОбъемПоРаспоряжениям.Распоряжение)
	|			И (ЗаданияНаПеревозкуРаспоряжения.Склад = ВесОбъемПоРаспоряжениям.Склад)
	|ГДЕ
	|	ЗаданияНаПеревозкуРаспоряжения.Распоряжение ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКДоставке.Склад,
	|	ТоварыКДоставке.Распоряжение,
	|	ТоварыКДоставке.Получатель КАК ПолучательОтправитель,
	|	ТоварыКДоставке.Номенклатура,
	|	ТоварыКДоставке.Характеристика,
	|	ТоварыКДоставке.Назначение,
	|	ТоварыКДоставке.Серия,
	|	ЛОЖЬ КАК ВсеТовары,
	|	ТоварыКДоставке.Количество
	|ИЗ
	|	ТоварыОрдеровИКОтгрузке КАК ТоварыКДоставке
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВесОбъемПоРаспоряжениям КАК ВесОбъемПоРаспоряжениям
	|		ПО (ВесОбъемПоРаспоряжениям.Склад = ТоварыКДоставке.Склад)
	|			И (ВесОбъемПоРаспоряжениям.Распоряжение = ТоварыКДоставке.Распоряжение)
	|ГДЕ
	|	ТоварыКДоставке.Количество > 0";
	
	Возврат ТекстЗапроса;

КонецФункции

&ИзменениеИКонтроль("ТекстЗапросаРаспоряженияНаДоставкуПолучателямПоОрдернойСхеме")
Функция РСК_ТекстЗапросаРаспоряженияНаДоставкуПолучателямПоОрдернойСхеме()

	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЧастичноДоставленныеЗаказы.Склад             КАК Склад,
	|	ЧастичноДоставленныеЗаказы.Распоряжение      КАК Распоряжение,
	|	РаспоряженияНаДоставку.ПолучательОтправитель КАК ПолучательОтправитель,
	|	РаспоряженияНаДоставку.СпособДоставки        КАК СпособДоставки,
	|	РаспоряженияНаДоставку.Зона                  КАК Зона,
	|	РаспоряженияНаДоставку.Перевозчик            КАК Перевозчик,
	|	NULL                                         КАК ОсобыеУсловияПеревозки,
	|	ЧастичноДоставленныеЗаказы.Номенклатура      КАК Номенклатура,
	|	ЧастичноДоставленныеЗаказы.Характеристика    КАК Характеристика,
	|	ЧастичноДоставленныеЗаказы.Назначение        КАК Назначение,
	|	ЧастичноДоставленныеЗаказы.Серия             КАК Серия,
	|	СУММА(ЧастичноДоставленныеЗаказы.Количество) КАК Количество
	|ПОМЕСТИТЬ ВтДвиженияКРаспределениюПоОрдернойСхеме
	|ИЗ
	|	РаспоряженияНаДоставку КАК РаспоряженияНаДоставку
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТоварыКДоставке КАК ЧастичноДоставленныеЗаказы
	|		ПО РаспоряженияНаДоставку.Распоряжение = ЧастичноДоставленныеЗаказы.Распоряжение
	|			И РаспоряженияНаДоставку.Склад = ЧастичноДоставленныеЗаказы.Склад
	|			И (НЕ ЧастичноДоставленныеЗаказы.ВсеТовары)
	|			И (РаспоряженияНаДоставку.ЭтоОрдерныйСклад
	|				ИЛИ РаспоряженияНаДоставку.СпособДоставки
	|					= ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ПоручениеЭкспедиторуВПункте))
	|ГДЕ
	|	(ЧастичноДоставленныеЗаказы.ЗаданиеНаПеревозку <> &ЗаданиеНаПеревозкуПодбор
	|		И ЧастичноДоставленныеЗаказы.ЗаданиеНаПеревозку.Проведен
	|			ИЛИ ЧастичноДоставленныеЗаказы.ЗаданиеНаПеревозку = &ЗаданиеНаПеревозкуПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЧастичноДоставленныеЗаказы.Склад,
	|	ЧастичноДоставленныеЗаказы.Распоряжение,
	|	РаспоряженияНаДоставку.ПолучательОтправитель,
	|	РаспоряженияНаДоставку.СпособДоставки,
	|	РаспоряженияНаДоставку.Зона,
	|	РаспоряженияНаДоставку.Перевозчик,
	|	ЧастичноДоставленныеЗаказы.Номенклатура,
	|	ЧастичноДоставленныеЗаказы.Характеристика,
	|	ЧастичноДоставленныеЗаказы.Назначение,
	|	ЧастичноДоставленныеЗаказы.Серия
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЧастичноДоставленныеЗаказы.Количество) > 0
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	|"; 
	ТекстВГХ = РСК_ВызовСервера.ТекстЗапросаВесОбъем();
	
	ТекстВГХ = СтрЗаменить(ТекстВГХ,
	"&ОтборПоРаспоряжениям", 
	"ТаблицаТовары.Ссылка В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					РаспоряженияНаДоставку.Распоряжение
	|				ИЗ
	|					РаспоряженияНаДоставку КАК РаспоряженияНаДоставку)");
	
	ТекстВГХ = СтрЗаменить(ТекстВГХ, "ВтВесОбъем2", "ВтОрдерныйВесОбъем2");
	ТекстВГХ = СтрЗаменить(ТекстВГХ, "ВтВесОбъем", "ВтОрдерныйВесОбъем");
	
	ТекстЗапроса = ТекстЗапроса + ТекстВГХ + "	
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТоварыКОтгрузкеДетально.ДатаОтгрузки КАК Дата,
	|	ТоварыКОтгрузкеДетально.Номенклатура КАК Номенклатура,
	|	ТоварыКОтгрузкеДетально.МернаяЕдиницаИзмерения КАК МернаяЕдиницаИзмерения,
	|	ТоварыКОтгрузкеДетально.Характеристика КАК Характеристика,
	|	ТоварыКОтгрузкеДетально.Назначение КАК Назначение,
	|	ТоварыКОтгрузкеДетально.Серия КАК Серия,
	|	ТоварыКОтгрузкеДетально.Количество КАК Количество,
	|	ТоварыКОтгрузкеДетально.Вес КАК Вес,
	|	ТоварыКОтгрузкеДетально.Объем КАК Объем,
	|	ТоварыКОтгрузкеДетально.Склад КАК Склад,
	|	ТоварыКОтгрузкеДетально.Распоряжение КАК Распоряжение,
	|	ТоварыКОтгрузкеДетально.ПолучательОтправитель КАК ПолучательОтправитель,
	|	ТИПЗНАЧЕНИЯ(ТоварыКОтгрузкеДетально.Распоряжение) КАК ВидРаспоряжения,
	|	СостоянияИРеквизитыДоставки.Номер КАК Номер,
	|	СостоянияИРеквизитыДоставки.Адрес КАК Адрес,
	|	СостоянияИРеквизитыДоставки.АдресЗначенияПолей КАК АдресЗначенияПолей,
	|	ТоварыКОтгрузкеДетально.СпособДоставки КАК СпособДоставки,
	|	ВЫБОР
	|		КОГДА ТоварыКОтгрузкеДетально.ЭтоПоручениеЭкспедитору
	|			ТОГДА 4
	|		ИНАЧЕ ВЫБОР
	#Удаление
	|				КОГДА ТоварыКОтгрузкеДетально.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика))
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
	|				КОГДА ТоварыКОтгрузкеДетально.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента))
	#КонецВставки
	|					ТОГДА 0
	|				КОГДА ТоварыКОтгрузкеДетально.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу))
	|					ТОГДА 1
	|				ИНАЧЕ 2
	|			КОНЕЦ + ВЫБОР
	|				КОГДА СостоянияИРеквизитыДоставки.ОсобыеУсловияПеревозки
	|					ТОГДА 3
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК Картинка,
	|	ТоварыКОтгрузкеДетально.Зона КАК Зона,
	|	ТоварыКОтгрузкеДетально.Зона.Наименование КАК ЗонаПредставление,
	|	ТоварыКОтгрузкеДетально.Перевозчик КАК Перевозчик,
	|	СостоянияИРеквизитыДоставки.ВремяС КАК ВремяС,
	|	СостоянияИРеквизитыДоставки.ВремяПо КАК ВремяПо,
	|	СостоянияИРеквизитыДоставки.ДополнительнаяИнформация КАК ДополнительнаяИнформация,
	|	СостоянияИРеквизитыДоставки.ОсобыеУсловияПеревозки КАК ОсобыеУсловияПеревозки,
	|	СостоянияИРеквизитыДоставки.ОсобыеУсловияПеревозкиОписание КАК ОсобыеУсловияПеревозкиОписание,
	|	ВЫБОР
	#Удаление
	|		КОГДА ТоварыКОтгрузкеДетально.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
	|		КОГДА ТоварыКОтгрузкеДетально.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента))
	#КонецВставки
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТоварыКОтгрузкеДетально.Перевозчик)
	|		ИНАЧЕ СостоянияИРеквизитыДоставки.Адрес
	|	КОНЕЦ КАК ПолеУпорядочивания
	|ПОМЕСТИТЬ ВтРаспоряженияНаДоставкуПолучателямПоОрдернойСхеме
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		МАКСИМУМ(
	|			ВЫБОР КОГДА
	|				НАЧАЛОПЕРИОДА(ТоварыСУчетомДоставленных.Период, ДЕНЬ) < НАЧАЛОПЕРИОДА(&ТекущаяДатаСеанса, ДЕНЬ)
	|					ТОГДА НАЧАЛОПЕРИОДА(&ТекущаяДатаСеанса, ДЕНЬ)
	|				ИНАЧЕ НАЧАЛОПЕРИОДА(ТоварыСУчетомДоставленных.Период, ДЕНЬ)
	|			КОНЕЦ) КАК ДатаОтгрузки,
	|		ВЫБОР КОГДА
	|			НАЧАЛОПЕРИОДА(ТоварыСУчетомДоставленных.Период, ДЕНЬ) < НАЧАЛОПЕРИОДА(&ТекущаяДатаСеанса, ДЕНЬ)
	|				ТОГДА НАЧАЛОПЕРИОДА(&ТекущаяДатаСеанса, ДЕНЬ)
	|			ИНАЧЕ НАЧАЛОПЕРИОДА(ТоварыСУчетомДоставленных.Период, ДЕНЬ)
	|		КОНЕЦ КАК ПолеГруппировкиПросроченныхДатОтгрузки,
	|		ТоварыСУчетомДоставленных.Номенклатура КАК Номенклатура,
	|		ТоварыСУчетомДоставленных.Характеристика КАК Характеристика,
	|		ТоварыСУчетомДоставленных.Назначение КАК Назначение,
	|		ТоварыСУчетомДоставленных.Серия КАК Серия,
	|		РаспоряженияНаДоставку.Склад                 КАК Склад,
	|		РаспоряженияНаДоставку.Распоряжение          КАК Распоряжение,
	|		РаспоряженияНаДоставку.ПолучательОтправитель КАК ПолучательОтправитель,
	|		РаспоряженияНаДоставку.СпособДоставки        КАК СпособДоставки,
	|		РаспоряженияНаДоставку.Зона                  КАК Зона,
	|		РаспоряженияНаДоставку.Перевозчик            КАК Перевозчик,
	|		СУММА(ТоварыСУчетомДоставленных.КОтгрузке) КАК Количество,      // Количество
	#Удаление
	|		СУММА(ТоварыСУчетомДоставленных.КОтгрузке * &ТекстЗапросаВесУпаковки) КАК Вес,
	|		СУММА(ТоварыСУчетомДоставленных.КОтгрузке * &ТекстЗапросаОбъемУпаковки) КАК Объем,
	#КонецУдаления
	#Вставка 
	//++ РС Консалт: Минаков А.С. Задача 20226
	|		СУММА(ЕСТЬNULL(ВтОрдерныйВесОбъем.Вес, 0) * ТоварыСУчетомДоставленных.КОтгрузке / ЕСТЬNULL(ВтОрдерныйВесОбъем.Количество, 1)) КАК Вес,
	|		СУММА(ЕСТЬNULL(ВтОрдерныйВесОбъем.Объем, 0) * ТоварыСУчетомДоставленных.КОтгрузке / ЕСТЬNULL(ВтОрдерныйВесОбъем.Количество, 1)) КАК Объем,
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	|		ЛОЖЬ КАК ЭтоПоручениеЭкспедитору,
	|		ТоварыСУчетомДоставленных.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины <> ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук) КАК МернаяЕдиницаИзмерения
	|	ИЗ
	|		РегистрНакопления.ТоварыКОтгрузке КАК ТоварыСУчетомДоставленных
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РаспоряженияНаДоставку КАК РаспоряженияНаДоставку
	|			ПО ТоварыСУчетомДоставленных.ДокументОтгрузки = РаспоряженияНаДоставку.Распоряжение
	|			И ТоварыСУчетомДоставленных.Склад = РаспоряженияНаДоставку.Склад
	|			И РаспоряженияНаДоставку.ЭтоОрдерныйСклад
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТоварыСУчетомДоставленных.Номенклатура = СправочникНоменклатура.Ссылка
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтОрдерныйВесОбъем КАК ВтОрдерныйВесОбъем
	|			ПО ТоварыСУчетомДоставленных.ДокументОтгрузки = ВтОрдерныйВесОбъем.Распоряжение
	|				И ТоварыСУчетомДоставленных.Склад = ВтОрдерныйВесОбъем.Склад
	|				И ТоварыСУчетомДоставленных.Номенклатура = ВтОрдерныйВесОбъем.Номенклатура
	|				И ТоварыСУчетомДоставленных.Характеристика = ВтОрдерныйВесОбъем.Характеристика
	|				И ТоварыСУчетомДоставленных.Назначение = ВтОрдерныйВесОбъем.Назначение
	|				И ТоварыСУчетомДоставленных.Серия = ВтОрдерныйВесОбъем.Серия
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	|	ГДЕ
	|		ТоварыСУчетомДоставленных.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВЫБОР КОГДА
	|			НАЧАЛОПЕРИОДА(ТоварыСУчетомДоставленных.Период, ДЕНЬ) < НАЧАЛОПЕРИОДА(&ТекущаяДатаСеанса, ДЕНЬ)
	|				ТОГДА НАЧАЛОПЕРИОДА(&ТекущаяДатаСеанса, ДЕНЬ)
	|			ИНАЧЕ НАЧАЛОПЕРИОДА(ТоварыСУчетомДоставленных.Период, ДЕНЬ)
	|		КОНЕЦ,
	|		РаспоряженияНаДоставку.Склад,
	|		РаспоряженияНаДоставку.Распоряжение,
	|		РаспоряженияНаДоставку.Зона,
	|		РаспоряженияНаДоставку.ПолучательОтправитель,
	|		РаспоряженияНаДоставку.СпособДоставки,
	|		РаспоряженияНаДоставку.Перевозчик,
	|		ТоварыСУчетомДоставленных.Номенклатура,
	|		ТоварыСУчетомДоставленных.Характеристика,
	|		ТоварыСУчетомДоставленных.Назначение,
	|		ТоварыСУчетомДоставленных.Серия,
	|		ТоварыСУчетомДоставленных.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины <> ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук)
	|	ИМЕЮЩИЕ
	|		СУММА(ТоварыСУчетомДоставленных.КОтгрузке) > 0
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(РаспоряженияНаДоставку.Дата, ДЕНЬ),
	|		НАЧАЛОПЕРИОДА(РаспоряженияНаДоставку.Дата, ДЕНЬ),
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		РаспоряженияНаДоставку.Склад,
	|		РаспоряженияНаДоставку.Распоряжение,
	|		РаспоряженияНаДоставку.ПолучательОтправитель,
	|		РаспоряженияНаДоставку.СпособДоставки,
	|		РаспоряженияНаДоставку.Зона,
	|		NULL,
	|		0,
	|		0,
	|		0,
	|		ИСТИНА,
	|		ЛОЖЬ
	|	ИЗ
	|		РаспоряженияНаДоставку КАК РаспоряженияНаДоставку
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварыКДоставке КАК ТоварыКДоставке
	|			ПО (ТоварыКДоставке.Распоряжение = РаспоряженияНаДоставку.Распоряжение)
	|	ГДЕ
	|		ТоварыКДоставке.Распоряжение ЕСТЬ NULL
	|		И РаспоряженияНаДоставку.СпособДоставки В (
	|			ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ПоручениеЭкспедиторуСоСклада),
	|			ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ПоручениеЭкспедиторуВПункте)
	|			)
	|	) КАК ТоварыКОтгрузкеДетально
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияИРеквизитыДоставки КАК СостоянияИРеквизитыДоставки
	|	ПО ТоварыКОтгрузкеДетально.Распоряжение = СостоянияИРеквизитыДоставки.Распоряжение
	|		И ТоварыКОтгрузкеДетально.Склад = СостоянияИРеквизитыДоставки.Склад";
	
	Возврат ТекстЗапроса;

КонецФункции

&ИзменениеИКонтроль("ТекстЗапросаРаспоряженияНаДоставкуПолучателямБезОрдернойСхемы")
Функция РСК_ТекстЗапросаРаспоряженияНаДоставкуПолучателямБезОрдернойСхемы()

	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЧастичноДоставленныеЗаказы.Склад              КАК Склад,
	|	ЧастичноДоставленныеЗаказы.Распоряжение       КАК Распоряжение,
	|	NULL                                          КАК ПолучательОтправитель,
	|	РаспоряженияНаДоставку.СпособДоставки         КАК СпособДоставки,
	|	NULL                                          КАК Зона,
	|	NULL                                          КАК Перевозчик,
	|	РаспоряженияНаДоставку.ОсобыеУсловияПеревозки КАК ОсобыеУсловияПеревозки,
	|	ЧастичноДоставленныеЗаказы.Номенклатура       КАК Номенклатура,
	|	ЧастичноДоставленныеЗаказы.Характеристика     КАК Характеристика,
	|	ЧастичноДоставленныеЗаказы.Назначение         КАК Назначение,
	|	ЧастичноДоставленныеЗаказы.Серия              КАК Серия,
	|	СУММА(ЧастичноДоставленныеЗаказы.Количество)  КАК Количество
	|ПОМЕСТИТЬ ВтДвиженияКРаспределениюБезОрдернойСхемы
	|ИЗ
	|	РаспоряженияНаДоставку КАК РаспоряженияНаДоставку
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТоварыКДоставке КАК ЧастичноДоставленныеЗаказы
	|		ПО РаспоряженияНаДоставку.Распоряжение = ЧастичноДоставленныеЗаказы.Распоряжение
	|			И РаспоряженияНаДоставку.Склад = ЧастичноДоставленныеЗаказы.Склад
	|			И НЕ РаспоряженияНаДоставку.ЭтоОрдерныйСклад
	|			И (НЕ ЧастичноДоставленныеЗаказы.ВсеТовары)
	|ГДЕ
	|	(ЧастичноДоставленныеЗаказы.ЗаданиеНаПеревозку <> &ЗаданиеНаПеревозкуПодбор
	|				И ЧастичноДоставленныеЗаказы.ЗаданиеНаПеревозку.Проведен
	|			ИЛИ ЧастичноДоставленныеЗаказы.ЗаданиеНаПеревозку = &ЗаданиеНаПеревозкуПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЧастичноДоставленныеЗаказы.Склад,
	|	ЧастичноДоставленныеЗаказы.Распоряжение,
	|	РаспоряженияНаДоставку.СпособДоставки,
	|	РаспоряженияНаДоставку.ОсобыеУсловияПеревозки,
	|	ЧастичноДоставленныеЗаказы.Номенклатура,
	|	ЧастичноДоставленныеЗаказы.Характеристика,
	|	ЧастичноДоставленныеЗаказы.Назначение,
	|	ЧастичноДоставленныеЗаказы.Серия
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	|" + СтрЗаменить(РСК_ВызовСервера.ТекстЗапросаВесОбъем(),
	"&ОтборПоРаспоряжениям", 
	"ТаблицаТовары.Ссылка В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					РаспоряженияНаДоставку.Распоряжение
	|				ИЗ
	|					РаспоряженияНаДоставку КАК РаспоряженияНаДоставку)") + "
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЗ.Дата КАК Дата,
	|	ВЗ.Номенклатура КАК Номенклатура,
	|	ВЗ.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины <> ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук) КАК МернаяЕдиницаИзмерения,
	|	ВЗ.Характеристика КАК Характеристика,
	|	ВЗ.Назначение КАК Назначение,
	|	ВЗ.Серия КАК Серия,
	|	ВЗ.Количество КАК Количество,
	#Удаление
	|	ВЗ.Количество * &ТекстЗапросаВесУпаковки КАК Вес,
	|	ВЗ.Количество * &ТекстЗапросаОбъемУпаковки КАК Объем,
	#КонецУдаления
	#Вставка 
	//++ РС Консалт: Минаков А.С. Задача 20226
	|	(ЕСТЬNULL(ВтВесОбъем.Вес, 0) * ВЗ.Количество / ЕСТЬNULL(ВтВесОбъем.Количество, 1)) КАК Вес,
	|	(ЕСТЬNULL(ВтВесОбъем.Объем, 0) * ВЗ.Количество / ЕСТЬNULL(ВтВесОбъем.Количество, 1)) КАК Объем,
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	|	ВЗ.Склад КАК Склад,
	|	ВЗ.Распоряжение КАК Распоряжение,
	|	ДопРеквизиты.ПолучательОтправитель КАК ПолучательОтправитель,
	|	ТИПЗНАЧЕНИЯ(ВЗ.Распоряжение) КАК ВидРаспоряжения,
	|	ДопРеквизиты.Номер КАК Номер,
	|	ДопРеквизиты.Адрес КАК Адрес,
	|	ДопРеквизиты.АдресЗначенияПолей КАК АдресЗначенияПолей,
	|	ВЗ.СпособДоставки КАК СпособДоставки,
	|	ВЗ.Картинка КАК Картинка,
	|	ЕСТЬNULL(ДопРеквизиты.Зона, ЗНАЧЕНИЕ(Справочник.ЗоныДоставки.ПустаяСсылка)) КАК Зона,
	|	ДопРеквизиты.Зона.Наименование КАК ЗонаПредставление,
	|	ДопРеквизиты.Перевозчик КАК Перевозчик,
	|	ДопРеквизиты.ВремяС КАК ВремяС,
	|	ДопРеквизиты.ВремяПо КАК ВремяПо,
	|	ДопРеквизиты.ДополнительнаяИнформация КАК ДополнительнаяИнформация,
	|	ДопРеквизиты.ОсобыеУсловияПеревозки КАК ОсобыеУсловияПеревозки,
	|	ДопРеквизиты.ОсобыеУсловияПеревозкиОписание КАК ОсобыеУсловияПеревозкиОписание,
	|	ВЫБОР
	#Удаление
	|		КОГДА ВЗ.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
	|		КОГДА ВЗ.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента))
	#КонецВставки
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(ДопРеквизиты.Перевозчик)
	|		ИНАЧЕ ДопРеквизиты.Адрес
	|	КОНЕЦ КАК ПолеУпорядочивания
	|ПОМЕСТИТЬ ВтРаспоряженияНаДоставкуПолучателямБезОрдернойСхемы
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(НАЧАЛОПЕРИОДА(ТоварыКОтгрузке.Период, ДЕНЬ)) КАК Дата,
	|		РаспоряженияНаДоставку.Распоряжение КАК Распоряжение,
	|		РаспоряженияНаДоставку.Склад КАК Склад,
	|		ТоварыКОтгрузке.Номенклатура КАК Номенклатура,
	|		ТоварыКОтгрузке.Характеристика КАК Характеристика,
	|		ТоварыКОтгрузке.Назначение КАК Назначение,
	|		ТоварыКОтгрузке.Серия КАК Серия,
	|		РаспоряженияНаДоставку.СпособДоставки КАК СпособДоставки,
	|		СУММА(ТоварыКОтгрузке.КОтгрузке) КАК Количество,
	|		ВЫБОР
	#Удаление
	|			КОГДА РаспоряженияНаДоставку.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика))
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
	|			КОГДА РаспоряженияНаДоставку.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента))
	#КонецВставки
	|				ТОГДА 0
	|			КОГДА РаспоряженияНаДоставку.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу))
	|				ТОГДА 1
	|			ИНАЧЕ 2
	|		КОНЕЦ + ВЫБОР
	|			КОГДА РаспоряженияНаДоставку.ОсобыеУсловияПеревозки
	|				ТОГДА 3
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Картинка
	|	ИЗ
	|		РаспоряженияНаДоставку КАК РаспоряженияНаДоставку
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке КАК ТоварыКОтгрузке
	|			ПО РаспоряженияНаДоставку.Распоряжение = ТоварыКОтгрузке.ДокументОтгрузки
	|				И РаспоряженияНаДоставку.Склад = ТоварыКОтгрузке.Склад
	|				И НЕ РаспоряженияНаДоставку.ЭтоОрдерныйСклад
	|	ГДЕ
	|		ТоварыКОтгрузке.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		РаспоряженияНаДоставку.Распоряжение,
	|		РаспоряженияНаДоставку.Склад,
	|		ТоварыКОтгрузке.Номенклатура,
	|		ТоварыКОтгрузке.Характеристика,
	|		ТоварыКОтгрузке.Назначение,
	|		ТоварыКОтгрузке.Серия,
	|		РаспоряженияНаДоставку.СпособДоставки,
	|		ВЫБОР
	#Удаление
	|			КОГДА РаспоряженияНаДоставку.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика))
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
	|			КОГДА РаспоряженияНаДоставку.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента))
	#КонецВставки
	|				ТОГДА 0
	|			КОГДА РаспоряженияНаДоставку.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу))
	|				ТОГДА 1
	|			ИНАЧЕ 2
	|		КОНЕЦ + ВЫБОР
	|			КОГДА РаспоряженияНаДоставку.ОсобыеУсловияПеревозки
	|				ТОГДА 3
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(ТоварыКОтгрузке.КОтгрузке) > 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(РаспоряженияНаДоставку.Дата, ДЕНЬ),
	|		РаспоряженияНаДоставку.Распоряжение,
	|		РаспоряженияНаДоставку.Склад,
	|		NULL,
	|		NULL,
	|		NULL,
	|		NULL,
	|		РаспоряженияНаДоставку.СпособДоставки,
	|		NULL,
	|		4
	|	ИЗ
	|		РаспоряженияНаДоставку КАК РаспоряженияНаДоставку
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварыКДоставке КАК ТоварыКДоставке
	|			ПО (ТоварыКДоставке.Распоряжение = РаспоряженияНаДоставку.Распоряжение)
	|	ГДЕ
	|		РаспоряженияНаДоставку.СпособДоставки В
	|			(ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ПоручениеЭкспедиторуСоСклада),
	|			ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ПоручениеЭкспедиторуВПункте))
	|		И ТоварыКДоставке.Распоряжение ЕСТЬ NULL
	|	) КАК ВЗ
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияИРеквизитыДоставки КАК ДопРеквизиты
	|	ПО ВЗ.Распоряжение = ДопРеквизиты.Распоряжение
	|		И ВЗ.Склад = ДопРеквизиты.Склад
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтВесОбъем КАК ВтВесОбъем
	|	ПО ВЗ.Распоряжение = ВтВесОбъем.Распоряжение
	|		И ВЗ.Склад = ВтВесОбъем.Склад
	|		И ВЗ.Номенклатура = ВтВесОбъем.Номенклатура
	|		И ВЗ.Характеристика = ВтВесОбъем.Характеристика
	|		И ВЗ.Назначение = ВтВесОбъем.Назначение
	|		И ВЗ.Серия = ВтВесОбъем.Серия
	|		И ВЗ.Склад = ВтВесОбъем.Склад
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|	ПО ВЗ.Номенклатура = СправочникНоменклатура.Ссылка";

	Возврат ТекстЗапроса;

КонецФункции

&ИзменениеИКонтроль("ДополнитьТекстРаспоряжениемИДопИнфо")
Функция РСК_ДополнитьТекстРаспоряжениемИДопИнфо(Знач ДопИнфоИзменяемое, ДопИнфоДляДобавления, Распоряжение)

	Результат = ДопИнфоИзменяемое;
	
	Если Не ПустаяСтрока(ДопИнфоДляДобавления) Тогда
		
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Распоряжение, "Номер, Дата");
		ТекстДопИнфо = НСтр("ru = '%Распоряжение% %Номер% от %Дата%: %ДопИнфо%';
		|en = '%Распоряжение% %Номер% dated %Дата%: %ДопИнфо%'");
		
		ТекстДопИнфо = СтрЗаменить(ТекстДопИнфо,"%Распоряжение%",Строка(ТипЗнч(Распоряжение)));
		ТекстДопИнфо = СтрЗаменить(ТекстДопИнфо,"%Номер%",
		ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
		ТекстДопИнфо = СтрЗаменить(ТекстДопИнфо, "%Дата%", Формат(Реквизиты.Дата,"ДФ=dd.MM.yy"));
		ТекстДопИнфо = СтрЗаменить(ТекстДопИнфо, "%ДопИнфо%", ДопИнфоДляДобавления);
		
		Если СтрНайти(ДопИнфоИзменяемое, ТекстДопИнфо) = 0 Тогда
			#Вставка
			//++ РС Консалт: Минаков А.С. Задача 20226
			Если СтрНайти(ДопИнфоИзменяемое, ДопИнфоДляДобавления) = 0 Тогда
				//++ РС Консалт: Минаков А.С. Задача 20226
				#КонецВставки
				Результат = Результат + ?(ЗначениеЗаполнено(Результат), Символы.ПС, "") + ТекстДопИнфо;
				#Вставка
				//++ РС Консалт: Минаков А.С. Задача 20226
			Иначе
				Результат = СтрЗаменить(Результат, ДопИнфоДляДобавления, Символы.ПС + ТекстДопИнфо)
				//++ РС Консалт: Минаков А.С. Задача 20226
			КонецЕсли
			#КонецВставки
		КонецЕсли;
		
	КонецЕсли;

	Возврат Результат;

КонецФункции

&ИзменениеИКонтроль("ПерезаполнитьЗаданиеНаПеревозкуПоРасходнымОрдерам")
Функция РСК_ПерезаполнитьЗаданиеНаПеревозкуПоРасходнымОрдерам(ЗаданиеОбъект, ТоварыКДоставке)

	СтруктураВозврата = Новый Структура("ЕстьИзменения, ");

	Запрос = Новый Запрос(ТекстЗапросаЗаполненияЗаданияНаПеревозкуПоРасходнымОрдерам());
	Запрос.УстановитьПараметр("Ссылка", ЗаданиеОбъект.Ссылка);
	Запрос.УстановитьПараметр("ЗаданиеНаПеревозкуРаспоряжения", ЗаданиеОбъект.Распоряжения.Выгрузить());
	Запрос.УстановитьПараметр("ЗаданиеНаПеревозкуМаршрут", ЗаданиеОбъект.Маршрут.Выгрузить());
	Запрос.УстановитьПараметр("ДатаВремяРейсаПланС", ЗаданиеОбъект.ДатаВремяРейсаПланС);
	СпособыДоставки = Новый Массив;
	СпособыДоставки.Добавить(Перечисления.СпособыДоставки.СиламиПеревозчикаПоАдресу);
	СпособыДоставки.Добавить(Перечисления.СпособыДоставки.ДоКлиента);
	СпособыДоставки.Добавить(Перечисления.СпособыДоставки.КПолучателюОпределяетСлужбаДоставки);
	Если ПолучитьФункциональнуюОпцию("ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками") Тогда
		СпособыДоставки.Добавить(Перечисления.СпособыДоставки.СиламиПеревозчика);
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
		СпособыДоставки.Добавить(Перечисления.СпособыДоставки.РСК_ПеревозчикДоПВЗ);
		СпособыДоставки.Добавить(Перечисления.СпособыДоставки.РСК_ПеревозчикДоКлиента);
		#КонецВставки
	КонецЕсли;
	Запрос.УстановитьПараметр("СпособыДоставки", СпособыДоставки);
	Запрос.УстановитьПараметр("ДоставкаСиламиПеревозчикаПоАдресу", Перечисления.СпособыДоставки.СиламиПеревозчикаПоАдресу);

	Результат = Запрос.ВыполнитьПакет();
	ВГраница = Результат.ВГраница();

	ЕстьИзменения = Ложь;

	// Изменяем
	Выборка = Результат[ВГраница-2].Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаРаспоряжений = ЗаданиеОбъект.Распоряжения[Выборка.НомерСтроки - 1];
		СтрокаМаршрута = ЗаданиеОбъект.Маршрут[Выборка.МаршрутНомерСтроки - 1];
		СтрокаМаршрута.Вес = СтрокаМаршрута.Вес + (Выборка.Вес - СтрокаРаспоряжений.Вес);
		СтрокаМаршрута.Объем = СтрокаМаршрута.Объем + (Выборка.Объем - СтрокаРаспоряжений.Объем);
		ЗаполнитьЗначенияСвойств(СтрокаРаспоряжений, Выборка);
		ЕстьИзменения = Истина;
	КонецЦикла;

	// Удаляем строки распоряжений
	// Выборка упорядочена по убыванию номеров строк распоряжений.
	Выборка = Результат[ВГраница-4].Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаРаспоряжений = ЗаданиеОбъект.Распоряжения[Выборка.НомерСтроки - 1];
		СтрокаМаршрута = ЗаданиеОбъект.Маршрут[Выборка.МаршрутНомерСтроки - 1];
		СтрокаМаршрута.Вес = СтрокаМаршрута.Вес - СтрокаРаспоряжений.Вес;
		СтрокаМаршрута.Объем = СтрокаМаршрута.Объем - СтрокаРаспоряжений.Объем;
		ЗаданиеОбъект.Распоряжения.Удалить(Выборка.НомерСтроки - 1);
		ЕстьИзменения = Истина;
	КонецЦикла;

	// Удаляем пункты маршрута
	// Выборка упорядочена по убыванию номеров строк маршрута.
	Выборка = Результат[ВГраница-3].Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаданиеОбъект.Маршрут.Удалить(Выборка.МаршрутНомерСтроки - 1);
		ЕстьИзменения = Истина;
	КонецЦикла;

	// Добавляем новые
	Выборка = Результат[ВГраница-1].Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаРаспоряжений = ЗаданиеОбъект.Распоряжения.Добавить();
		СтрокаМаршрута = ДобавитьИзменитьПунктПоРеквизитамДоставки(ЗаданиеОбъект.Маршрут, Выборка, ЗаданиеОбъект.ДатаВремяРейсаПланС);
		ЗаполнитьЗначенияСвойств(СтрокаРаспоряжений, Выборка);
		СтрокаРаспоряжений.КлючСвязи = СтрокаМаршрута.КлючСвязи;
		ЕстьИзменения = Истина;
	КонецЦикла;

	ТаблицаТоварыКДоставке = Результат[ВГраница].Выгрузить();
	// Заполняем ТоварыКДоставке
	Если ТоварыКДоставке <> Неопределено Тогда
		
		#Вставка
		//++ РС Консалт: Минаков А.С. Задача 20226
		СтруктураПоиска = Новый Структура("РСК_Транзитная", Истина);
		НайденныеСтроки = ЗаданиеОбъект.Распоряжения.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() Тогда
			СтруктураПоиска = Новый Структура("Распоряжение, Склад");
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, НайденнаяСтрока);
				НайденныеСтрокиНовыеТовары = ТаблицаТоварыКДоставке.НайтиСтроки(СтруктураПоиска);
				Для Каждого НайденнаяНоваяСтрока Из НайденныеСтрокиНовыеТовары Цикл
					ТаблицаТоварыКДоставке.Удалить(НайденнаяНоваяСтрока)	
				КонецЦикла;
				НайденныеСтрокиТовары = ТоварыКДоставке.НайтиСтроки(СтруктураПоиска);
				Для Каждого НайденнаяНоваяСтрока Из НайденныеСтрокиТовары Цикл
					ЗаполнитьЗначенияСвойств(ТаблицаТоварыКДоставке.Добавить(), НайденнаяНоваяСтрока)	
				КонецЦикла
			КонецЦикла	
		КонецЕсли;	
		//++ РС Консалт: Минаков А.С. Задача 20226
		#КонецВставки
		ТоварыКДоставке.Загрузить(ТаблицаТоварыКДоставке);

	Иначе
		
		#Вставка
		//++ РС Консалт: Минаков А.С. Задача 20226
		СтруктураПоиска = Новый Структура("РСК_Транзитная", Истина);
		НайденныеСтроки = ЗаданиеОбъект.Распоряжения.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() Тогда
			НаборТоварыКДоставке = РегистрыСведений.ТоварыКДоставке.СоздатьНаборЗаписей();
			НаборТоварыКДоставке.Отбор.ЗаданиеНаПеревозку.Установить(ЗаданиеОбъект.Ссылка);
			НаборТоварыКДоставке.Прочитать();
			СтруктураПоиска = Новый Структура("Распоряжение, Склад");
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, НайденнаяСтрока);
				НайденныеСтрокиНовыеТовары = ТаблицаТоварыКДоставке.НайтиСтроки(СтруктураПоиска);
				Для Каждого НайденнаяНоваяСтрока Из НайденныеСтрокиНовыеТовары Цикл
					ТаблицаТоварыКДоставке.Удалить(НайденнаяНоваяСтрока)	
				КонецЦикла;
				НайденныеСтрокиТовары = НаборТоварыКДоставке.НайтиСтроки(СтруктураПоиска);
				Для Каждого НайденнаяНоваяСтрока Из НайденныеСтрокиТовары Цикл
					ЗаполнитьЗначенияСвойств(ТаблицаТоварыКДоставке.Добавить(), НайденнаяНоваяСтрока)	
				КонецЦикла
			КонецЦикла	
		КонецЕсли;	
		//++ РС Консалт: Минаков А.С. Задача 20226
		#КонецВставки
		ЗаданиеОбъект.ДополнительныеСвойства.Вставить("ТоварыКДоставке", ТаблицаТоварыКДоставке);

	КонецЕсли;

	Для Каждого Стр Из ЗаданиеОбъект.Распоряжения Цикл
		Стр.ДоставляетсяПолностью = Ложь;
	КонецЦикла;
	ЗаполнитьПризнакДоставляетсяПолностью(ТаблицаТоварыКДоставке, ЗаданиеОбъект.Распоряжения);

	Возврат ЕстьИзменения;

КонецФункции

&ИзменениеИКонтроль("ОтразитьСостояниеДоставки")
Процедура РСК_ОтразитьСостояниеДоставки(РаспоряженияСсылки, Отказ, УдалениеПроведения)

	Если Отказ
		Или Не ЗначениеЗаполнено(РаспоряженияСсылки)
		Или Не ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеДоставкой") Тогда
		Возврат;
	КонецЕсли;

	Если Не ТипЗнч(РаспоряженияСсылки) = Тип("Массив") Тогда

		МассивСсылок = Новый Массив;
		МассивСсылок.Добавить(РаспоряженияСсылки);

		МассивДоговоровРаспоряжений = Новый Массив;

		ДоговорРаспоряжение = ПолучитьДоговорРаспоряжение(РаспоряженияСсылки);

		Если ДоговорРаспоряжение <> Неопределено Тогда

			Договор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РаспоряженияСсылки, "Договор");

			МассивСсылок.Добавить(Договор);
			МассивДоговоровРаспоряжений.Добавить(Договор);

		КонецЕсли;

	Иначе

		МассивСсылок = РаспоряженияСсылки;
		МассивДоговоровРаспоряжений = Новый Массив;

		ДоговорРаспоряжение = ПолучитьДоговорРаспоряжение(РаспоряженияСсылки);

		Если ДоговорРаспоряжение <> Неопределено Тогда

			Договор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РаспоряженияСсылки, "Договор");

			МассивСсылок.Добавить(Договор);
			МассивДоговоровРаспоряжений.Добавить(Договор);

		КонецЕсли;

	КонецЕсли;

	Если УдалениеПроведения Тогда
		Для Каждого Ссылка Из МассивСсылок Цикл
			Набор = РегистрыСведений.СостоянияИРеквизитыДоставки.СоздатьНаборЗаписей();
			Набор.Отбор.Распоряжение.Установить(Ссылка);
			УстановитьПривилегированныйРежим(Истина);
			Набор.Записать(Истина);
			УстановитьПривилегированныйРежим(Ложь);
		КонецЦикла;
		Возврат;
	КонецЕсли;

	ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками = ПолучитьФункциональнуюОпцию("ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками");

	ЭтоДоставкаНаНашСклад = ДоставкаТоваровКлиентСервер.ЭтоРаспоряжениеНаДоставкуНаНашСклад(МассивСсылок[0]);

	ТаблицаРаспоряжений = Новый ТаблицаЗначений;
	ТаблицаРаспоряжений.Колонки.Добавить("Ссылка", Метаданные.ОпределяемыеТипы.РаспоряжениеНаДоставку.Тип);
	СоответствиеТипов = Новый Соответствие;
	ТекстЗапроса = "";
	Для Каждого Ссылка Из МассивСсылок Цикл

		Если ДоставкаТоваровКлиентСервер.ЭтоРаспоряжениеНаДоставкуНаНашСклад(Ссылка) Тогда

			ПараметрыПриемки = ПолучитьПараметрыПриемки(Ссылка);

			СпособДоставки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "СпособДоставки");

			ДоставкаОпределенаВДоговоре = ДоставкаОпределенаВДоговоре(Ссылка);

			Если ((ПараметрыПриемки.СоглашениеЯвляетсяРаспоряжением
				Или ДоставкаОпределенаВДоговоре
				И ПараметрыПриемки.ДоговорЯвляетсяРаспоряжением)
				И ПараметрыПриемки.ЭтоРаспоряжение)
				Или
				(Не ПараметрыПриемки.ЭтоДокументПоступление
				И ДоставкаТоваровКлиентСервер.ДоставкаИспользуется(СпособДоставки,
				ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками)) Тогда

				Набор = РегистрыСведений.СостоянияИРеквизитыДоставки.СоздатьНаборЗаписей();
				Набор.Отбор.Распоряжение.Установить(Ссылка);
				Набор.Записать(Истина);

				Продолжить;

			КонецЕсли;

		КонецЕсли;

		НоваяСтрока = ТаблицаРаспоряжений.Добавить();
		НоваяСтрока.Ссылка = Ссылка;

		Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			Продолжить; // Использование договора как распоряжения определяется в документах
		КонецЕсли;

		ТипСсылки = ТипЗнч(Ссылка);
		Если СоответствиеТипов[ТипСсылки] <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		СоответствиеТипов.Вставить(ТипСсылки,Истина);
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Ссылка);
		ТекстЗапросаПоДокументу = МенеджерОбъекта.ТекстЗапросаРеквизитыДоставки();
		Если ДоставкаТоваровКлиентСервер.ЭтоРаспоряжениеНаДоставкуНаНашСклад(Ссылка) Тогда
			ПараметрыПриемки = ПолучитьПараметрыПриемки(Ссылка);
			ТекстЗапросаПоДокументу = СтрЗаменить(ТекстЗапросаПоДокументу, "&ЭтоРаспоряжение", ?(ПараметрыПриемки.ЭтоРаспоряжение, "ИСТИНА", "ЛОЖЬ"));
		КонецЕсли;
		Если ТекстЗапроса = "" Тогда
			ПоложениеИЗ = СтрНайти(ТекстЗапросаПоДокументу, "ИЗ");
			ТекстЗапроса = Лев(ТекстЗапросаПоДокументу,ПоложениеИЗ - 1)
			+ " ПОМЕСТИТЬ ДанныеРаспоряжений
			|" + Прав(ТекстЗапросаПоДокументу,СтрДлина(ТекстЗапросаПоДокументу) - ПоложениеИЗ + 1);
		Иначе
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|" + ТекстЗапросаПоДокументу;
		КонецЕсли;
	КонецЦикла;

	Если Не ЗначениеЗаполнено(ТекстЗапросаПоДокументу) Тогда
		Возврат;
	КонецЕсли;

	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияУТ.РазделительЗапросовВПакете()
	+
	"ВЫБРАТЬ
	|	ТаблицаРаспоряжений.Ссылка КАК Ссылка,
	|	ТаблицаРаспоряжений.Ссылка ССЫЛКА Документ.ПоручениеЭкспедитору КАК ЭтоПоручениеЭкспедитору
	|ПОМЕСТИТЬ ТаблицаРаспоряжений
	|ИЗ
	|	&ТаблицаРаспоряжений КАК ТаблицаРаспоряжений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКДоставке.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку,
	|	ТоварыКДоставке.Распоряжение КАК Распоряжение,
	|	ТоварыКДоставке.Склад КАК Склад,
	|	ТоварыКДоставке.Номенклатура КАК Номенклатура,
	|	ТоварыКДоставке.Характеристика КАК Характеристика,
	|	ТоварыКДоставке.Назначение КАК Назначение,
	|	ТоварыКДоставке.Серия КАК Серия,
	|	ТоварыКДоставке.Количество КАК Количество,
	|	ТоварыКДоставке.ВсеТовары КАК ВсеТовары
	|ПОМЕСТИТЬ ТоварыКДоставке
	|ИЗ
	|	РегистрСведений.ТоварыКДоставке КАК ТоварыКДоставке
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаРаспоряжений КАК ТаблицаРаспоряжений
	|		ПО (ТаблицаРаспоряжений.Ссылка = ТоварыКДоставке.Распоряжение)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку КАК ДокументЗаданиеНаПеревозку
	|		ПО (ДокументЗаданиеНаПеревозку.Ссылка = ТоварыКДоставке.ЗаданиеНаПеревозку)
	|			И (ДокументЗаданиеНаПеревозку.Проведен)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Распоряжение,
	|	Склад,
	|	ЗаданиеНаПеревозку
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РаспоряженияЗаданий.Распоряжение КАК Ссылка,
	|	РаспоряженияЗаданий.Склад КАК Склад,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ТоварыКДоставке.ЗаданиеНаПеревозку ЕСТЬ NULL
	|					И ЗаданиеНаПеревозкуШапка.Проведен
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ВсеПроведенныеЗаданияБезТоваров,
	|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
	|				КОГДА ТоварыКДоставке.ВсеТовары
	|						И ЗаданиеНаПеревозкуШапка.Проведен
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ), МАКСИМУМ(ТаблицаРаспоряжений.ЭтоПоручениеЭкспедитору)) КАК ВсеТоварыВДоставке,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ЗаданиеНаПеревозкуШапка.Проведен
	|					И ЗаданиеНаПеревозкуШапка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданийНаПеревозку.Закрыто)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ВсеЗаданияЗакрыты,
	|	МАКСИМУМ(ЗаданиеНаПеревозкуШапка.Проведен) КАК ЕстьПроведенныеЗадания,
	|	МАКСИМУМ(ТаблицаРаспоряжений.ЭтоПоручениеЭкспедитору) КАК ЭтоПоручениеЭкспедитору
	|ПОМЕСТИТЬ ТаблицаПроверкиЗаданийИТоваровВДоставке
	|ИЗ
	|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК РаспоряженияЗаданий
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозкуШапка
	|		ПО РаспоряженияЗаданий.Ссылка = ЗаданиеНаПеревозкуШапка.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаРаспоряжений КАК ТаблицаРаспоряжений
	|		ПО (ТаблицаРаспоряжений.Ссылка = РаспоряженияЗаданий.Распоряжение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыКДоставке КАК ТоварыКДоставке
	|		ПО РаспоряженияЗаданий.Распоряжение = ТоварыКДоставке.Распоряжение
	|			И РаспоряженияЗаданий.Склад = ТоварыКДоставке.Склад
	|			И РаспоряженияЗаданий.Ссылка = ТоварыКДоставке.ЗаданиеНаПеревозку
	|
	|СГРУППИРОВАТЬ ПО
	|	РаспоряженияЗаданий.Распоряжение,
	|	РаспоряженияЗаданий.Склад
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Склад,
	|	ЕстьПроведенныеЗадания";

	Если ЭтоДоставкаНаНашСклад Тогда
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияУТ.РазделительЗапросовВПакете() +
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИСТИНА КАК ЕстьТоварыНеВключенныеВЗадания,
		|	Т.Распоряжение КАК Ссылка,
		|	Т.Склад
		|ПОМЕСТИТЬ РаспоряженияЧастичноВДоставке
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТоварыКДоставке.Распоряжение КАК Распоряжение,
		|		ТоварыКДоставке.Склад КАК Склад,
		|		ТоварыКДоставке.Номенклатура КАК Номенклатура,
		|		ТоварыКДоставке.Характеристика КАК Характеристика,
		|		ТоварыКДоставке.Назначение КАК Назначение,
		|		ТоварыКДоставке.Серия КАК Серия,
		|		-ТоварыКДоставке.Количество КАК Количество
		|	ИЗ
		|		ТоварыКДоставке КАК ТоварыКДоставке
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПроверкиЗаданийИТоваровВДоставке КАК ТаблицаПроверки
		|			ПО (ТаблицаПроверки.Склад = ТоварыКДоставке.Склад)
		|				И (ТаблицаПроверки.Ссылка = ТоварыКДоставке.Распоряжение)
		|				И НЕ ТаблицаПроверки.ВсеТоварыВДоставке
		|				И ТаблицаПроверки.ЕстьПроведенныеЗадания
		|				И ТаблицаПроверки.ЕстьПроведенныеЗадания
		|				И НЕ ТаблицаПроверки.ЭтоПоручениеЭкспедитору
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДанныеРаспоряженийПоТоварам.Ссылка,
		|		ДанныеРаспоряженийПоТоварам.Склад,
		|		ДанныеРаспоряженийПоТоварам.Номенклатура,
		|		ДанныеРаспоряженийПоТоварам.Характеристика,
		|		ДанныеРаспоряженийПоТоварам.Назначение,
		|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка),
		|		ДанныеРаспоряженийПоТоварам.Количество
		|	ИЗ
		|		Документ.ЗаказПоставщику.Товары КАК ДанныеРаспоряженийПоТоварам
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПроверкиЗаданийИТоваровВДоставке КАК ТаблицаПроверки
		|			ПО (ТаблицаПроверки.Склад = ДанныеРаспоряженийПоТоварам.Склад)
		|				И (ТаблицаПроверки.Ссылка = ДанныеРаспоряженийПоТоварам.Ссылка)
		|				И НЕ ТаблицаПроверки.ВсеТоварыВДоставке
		|				И ТаблицаПроверки.ЕстьПроведенныеЗадания
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДанныеРаспоряженийПоТоварам.Ссылка,
		|		ДанныеРаспоряженийПоТоварам.Склад,
		|		ДанныеРаспоряженийПоТоварам.Номенклатура,
		|		ДанныеРаспоряженийПоТоварам.Характеристика,
		|		ДанныеРаспоряженийПоТоварам.Назначение,
		|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка),
		|		ДанныеРаспоряженийПоТоварам.Количество
		|	ИЗ
		|		Документ.ПриобретениеТоваровУслуг.Товары КАК ДанныеРаспоряженийПоТоварам
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПроверкиЗаданийИТоваровВДоставке КАК ТаблицаПроверки
		|			ПО (ТаблицаПроверки.Склад = ДанныеРаспоряженийПоТоварам.Склад)
		|				И (ТаблицаПроверки.Ссылка = ДанныеРаспоряженийПоТоварам.Ссылка)
		|				И НЕ ТаблицаПроверки.ВсеТоварыВДоставке
		|				И ТаблицаПроверки.ЕстьПроведенныеЗадания
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДанныеРаспоряженийПоТоварам.Ссылка,
		|		ДанныеРаспоряженийПоТоварам.Склад,
		|		ДанныеРаспоряженийПоТоварам.Номенклатура,
		|		ДанныеРаспоряженийПоТоварам.Характеристика,
		|		ДанныеРаспоряженийПоТоварам.Назначение,
		|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка),
		|		ДанныеРаспоряженийПоТоварам.Количество
		|	ИЗ
		|		Документ.ПриемкаТоваровНаХранение.Товары КАК ДанныеРаспоряженийПоТоварам
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПроверкиЗаданийИТоваровВДоставке КАК ТаблицаПроверки
		|			ПО (ТаблицаПроверки.Склад = ДанныеРаспоряженийПоТоварам.Склад)
		|				И (ТаблицаПроверки.Ссылка = ДанныеРаспоряженийПоТоварам.Ссылка)
		|				И НЕ ТаблицаПроверки.ВсеТоварыВДоставке
		|				И ТаблицаПроверки.ЕстьПроведенныеЗадания) КАК Т
		|
		|СГРУППИРОВАТЬ ПО
		|	Т.Распоряжение,
		|	Т.Склад,
		|	Т.Характеристика,
		|	Т.Назначение,
		|	Т.Серия,
		|	Т.Номенклатура
		|
		|ИМЕЮЩИЕ
		|	СУММА(Т.Количество) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИСТИНА КАК НетОстатка,
		|	ТоварыКПоступлениюОбороты.ДокументПоступления КАК ДокументОтгрузкиПоступления,
		|	ТоварыКПоступлениюОбороты.Склад КАК Склад
		|ПОМЕСТИТЬ ОстаткиКОтгрузкеКПоступлению
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению.Обороты(, , , ДокументПоступления В (&Ссылки)) КАК ТоварыКПоступлениюОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКПоступлению.Остатки(, ДокументПоступления В (&Ссылки)) КАК ОстаткиТоварыКПоступлению
		|		ПО ТоварыКПоступлениюОбороты.ДокументПоступления = ОстаткиТоварыКПоступлению.ДокументПоступления
		|			И ТоварыКПоступлениюОбороты.Склад = ОстаткиТоварыКПоступлению.Склад
		|ГДЕ
		|	ТоварыКПоступлениюОбороты.КОформлениюОрдеровПриход > 0
		|	И ОстаткиТоварыКПоступлению.КОформлениюОрдеровОстаток ЕСТЬ NULL";
	Иначе
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияУТ.РазделительЗапросовВПакете() +
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИСТИНА КАК ЕстьТоварыНеВключенныеВЗадания,
		|	Т.Распоряжение КАК Ссылка,
		|	Т.Склад
		|ПОМЕСТИТЬ РаспоряженияЧастичноВДоставке
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТоварыКДоставке.Распоряжение КАК Распоряжение,
		|		ТоварыКДоставке.Склад КАК Склад,
		|		ТоварыКДоставке.Номенклатура КАК Номенклатура,
		|		ТоварыКДоставке.Характеристика КАК Характеристика,
		|		ТоварыКДоставке.Назначение КАК Назначение,
		|		ТоварыКДоставке.Серия КАК Серия,
		|		-ТоварыКДоставке.Количество КАК Количество
		|	ИЗ
		|		ТоварыКДоставке КАК ТоварыКДоставке
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПроверкиЗаданийИТоваровВДоставке КАК ТаблицаПроверки
		|			ПО (ТаблицаПроверки.Склад = ТоварыКДоставке.Склад)
		|				И (ТаблицаПроверки.Ссылка = ТоварыКДоставке.Распоряжение)
		|				И НЕ ТаблицаПроверки.ВсеТоварыВДоставке
		|				И ТаблицаПроверки.ЕстьПроведенныеЗадания
		|				И НЕ ТаблицаПроверки.ЭтоПоручениеЭкспедитору
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТоварыКОтгрузке.ДокументОтгрузки,
		|		ТоварыКОтгрузке.Склад,
		|		ТоварыКОтгрузке.Номенклатура,
		|		ТоварыКОтгрузке.Характеристика,
		|		ТоварыКОтгрузке.Назначение,
		|		ТоварыКОтгрузке.Серия,
		|		ТоварыКОтгрузке.КОтгрузкеПриход
		|	ИЗ
		|		РегистрНакопления.ТоварыКОтгрузке.Обороты(, , , ДокументОтгрузки В (&Ссылки)) КАК ТоварыКОтгрузке
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПроверкиЗаданийИТоваровВДоставке КАК ТаблицаПроверки
		|			ПО (ТаблицаПроверки.Склад = ТоварыКОтгрузке.Склад)
		|				И (ТаблицаПроверки.Ссылка = ТоварыКОтгрузке.ДокументОтгрузки)
		|				И НЕ ТаблицаПроверки.ВсеТоварыВДоставке
		|				И ТаблицаПроверки.ЕстьПроведенныеЗадания
		|	ГДЕ
		|		ТоварыКОтгрузке.КОтгрузкеПриход > 0) КАК Т
		|
		|СГРУППИРОВАТЬ ПО
		|	Т.Распоряжение,
		|	Т.Склад,
		|	Т.Характеристика,
		|	Т.Назначение,
		|	Т.Серия,
		|	Т.Номенклатура
		|
		|ИМЕЮЩИЕ
		|	СУММА(Т.Количество) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИСТИНА КАК НетОстатка,
		|	ТоварыКОтгрузкеОбороты.ДокументОтгрузки КАК ДокументОтгрузкиПоступления,
		|	ТоварыКОтгрузкеОбороты.Склад КАК Склад
		|ПОМЕСТИТЬ ОстаткиКОтгрузкеКПоступлению
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.Обороты(, , , ДокументОтгрузки В (&Ссылки)) КАК ТоварыКОтгрузкеОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке.Остатки(, ДокументОтгрузки В (&Ссылки)) КАК ОстаткиТоварыКОтгрузке
		|		ПО ТоварыКОтгрузкеОбороты.ДокументОтгрузки = ОстаткиТоварыКОтгрузке.ДокументОтгрузки
		|			И ТоварыКОтгрузкеОбороты.Склад = ОстаткиТоварыКОтгрузке.Склад
		|ГДЕ
		|	ТоварыКОтгрузкеОбороты.КОтгрузкеПриход > 0
		|	И ОстаткиТоварыКОтгрузке.КОтгрузкеОстаток ЕСТЬ NULL";
	КонецЕсли;

	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияУТ.РазделительЗапросовВПакете() +
	"ВЫБРАТЬ
	|	ТаблицаРаспоряжений.Ссылка КАК Распоряжение,
	|	ДанныеРаспоряжений.Номер,
	|	ДанныеРаспоряжений.Дата,
	|	ЕСТЬNULL(ДанныеРаспоряжений.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) КАК Склад,
	|	ДанныеРаспоряжений.ПолучательОтправитель,
	|	ДанныеРаспоряжений.Перевозчик,
	|	ДанныеРаспоряжений.СпособДоставки,
	|	ДанныеРаспоряжений.Зона,
	|	ДанныеРаспоряжений.Адрес,
	|	ДанныеРаспоряжений.АдресЗначенияПолей,
	|	ДанныеРаспоряжений.ВремяС,
	|	ДанныеРаспоряжений.ВремяПо,
	|	ДанныеРаспоряжений.ДополнительнаяИнформация,
	|	ДанныеРаспоряжений.ДоставитьПолностью,
	|	ДанныеРаспоряжений.ОсобыеУсловияПеревозки,
	|	ДанныеРаспоряжений.ОсобыеУсловияПеревозкиОписание,
	|	ДанныеРаспоряжений.РазбиватьРасходныеОрдераПоРаспоряжениям,
	|	ВЫБОР
	|		КОГДА ДанныеРаспоряжений.Ссылка ЕСТЬ NULL
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ДанныеРаспоряжений.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПоставщикаДоНашегоСклада)
	|			ИЛИ НЕ &ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками
	|				И ДанныеРаспоряжений.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаДоНашегоСклада)
	|			ИЛИ НЕ &ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками
	#Удаление
	|				И ДанныеРаспоряжений.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
	|				И ДанныеРаспоряжений.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), 
	|										ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента))
	#КонецВставки
	|			ИЛИ ДанныеРаспоряжений.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.Самовывоз)
	|				И (НЕ ДанныеРаспоряжений.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
	|					ИЛИ ДанныеРаспоряжений.Дата < ДанныеРаспоряжений.Склад.ДатаНачалаОрдернойСхемыПриОтгрузке)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ДанныеРаспоряжений.Проведен = ЛОЖЬ
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ТаблицаПроверки.ВсеПроведенныеЗаданияБезТоваров
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ТаблицаПроверки.ВсеЗаданияЗакрыты = ИСТИНА
	|				И ОстаткиКОтгрузкеКПоступлению.НетОстатка
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ТаблицаПроверки.ВсеЗаданияЗакрыты = ИСТИНА
	|				И РаспоряженияЧастичноВДоставке.Ссылка ЕСТЬ NULL 
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|
	|		КОГДА ЕстьNULL(ТаблицаПроверки.ЕстьПроведенныеЗадания,Ложь)
	|				И НЕ ЕстьNULL(РаспоряженияЧастичноВДоставке.ЕстьТоварыНеВключенныеВЗадания,Ложь)
	|
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияДоставки.ПолностьюВДоставке)
	|
	|		ИНАЧЕ
	|			
	|			ЗНАЧЕНИЕ(Перечисление.СостоянияДоставки.ТребуетсяДоставка)
	|
	|	КОНЕЦ КАК Состояние
	|ИЗ
	|	ТаблицаРаспоряжений КАК ТаблицаРаспоряжений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеРаспоряжений КАК ДанныеРаспоряжений
	|		ПО ДанныеРаспоряжений.Ссылка = ТаблицаРаспоряжений.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПроверкиЗаданийИТоваровВДоставке КАК ТаблицаПроверки
	|		ПО ДанныеРаспоряжений.Склад = ТаблицаПроверки.Склад
	|			И ДанныеРаспоряжений.Ссылка = ТаблицаПроверки.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РаспоряженияЧастичноВДоставке КАК РаспоряженияЧастичноВДоставке
	|		ПО ДанныеРаспоряжений.Склад = РаспоряженияЧастичноВДоставке.Склад
	|			И ДанныеРаспоряжений.Ссылка = РаспоряженияЧастичноВДоставке.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиКОтгрузкеКПоступлению КАК ОстаткиКОтгрузкеКПоступлению
	|		ПО ДанныеРаспоряжений.Склад = ОстаткиКОтгрузкеКПоступлению.Склад
	|			И ДанныеРаспоряжений.Ссылка = ОстаткиКОтгрузкеКПоступлению.ДокументОтгрузкиПоступления
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаРаспоряжений.Ссылка,
	|	ЕСТЬNULL(ДанныеРаспоряжений.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))";

	ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками = ПолучитьФункциональнуюОпцию("ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками");

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылки", МассивСсылок);
	Запрос.УстановитьПараметр("ДоговораРаспоряженияНаПоступление", МассивДоговоровРаспоряжений);
	Запрос.УстановитьПараметр("ТаблицаРаспоряжений", ТаблицаРаспоряжений);
	Запрос.УстановитьПараметр("ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками",
	ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками);
	Запрос.УстановитьПараметр("ИспользоватьРасширенныеВозможностиЗаказаКлиента",
	ПолучитьФункциональнуюОпцию("ИспользоватьРасширенныеВозможностиЗаказаКлиента"));
	Запрос.УстановитьПараметр("ИспользуемыеСпособыДоставки", ДоставкаТоваровКлиентСервер.ИспользуемыеСпособыДоставки(
	ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками));

	УстановитьПривилегированныйРежим(Истина);

	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.СледующийПоЗначениюПоля("Распоряжение") Цикл

		НаборСостояние = РегистрыСведений.СостоянияИРеквизитыДоставки.СоздатьНаборЗаписей();
		НаборСостояние.Отбор.Распоряжение.Установить(Выборка.Распоряжение);

		Пока Выборка.СледующийПоЗначениюПоля("Склад") Цикл

			Если ЗначениеЗаполнено(Выборка.Состояние) Тогда
				ЗаполнитьЗначенияСвойств(НаборСостояние.Добавить(), Выборка);
			КонецЕсли;

		КонецЦикла;

		НаборСостояние.Записать();

	КонецЦикла;

КонецПроцедуры

&ИзменениеИКонтроль("ДополнитьРеквизитамиДоставкиДанныеЗаполнения")
Процедура РСК_ДополнитьРеквизитамиДоставкиДанныеЗаполнения(РеквизитыШапки, ВыборкаРеквизитыШапки)

	РеквизитыШапки.Вставить("СпособДоставки",                        ВыборкаРеквизитыШапки.СпособДоставки);
	Если ВыборкаРеквизитыШапки.СпособДоставки <> Перечисления.СпособыДоставки.Самовывоз 
		ИЛИ ЗначениеЗаполнено(ВыборкаРеквизитыШапки.АдресДоставки) Тогда //наследуем, если заполнен АдресДоставки

		РеквизитыШапки.Вставить("АдресДоставки",                         ВыборкаРеквизитыШапки.АдресДоставки);
		РеквизитыШапки.Вставить("АдресДоставкиЗначенияПолей",            ВыборкаРеквизитыШапки.АдресДоставкиЗначенияПолей);

		Если ВыборкаРеквизитыШапки.СпособДоставки = Перечисления.СпособыДоставки.ДоКлиента
			Или ВыборкаРеквизитыШапки.СпособДоставки = Перечисления.СпособыДоставки.СиламиПеревозчикаПоАдресу Тогда
			РеквизитыШапки.Вставить("ЗонаДоставки",                          ВыборкаРеквизитыШапки.ЗонаДоставки);
			РеквизитыШапки.Вставить("ВремяДоставкиС",                        ВыборкаРеквизитыШапки.ВремяДоставкиС);
			РеквизитыШапки.Вставить("ВремяДоставкиПо",                       ВыборкаРеквизитыШапки.ВремяДоставкиПо);
			РеквизитыШапки.Вставить("ДополнительнаяИнформацияПоДоставке",    ВыборкаРеквизитыШапки.ДополнительнаяИнформацияПоДоставке);
		КонецЕсли;
		Если ВыборкаРеквизитыШапки.СпособДоставки = Перечисления.СпособыДоставки.СиламиПеревозчика
			#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
			Или ВыборкаРеквизитыШапки.СпособДоставки = Перечисления.СпособыДоставки.РСК_ПеревозчикДоПВЗ
			Или ВыборкаРеквизитыШапки.СпособДоставки = Перечисления.СпособыДоставки.РСК_ПеревозчикДоКлиента
			#КонецВставки
			Или ВыборкаРеквизитыШапки.СпособДоставки = Перечисления.СпособыДоставки.СиламиПеревозчикаПоАдресу Тогда
			РеквизитыШапки.Вставить("ПеревозчикПартнер",                     ВыборкаРеквизитыШапки.ПеревозчикПартнер);
			Если ВыборкаРеквизитыШапки.ПеревозчикПартнер <> Справочники.Партнеры.ПустаяСсылка()
				И ВыборкаРеквизитыШапки.СпособДоставки = Перечисления.СпособыДоставки.СиламиПеревозчикаПоАдресу Тогда
				РеквизитыШапки.Вставить("АдресДоставкиПеревозчика",              ВыборкаРеквизитыШапки.АдресДоставкиПеревозчика);
				РеквизитыШапки.Вставить("АдресДоставкиПеревозчикаЗначенияПолей", ВыборкаРеквизитыШапки.АдресДоставкиПеревозчикаЗначенияПолей);
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&ИзменениеИКонтроль("ПриИзмененииФлагаПоЗаказам")
Процедура РСК_ПриИзмененииФлагаПоЗаказам(ЭлементыФормы, ДокОбъект, НакладнаяПоЗаказам)

	Если НакладнаяПоЗаказам Тогда
		Если ПолучитьФункциональнуюОпцию("ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками")
			#Удаление
			Или ДокОбъект.СпособДоставки <> Перечисления.СпособыДоставки.СиламиПеревозчика Тогда
			#КонецУдаления
			#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756 
			Или Не(ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.СиламиПеревозчика 
				Или ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.РСК_ПеревозчикДоПВЗ
				Или ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.РСК_ПеревозчикДоКлиента) Тогда
			#КонецВставки
			ЗаполнитьЗначенияСвойств(ДокОбъект, ДоставкаТоваровКлиентСервер.ПолучитьПустуюСтруктуруРеквизитовДоставки(ДокОбъект));
		КонецЕсли;
		УстановитьВидимостьЭлементовДоставки(ЭлементыФормы, ДокОбъект, НакладнаяПоЗаказам);
	Иначе
		ПриЧтенииСозданииРаспоряженийНаСервере(ЭлементыФормы, ДокОбъект, НакладнаяПоЗаказам);
	КонецЕсли;

КонецПроцедуры

&ИзменениеИКонтроль("ПроверитьЗаполнениеРеквизитовДоставки")
Процедура РСК_ПроверитьЗаполнениеРеквизитовДоставки(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ, НакладнаяПоЗаказам)

	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеДоставкой") Тогда
		МассивНепроверяемыхРеквизитов.Добавить("АдресДоставки");
		Возврат;
	КонецЕсли;

	// Проверим соответствие реквизитов доставки заказов и накладных
	КлючДанных = ОбщегоНазначенияУТ.КлючДанныхДляСообщенияПользователю(ДокументОбъект);
	Поле = "СпособДоставки";

	УстановитьПривилегированныйРежим(Истина);
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками") Тогда

		Если НакладнаяПоЗаказам
			#Удаление
			И ДокументОбъект.СпособДоставки = Перечисления.СпособыДоставки.СиламиПеревозчика Тогда
			#КонецУдаления
			#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
			И (ДокументОбъект.СпособДоставки = Перечисления.СпособыДоставки.СиламиПеревозчика
			Или ДокументОбъект.СпособДоставки = Перечисления.СпособыДоставки.РСК_ПеревозчикДоПВЗ
			Или ДокументОбъект.СпособДоставки = Перечисления.СпособыДоставки.РСК_ПеревозчикДоКлиента) Тогда
			#КонецВставки
			// Проверим, что в заказах по накладной указан корректный способ доставки
			ТекстЗапроса =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ТоварыКОтгрузкеОбороты.ДокументОтгрузки КАК Ссылка
			|ИЗ
			|	РегистрНакопления.ТоварыКОтгрузке.Обороты(, , Регистратор, ) КАК ТоварыКОтгрузкеОбороты
			|ГДЕ
			|	ТоварыКОтгрузкеОбороты.Регистратор = &Ссылка
			#Удаление
			|	И ТоварыКОтгрузкеОбороты.ДокументОтгрузки.СпособДоставки <> ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)";
			#КонецУдаления
			#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
			|	И НЕ ТоварыКОтгрузкеОбороты.ДокументОтгрузки.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика),
			|	ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента))";
			#КонецВставки

			Запрос = Новый Запрос(ТекстЗапроса);
			Запрос.УстановитьПараметр("Ссылка",ДокументОбъект.Ссылка);
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				ТекстСообщения = НСтр("ru = 'Способ доставки в связанном документе %Ссылка% не соответствует указанному в накладной.';
				|en = 'Delivery method in linked document %Ссылка% does not correspond to the one specified in the invoice.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,Поле,"Объект",Отказ);
			КонецЦикла;

		Иначе
			// Проверим, что в накладных по заказу указан корректный способ доставки
			ТекстЗапроса =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ТоварыКОтгрузкеОбороты.Регистратор КАК Ссылка
			|ИЗ
			|	РегистрНакопления.ТоварыКОтгрузке.Обороты(, , Регистратор, ДокументОтгрузки = &Ссылка) КАК ТоварыКОтгрузкеОбороты
			|ГДЕ
			|	ТоварыКОтгрузкеОбороты.Регистратор <> ТоварыКОтгрузкеОбороты.ДокументОтгрузки
			|	И ТоварыКОтгрузкеОбороты.КОформлениюРасход > 0";

			Запрос = Новый Запрос(ТекстЗапроса);
			Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);

			Выборка = Запрос.Выполнить().Выбрать();

			Пока Выборка.Следующий() Цикл
				#Удаление
				СиламиПеревозчика = ПредопределенноеЗначение("Перечисление.СпособыДоставки.СиламиПеревозчика"); 
				#КонецУдаления
				#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
				МассивСиламиПеревозчика = Новый Массив(3);
				МассивСиламиПеревозчика[0] = ПредопределенноеЗначение("Перечисление.СпособыДоставки.СиламиПеревозчика");
				МассивСиламиПеревозчика[1] = ПредопределенноеЗначение("Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ");
				МассивСиламиПеревозчика[2] = ПредопределенноеЗначение("Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента");
				#КонецВставки
				ЕстьСпособДоставки = ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(Выборка.Ссылка, "СпособДоставки");
				Если ЕстьСпособДоставки Тогда
					СпособДоставкиСвязанногоДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.Ссылка, "СпособДоставки");
					#Удаление
					Если ДокументОбъект.СпособДоставки = СиламиПеревозчика
						И СпособДоставкиСвязанногоДокумента <> СиламиПеревозчика
						Или ДокументОбъект.СпособДоставки <> СиламиПеревозчика
						И СпособДоставкиСвязанногоДокумента = СиламиПеревозчика Тогда
						#КонецУдаления
						#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
						Если Не МассивСиламиПеревозчика.Найти(ДокументОбъект.СпособДоставки) = Неопределено
							И МассивСиламиПеревозчика.Найти(СпособДоставкиСвязанногоДокумента) = Неопределено
							Или МассивСиламиПеревозчика.Найти(ДокументОбъект.СпособДоставки) = Неопределено
							И Не МассивСиламиПеревозчика.Найти(СпособДоставкиСвязанногоДокумента) = Неопределено Тогда	
							#КонецВставки

						ТекстСообщения = НСтр("ru = 'Способ доставки в связанном документе %Ссылка% не соответствует указанному в заказе.';
						|en = 'Delivery method in linked document %Ссылка% does not correspond to the one specified in the order.'");
						ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,Поле,"Объект",Отказ);
					КонецЕсли;
				КонецЕсли;

			КонецЦикла;

		КонецЕсли;

	КонецЕсли;

	УстановитьПривилегированныйРежим(Ложь);

	Если ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(ДокументОбъект, "ОсобыеУсловияПеревозки")
		И Не ДокументОбъект.ОсобыеУсловияПеревозки Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ОсобыеУсловияПеревозкиОписание");
	КонецЕсли;

	// Доставка не требуется
	Если Не ЗначениеЗаполнено(ДокументОбъект.СпособДоставки)
		Или ДокументОбъект.СпособДоставки = Перечисления.СпособыДоставки.ОпределяетсяВРаспоряжении
		#Удаление
		Или (НакладнаяПоЗаказам И Не ДокументОбъект.СпособДоставки = Перечисления.СпособыДоставки.СиламиПеревозчика)
		#КонецУдаления
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
		Или (НакладнаяПоЗаказам И Не(ДокументОбъект.СпособДоставки = Перечисления.СпособыДоставки.СиламиПеревозчика 
			Или ДокументОбъект.СпособДоставки = Перечисления.СпособыДоставки.РСК_ПеревозчикДоПВЗ
			Или ДокументОбъект.СпособДоставки = Перечисления.СпособыДоставки.РСК_ПеревозчикДоКлиента))
		#КонецВставки
		Или ДокументОбъект.СпособДоставки = Перечисления.СпособыДоставки.Самовывоз
		Или ДокументОбъект.СпособДоставки = Перечисления.СпособыДоставки.СиламиПоставщикаДоНашегоСклада Тогда

		МассивНепроверяемыхРеквизитов.Добавить("ПеревозчикПартнер");
		МассивНепроверяемыхРеквизитов.Добавить("АдресДоставки");
		МассивНепроверяемыхРеквизитов.Добавить("АдресДоставкиПеревозчика");

		// Доставка от нас
		
	#Удаление	
	ИначеЕсли ДокументОбъект.СпособДоставки = Перечисления.СпособыДоставки.СиламиПеревозчика Тогда
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
	ИначеЕсли ДокументОбъект.СпособДоставки = Перечисления.СпособыДоставки.СиламиПеревозчика 
		Или ДокументОбъект.СпособДоставки = Перечисления.СпособыДоставки.РСК_ПеревозчикДоПВЗ
		Или ДокументОбъект.СпособДоставки = Перечисления.СпособыДоставки.РСК_ПеревозчикДоКлиента Тогда
		#КонецВставки

		МассивНепроверяемыхРеквизитов.Добавить("АдресДоставкиПеревозчика");

	ИначеЕсли ДокументОбъект.СпособДоставки = Перечисления.СпособыДоставки.ДоКлиента
		Или ДокументОбъект.СпособДоставки = Перечисления.СпособыДоставки.КПолучателюОпределяетСлужбаДоставки
		Или  ДокументОбъект.СпособДоставки = Перечисления.СпособыДоставки.ДоКлиентаКурьером
		// Доставка к нам

		Или ДокументОбъект.СпособДоставки = Перечисления.СпособыДоставки.НашимиСиламиСАдресаОтправителя
		Или ДокументОбъект.СпособДоставки = Перечисления.СпособыДоставки.ОтОтправителяОпределяетСлужбаДоставки Тогда

		МассивНепроверяемыхРеквизитов.Добавить("ПеревозчикПартнер");
		МассивНепроверяемыхРеквизитов.Добавить("АдресДоставкиПеревозчика");

	ИначеЕсли ДокументОбъект.СпособДоставки = Перечисления.СпособыДоставки.СиламиПеревозчикаДоНашегоСклада Тогда

		МассивНепроверяемыхРеквизитов.Добавить("АдресДоставки");
		МассивНепроверяемыхРеквизитов.Добавить("АдресДоставкиПеревозчика");

	ИначеЕсли ДокументОбъект.СпособДоставки = Перечисления.СпособыДоставки.СиламиПеревозчикаДоПунктаПередачи Тогда

		МассивНепроверяемыхРеквизитов.Добавить("АдресДоставки");

	КонецЕсли;

КонецПроцедуры

&ИзменениеИКонтроль("ЗаполнитьРеквизитыПоСпособуДоставки")
Процедура РСК_ЗаполнитьРеквизитыПоСпособуДоставки(ЭлементыФормы, ДокОбъект, ДопИнфоИзмененоПользователем)

	ПустыеРеквизиты = ДоставкаТоваровКлиентСервер.ПолучитьПустуюСтруктуруРеквизитовДоставки(ДокОбъект);
	ЗаполнитьЗначенияСвойств(ДокОбъект, ПустыеРеквизиты,
	"АдресДоставкиПеревозчика, АдресДоставкиПеревозчикаЗначенияПолей, ЗонаДоставки, ВремяДоставкиС, ВремяДоставкиПо, Курьер");

	Если Не ДопИнфоИзмененоПользователем Тогда
		ДокОбъект.ДополнительнаяИнформацияПоДоставке = "";
	КонецЕсли;

	ПолучательОтправитель = ПолучательОтправитель(ДокОбъект);

	Если ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.СиламиПеревозчика
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
		Или ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.РСК_ПеревозчикДоПВЗ
		Или ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.РСК_ПеревозчикДоКлиента
		#КонецВставки
		Или ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.СиламиПеревозчикаПоАдресу
		Или ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.СиламиПеревозчикаДоНашегоСклада
		Или ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.СиламиПеревозчикаДоПунктаПередачи Тогда

		Если ЭлементыФормы.Найти("ПеревозчикПартнер") <> Неопределено
			И ЭлементыФормы.ПеревозчикПартнер.СписокВыбора.Количество() > 0
			И ДокОбъект.ПеревозчикПартнер = Справочники.Партнеры.ПустаяСсылка() Тогда
			ДокОбъект.ПеревозчикПартнер = ЭлементыФормы.ПеревозчикПартнер.СписокВыбора[0].Значение;
		КонецЕсли;

	Иначе

		ДокОбъект.ПеревозчикПартнер = Справочники.Партнеры.ПустаяСсылка();

	КонецЕсли;

	ИмяЭлементаАдрес = ИмяЭлементаАдрес(ЭлементыФормы);
	
	#Удаление
	Если ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.СиламиПеревозчика Тогда
		#КонецУдаления
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
	Если ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.СиламиПеревозчика 
		Или ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.РСК_ПеревозчикДоПВЗ
		Или ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.РСК_ПеревозчикДоКлиента Тогда
		#КонецВставки

		Если Не ДопИнфоИзмененоПользователем Тогда

			Если ЗначениеЗаполнено(ДокОбъект.АдресДоставки) Тогда
				НайденныйЭлементСЗ = ДоставкаТоваровКлиентСервер.НайтиВСпискеСтруктур(ЭлементыФормы[ИмяЭлементаАдрес].СписокВыбора,
				"АдресДоставки", ДокОбъект.АдресДоставки);
				Если Не НайденныйЭлементСЗ = Неопределено Тогда
					ДокОбъект.ДополнительнаяИнформацияПоДоставке = НайденныйЭлементСЗ.Значение.ДополнительнаяИнформацияПоДоставке;
				КонецЕсли;
			КонецЕсли;

		КонецЕсли;

	ИначеЕсли ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.ДоКлиента
		Или ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.КПолучателюОпределяетСлужбаДоставки
		Или ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.ПоручениеЭкспедиторуСоСклада
		Или ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.ПоручениеЭкспедиторуНаСклад
		Или ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.ПоручениеЭкспедиторуВПункте 
		Или ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.ДоКлиентаКурьером Тогда

		Если ЗначениеЗаполнено(ДокОбъект.АдресДоставки) Тогда
			НайденныйЭлементСЗ = ДоставкаТоваровКлиентСервер.НайтиВСпискеСтруктур(ЭлементыФормы[ИмяЭлементаАдрес].СписокВыбора,
			"АдресДоставки", ДокОбъект.АдресДоставки);
			Если Не НайденныйЭлементСЗ = Неопределено Тогда
				ЗаполнитьЗначенияСвойств(ДокОбъект, НайденныйЭлементСЗ.Значение,
				"ЗонаДоставки, ВремяДоставкиС, ВремяДоставкиПо")
			КонецЕсли;
		КонецЕсли;

	ИначеЕсли ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.НашимиСиламиСАдресаОтправителя
		Или ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.ОтОтправителяОпределяетСлужбаДоставки Тогда

		Если ЭлементыФормы.АдресПоставщика.СписокВыбора.Количество() > 0 Тогда
			ПерваяСтруктураВСписке = ЭлементыФормы[ИмяЭлементаАдрес].СписокВыбора[0].Значение;
			ЗаполнитьЗначенияСвойств(ДокОбъект,ПерваяСтруктураВСписке,,"ДополнительнаяИнформацияПоДоставке");
			Если Не ДопИнфоИзмененоПользователем Тогда
				ДокОбъект.ДополнительнаяИнформацияПоДоставке = ПерваяСтруктураВСписке.ДополнительнаяИнформацияПоДоставке;
			КонецЕсли;
		КонецЕсли;

	ИначеЕсли Не ЗначениеЗаполнено(ДокОбъект.СпособДоставки)
		Или ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.Самовывоз
		Или ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.СиламиПоставщикаДоНашегоСклада
		Или ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.СиламиПеревозчикаДоНашегоСклада Тогда

		ДокОбъект.ДополнительнаяИнформацияПоДоставке = "";
		ДокОбъект.ОсобыеУсловияПеревозки = Ложь;
		ДокОбъект.ОсобыеУсловияПеревозкиОписание = "";

	КонецЕсли;

КонецПроцедуры

&ИзменениеИКонтроль("УстановитьВидимостьЭлементовДоставки")
Функция РСК_УстановитьВидимостьЭлементовДоставки(ЭлементыФормы, ДокОбъект, НакладнаяПоЗаказам, ПараметрыПриемки, ЭтоДоставкаНаНашСклад)

	Если ЭтоДоставкаНаНашСклад = Неопределено Тогда
		ЭтоДоставкаНаНашСклад = ДоставкаТоваровКлиентСервер.ЭтоРаспоряжениеНаДоставкуНаНашСклад(ДокОбъект.Ссылка); 
	КонецЕсли;

	Если ЭтоДоставкаНаНашСклад И ПараметрыПриемки = Неопределено Тогда
		ПараметрыПриемки = ПолучитьПараметрыПриемки(ДокОбъект,,НакладнаяПоЗаказам);
	КонецЕсли;

	ИспользоватьУправлениеДоставкой = ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеДоставкой");

	ВидимостьДоставки = Ложь;

	Если ИспользоватьУправлениеДоставкой Тогда
		Если ЭтоДоставкаНаНашСклад Тогда 
			ВидимостьДоставки = ПараметрыПриемки.ЭтоДоговорКонтрагента
			Или ПараметрыПриемки.СоглашениеЯвляетсяРаспоряжением
			Или ПараметрыПриемки.ДоговорЯвляетсяРаспоряжением
			Или ПараметрыПриемки.ЭтоДокументПоступление
			Или ПараметрыПриемки.ЭтоРаспоряжение;
		Иначе
			ВидимостьДоставки = Не НакладнаяПоЗаказам
			#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
			Или ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.РСК_ПеревозчикДоПВЗ
			Или ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.РСК_ПеревозчикДоКлиента
			#КонецВставки
			Или ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.СиламиПеревозчика;
		КонецЕсли;
	КонецЕсли;

	Если ТипЗнч(ДокОбъект.Ссылка) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		ТипДоговора = ДокОбъект.ТипДоговора;
		ИспользоватьОформлениеЗакупок = (ТипДоговора = Перечисления.ТипыДоговоров.СПоставщиком
		Или ТипДоговора = Перечисления.ТипыДоговоров.ВвозИзЕАЭС
		Или ТипДоговора = Перечисления.ТипыДоговоров.Импорт);

		ВидимостьДоставки = ВидимостьДоставки И ИспользоватьОформлениеЗакупок;
	КонецЕсли;

	Если ЭлементыФормы.Найти("СтраницаДоставка") <> Неопределено Тогда
		ЭлементыФормы.СтраницаДоставка.Видимость = ВидимостьДоставки;
		#Удаление
		Если НакладнаяПоЗаказам И ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.СиламиПеревозчика Тогда
		#КонецУдаления
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
		Если НакладнаяПоЗаказам И (ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.СиламиПеревозчика 
			Или ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.РСК_ПеревозчикДоПВЗ
			Или ДокОбъект.СпособДоставки = Перечисления.СпособыДоставки.РСК_ПеревозчикДоКлиента) Тогда
			#КонецВставки
			ЭлементыФормы.СпособДоставки.ТолькоПросмотр = Истина;
		КонецЕсли;
	КонецЕсли;

	Возврат ВидимостьДоставки;

КонецФункции

&Вместо("СпособыДоставкиПеревозчикомКПолучателю")
Функция РСК_СпособыДоставкиПеревозчикомКПолучателю()
	
	СпособыДоставкиПеревозчикомКПолучателю = ПродолжитьВызов();
	
	СпособыДоставкиПеревозчикомКПолучателю.Добавить(Перечисления.СпособыДоставки.РСК_ПеревозчикДоПВЗ);
	СпособыДоставкиПеревозчикомКПолучателю.Добавить(Перечисления.СпособыДоставки.РСК_ПеревозчикДоКлиента);
	
	Возврат СпособыДоставкиПеревозчикомКПолучателю
	
КонецФункции


