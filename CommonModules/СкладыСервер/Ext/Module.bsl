
&ИзменениеИКонтроль("ИспользованиеСерийНаСкладе")
Функция РСК_ИспользованиеСерийНаСкладе(Склад, СкладМожетБытьГруппой)

	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("ИспользоватьСерииНоменклатуры", Ложь);
	СтруктураВозврата.Вставить("УчитыватьСебестоимостьПоСериям", Ложь);

	Если Не ЗначениеЗаполнено(Склад) Тогда
		Возврат СтруктураВозврата;
	КонецЕсли;
	#Вставка
	//РС Консалт: Трофимов Евгений 15.07.2022
	//Исправоение непонятного бага. Иногда сюда прилетают группы, а СкладМожетБытьГруппой = Ложь :(
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Склад, "ЭтоГруппа") Тогда
		СкладМожетБытьГруппой = Истина;
	КонецЕсли;
	#КонецВставки

	Если СкладМожетБытьГруппой Тогда

		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МАКСИМУМ(Склады.ИспользоватьСерииНоменклатуры) КАК ИспользоватьСерииНоменклатуры,
		|	МАКСИМУМ(Склады.УчитыватьСебестоимостьПоСериям) КАК УчитыватьСебестоимостьПоСериям
		|ИЗ
		|	Справочник.Склады КАК Склады
		|ГДЕ
		|	НЕ Склады.ЭтоГруппа
		|	И (Склады.Ссылка В ИЕРАРХИИ (&Склад)
		|			ИЛИ Склады.Ссылка = &Склад)
		|
		|ИМЕЮЩИЕ
		|	НЕ МАКСИМУМ(Склады.ИспользоватьСерииНоменклатуры) ЕСТЬ NULL ";

		Запрос.УстановитьПараметр("Склад",Склад);

		Выборка = Запрос.Выполнить().Выбрать();

		Если Выборка.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(СтруктураВозврата, Выборка);
		КонецЕсли;

	Иначе

		ПараметрыФО = Новый Структура("Склад", Склад);

		СтруктураВозврата.ИспользоватьСерииНоменклатуры  = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", ПараметрыФО); 
		СтруктураВозврата.УчитыватьСебестоимостьПоСериям = ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьПоСериямСклад", ПараметрыФО);

	КонецЕсли;

	Возврат СтруктураВозврата;

КонецФункции

&ИзменениеИКонтроль("ПереоформитьРасходныеОрдера")
Функция РСК_ПереоформитьРасходныеОрдера(Параметры)
	
	УстановитьПривилегированныйРежим(Истина);
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания();
	
	ОформленныеОрдера = Новый ТаблицаЗначений;
	ОформленныеОрдера.Колонки.Добавить("РасходныйОрдер",	Новый ОписаниеТипов("ДокументСсылка.РасходныйОрдерНаТовары"));
	ОформленныеОрдера.Колонки.Добавить("Номер",				Новый ОписаниеТипов("Строка"));
	ОформленныеОрдера.Колонки.Добавить("ДатаОтгрузки",		Новый ОписаниеТипов("Дата"));
	ОформленныеОрдера.Колонки.Добавить("Склад",				Новый ОписаниеТипов("СправочникСсылка.Склады"));
	ОформленныеОрдера.Колонки.Добавить("Помещение",			Новый ОписаниеТипов("СправочникСсылка.СкладскиеПомещения"));
	ОформленныеОрдера.Колонки.Добавить("Действие",			Новый ОписаниеТипов("Строка"));
	
	ОрдерЗаписан = Ложь;
	ЕстьОшибка = Ложь;
	ТекущаяДата = ТекущаяДатаСеанса();
	НачинатьОтгрузкуПослеФормированияЗаданияНаПеревозку = СкладыСервер.НачинатьОтгрузкуПослеФормированияЗаданияНаПеревозку(Параметры.Склад);
	СначалаНакладные = Константы.ПорядокОформленияНакладныхРасходныхОрдеров.Получить() = Перечисления.ПорядокОформленияНакладныхРасходныхОрдеров.СначалаНакладные;
	
	Если Не Параметры.свойство("СозданныеРасходныеОрдера") Тогда
		ОбъединитьОрдераПоТекущуюДату(Параметры, ТекущаяДата, ОформленныеОрдера);
	КонецЕсли;
	
	СтруктураТоварыДляОформленияРасходныхОрдеров = ВычислитьТоварыДляОформленияРасходныхОрдеров(Параметры, НачинатьОтгрузкуПослеФормированияЗаданияНаПеревозку, СначалаНакладные);	
	ДеревоТоварыКОтгрузке = СтруктураТоварыДляОформленияРасходныхОрдеров.ДеревоТоварыКОтгрузке;
	ТоварыКСборке = СтруктураТоварыДляОформленияРасходныхОрдеров.ТоварыКСборке;
	
	Если Не Параметры.свойство("СозданныеРасходныеОрдера") Тогда
		УменьшитьКоличествоВОрдерах(ТоварыКСборке, ОформленныеОрдера, ОрдерЗаписан);
	КонецЕсли;
	
	ТаблицаНоменклатурыДляЗапроса = ОбщегоНазначенияУТ.ДанныеДерева(ДеревоТоварыКОтгрузке, 6);
	
	ТаблицаНоменклатурыДляЗапроса = РаспределитьОтрицательныеКоличество(ТаблицаНоменклатурыДляЗапроса);
	
	Запрос = Новый Запрос;
	ТекстЗапроса = ТекстЗапросаСкладскаяОперацияТипДокумента() +
	"ВЫБРАТЬ
	|	ТоварыКОтгрузкеОстатки.ЗаданиеНаПеревозку,
	|	ТоварыКОтгрузкеОстатки.ОтгрузкаПоЗаданиюНаПеревозку,
	|	ТоварыКОтгрузкеОстатки.ДокументОтгрузки,
	|	ТоварыКОтгрузкеОстатки.Склад,
	|	ТоварыКОтгрузкеОстатки.Получатель,
	|	ВЫБОР
	|		КОГДА &ТекущаяДата > ТоварыКОтгрузкеОстатки.Период
	|			ТОГДА &ТекущаяДата
	|		ИНАЧЕ ТоварыКОтгрузкеОстатки.Период
	|	КОНЕЦ КАК ДатаОтгрузки,
	|	ТоварыКОтгрузкеОстатки.Номенклатура,
	|	ТоварыКОтгрузкеОстатки.Характеристика,
	|	ТоварыКОтгрузкеОстатки.Серия,
	|	ТоварыКОтгрузкеОстатки.Назначение,
	|	ТоварыКОтгрузкеОстатки.Количество КАК Количество,
	|	ТоварыКОтгрузкеОстатки.ДопустимоеОтклонение КАК ДопустимоеОтклонение
	|ПОМЕСТИТЬ ТаблицаНоменклатурыДляЗапроса
	|ИЗ
	|	&ТаблицаНоменклатурыДляЗапроса КАК ТоварыКОтгрузкеОстатки
	|ГДЕ
	|	ТоварыКОтгрузкеОстатки.Количество > ТоварыКОтгрузкеОстатки.ДопустимоеОтклонение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	| ТаблицаНоменклатурыДляЗапроса.Склад,
	| ТаблицаНоменклатурыДляЗапроса.Номенклатура,
	| ТаблицаНоменклатурыДляЗапроса.Характеристика,
	| ТаблицаНоменклатурыДляЗапроса.Серия,
	| ТаблицаНоменклатурыДляЗапроса.Назначение,
	| СУММА(ТаблицаНоменклатурыДляЗапроса.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	| ТаблицаНоменклатурыДляЗапроса КАК ТаблицаНоменклатурыДляЗапроса
	|
	|СГРУППИРОВАТЬ ПО
	| ТаблицаНоменклатурыДляЗапроса.Склад,
	| ТаблицаНоменклатурыДляЗапроса.Характеристика,
	| ТаблицаНоменклатурыДляЗапроса.Номенклатура,
	| ТаблицаНоменклатурыДляЗапроса.Серия,
	| ТаблицаНоменклатурыДляЗапроса.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНоменклатурыДляЗапроса.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку,
	|	ТаблицаНоменклатурыДляЗапроса.ОтгрузкаПоЗаданиюНаПеревозку КАК ОтгрузкаПоЗаданиюНаПеревозку,
	|	ТаблицаНоменклатурыДляЗапроса.Склад КАК Склад,
	|	ТаблицаНоменклатурыДляЗапроса.Получатель КАК Получатель,
	|	ВЫБОР
	|		КОГДА ТаблицаНоменклатурыДляЗапроса.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента
	|				ИЛИ ТаблицаНоменклатурыДляЗапроса.ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
	|				ИЛИ ТаблицаНоменклатурыДляЗапроса.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ТаблицаНоменклатурыДляЗапроса.ДокументОтгрузки.Соглашение.РазбиватьРасходныеОрдераПоРаспоряжениям, ЛОЖЬ)
	|						ТОГДА ТаблицаНоменклатурыДляЗапроса.ДокументОтгрузки
	|					ИНАЧЕ НЕОПРЕДЕЛЕНО
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК РаспоряжениеГруппировка,
	|	ТаблицаНоменклатурыДляЗапроса.ДатаОтгрузки КАК ДатаОтгрузки,	
	|	СкладскаяОперацияТипДокумента.СкладскаяОперация КАК СкладскаяОперация,
	|	ТаблицаНоменклатурыДляЗапроса.ДокументОтгрузки КАК Распоряжение,	
	|	ТаблицаНоменклатурыДляЗапроса.Номенклатура КАК Номенклатура,
	|	ТаблицаНоменклатурыДляЗапроса.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаНоменклатурыДляЗапроса.Характеристика КАК Характеристика,
	|	ТаблицаНоменклатурыДляЗапроса.Серия КАК Серия,
	|	ТаблицаНоменклатурыДляЗапроса.Назначение КАК Назначение,
	|	ТаблицаНоменклатурыДляЗапроса.ДопустимоеОтклонение КАК ДопустимоеОтклонение,
	|	СУММА(ТаблицаНоменклатурыДляЗапроса.Количество) КАК Количество
	|ИЗ
	|	ТаблицаНоменклатурыДляЗапроса КАК ТаблицаНоменклатурыДляЗапроса
	|		ЛЕВОЕ СОЕДИНЕНИЕ СкладскаяОперацияТипДокумента КАК СкладскаяОперацияТипДокумента
	|		ПО ТИПЗНАЧЕНИЯ(ТаблицаНоменклатурыДляЗапроса.ДокументОтгрузки) = СкладскаяОперацияТипДокумента.Тип
	|			И ВЫБОР
	|				КОГДА ТаблицаНоменклатурыДляЗапроса.ДокументОтгрузки ССЫЛКА Документ.ЗаказНаСборку
	|					ТОГДА ВЫРАЗИТЬ(ТаблицаНоменклатурыДляЗапроса.ДокументОтгрузки КАК Документ.ЗаказНаСборку).ХозяйственнаяОперация
	|				КОГДА ТаблицаНоменклатурыДляЗапроса.ДокументОтгрузки ССЫЛКА Документ.СборкаТоваров
	|					ТОГДА ВЫРАЗИТЬ(ТаблицаНоменклатурыДляЗапроса.ДокументОтгрузки КАК Документ.СборкаТоваров).ХозяйственнаяОперация
	|				КОГДА ТаблицаНоменклатурыДляЗапроса.ДокументОтгрузки ССЫЛКА Документ.ОтгрузкаТоваровСХранения
	|					ТОГДА ВЫРАЗИТЬ(ТаблицаНоменклатурыДляЗапроса.ДокументОтгрузки КАК Документ.ОтгрузкаТоваровСХранения).ХозяйственнаяОперация
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ = СкладскаяОперацияТипДокумента.ХозяйственнаяОперация
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНоменклатурыДляЗапроса.ЗаданиеНаПеревозку,
	|	ТаблицаНоменклатурыДляЗапроса.ОтгрузкаПоЗаданиюНаПеревозку,
	|	ТаблицаНоменклатурыДляЗапроса.Склад,
	|	ТаблицаНоменклатурыДляЗапроса.Получатель,
	|	ВЫБОР
	|		КОГДА ТаблицаНоменклатурыДляЗапроса.ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента
	|				ИЛИ ТаблицаНоменклатурыДляЗапроса.ДокументОтгрузки ССЫЛКА Документ.ПередачаТоваровХранителю
	|				ИЛИ ТаблицаНоменклатурыДляЗапроса.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ТаблицаНоменклатурыДляЗапроса.ДокументОтгрузки.Соглашение.РазбиватьРасходныеОрдераПоРаспоряжениям, ЛОЖЬ)
	|						ТОГДА ТаблицаНоменклатурыДляЗапроса.ДокументОтгрузки
	|					ИНАЧЕ НЕОПРЕДЕЛЕНО
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаНоменклатурыДляЗапроса.ДатаОтгрузки,
	|	СкладскаяОперацияТипДокумента.СкладскаяОперация,
	|	ТаблицаНоменклатурыДляЗапроса.ДокументОтгрузки,
	|	ТаблицаНоменклатурыДляЗапроса.Номенклатура,
	|	ТаблицаНоменклатурыДляЗапроса.Характеристика,
	|	ТаблицаНоменклатурыДляЗапроса.Серия,
	|	ТаблицаНоменклатурыДляЗапроса.Назначение,
	|	ТаблицаНоменклатурыДляЗапроса.ДопустимоеОтклонение
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаНоменклатурыДляЗапроса.Номенклатура.Наименование,
	|	ТаблицаНоменклатурыДляЗапроса.Характеристика.Наименование,
	|	ТаблицаНоменклатурыДляЗапроса.ДатаОтгрузки
	|
	|ИТОГИ ПО
	|	ОтгрузкаПоЗаданиюНаПеревозку,
	|	ЗаданиеНаПеревозку,	
	|	Склад,
	|	Получатель,
	|	РаспоряжениеГруппировка,	
	|	ДатаОтгрузки,
	|	СкладскаяОперация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	| ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	| ТоварыНаСкладахОстатки.Характеристика КАК Характеристика,
	| ТаблицаНоменклатуры.Серия КАК Серия,
	| ТоварыНаСкладахОстатки.Назначение КАК Назначение,
	| ТоварыНаСкладахОстатки.Склад КАК Склад,
	| ТоварыНаСкладахОстатки.Помещение КАК Помещение,
	| СУММА(0) КАК РейтингПомещения,
	| СУММА(0) КАК КоличествоВсего,
	| СУММА(0) КАК КоличествоВБазовыхИзрасходовано,
	| СУММА(ТоварыНаСкладахОстатки.ВНаличииОстаток - ТоварыНаСкладахОстатки.КОтгрузкеОстаток) КАК СвободныйОстатокВБазовых
	|ИЗ
	| РегистрНакопления.ТоварыНаСкладах.Остатки(
	|     ,
	|     (Номенклатура, Характеристика, Назначение, Склад) В
	|         (ВЫБРАТЬ
	|           ТаблицаНоменклатуры.Номенклатура,
	|           ТаблицаНоменклатуры.Характеристика,
	|           ТаблицаНоменклатуры.Назначение,
	|           ТаблицаНоменклатуры.Склад
	|         ИЗ
	|           ТаблицаНоменклатуры КАК ТаблицаНоменклатуры)
	|       И (&ПоВсемПомещениям
	|         ИЛИ Помещение = &Помещение)) КАК ТоварыНаСкладахОстатки
	|   ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|   ПО ТоварыНаСкладахОстатки.Номенклатура = ТаблицаНоменклатуры.Номенклатура
	|     И ТоварыНаСкладахОстатки.Характеристика = ТаблицаНоменклатуры.Характеристика
	|     И ТоварыНаСкладахОстатки.Склад = ТаблицаНоменклатуры.Склад
	|     И ТоварыНаСкладахОстатки.Назначение = ТаблицаНоменклатуры.Назначение
	|     И (ВЫБОР
	|       КОГДА ТаблицаНоменклатуры.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|         ТОГДА ИСТИНА
	|       ИНАЧЕ ТаблицаНоменклатуры.Серия = ТоварыНаСкладахОстатки.Серия
	|     КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	| ТоварыНаСкладахОстатки.Помещение,
	| ТаблицаНоменклатуры.Серия,
	| ТоварыНаСкладахОстатки.Склад,
	| ТоварыНаСкладахОстатки.Характеристика,
	| ТоварыНаСкладахОстатки.Номенклатура,
	| ТоварыНаСкладахОстатки.Назначение
	|
	|ИМЕЮЩИЕ
	| СУММА(ТоварыНаСкладахОстатки.ВНаличииОстаток - ТоварыНаСкладахОстатки.КОтгрузкеОстаток) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	| ТоварыНаСкладахОстатки.Номенклатура.Наименование,
	| ТоварыНаСкладахОстатки.Характеристика.Наименование
	|ИТОГИ
	| СУММА(РейтингПомещения),
	| СУММА(КоличествоВсего)
	|ПО
	| Помещение";
	
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Помещение", Параметры.Помещение);
	Запрос.УстановитьПараметр("ПоВсемПомещениям", Не ЗначениеЗаполнено(Параметры.Помещение));
	Запрос.УстановитьПараметр("ТаблицаНоменклатурыДляЗапроса", ТаблицаНоменклатурыДляЗапроса);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ДеревоТоваров = МассивРезультатов[3].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам); // ДеревоЗначений
	
	ДеревоПоПомещениям = МассивРезультатов[4].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТаблицаОшибок = ТаблицаНоменклатурыДляЗапроса.СкопироватьКолонки("Склад, Номенклатура, Характеристика, Назначение, Серия, Количество");
	ТаблицаОшибок.Колонки.Добавить("ЕдиницаИзмерения", Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения"));
	
	ПомещениеЗонаОтгрузки = Новый Соответствие;
	
	Для Каждого УровеньОтгрузкаПоЗаданиюНаПеревозку Из ДеревоТоваров.Строки Цикл	
		Для Каждого УровеньЗаданиеНаПеревозку Из УровеньОтгрузкаПоЗаданиюНаПеревозку.Строки Цикл
			
			Если ЗначениеЗаполнено(Параметры.ЗаданиеНаПеревозку) Тогда
				ЗаданиеНаПеревозку = Параметры.ЗаданиеНаПеревозку;
			Иначе
				ЗаданиеНаПеревозку = УровеньЗаданиеНаПеревозку.ЗаданиеНаПеревозку;
			КонецЕсли;
			
			Для Каждого УровеньСклад Из УровеньЗаданиеНаПеревозку.Строки Цикл 
				
				Для Каждого УровеньПолучатель Из УровеньСклад.Строки Цикл
					
					Для Каждого УровеньРаспоряжение Из УровеньПолучатель.Строки Цикл
					
						Для Каждого УровеньДатаОтгрузки Из УровеньРаспоряжение.Строки Цикл
							
							Для Каждого УровеньСкладскаяОперация Из УровеньДатаОтгрузки.Строки Цикл
								
								ТаблицаНоменклатуры = УровеньСкладскаяОперация.Строки;
								
								ВсеКоличествоОформленоПоПомещению = Ложь;
								// Если нет остатков вообще по помещениям
								Если ДеревоПоПомещениям.Строки.Количество() = 0 Тогда
									Для Каждого Строка Из ТаблицаНоменклатуры Цикл
										СтрокаТаблицыОшибок = ТаблицаОшибок.Добавить();
										ЗаполнитьЗначенияСвойств(СтрокаТаблицыОшибок,Строка);
									КонецЦикла;	
									Прервать;
								КонецЕсли;
								
								ИспользоватьПомещения = СкладыСервер.ИспользоватьСкладскиеПомещения(УровеньСкладскаяОперация.Склад, УровеньСкладскаяОперация.ДатаОтгрузки, Истина);
								МассивЛучшихПомещений = Новый Массив;
								
								// 1. Проводим ранжирование помещений по сумме степени собранности каждой позиции
								// 2. По лучшему помещению создаем документ
								// 3. Из количества к отгрузке вычитаем уже попавшее в документ количество
								// 4. Для всех помещений, кроме лучшего, проводим ранжирование (т.к. количество в каждой позиции могло уменьшится,
								//    рейтинг помещения мог поменяться).
								
								Пока ТаблицаНоменклатуры.Количество() > 0 Цикл
									
									// Указанный в строках по помещениям рейтинг нужно очищать:
									// - когда перешли к новому распоряжению
									// - когда выбрали товары лучшего помещения и нужно перерасчитать рейтинг оставшихся помещений.
									НужноОбнулитьРейтингСтрокПоПомещениям = Истина;     
									
									// Если нет остатков вообще по помещениям
									Если ДеревоПоПомещениям.Строки.Количество() = 0 Тогда
										Прервать;
									КонецЕсли;
									
									КоличествоВсего = ТаблицаНоменклатуры.Итог("Количество");
									ПомещенияОрдера = Новый Соответствие;
									ПомещенияТовары = Новый Соответствие;
									
									Для каждого СтрТабл Из ТаблицаНоменклатуры Цикл
										
										Для каждого СтрПомещение Из ДеревоПоПомещениям.Строки  Цикл 
											
											Если ИспользоватьПомещения И Не ЗначениеЗаполнено(СтрПомещение.Помещение) Тогда
												Продолжить;
											КонецЕсли;
											
											Если НужноОбнулитьРейтингСтрокПоПомещениям Тогда
												СтрПомещение.КоличествоВсего  = 0;
												СтрПомещение.РейтингПомещения = 0;
											КонецЕсли;
											
											Если МассивЛучшихПомещений.Найти(СтрПомещение.Помещение) <> Неопределено Тогда
												Продолжить;
											КонецЕсли;
											
											ДокументОбъект = ПомещенияОрдера.Получить(СтрПомещение.Помещение);
											ТоварыВОрдере = ПомещенияТовары.Получить(СтрПомещение.Помещение);
											
											Если ДокументОбъект = Неопределено Тогда
												
												ПараметрыПоискаРасходногоОрдера = Новый Структура;
												ПараметрыПоискаРасходногоОрдера.Вставить("Склад",					УровеньСкладскаяОперация.Склад);
												ПараметрыПоискаРасходногоОрдера.Вставить("Помещение",				СтрПомещение.Помещение);
												ПараметрыПоискаРасходногоОрдера.Вставить("ЗонаОтгрузки",			Параметры.ЗонаОтгрузки);
												ПараметрыПоискаРасходногоОрдера.Вставить("Получатель",				УровеньСкладскаяОперация.Получатель);
												ПараметрыПоискаРасходногоОрдера.Вставить("РаспоряжениеГруппировка",	УровеньСкладскаяОперация.РаспоряжениеГруппировка);
												ПараметрыПоискаРасходногоОрдера.Вставить("РаспоряженияНаОтгрузку",	Параметры.РаспоряженияНаОтгрузку);
												ПараметрыПоискаРасходногоОрдера.Вставить("СкладскаяОперация",		УровеньСкладскаяОперация.СкладскаяОперация);
												ПараметрыПоискаРасходногоОрдера.Вставить("ДатаОтгрузки",			УровеньСкладскаяОперация.ДатаОтгрузки);
												ПараметрыПоискаРасходногоОрдера.Вставить("ТекущаяДата",				ТекущаяДата); 
												ПараметрыПоискаРасходногоОрдера.Вставить("ЗаданиеНаПеревозку",		ЗаданиеНаПеревозку);
												ПараметрыПоискаРасходногоОрдера.Вставить("ОтгрузкаПоЗаданиюНаПеревозку", УровеньСкладскаяОперация.ОтгрузкаПоЗаданиюНаПеревозку);
												
												Если Параметры.Свойство("СозданныеРасходныеОрдера") Тогда
													Строка = Параметры.СозданныеРасходныеОрдера.Найти(Ложь, "Использован");
													Если Не Строка = неопределено Тогда
														ДокументОбъект = ЗаполнитьРасходныйОрдерНаТовары(ПараметрыПоискаРасходногоОрдера, Строка.ДокументОбъект);
														Строка.Использован = Истина;													
													Иначе 
														ДокументОбъект = ЗаполнитьРасходныйОрдерНаТовары(ПараметрыПоискаРасходногоОрдера, Документы.РасходныйОрдерНаТовары.СоздатьДокумент());
													КонецЕсли;
												Иначе
													ДокументОбъект = ПолучитьОбъектОрдер(ПараметрыПоискаРасходногоОрдера);
												КонецЕсли;
												
												ПомещенияОрдера.Вставить(СтрПомещение.Помещение, ДокументОбъект);
												
												ТоварыВОрдере = ДокументОбъект.ТоварыПоРаспоряжениям.ВыгрузитьКолонки();
												ПомещенияТовары.Вставить(СтрПомещение.Помещение, ТоварыВОрдере);
												
											КонецЕсли;
											
											СтруктураОтбора = Новый Структура("Номенклатура,Характеристика,Серия,Назначение");
											ЗаполнитьЗначенияСвойств(СтруктураОтбора,СтрТабл);
											
											МассивСтрок = СтрПомещение.Строки.НайтиСтроки(СтруктураОтбора);
											
											Если МассивСтрок.Количество() = 0 Тогда
												Продолжить;
											КонецЕсли;
											
											Номенклатура = МассивСтрок[0]; 
											
											КоличествоВДокумент = Мин(Номенклатура.СвободныйОстатокВБазовых - Номенклатура.КоличествоВБазовыхИзрасходовано, СтрТабл.Количество);
											
											Если КоличествоВДокумент = 0 Тогда
												Продолжить;
											КонецЕсли;	
											
											НоваяСтрокаТовара = ДокументОбъект.ТоварыПоРаспоряжениям.Добавить();
											НоваяСтрокаТовара.Распоряжение      = СтрТабл.Распоряжение;
											НоваяСтрокаТовара.Номенклатура      = СтрТабл.Номенклатура;
											НоваяСтрокаТовара.Характеристика    = СтрТабл.Характеристика;
											НоваяСтрокаТовара.Назначение      = СтрТабл.Назначение;
											НоваяСтрокаТовара.Серия           = СтрТабл.Серия;
											НоваяСтрокаТовара.Количество      = КоличествоВДокумент;
											
											НоваяСтрокаТоварыВОрдере = ТоварыВОрдере.Добавить();
											ЗаполнитьЗначенияСвойств(НоваяСтрокаТоварыВОрдере,НоваяСтрокаТовара);
											
											// Сразу не уменьшаем свободный остаток, т.к. если помещение не будет лучшим, брать из него не будем.
											Номенклатура.КоличествоВБазовыхИзрасходовано = Номенклатура.КоличествоВБазовыхИзрасходовано + КоличествоВДокумент;
											
											СтрПомещение.КоличествоВсего = СтрПомещение.КоличествоВсего + КоличествоВДокумент; 
											
											// СтрТабл.Количество не равно нулю: проверяется в запросе и при уменьшении количества в таблице ТаблицаНоменклатуры.
											СтрПомещение.РейтингПомещения = СтрПомещение.РейтингПомещения + КоличествоВДокумент/СтрТабл.Количество;       
											
										КонецЦикла;
										
										НужноОбнулитьРейтингСтрокПоПомещениям = Ложь;
										
									КонецЦикла;
									
									ДеревоПоПомещениям.Строки.Сортировать("РейтингПомещения УБЫВ, КоличествоВсего УБЫВ");
									
									ЛучшееПомещение = ДеревоПоПомещениям.Строки[0];
									
									Если ИспользоватьПомещения
										И Не ЗначениеЗаполнено(ЛучшееПомещение.Помещение) Тогда
										Если ДеревоПоПомещениям.Строки.Количество()>1 Тогда
											ЛучшееПомещение = ДеревоПоПомещениям.Строки[1];
										Иначе
											Прервать;
										КонецЕсли;
									КонецЕсли;
									
									// Если в помещениях нет остатка для этого распоряжения
									Если ЛучшееПомещение.РейтингПомещения = 0 Тогда
										Прервать;
									КонецЕсли;
									
									ДокументОбъект = ПомещенияОрдера[ЛучшееПомещение.Помещение];
									
									Если Параметры.Свойство("СозданныеРасходныеОрдера") Тогда
										// Очищаем товары в ордерах по нелучшим помещениям
										Для каждого Стр Из ДеревоПоПомещениям.Строки Цикл
											Если НЕ Стр = ЛучшееПомещение Тогда 
												Строка=Параметры.СозданныеРасходныеОрдера.найти(ПомещенияОрдера[Стр.Помещение],"ДокументОбъект");
												Если НЕ Строка = неопределено Тогда
													Строка.Использован = Ложь;
													Строка.ДокументОбъект.ТоварыПоРаспоряжениям.Очистить();
												КонецЕсли;
											КонецЕсли;
										КонецЦикла;
									КонецЕсли;
									
									ТоварыВОрдере = ПомещенияТовары[ЛучшееПомещение.Помещение];
									
									Если ДокументОбъект.ТоварыПоРаспоряжениям.Количество() > 0 Тогда    
										ОбъектНовый = Не ДокументОбъект.Проведен;
										#Вставка
										//++РС Консалт: Минаков А.С. Задача 21223
										Если ОбъектНовый И Параметры.Свойство("НовыйСтатус") Тогда
											ДокументОбъект.ДополнительныеСвойства.Вставить("НовыйСтатус", Параметры.НовыйСтатус)
										КонецЕсли;
										//++РС Консалт: Минаков А.С. Задача 21223
										#КонецВставки
										Если Не ЗаписатьОбъектОрдер(ДокументОбъект,Параметры.ФоновоеЗадание) Тогда
											ЕстьОшибка = Истина;
										КонецЕсли;
										
										Если ДокументОбъект.Проведен И Не ЕстьОшибка Тогда
											Если ОбъектНовый Тогда
												ОформленныеОрдераСтрока = ОформленныеОрдера.Добавить();
												ЗаполнитьЗначенияСвойств(ОформленныеОрдераСтрока, ДокументОбъект);
												ОформленныеОрдераСтрока.РасходныйОрдер = ДокументОбъект.Ссылка;
												ОформленныеОрдераСтрока.Действие = НСтр("ru = 'Создан новый';
																						|en = 'New is created'");
											Иначе
												Если ОформленныеОрдера.Найти(ДокументОбъект.Ссылка, "РасходныйОрдер") = Неопределено Тогда
													ОформленныеОрдераСтрока = ОформленныеОрдера.Добавить();
													ЗаполнитьЗначенияСвойств(ОформленныеОрдераСтрока, ДокументОбъект);
													ОформленныеОрдераСтрока.РасходныйОрдер = ДокументОбъект.Ссылка;
													ОформленныеОрдераСтрока.Действие = НСтр("ru = 'Переоформлен';
																							|en = 'Reregister'");
												КонецЕсли;
											КонецЕсли;
										КонецЕсли;
										
										ОрдерЗаписан = Истина;
									КонецЕсли;
									
									// Если не последняя строка по получателю, складу, дате отгрузки и скл. операции,
									// то в лучшем помещении надо уменьшить свободный остаток.
									Если ДеревоТоваров.Строки.Количество() - 1 > ДеревоТоваров.Строки.Индекс(УровеньСкладскаяОперация) Тогда
										
										// Помещение выбрано - можно уменьшать свободный остаток
										
										Для Каждого СтрТовары Из ТоварыВОрдере Цикл 
											ОтборСтрок = Новый Структура("Склад,Номенклатура,Характеристика,Назначение,Серия");
											ЗаполнитьЗначенияСвойств(ОтборСтрок,СтрТовары);
											ОтборСтрок.Склад = УровеньСкладскаяОперация.Склад;
											СтрокаНоменклатуры = ЛучшееПомещение.Строки.НайтиСтроки(ОтборСтрок);
											Если СтрокаНоменклатуры.Количество() > 0 Тогда
												Номенклатура = СтрокаНоменклатуры[0];
												Номенклатура.СвободныйОстатокВБазовых = Номенклатура.СвободныйОстатокВБазовых - Номенклатура.КоличествоВБазовыхИзрасходовано;
												Номенклатура.КоличествоВБазовыхИзрасходовано = 0;
												
												// Чтобы в дальнейшем быстрее искалось, удалим пустую строку
												Если Номенклатура.СвободныйОстатокВБазовых = 0 Тогда 
													ЛучшееПомещение.Строки.Удалить(Номенклатура);
												КонецЕсли;
												
											КонецЕсли;
											
										КонецЦикла;
										
									КонецЕсли;
									
									// Очистка КоличествоВБазовыхИзрасходовано
									Для Каждого СтрокиПоПомещениям Из ДеревоПоПомещениям.Строки Цикл
										Для Каждого Строки Из СтрокиПоПомещениям.Строки Цикл
											Строки.КоличествоВБазовыхИзрасходовано = 0;
										КонецЦикла;
										Если ЛучшееПомещение <> СтрокиПоПомещениям Тогда
											СтрокиПоПомещениям.КоличествоВсего  = 0;
											СтрокиПоПомещениям.РейтингПомещения = 0;
										КонецЕсли;
									КонецЦикла;
									
									Если ЛучшееПомещение.КоличествоВсего = КоличествоВсего Тогда
										ВсеКоличествоОформленоПоПомещению = Истина;
									КонецЕсли;	
									
									Если ЛучшееПомещение.КоличествоВсего = КоличествоВсего
										Или ЛучшееПомещение.КоличествоВсего = 0
										Или МассивЛучшихПомещений.Количество() = ДеревоПоПомещениям.Строки.Количество() Тогда
										// Если собрали полностью,
										// или не собрали вообще прерываем цикл по строкам распоряжения
										// или перебрали все помещения.
										ЛучшееПомещение.КоличествоВсего   = 0;
										ЛучшееПомещение.РейтингПомещения  = 0;
										Прервать;
										
									Иначе
										ЛучшееПомещение.КоличествоВсего   = 0;
										ЛучшееПомещение.РейтингПомещения  = 0;
										
										ТоварыВОрдере.Свернуть("Распоряжение, Номенклатура, Характеристика, Назначение, Серия" , "Количество");
										
										Для каждого СтрТабл Из ТоварыВОрдере Цикл
											
											СтруктураОтбора = Новый Структура("Распоряжение,Номенклатура,Характеристика,Назначение,Серия");
											ЗаполнитьЗначенияСвойств(СтруктураОтбора,СтрТабл);
											
											СтрокиТаблицыНоменклатуры = ТаблицаНоменклатуры.НайтиСтроки(СтруктураОтбора);
											Если СтрокиТаблицыНоменклатуры.Количество() = 0 Тогда
												Продолжить;
											КонецЕсли;  
											СтрокаТаблицыНоменклатуры = СтрокиТаблицыНоменклатуры[0];
											
											СтрокаТаблицыНоменклатуры.Количество = СтрокаТаблицыНоменклатуры.Количество - СтрТабл.Количество;
											
											Если СтрокаТаблицыНоменклатуры.Количество <= СтрокаТаблицыНоменклатуры.ДопустимоеОтклонение Тогда
												ТаблицаНоменклатуры.Удалить(СтрокаТаблицыНоменклатуры);
											КонецЕсли;
											
										КонецЦикла;
										
									КонецЕсли;
									
									МассивЛучшихПомещений.Добавить(ЛучшееПомещение.Помещение);
									
									// Если в помещении нет товаров, его можно удалить из дерева помещений
									Если ЛучшееПомещение.Строки.Количество() = 0 Тогда
										ДеревоПоПомещениям.Строки.Удалить(ЛучшееПомещение);
									КонецЕсли;
									
								КонецЦикла;
								
								Если Не ВсеКоличествоОформленоПоПомещению Тогда
									Для Каждого Строка Из ТаблицаНоменклатуры Цикл
										СтрокаТаблицыОшибок = ТаблицаОшибок.Добавить();
										ЗаполнитьЗначенияСвойств(СтрокаТаблицыОшибок,Строка);
									КонецЦикла;
								КонецЕсли 	
								
							КонецЦикла;
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Если ТаблицаОшибок.Количество() = 0 И Не ОрдерЗаписан Тогда
		
		ЕстьОшибка = Истина;
		Если ЗначениеЗаполнено(Параметры.Получатель) Тогда 		
			ТекстСообщения = НСтр("ru = 'Расходные ордера по распоряжениям на отгрузку для получателя ""%Получатель%"" и склада ""%Склад%"" не созданы. Возможные причины:
			|- все товары уже собираются (собраны)%СначалаНакладные%%НачинатьОтгрузкуПослеФормированияЗаданияНаПеревозку%.';
			|en = 'Goods issue notes under shipment references for the ""%Получатель%"" recipient and the ""%Склад%"" warehouse are not created. Possible reasons:
			|- All goods are already being assembled (have been assembled) %СначалаНакладные%%НачинатьОтгрузкуПослеФормированияЗаданияНаПеревозку%.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Получатель%", Строка(Параметры.Получатель));
		Иначе
			ТекстСообщения = НСтр("ru = 'Расходные ордера по распоряжениям на отгрузку для склада ""%Склад%"" не созданы. Возможные причины:
			|- все товары уже собираются (собраны)%СначалаНакладные%%НачинатьОтгрузкуПослеФормированияЗаданияНаПеревозку%.';
			|en = 'Goods issue notes under shipment references for the ""%Склад%"" warehouse are not created. Possible reasons:
			|- All goods are already being assembled (have been assembled) %СначалаНакладные%%НачинатьОтгрузкуПослеФормированияЗаданияНаПеревозку%.'");
		КонецЕсли;
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%", Строка(Параметры.Склад));
		
		Если СначалаНакладные Тогда					   
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СначалаНакладные%", НСтр("ru = ';
			|- не оформлены накладные';
			|en = ';
			|- invoices are not created'"));
		Иначе
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СначалаНакладные%", "");
		КонецЕсли; 
		Если НачинатьОтгрузкуПослеФормированияЗаданияНаПеревозку Тогда					   
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НачинатьОтгрузкуПослеФормированияЗаданияНаПеревозку%", НСтр("ru = ';
			|- не оформлены задания на перевозку';
			|en = '
			|- Delivery orders are not registered'"));
		Иначе
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НачинатьОтгрузкуПослеФормированияЗаданияНаПеревозку%", "");
		КонецЕсли;  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	ИначеЕсли ТаблицаОшибок.Количество() > 0 Тогда	
		
		ЕстьОшибка = Истина;
		
		ШаблонСообщения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% %Назначение%
		|Недостаточно для отгрузки на складе ""%Склад%"" %Количество% %Единица%';
		|en = 'Item %НоменклатураХарактеристика% %Назначение%
		|Not enough for shipment in warehouse %Склад% %Количество% %Единица%'");
		
		ТаблицаОшибок.Свернуть("Склад, Номенклатура, Характеристика, Назначение, Серия, ЕдиницаИзмерения","Количество");
		Для Каждого СтрокаОшибка Из ТаблицаОшибок Цикл
			
			ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристика%",
			НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрокаОшибка.Номенклатура,
																СтрокаОшибка.Характеристика,
																СтрокаОшибка.Серия));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%", Строка(СтрокаОшибка.Склад));		
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", Строка(СтрокаОшибка.Количество));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%",    Строка(СтрокаОшибка.ЕдиницаИзмерения));
			Назначение = ?(ЗначениеЗаполнено(СтрокаОшибка.Назначение), "(" + Строка(СтрокаОшибка.Назначение) + ")", "");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Назначение%", Назначение);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
		КонецЦикла;
			
	КонецЕсли;
	
	Возврат Новый Структура("ОформленныеОрдера, ЕстьОшибка", ОформленныеОрдера,ЕстьОшибка);
	
КонецФункции

&ИзменениеИКонтроль("ЗаписатьОбъектОрдер")
Функция РСК_ЗаписатьОбъектОрдер(ДокументОбъект, ФоновоеЗадание)
	ЕстьОшибка = Ложь;
	ДокументОбъект.ТоварыПоРаспоряжениям.Свернуть("Распоряжение, Номенклатура, Характеристика, Назначение, Серия", "Количество");
	ДокументОбъект.Заполнить(Неопределено);
	#Вставка
	//++РС Консалт: Минаков А.С. Задача 21223
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НовыйСтатус") Тогда
		ДокументОбъект.Статус = Перечисления.СтатусыРасходныхОрдеров[ДокументОбъект.ДополнительныеСвойства.НовыйСтатус];
		Документы.РасходныйОрдерНаТовары.ЗаполнитьДействиеВСтроках(ДокументОбъект);
		ПараметрыУказанияСерий = Новый ФиксированнаяСтруктура(НоменклатураСервер.ПараметрыУказанияСерий(ДокументОбъект, Документы.РасходныйОрдерНаТовары));
		НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ДокументОбъект, ПараметрыУказанияСерий.ОтгружаемыеТовары)	
	КонецЕсли;
	//++РС Консалт: Минаков А.С. Задача 21223
	#КонецВставки
	Попытка
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);				
	Исключение
		Если ФоновоеЗадание Тогда
			ТекстСообщения = НСтр("ru = 'Не удалось записать расходный ордер фоновым заданием по причине: %Причина%';
			|en = 'Cannot save a goods issue note using a background job. Reason: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", ДокументОбъект.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Предупреждение,
			Метаданные.Документы.РасходныйОрдерНаТовары,
			ДокументОбъект.Ссылка,
			ТекстСообщения);
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецЕсли;	

		ЕстьОшибка = Истина;
	КонецПопытки;

	Возврат Не ЕстьОшибка;
КонецФункции

//++ РС Консалт: Минаков А.С.: Неисправность из-за режима совместимости 
&ИзменениеИКонтроль("ПодобратьЯчейкиДляОтбора")
Процедура РСК_ПодобратьЯчейкиДляОтбора(МенеджерВременныхТаблиц, Склад, Помещение, СтруктураТаблиц, ОтборТары)

	Запрос = Новый Запрос;                           
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	// В запросе выбираются все ячейки по которым есть остатки и ячейки сортируются по правилам.

	Если ОтборТары Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТоварыВЯчейкахОстатки.Номенклатура КАК Номенклатура,
		|	ТоварыВЯчейкахОстатки.Характеристика КАК Характеристика,
		|	ТоварыВЯчейкахОстатки.Назначение КАК Назначение,
		|	ТоварыВЯчейкахОстатки.Упаковка КАК Упаковка,
		|	ТоварыВЯчейкахОстатки.Ячейка КАК Ячейка,
		|	ТоварыВЯчейкахОстатки.ВНаличииОстаток  КАК ВНаличииОстаток,
		|	ТоварыВЯчейкахОстатки.КОтборуОстаток  КАК КОтборуОстаток
		|ПОМЕСТИТЬ ТоварыВЯчейкахОстаткиДляЗапроса
		|ИЗ
		|	РегистрНакопления.ТоварыВЯчейках.Остатки(
		|			,
		|			(Номенклатура, Характеристика, Назначение) В
		|					(ВЫБРАТЬ
		|						ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
		|						ТаблицаНоменклатуры.Характеристика КАК Характеристика,
		|						ТаблицаНоменклатуры.Назначение КАК Назначение
		|					ИЗ
		|						ТаблицаНоменклатурыРасширенная КАК ТаблицаНоменклатуры)
		|				И Ячейка В
		|					(ВЫБРАТЬ
		|						СпрЯчейки.Ссылка КАК СкладскаяЯчейка
		|					ИЗ
		|						Справочник.СкладскиеЯчейки КАК СпрЯчейки
		|							ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БлокировкиСкладскихЯчеек КАК БлокировкиЯчеек
		|							ПО
		|								СпрЯчейки.Ссылка = БлокировкиЯчеек.Ячейка
		|									И (БлокировкиЯчеек.ТипБлокировки = ЗНАЧЕНИЕ(Перечисление.ТипыБлокировокСкладскихЯчеек.Полная)
		|										ИЛИ БлокировкиЯчеек.ТипБлокировки = ЗНАЧЕНИЕ(Перечисление.ТипыБлокировокСкладскихЯчеек.Отбор))
		|					ГДЕ
		|						БлокировкиЯчеек.ТипБлокировки ЕСТЬ NULL 
		|						И СпрЯчейки.Помещение = &Помещение
		|						И СпрЯчейки.Владелец = &Склад
		|						И НЕ СпрЯчейки.ЭтоГруппа
		|						И (СпрЯчейки.ТипСкладскойЯчейки = ЗНАЧЕНИЕ(Перечисление.ТипыСкладскихЯчеек.Хранение)
		|							ИЛИ СпрЯчейки.ТипСкладскойЯчейки = ЗНАЧЕНИЕ(Перечисление.ТипыСкладскихЯчеек.Архив)))) КАК ТоварыВЯчейкахОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыВЯчейкахОстатки.Ячейка,
		|	ТоварыВЯчейкахОстатки.Упаковка,
		|	ТоварыВЯчейкахОстатки.Назначение,
		|	ТоварыВЯчейкахОстатки.ВНаличииОстаток КАК ВНаличии,
		|	ТоварыВЯчейкахОстатки.КОтборуОстаток КАК КОтбору
		|ПОМЕСТИТЬ ОстаткиУпаковокВТаре
		|ИЗ
		|	РегистрНакопления.ТоварыВЯчейках.Остатки(
		|			,
		|			Ячейка В
		|					(ВЫБРАТЬ
		|						ТоварыВЯчейкахОстаткиДляЗапроса.Ячейка
		|					ИЗ
		|						ТоварыВЯчейкахОстаткиДляЗапроса КАК ТоварыВЯчейкахОстаткиДляЗапроса)
		|				И Упаковка.ПоставляетсяВМногооборотнойТаре) КАК ТоварыВЯчейкахОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Ячейка,
		|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		|	ВложенныйЗапрос.Характеристика КАК Характеристика,
		|	ВложенныйЗапрос.Назначение КАК Назначение,
		|	СУММА(ВложенныйЗапрос.ВНаличии) КАК ВНаличии,
		|	СУММА(ВложенныйЗапрос.КОтбору) КАК КОтбору
		|ПОМЕСТИТЬ ТараПодТовары
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОстаткиУпаковокВТаре.Ячейка КАК Ячейка,
		|		ОстаткиУпаковокВТаре.Упаковка.НоменклатураМногооборотнаяТара КАК Номенклатура,
		|		ОстаткиУпаковокВТаре.Упаковка.ХарактеристикаМногооборотнаяТара КАК Характеристика,
		|		ОстаткиУпаковокВТаре.Назначение КАК Назначение,
		|		ОстаткиУпаковокВТаре.ВНаличии КАК ВНаличии,
		|		ОстаткиУпаковокВТаре.КОтбору КАК КОтбору
		|	ИЗ
		|		ОстаткиУпаковокВТаре КАК ОстаткиУпаковокВТаре
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ОстаткиУпаковокВТаре.Ячейка,
		|		ВариантыПереупаковки.Упаковка.НоменклатураМногооборотнаяТара,
		|		ВариантыПереупаковки.Упаковка.ХарактеристикаМногооборотнаяТара,
		|		ОстаткиУпаковокВТаре.Назначение,
		|		ОстаткиУпаковокВТаре.ВНаличии * ВариантыПереупаковки.Количество,
		|		ОстаткиУпаковокВТаре.КОтбору * ВариантыПереупаковки.Количество
		|	ИЗ
		|		ОстаткиУпаковокВТаре КАК ОстаткиУпаковокВТаре
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыПереупаковки КАК ВариантыПереупаковки
		|			ПО ОстаткиУпаковокВТаре.Упаковка = ВариантыПереупаковки.Источник) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.Характеристика,
		|	ВложенныйЗапрос.Назначение,
		|	ВложенныйЗапрос.Ячейка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.Характеристика,
		|	ВложенныйЗапрос.Назначение,
		|	ВложенныйЗапрос.Ячейка,
		|	СУММА(ВложенныйЗапрос.ВНаличииОстаток) КАК ВНаличииОстаток,
		|	СУММА(ВложенныйЗапрос.КОтборуОстаток) КАК КОтборуОстаток,
		|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
		|	ВложенныйЗапрос.Ячейка.Код КАК Код,
		|	ВложенныйЗапрос.Ячейка.УровеньДоступности КАК УровеньДоступности,
		|	ВложенныйЗапрос.Ячейка.РабочийУчасток КАК РабочийУчасток,
		|	ВложенныйЗапрос.Ячейка.ПорядокОбхода КАК ПорядокОбхода,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
		|	1 КАК КоличествоВУпаковке,
		|	&ТекстЗапросаВесУпаковки КАК Вес,
		|	ЗНАЧЕНИЕ(Справочник.СкладскиеГруппыУпаковок.ПустаяСсылка) КАК СкладскаяГруппаУпаковок,
		|	&ТекстЗапросаОбъемУпаковки КАК Объем,
		|	ЛОЖЬ КАК Безразмерная,
		|	ВложенныйЗапрос.Ячейка.ОбластьХранения.ПриоритетОтбораИзМонотоварныхЯчеек КАК ПриоритетОтбораИзМонотоварныхЯчеек,
		|	ВложенныйЗапрос.Ячейка.ОбластьХранения.ПриоритетОтбораИзСмешанныхЯчеек КАК ПриоритетОтбораИзСмешанныхЯчеек,
		|	ВложенныйЗапрос.Ячейка.ОбластьХранения.ПриоритетОтбораПодОстаток КАК ПриоритетОтбораПодОстаток,
		|	ВложенныйЗапрос.Ячейка.ОбластьХранения.ОписаниеМонотоварности КАК ОписаниеМонотоварности,
		|	ВложенныйЗапрос.Ячейка.ОбластьХранения.СтрогаяМонотоварность КАК СтрогаяМонотоварность,
		|	ВложенныйЗапрос.Ячейка.ОбластьХранения КАК ОбластьХранения
		|ПОМЕСТИТЬ ТоварыВЯчейкахОстатки
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТоварыВЯчейкахОстаткиДляЗапроса.Номенклатура КАК Номенклатура,
		|		ТоварыВЯчейкахОстаткиДляЗапроса.Характеристика КАК Характеристика,
		|		ТоварыВЯчейкахОстаткиДляЗапроса.Назначение КАК Назначение,
		|		ТоварыВЯчейкахОстаткиДляЗапроса.Ячейка КАК Ячейка,
		|	ТоварыВЯчейкахОстаткиДляЗапроса.ВНаличииОстаток КАК ВНаличииОстаток,
		|	ТоварыВЯчейкахОстаткиДляЗапроса.КОтборуОстаток КАК КОтборуОстаток
		|	ИЗ
		|		ТоварыВЯчейкахОстаткиДляЗапроса КАК ТоварыВЯчейкахОстаткиДляЗапроса
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТараПодТовары.Номенклатура,
		|		ТараПодТовары.Характеристика,
		|		ТараПодТовары.Назначение,
		|		ТараПодТовары.Ячейка,
		|		-ТараПодТовары.ВНаличии,
		|		-ТараПодТовары.КОтбору
		|	ИЗ
		|		ТараПодТовары КАК ТараПодТовары) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.Характеристика,
		|	ВложенныйЗапрос.Назначение,
		|	ВложенныйЗапрос.Ячейка,
		|	ВложенныйЗапрос.Ячейка.Код,
		|	ВложенныйЗапрос.Ячейка.УровеньДоступности,
		|	ВложенныйЗапрос.Ячейка.РабочийУчасток,
		|	ВложенныйЗапрос.Ячейка.ПорядокОбхода,
		|	&ТекстЗапросаВесУпаковки,
		|	&ТекстЗапросаОбъемУпаковки,
		|	ВложенныйЗапрос.Ячейка.ОбластьХранения.ПриоритетОтбораИзМонотоварныхЯчеек,
		|	ВложенныйЗапрос.Ячейка.ОбластьХранения.ПриоритетОтбораИзСмешанныхЯчеек,
		|	ВложенныйЗапрос.Ячейка.ОбластьХранения.ПриоритетОтбораПодОстаток,
		|	ВложенныйЗапрос.Ячейка.ОбластьХранения.ОписаниеМонотоварности,
		|	ВложенныйЗапрос.Ячейка.ОбластьХранения.СтрогаяМонотоварность,		
		|	ВложенныйЗапрос.Ячейка.ОбластьХранения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТоварыВЯчейкахОстаткиДляЗапроса
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ОстаткиУпаковокВТаре
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТараПодТовары";

		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаВесУпаковки", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки("ВложенныйЗапрос.Номенклатура.ЕдиницаИзмерения", "ВложенныйЗапрос.Номенклатура", Ложь) );
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаОбъемУпаковки", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаОбъемУпаковки("ВложенныйЗапрос.Номенклатура.ЕдиницаИзмерения", "ВложенныйЗапрос.Номенклатура", Ложь));

	Иначе

		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТоварыВЯчейкахОстатки.Номенклатура КАК Номенклатура,
		|	ТоварыВЯчейкахОстатки.Характеристика КАК Характеристика,
		|	ТоварыВЯчейкахОстатки.Назначение КАК Назначение,
		|	ТоварыВЯчейкахОстатки.Ячейка КАК Ячейка,
		|	ТоварыВЯчейкахОстатки.ВНаличииОстаток КАК ВНаличииОстаток,
		|	ТоварыВЯчейкахОстатки.КОтборуОстаток КАК КОтборуОстаток,
		|	ТоварыВЯчейкахОстатки.Серия КАК Серия,
		|	ТоварыВЯчейкахОстатки.Ячейка.Код КАК Код,
		|	ТоварыВЯчейкахОстатки.Ячейка.УровеньДоступности КАК УровеньДоступности,
		|	ТоварыВЯчейкахОстатки.Ячейка.РабочийУчасток КАК РабочийУчасток,
		|	ТоварыВЯчейкахОстатки.Ячейка.ПорядокОбхода КАК ПорядокОбхода,
		|	ТоварыВЯчейкахОстатки.Упаковка КАК Упаковка,
		|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоличествоВУпаковке,
		|	&ТекстЗапросаВесУпаковки КАК Вес,
		|	ЕСТЬNULL(ТоварыВЯчейкахОстатки.Упаковка.СкладскаяГруппа, ЗНАЧЕНИЕ(Справочник.СкладскиеГруппыУпаковок.ПустаяСсылка)) КАК СкладскаяГруппаУпаковок,
		|	&ТекстЗапросаОбъемУпаковки КАК Объем,
		|	ЕСТЬNULL(ТоварыВЯчейкахОстатки.Упаковка.Безразмерная, ЛОЖЬ) КАК Безразмерная,
		|	ТоварыВЯчейкахОстатки.Ячейка.ОбластьХранения.ПриоритетОтбораИзМонотоварныхЯчеек КАК ПриоритетОтбораИзМонотоварныхЯчеек,
		|	ТоварыВЯчейкахОстатки.Ячейка.ОбластьХранения.ПриоритетОтбораИзСмешанныхЯчеек КАК ПриоритетОтбораИзСмешанныхЯчеек,
		|	ТоварыВЯчейкахОстатки.Ячейка.ОбластьХранения.ПриоритетОтбораПодОстаток КАК ПриоритетОтбораПодОстаток,
		|	ТоварыВЯчейкахОстатки.Ячейка.ОбластьХранения.ОписаниеМонотоварности КАК ОписаниеМонотоварности,
		|	ТоварыВЯчейкахОстатки.Ячейка.ОбластьХранения.СтрогаяМонотоварность КАК СтрогаяМонотоварность,
		|	ТоварыВЯчейкахОстатки.Ячейка.ОбластьХранения КАК ОбластьХранения
		|ПОМЕСТИТЬ ТоварыВЯчейкахОстатки
		|ИЗ
		|	РегистрНакопления.ТоварыВЯчейках.Остатки(
		|			,
		|			(Номенклатура, Характеристика, Назначение) В
		|					(ВЫБРАТЬ
		|						ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
		|						ТаблицаНоменклатуры.Характеристика КАК Характеристика,
		|						ТаблицаНоменклатуры.Назначение КАК Назначение
		|					ИЗ
		|						ТаблицаНоменклатурыРасширенная КАК ТаблицаНоменклатуры)
		|				И Ячейка В
		|					(ВЫБРАТЬ
		|						СпрЯчейки.Ссылка КАК СкладскаяЯчейка
		|					ИЗ
		|						Справочник.СкладскиеЯчейки КАК СпрЯчейки
		|							ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БлокировкиСкладскихЯчеек КАК БлокировкиЯчеек
		|							ПО
		|								СпрЯчейки.Ссылка = БлокировкиЯчеек.Ячейка
		|									И (БлокировкиЯчеек.ТипБлокировки = ЗНАЧЕНИЕ(Перечисление.ТипыБлокировокСкладскихЯчеек.Полная)
		|										ИЛИ БлокировкиЯчеек.ТипБлокировки = ЗНАЧЕНИЕ(Перечисление.ТипыБлокировокСкладскихЯчеек.Отбор))
		|					ГДЕ
		|						БлокировкиЯчеек.ТипБлокировки ЕСТЬ NULL
		|						И СпрЯчейки.Помещение = &Помещение
		|						И СпрЯчейки.Владелец = &Склад
		|						И НЕ СпрЯчейки.ЭтоГруппа
		|						И (СпрЯчейки.ТипСкладскойЯчейки = ЗНАЧЕНИЕ(Перечисление.ТипыСкладскихЯчеек.Хранение)
		|							ИЛИ СпрЯчейки.ТипСкладскойЯчейки = ЗНАЧЕНИЕ(Перечисление.ТипыСкладскихЯчеек.Архив)))) КАК ТоварыВЯчейкахОстатки
		|ГДЕ
		|	ЕСТЬNULL(ТоварыВЯчейкахОстатки.Упаковка.ТипУпаковки, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Перечисление.ТипыУпаковокНоменклатуры.ТоварноеМесто)";

		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаВесУпаковки", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки("ТоварыВЯчейкахОстатки.Упаковка", "ТоварыВЯчейкахОстатки.Номенклатура", Ложь));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаОбъемУпаковки", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаОбъемУпаковки("ТоварыВЯчейкахОстатки.Упаковка", "ТоварыВЯчейкахОстатки.Номенклатура", Ложь));

	КонецЕсли;
	ТекстЗапроса = 	ТекстЗапроса + ";" + Символы.ПС + 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТаблицаНоменклатуры.Характеристика КАК Характеристика,
	|	ТаблицаНоменклатуры.Назначение КАК Назначение,
	|	ТаблицаНоменклатуры.Серия КАК Серия,
	|	ТаблицаНоменклатуры.Распоряжение КАК Распоряжение,
	|	ТаблицаНоменклатуры.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ТаблицаНоменклатуры.Приоритет КАК Приоритет,
	|	ТаблицаНоменклатуры.Количество КАК Количество,
	|	ТаблицаНоменклатуры.СкладскаяГруппаНоменклатуры КАК СкладскаяГруппаНоменклатуры,
	|	ТоварыВЯчейкахОстатки.Ячейка КАК Ячейка,
	|	ТоварыВЯчейкахОстатки.Код КАК Код,
	|	СУММА(ЕСТЬNULL(ТоварыВЯчейкахОстатки.ВНаличииОстаток, 0) - ЕСТЬNULL(ТоварыВЯчейкахОстатки.КОтборуОстаток, 0)) КАК СвободныйОстаток,
	|	ЕСТЬNULL(ТоварыВЯчейкахОстатки.УровеньДоступности, 9999999999) КАК УровеньДоступности,
	|	ТоварыВЯчейкахОстатки.РабочийУчасток КАК РабочийУчасток,
	|	ТоварыВЯчейкахОстатки.ПорядокОбхода КАК ПорядокОбхода,
	|	ТоварыВЯчейкахОстатки.Упаковка КАК Упаковка,
	|	ТоварыВЯчейкахОстатки.КоличествоВУпаковке КАК КоличествоВУпаковке,
	|	ТоварыВЯчейкахОстатки.Вес КАК Вес,
	|	ТоварыВЯчейкахОстатки.СкладскаяГруппаУпаковок КАК СкладскаяГруппаУпаковок,
	|	ТоварыВЯчейкахОстатки.Объем КАК Объем,
	|	ТоварыВЯчейкахОстатки.Безразмерная КАК Безразмерная,
	|	ТоварыВЯчейкахОстатки.ПриоритетОтбораИзМонотоварныхЯчеек КАК ПриоритетОтбораИзМонотоварныхЯчеек,
	|	ТоварыВЯчейкахОстатки.ПриоритетОтбораИзСмешанныхЯчеек КАК ПриоритетОтбораИзСмешанныхЯчеек,
	|	ТоварыВЯчейкахОстатки.ПриоритетОтбораПодОстаток КАК ПриоритетОтбораПодОстаток,
	|	ТоварыВЯчейкахОстатки.ОписаниеМонотоварности КАК ОписаниеМонотоварности,
	|	ТоварыВЯчейкахОстатки.СтрогаяМонотоварность КАК СтрогаяМонотоварность,
	|	ТоварыВЯчейкахОстатки.ОбластьХранения КАК ОбластьХранения
	|ПОМЕСТИТЬ ПулЯчеек
	|ИЗ
	|	ТаблицаНоменклатурыРасширенная КАК ТаблицаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВЯчейкахОстатки КАК ТоварыВЯчейкахОстатки
	|		ПО ТаблицаНоменклатуры.Номенклатура = ТоварыВЯчейкахОстатки.Номенклатура
	|			И ТаблицаНоменклатуры.Характеристика = ТоварыВЯчейкахОстатки.Характеристика
	|			И ТаблицаНоменклатуры.Назначение = ТоварыВЯчейкахОстатки.Назначение
	|			И (ВЫБОР
	|				КОГДА ТаблицаНоменклатуры.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ТаблицаНоменклатуры.Серия = ТоварыВЯчейкахОстатки.Серия
	|			КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНоменклатуры.Номенклатура,
	|	ТаблицаНоменклатуры.Характеристика,
	|	ТаблицаНоменклатуры.Назначение,
	|	ТаблицаНоменклатуры.Серия,
	|	ТаблицаНоменклатуры.Распоряжение,
	|	ТаблицаНоменклатуры.ДатаОтгрузки,
	|	ТаблицаНоменклатуры.Приоритет,
	|	ТоварыВЯчейкахОстатки.Код,
	|	ТаблицаНоменклатуры.СкладскаяГруппаНоменклатуры,
	|	ТоварыВЯчейкахОстатки.Ячейка,
	|	ТаблицаНоменклатуры.Количество,
	|	ТоварыВЯчейкахОстатки.РабочийУчасток,
	|	ТоварыВЯчейкахОстатки.ПорядокОбхода,
	|	ТоварыВЯчейкахОстатки.Вес,
	|	ТоварыВЯчейкахОстатки.Упаковка,
	|	ТоварыВЯчейкахОстатки.Безразмерная,
	|	ТоварыВЯчейкахОстатки.СкладскаяГруппаУпаковок,
	|	ТоварыВЯчейкахОстатки.Объем,
	|	ТоварыВЯчейкахОстатки.ПриоритетОтбораИзМонотоварныхЯчеек,
	|	ТоварыВЯчейкахОстатки.КоличествоВУпаковке,
	|	ТоварыВЯчейкахОстатки.ПриоритетОтбораИзСмешанныхЯчеек,
	|	ТоварыВЯчейкахОстатки.ОбластьХранения,
	|	ТоварыВЯчейкахОстатки.ПриоритетОтбораПодОстаток,
	|	ТоварыВЯчейкахОстатки.ОписаниеМонотоварности,
	|	ТоварыВЯчейкахОстатки.СтрогаяМонотоварность,
	|	ЕСТЬNULL(ТоварыВЯчейкахОстатки.УровеньДоступности, 9999999999)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПулЯчеек.Ячейка КАК Ячейка,
	|	ПулЯчеек.Номенклатура КАК Номенклатура,
	|	ПулЯчеек.Характеристика,
	|	ПулЯчеек.Назначение,
	|	ПулЯчеек.Серия,
	|	ВЫБОР
	|		КОГДА ПулЯчеек.Номенклатура = ТоварыВЯчейкахОстатки.Номенклатура
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьДругаяНоменклатура,
	|	ВЫБОР
	|		КОГДА ПулЯчеек.Номенклатура = ТоварыВЯчейкахОстатки.Номенклатура
	|				И ПулЯчеек.Характеристика = ТоварыВЯчейкахОстатки.Характеристика
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьДругаяНоменклатураИЛИХарактеристика,
	|	ВЫБОР
	|		КОГДА ПулЯчеек.Номенклатура = ТоварыВЯчейкахОстатки.Номенклатура
	|				И ПулЯчеек.Характеристика = ТоварыВЯчейкахОстатки.Характеристика
	|				И ПулЯчеек.Серия = ТоварыВЯчейкахОстатки.Серия
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьДругаяНоменклатураИЛИХарактеристикаИЛИСерия
	|ПОМЕСТИТЬ ДругиеТоварыВЯчейках
	|ИЗ
	|	ПулЯчеек КАК ПулЯчеек
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВЯчейках.Остатки(
	|				,
	|				Ячейка В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ПулЯчеек.Ячейка
	|					ИЗ
	|						ПулЯчеек КАК ПулЯчеек)) КАК ТоварыВЯчейкахОстатки
	|		ПО ПулЯчеек.Ячейка = ТоварыВЯчейкахОстатки.Ячейка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДругиеТоварыВЯчейках.Номенклатура,
	|	ДругиеТоварыВЯчейках.Ячейка,
	|	МАКСИМУМ(ДругиеТоварыВЯчейках.ЕстьДругаяНоменклатура) КАК ЕстьДругаяНоменклатура
	|ПОМЕСТИТЬ НоменклатураВЯчейках
	|ИЗ
	|	ДругиеТоварыВЯчейках КАК ДругиеТоварыВЯчейках
	|
	|СГРУППИРОВАТЬ ПО
	|	ДругиеТоварыВЯчейках.Номенклатура,
	|	ДругиеТоварыВЯчейках.Ячейка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДругиеТоварыВЯчейках.Номенклатура,
	|	ДругиеТоварыВЯчейках.Ячейка,
	|	ДругиеТоварыВЯчейках.Характеристика,
	|	МАКСИМУМ(ДругиеТоварыВЯчейках.ЕстьДругаяНоменклатураИЛИХарактеристика) КАК ЕстьДругаяНоменклатураИЛИХарактеристика
	|ПОМЕСТИТЬ НоменклатураИХарактеристикаВЯчейках
	|ИЗ
	|	ДругиеТоварыВЯчейках КАК ДругиеТоварыВЯчейках
	|
	|СГРУППИРОВАТЬ ПО
	|	ДругиеТоварыВЯчейках.Номенклатура,
	|	ДругиеТоварыВЯчейках.Ячейка,
	|	ДругиеТоварыВЯчейках.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДругиеТоварыВЯчейках.Номенклатура,
	|	ДругиеТоварыВЯчейках.Ячейка,
	|	ДругиеТоварыВЯчейках.Характеристика,
	|	МАКСИМУМ(ДругиеТоварыВЯчейках.ЕстьДругаяНоменклатураИЛИХарактеристикаИЛИСерия) КАК ЕстьДругаяНоменклатураИЛИХарактеристикаИЛИСерия,
	|	ДругиеТоварыВЯчейках.Серия
	|ПОМЕСТИТЬ НоменклатураИХарактеристикаИСерияВЯчейках
	|ИЗ
	|	ДругиеТоварыВЯчейках КАК ДругиеТоварыВЯчейках
	|
	|СГРУППИРОВАТЬ ПО
	|	ДругиеТоварыВЯчейках.Номенклатура,
	|	ДругиеТоварыВЯчейках.Ячейка,
	|	ДругиеТоварыВЯчейках.Характеристика,
	|	ДругиеТоварыВЯчейках.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПулЯчеек.Номенклатура КАК Номенклатура,
	|	ПулЯчеек.Характеристика КАК Характеристика,
	|	ПулЯчеек.Назначение КАК Назначение,
	|	ПулЯчеек.Серия КАК Серия,
	|	ПулЯчеек.Распоряжение КАК Распоряжение,
	|	ПулЯчеек.Количество КАК Количество,
	|	ПулЯчеек.Ячейка КАК Ячейка,
	|	ПулЯчеек.СвободныйОстаток КАК СвободныйОстаток,
	|	ПулЯчеек.РабочийУчасток КАК РабочийУчасток,
	|	ПулЯчеек.ПорядокОбхода КАК ПорядокОбхода,
	|	ПулЯчеек.Код КАК Код,
	|	ПулЯчеек.Упаковка КАК Упаковка,
	|	ПулЯчеек.КоличествоВУпаковке КАК КоличествоВУпаковке,
	|	ПулЯчеек.Вес КАК Вес,
	|	ПулЯчеек.Объем КАК Объем,
	|	ВЫБОР
	|		КОГДА ПулЯчеек.СвободныйОстаток <= ПулЯчеек.Количество / ПулЯчеек.КоличествоВУпаковке
	|			ТОГДА ПулЯчеек.ПриоритетОтбораПодОстаток
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПулЯчеек.ОписаниеМонотоварности = ЗНАЧЕНИЕ(Перечисление.ОписаниеМонотоварности.ПоНоменклатуре)
	|					ТОГДА ВЫБОР
	|							КОГДА НЕ НоменклатураВЯчейках.ЕстьДругаяНоменклатура
	|								ТОГДА ПулЯчеек.ПриоритетОтбораИзМонотоварныхЯчеек
	|							ИНАЧЕ ПулЯчеек.ПриоритетОтбораИзСмешанныхЯчеек
	|						КОНЕЦ
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ПулЯчеек.ОписаниеМонотоварности = ЗНАЧЕНИЕ(Перечисление.ОписаниеМонотоварности.ПоХарактеристике)
	|							ТОГДА ВЫБОР
	|									КОГДА НЕ НоменклатураИХарактеристикаВЯчейках.ЕстьДругаяНоменклатураИЛИХарактеристика
	|										ТОГДА ПулЯчеек.ПриоритетОтбораИзМонотоварныхЯчеек
	|									ИНАЧЕ ПулЯчеек.ПриоритетОтбораИзСмешанныхЯчеек
	|								КОНЕЦ
	|						ИНАЧЕ ВЫБОР
	|								КОГДА НЕ НоменклатураИХарактеристикаИСерияВЯчейках.ЕстьДругаяНоменклатураИЛИХарактеристикаИЛИСерия
	|									ТОГДА ПулЯчеек.ПриоритетОтбораИзМонотоварныхЯчеек
	|								ИНАЧЕ ПулЯчеек.ПриоритетОтбораИзСмешанныхЯчеек
	|							КОНЕЦ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК ПриоритетСтратегии,
	|	ВЫБОР
	|		КОГДА ПравилаРазмещенияТоваровВЯчейках.ОбластьХранения ЕСТЬ NULL 
	|			ТОГДА 1000
	|		ИНАЧЕ ПравилаРазмещенияТоваровВЯчейках.Приоритет
	|	КОНЕЦ КАК ПриоритетОбласти
	|ИЗ
	|	ПулЯчеек КАК ПулЯчеек
	|		ЛЕВОЕ СОЕДИНЕНИЕ НоменклатураВЯчейках КАК НоменклатураВЯчейках
	|		ПО ПулЯчеек.Номенклатура = НоменклатураВЯчейках.Номенклатура
	|			И ПулЯчеек.Ячейка = НоменклатураВЯчейках.Ячейка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПравилаРазмещенияТоваровВЯчейках КАК ПравилаРазмещенияТоваровВЯчейках
	|		ПО ПулЯчеек.СкладскаяГруппаНоменклатуры = ПравилаРазмещенияТоваровВЯчейках.СкладскаяГруппаНоменклатуры
	|			И ПулЯчеек.СкладскаяГруппаУпаковок = ПравилаРазмещенияТоваровВЯчейках.СкладскаяГруппаУпаковок
	|			И ПулЯчеек.ОбластьХранения = ПравилаРазмещенияТоваровВЯчейках.ОбластьХранения
	|			И (ПравилаРазмещенияТоваровВЯчейках.Помещение = &Помещение)
	|			И (ПравилаРазмещенияТоваровВЯчейках.Склад = &Склад)
	|		ЛЕВОЕ СОЕДИНЕНИЕ НоменклатураИХарактеристикаВЯчейках КАК НоменклатураИХарактеристикаВЯчейках
	|		ПО ПулЯчеек.Номенклатура = НоменклатураИХарактеристикаВЯчейках.Номенклатура
	|			И ПулЯчеек.Ячейка = НоменклатураИХарактеристикаВЯчейках.Ячейка
	|			И ПулЯчеек.Характеристика = НоменклатураИХарактеристикаВЯчейках.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ НоменклатураИХарактеристикаИСерияВЯчейках КАК НоменклатураИХарактеристикаИСерияВЯчейках
	|		ПО ПулЯчеек.Ячейка = НоменклатураИХарактеристикаИСерияВЯчейках.Ячейка
	|			И ПулЯчеек.Номенклатура = НоменклатураИХарактеристикаИСерияВЯчейках.Номенклатура
	|			И ПулЯчеек.Характеристика = НоменклатураИХарактеристикаИСерияВЯчейках.Характеристика
	|			И ПулЯчеек.Серия = НоменклатураИХарактеристикаИСерияВЯчейках.Серия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПересчетовЯчеек КАК СостоянияПересчетовЯчеек
	|		ПО ПулЯчеек.Ячейка = СостоянияПересчетовЯчеек.Ячейка
	|			И (СостоянияПересчетовЯчеек.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияПересчетовЯчеек.ТребуетсяПересчет))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НАЧАЛОПЕРИОДА(ПулЯчеек.ДатаОтгрузки, ДЕНЬ),
	|	ПулЯчеек.Приоритет УБЫВ,
	|	Распоряжение,
	|	Номенклатура,
	|	Характеристика,
	|	Назначение,
	|	Серия,
	|	СостоянияПересчетовЯчеек.Состояние,
	#Вставка
	//++РС Консалт: Минаков А.С. Задача 20226
	|	ПулЯчеек.УровеньДоступности,
	//++РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	|	ПриоритетОбласти УБЫВ,
	|	КоличествоВУпаковке УБЫВ,
	|	ПриоритетСтратегии,
	|	СвободныйОстаток,
	#Удаление
	|	ПулЯчеек.УровеньДоступности,
	#КонецУдаления
	|	ПорядокОбхода,
	|	Код
	|ИТОГИ ПО
	|	Распоряжение,
	|	Номенклатура,
	|	Характеристика,
	|	Назначение,
	|	Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НоменклатураИХарактеристикаИСерияВЯчейках
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НоменклатураИХарактеристикаВЯчейках
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НоменклатураВЯчейках
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДругиеТоварыВЯчейках
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПулЯчеек
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТоварыВЯчейкахОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаНоменклатурыРасширенная";

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
	"&ТекстЗапросаКоэффициентУпаковки",
	Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
	"ТоварыВЯчейкахОстатки.Упаковка", Неопределено));

	Запрос.Текст = ТекстЗапроса;

	Запрос.УстановитьПараметр("Склад",Склад);
	Запрос.УстановитьПараметр("Помещение",Помещение);

	УстановитьПривилегированныйРежим(Истина);
	ВыборкаПоРаспоряжениям = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	УстановитьПривилегированныйРежим(Ложь);

	ОтборСтрокИзТаблицыРасходаИзЯчеек = Новый Структура("Ячейка,Номенклатура,Упаковка,Характеристика,Назначение,Серия");

	Пока ВыборкаПоРаспоряжениям.Следующий() Цикл                  

		ВыборкаПоНоменклатуре =  ВыборкаПоРаспоряжениям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 

		Пока ВыборкаПоНоменклатуре.Следующий() Цикл

			ВыборкаПоХарактеристикам = ВыборкаПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			Пока ВыборкаПоХарактеристикам.Следующий() Цикл

				ВыборкаПоНазначению = ВыборкаПоХарактеристикам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

				Пока ВыборкаПоНазначению.Следующий() Цикл

					ВыборкаПоСериям = ВыборкаПоНазначению.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

					Пока ВыборкаПоСериям.Следующий() Цикл  

						//детали
						ВыборкаПоЯчейкам = ВыборкаПоСериям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

						КоличествоКОтбору = Неопределено;

						Пока ВыборкаПоЯчейкам.Следующий() Цикл

							Если КоличествоКОтбору = Неопределено Тогда

								КоличествоКОтбору = ВыборкаПоЯчейкам.Количество;

							КонецЕсли;

							Если ЗначениеЗаполнено(ВыборкаПоЯчейкам.Упаковка)
								И КоличествоКОтбору < ВыборкаПоЯчейкам.КоличествоВУпаковке Тогда
								Продолжить;
							КонецЕсли;

							// Если ячейка заполнена, значит в ней есть остаток в нужной упаковке, 
							// иначе таблица остатков не соединилась бы с таблицей номенклатуры.
							Если ЗначениеЗаполнено(ВыборкаПоЯчейкам.Ячейка)
								И ВыборкаПоЯчейкам.СвободныйОстаток > 0 Тогда

								ЗаполнитьЗначенияСвойств(ОтборСтрокИзТаблицыРасходаИзЯчеек, ВыборкаПоЯчейкам);

								МассивНайденныхСтрок = СтруктураТаблиц.ТаблицаРасходаИзЯчеек.НайтиСтроки(ОтборСтрокИзТаблицыРасходаИзЯчеек);

								Если МассивНайденныхСтрок.Количество() = 0 Тогда
									СтрокаРасхода 						= СтруктураТаблиц.ТаблицаРасходаИзЯчеек.Добавить();
									ЗаполнитьЗначенияСвойств(СтрокаРасхода, ОтборСтрокИзТаблицыРасходаИзЯчеек);

									СтрокаРасхода.КоличествоУпаковок 	= ВыборкаПоЯчейкам.СвободныйОстаток;

									РабочийУчасток = СтруктураТаблиц.МассивУчастков.Найти(ВыборкаПоЯчейкам.РабочийУчасток);
									Если РабочийУчасток = Неопределено Тогда
										СтруктураТаблиц.МассивУчастков.Добавить(ВыборкаПоЯчейкам.РабочийУчасток);
									КонецЕсли;
								Иначе
									СтрокаРасхода = МассивНайденныхСтрок[0];
								КонецЕсли;

								Если ЗначениеЗаполнено(ВыборкаПоЯчейкам.Упаковка) Тогда
									КоличествоИзЯчейки = Мин(Цел(КоличествоКОтбору/ВыборкаПоЯчейкам.КоличествоВУпаковке),СтрокаРасхода.КоличествоУпаковок);
								Иначе
									КоличествоИзЯчейки = Мин(КоличествоКОтбору,СтрокаРасхода.КоличествоУпаковок);
								КонецЕсли;

								Если КоличествоИзЯчейки > 0 Тогда
									СтрокаРезультата = СтруктураТаблиц.ТаблицаРезультатов.Добавить();
									ЗаполнитьЗначенияСвойств(СтрокаРезультата, ВыборкаПоЯчейкам);
									СтрокаРезультата.КоличествоУпаковок = КоличествоИзЯчейки;
									СтрокаРезультата.Количество         = КоличествоИзЯчейки * ВыборкаПоЯчейкам.КоличествоВУпаковке;
									СтрокаРезультата.ОбъемУпаковки		= ВыборкаПоЯчейкам.Объем;
									СтрокаРезультата.ВесУпаковки		= ВыборкаПоЯчейкам.Вес;

									СтрокаРезультата.КлючСвязиСТарой = СтруктураТаблиц.ТаблицаРезультатов.Количество();

									СтрокаРасхода.КоличествоУпаковок = СтрокаРасхода.КоличествоУпаковок - КоличествоИзЯчейки; 
									КоличествоКОтбору = КоличествоКОтбору - КоличествоИзЯчейки * ВыборкаПоЯчейкам.КоличествоВУпаковке;
								КонецЕсли;						

							КонецЕсли;

							Если КоличествоКОтбору = 0 Тогда

								Прервать;

							КонецЕсли;

						КонецЦикла;

						Если КоличествоКОтбору <> 0 Тогда

							СтрокаОшибки = СтруктураТаблиц.ТаблицаОшибок.Добавить();
							ЗаполнитьЗначенияСвойств(СтрокаОшибки, ВыборкаПоСериям);
							СтрокаОшибки.Количество = КоличествоКОтбору;

						КонецЕсли;	

					КонецЦикла;

				КонецЦикла;

			КонецЦикла;

		КонецЦикла;

	КонецЦикла;	

	Если Не ОтборТары
		И МенеджерВременныхТаблиц.Таблицы.Найти("ТаблицаТоварныеМестаКОтбору") <> Неопределено // МРМ не работает с товарными местами.
		И (ОбщегоНазначенияУТ.ПоказатьВременнуюТаблицу(МенеджерВременныхТаблиц, "ТаблицаТоварныеМестаКОтбору").Количество() <> 0
		Или СтруктураТаблиц.ТаблицаОшибок.Количество() <> 0) Тогда

		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаНераспределенных.Распоряжение,
		|	ВЫРАЗИТЬ(ТаблицаНераспределенных.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
		#Удаление
		|	ВЫРАЗИТЬ(ТаблицаНераспределенных.Номенклатура КАК Справочник.Номенклатура).СкладскаяГруппа КАК СкладскаяГруппаНоменклатуры,
		#КонецУдаления
		|	ТаблицаНераспределенных.Характеристика,
		|	ТаблицаНераспределенных.Назначение,
		|	ТаблицаНераспределенных.Серия,
		|	ВЫРАЗИТЬ(ТаблицаНераспределенных.Упаковка КАК Справочник.УпаковкиЕдиницыИзмерения) КАК Упаковка,
		|	ТаблицаНераспределенных.Количество
		#Удаление
		|ПОМЕСТИТЬ ТаблицаНераспределенных
		#КонецУдаления
		#Вставка
		//++ РС Консалт: Минаков А.С.: Неисправность из-за режима совместимости 
		|ПОМЕСТИТЬ ТаблицаНераспределенных1
		//++ РС Консалт: Минаков А.С.: Неисправность из-за режима совместимости 
		#КонецВставки
		|ИЗ
		|	&ТаблицаОшибок КАК ТаблицаНераспределенных
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		#Вставка
		//++ РС Консалт: Минаков А.С.: Неисправность из-за режима совместимости 
		|ВЫБРАТЬ
		|	ТаблицаНераспределенных.Распоряжение КАК Распоряжение,
		|	ТаблицаНераспределенных.Номенклатура КАК Номенклатура,
		|   ЕСТЬNULL(СпрНоменклатура.СкладскаяГруппа, ЗНАЧЕНИЕ(Справочник.СкладскиеГруппыНоменклатуры.ПустаяСсылка)) КАК СкладскаяГруппаНоменклатуры,
		|	ТаблицаНераспределенных.Характеристика КАК Характеристика,
		|	ТаблицаНераспределенных.Назначение КАК Назначение,
		|	ТаблицаНераспределенных.Серия КАК Серия,
		|	ТаблицаНераспределенных.Упаковка КАК Упаковка,
		|	ТаблицаНераспределенных.Количество КАК Количество
		|ПОМЕСТИТЬ ТаблицаНераспределенных
		|ИЗ
		|	ТаблицаНераспределенных1 КАК ТаблицаНераспределенных
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура 
		|		ПО ТаблицаНераспределенных.Номенклатура = СпрНоменклатура.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		//++ РС Консалт: Минаков А.С.: Неисправность из-за режима совместимости 
		#КонецВставки
		|ВЫБРАТЬ
		|	ТаблицаНераспределенных.Распоряжение,
		|	ТаблицаНераспределенных.Номенклатура,
		|	ТаблицаНераспределенных.Характеристика,
		|	ТаблицаНераспределенных.Назначение,
		|	ТаблицаНераспределенных.Серия,
		|	ТаблицаНераспределенных.СкладскаяГруппаНоменклатуры,
		|	ТаблицаНераспределенных.Количество * ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) * УпаковкиЕдиницыИзмерения.КоличествоУпаковок КАК Количество,
		|	УпаковкиЕдиницыИзмерения.Ссылка КАК ТоварноеМесто
		|ПОМЕСТИТЬ ТаблицаОшибокТоварныеМеста
		|ИЗ
		|	ТаблицаНераспределенных КАК ТаблицаНераспределенных
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
		|		ПО ТаблицаНераспределенных.Номенклатура = УпаковкиЕдиницыИзмерения.Владелец
		|ГДЕ
		|	УпаковкиЕдиницыИзмерения.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковокНоменклатуры.ТоварноеМесто)
		|	И НЕ УпаковкиЕдиницыИзмерения.ПометкаУдаления
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаНераспределенных.Распоряжение,
		|	ТаблицаНераспределенных.Номенклатура,
		|	ТаблицаНераспределенных.Характеристика,
		|	ТаблицаНераспределенных.Назначение,
		|	ТаблицаНераспределенных.Серия,
		|	ТаблицаНераспределенных.СкладскаяГруппаНоменклатуры,
		|	ТаблицаНераспределенных.Количество * ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) * УпаковкиЕдиницыИзмерения.КоличествоУпаковок,
		|	УпаковкиЕдиницыИзмерения.Ссылка
		|ИЗ
		|	ТаблицаНераспределенных КАК ТаблицаНераспределенных
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
		|		ПО ТаблицаНераспределенных.Номенклатура.НаборУпаковок = УпаковкиЕдиницыИзмерения.Владелец
		|ГДЕ
		|	УпаковкиЕдиницыИзмерения.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковокНоменклатуры.ТоварноеМесто)
		|	И НЕ УпаковкиЕдиницыИзмерения.ПометкаУдаления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОшибокТоварныеМеста.Распоряжение,
		|	ТаблицаОшибокТоварныеМеста.Номенклатура,
		|	ТаблицаОшибокТоварныеМеста.Характеристика,
		|	ТаблицаОшибокТоварныеМеста.Назначение,
		|	ТаблицаОшибокТоварныеМеста.Серия,
		|	ТаблицаОшибокТоварныеМеста.СкладскаяГруппаНоменклатуры,
		|	ТаблицаОшибокТоварныеМеста.Количество,
		|	ТаблицаОшибокТоварныеМеста.ТоварноеМесто КАК ТоварноеМесто
		|ПОМЕСТИТЬ ТаблицаНоменклатурыТоварныеМеста
		|ИЗ
		|	ТаблицаОшибокТоварныеМеста КАК ТаблицаОшибокТоварныеМеста
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаТоварныеМестаКОтбору.Распоряжение,
		|	ТаблицаТоварныеМестаКОтбору.Номенклатура,
		|	ТаблицаТоварныеМестаКОтбору.Характеристика,
		|	ТаблицаТоварныеМестаКОтбору.Назначение,
		|	ТаблицаТоварныеМестаКОтбору.Серия,
		|	ТаблицаТоварныеМестаКОтбору.СкладскаяГруппаНоменклатуры,
		|	ТаблицаТоварныеМестаКОтбору.Количество,
		|	ТаблицаТоварныеМестаКОтбору.ТоварноеМесто
		|ИЗ
		|	ТаблицаТоварныеМестаКОтбору КАК ТаблицаТоварныеМестаКОтбору
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыВЯчейкахОстатки.Номенклатура КАК Номенклатура,
		|	ТоварыВЯчейкахОстатки.Характеристика КАК Характеристика,
		|	ТоварыВЯчейкахОстатки.Назначение КАК Назначение,
		|	ТоварыВЯчейкахОстатки.Ячейка КАК Ячейка,
		|	ТоварыВЯчейкахОстатки.ВНаличииОстаток КАК ВНаличииОстаток,
		|	ТоварыВЯчейкахОстатки.КОтборуОстаток КАК КОтборуОстаток,
		|	ТоварыВЯчейкахОстатки.Серия КАК Серия,
		|	ТоварыВЯчейкахОстатки.Ячейка.Код КАК Код,
		|	ТоварыВЯчейкахОстатки.Ячейка.УровеньДоступности КАК УровеньДоступности,
		|	ТоварыВЯчейкахОстатки.Ячейка.РабочийУчасток КАК РабочийУчасток,
		|	ТоварыВЯчейкахОстатки.Ячейка.ПорядокОбхода КАК ПорядокОбхода,
		|	ТоварыВЯчейкахОстатки.Упаковка КАК Упаковка,
		|	&ТекстЗапросаВесУпаковки КАК Вес,
		|	ЕСТЬNULL(ТоварыВЯчейкахОстатки.Упаковка.СкладскаяГруппа, ЗНАЧЕНИЕ(Справочник.СкладскиеГруппыУпаковок.ПустаяСсылка)) КАК СкладскаяГруппаУпаковок,
		|	&ТекстЗапросаОбъемУпаковки КАК Объем,
		|	ЕСТЬNULL(ТоварыВЯчейкахОстатки.Упаковка.Безразмерная, ЛОЖЬ) КАК Безразмерная,
		|	ТоварыВЯчейкахОстатки.Ячейка.ОбластьХранения.ПриоритетОтбораИзМонотоварныхЯчеек КАК ПриоритетОтбораИзМонотоварныхЯчеек,
		|	ТоварыВЯчейкахОстатки.Ячейка.ОбластьХранения.ПриоритетОтбораИзСмешанныхЯчеек КАК ПриоритетОтбораИзСмешанныхЯчеек,
		|	ТоварыВЯчейкахОстатки.Ячейка.ОбластьХранения.ПриоритетОтбораПодОстаток КАК ПриоритетОтбораПодОстаток,
		|	ТоварыВЯчейкахОстатки.Ячейка.ОбластьХранения.ОписаниеМонотоварности КАК ОписаниеМонотоварности,
		|	ТоварыВЯчейкахОстатки.Ячейка.ОбластьХранения.СтрогаяМонотоварность КАК СтрогаяМонотоварность,
		|	ТоварыВЯчейкахОстатки.Ячейка.ОбластьХранения КАК ОбластьХранения
		|ПОМЕСТИТЬ ТоварыВЯчейкахОстатки
		|ИЗ
		|	РегистрНакопления.ТоварыВЯчейках.Остатки(
		|			,
		|			(Номенклатура, Характеристика, Назначение, Упаковка) В
		|					(ВЫБРАТЬ
		|						ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
		|						ТаблицаНоменклатуры.Характеристика КАК Характеристика,
		|						ТаблицаНоменклатуры.Назначение КАК Назначение,
		|						ТаблицаНоменклатуры.ТоварноеМесто КАК Упаковка
		|					ИЗ
		|						ТаблицаНоменклатурыТоварныеМеста КАК ТаблицаНоменклатуры)
		|				И Ячейка В
		|					(ВЫБРАТЬ
		|						СпрЯчейки.Ссылка КАК СкладскаяЯчейка
		|					ИЗ
		|						Справочник.СкладскиеЯчейки КАК СпрЯчейки
		|							ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БлокировкиСкладскихЯчеек КАК БлокировкиЯчеек
		|							ПО
		|								СпрЯчейки.Ссылка = БлокировкиЯчеек.Ячейка
		|									И (БлокировкиЯчеек.ТипБлокировки = ЗНАЧЕНИЕ(Перечисление.ТипыБлокировокСкладскихЯчеек.Полная)
		|										ИЛИ БлокировкиЯчеек.ТипБлокировки = ЗНАЧЕНИЕ(Перечисление.ТипыБлокировокСкладскихЯчеек.Отбор))
		|					ГДЕ
		|						БлокировкиЯчеек.ТипБлокировки ЕСТЬ NULL 
		|						И СпрЯчейки.Помещение = &Помещение
		|						И СпрЯчейки.Владелец = &Склад
		|						И НЕ СпрЯчейки.ЭтоГруппа
		|						И (СпрЯчейки.ТипСкладскойЯчейки = ЗНАЧЕНИЕ(Перечисление.ТипыСкладскихЯчеек.Хранение)
		|							ИЛИ СпрЯчейки.ТипСкладскойЯчейки = ЗНАЧЕНИЕ(Перечисление.ТипыСкладскихЯчеек.Архив)))) КАК ТоварыВЯчейкахОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
		|	ТаблицаНоменклатуры.Характеристика КАК Характеристика,
		|	ТаблицаНоменклатуры.Назначение КАК Назначение,
		|	ТаблицаНоменклатуры.Серия КАК Серия,
		|	ТаблицаНоменклатуры.Распоряжение КАК Распоряжение,
		|	ТаблицаНоменклатуры.Количество КАК Количество,
		|	ТаблицаНоменклатуры.СкладскаяГруппаНоменклатуры КАК СкладскаяГруппаНоменклатуры,
		|	ТоварыВЯчейкахОстатки.Ячейка КАК Ячейка,
		|	ТоварыВЯчейкахОстатки.Код КАК Код,
		|	СУММА(ЕСТЬNULL(ТоварыВЯчейкахОстатки.ВНаличииОстаток, 0) - ЕСТЬNULL(ТоварыВЯчейкахОстатки.КОтборуОстаток, 0)) КАК СвободныйОстаток,
		|	ЕСТЬNULL(ТоварыВЯчейкахОстатки.УровеньДоступности, 9999999999) КАК УровеньДоступности,
		|	ТоварыВЯчейкахОстатки.РабочийУчасток КАК РабочийУчасток,
		|	ТоварыВЯчейкахОстатки.ПорядокОбхода КАК ПорядокОбхода,
		|	ЕСТЬNULL(ТоварыВЯчейкахОстатки.Упаковка, ТаблицаНоменклатуры.ТоварноеМесто) КАК Упаковка,
		|	ТоварыВЯчейкахОстатки.Вес КАК Вес,
		|	ТоварыВЯчейкахОстатки.СкладскаяГруппаУпаковок КАК СкладскаяГруппаУпаковок,
		|	ТоварыВЯчейкахОстатки.Объем КАК Объем,
		|	ТоварыВЯчейкахОстатки.Безразмерная КАК Безразмерная,
		|	ТоварыВЯчейкахОстатки.ПриоритетОтбораИзМонотоварныхЯчеек КАК ПриоритетОтбораИзМонотоварныхЯчеек,
		|	ТоварыВЯчейкахОстатки.ПриоритетОтбораИзСмешанныхЯчеек КАК ПриоритетОтбораИзСмешанныхЯчеек,
		|	ТоварыВЯчейкахОстатки.ПриоритетОтбораПодОстаток КАК ПриоритетОтбораПодОстаток,
		|	ТоварыВЯчейкахОстатки.ОписаниеМонотоварности КАК ОписаниеМонотоварности,
		|	ТоварыВЯчейкахОстатки.СтрогаяМонотоварность КАК СтрогаяМонотоварность,
		|	ТоварыВЯчейкахОстатки.ОбластьХранения КАК ОбластьХранения
		|ПОМЕСТИТЬ ПулЯчеек
		|ИЗ
		|	ТаблицаНоменклатурыТоварныеМеста КАК ТаблицаНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВЯчейкахОстатки КАК ТоварыВЯчейкахОстатки
		|		ПО ТаблицаНоменклатуры.Номенклатура = ТоварыВЯчейкахОстатки.Номенклатура
		|			И ТаблицаНоменклатуры.Характеристика = ТоварыВЯчейкахОстатки.Характеристика
		|			И ТаблицаНоменклатуры.Назначение = ТоварыВЯчейкахОстатки.Назначение
		|			И (ВЫБОР
		|				КОГДА ТаблицаНоменклатуры.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ТаблицаНоменклатуры.Серия = ТоварыВЯчейкахОстатки.Серия
		|			КОНЕЦ)
		|			И ТаблицаНоменклатуры.ТоварноеМесто = ТоварыВЯчейкахОстатки.Упаковка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаНоменклатуры.Номенклатура,
		|	ТаблицаНоменклатуры.Характеристика,
		|	ТаблицаНоменклатуры.Назначение,
		|	ТаблицаНоменклатуры.Серия,
		|	ТаблицаНоменклатуры.Распоряжение,
		|	ТоварыВЯчейкахОстатки.Код,
		|	ТаблицаНоменклатуры.СкладскаяГруппаНоменклатуры,
		|	ТоварыВЯчейкахОстатки.Ячейка,
		|	ТаблицаНоменклатуры.Количество,
		|	ТоварыВЯчейкахОстатки.РабочийУчасток,
		|	ТоварыВЯчейкахОстатки.ПорядокОбхода,
		|	ТоварыВЯчейкахОстатки.Вес,
		|	ЕСТЬNULL(ТоварыВЯчейкахОстатки.Упаковка, ТаблицаНоменклатуры.ТоварноеМесто),
		|	ТоварыВЯчейкахОстатки.Безразмерная,
		|	ТоварыВЯчейкахОстатки.СкладскаяГруппаУпаковок,
		|	ТоварыВЯчейкахОстатки.Объем,
		|	ТоварыВЯчейкахОстатки.ПриоритетОтбораИзМонотоварныхЯчеек,
		|	ТоварыВЯчейкахОстатки.ПриоритетОтбораИзСмешанныхЯчеек,
		|	ТоварыВЯчейкахОстатки.ОбластьХранения,
		|	ТоварыВЯчейкахОстатки.ПриоритетОтбораПодОстаток,
		|	ТоварыВЯчейкахОстатки.ОписаниеМонотоварности,
		|	ТоварыВЯчейкахОстатки.СтрогаяМонотоварность,
		|	ЕСТЬNULL(ТоварыВЯчейкахОстатки.УровеньДоступности, 9999999999)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПулЯчеек.Ячейка КАК Ячейка,
		|	ПулЯчеек.Номенклатура КАК Номенклатура,
		|	ПулЯчеек.Характеристика,
		|	ПулЯчеек.Назначение,
		|	ПулЯчеек.Серия,
		|	ВЫБОР
		|		КОГДА ПулЯчеек.Номенклатура = ТоварыВЯчейкахОстатки.Номенклатура
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьДругаяНоменклатура,
		|	ВЫБОР
		|		КОГДА ПулЯчеек.Номенклатура = ТоварыВЯчейкахОстатки.Номенклатура
		|				И ПулЯчеек.Характеристика = ТоварыВЯчейкахОстатки.Характеристика
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьДругаяНоменклатураИЛИХарактеристика,
		|	ВЫБОР
		|		КОГДА ПулЯчеек.Номенклатура = ТоварыВЯчейкахОстатки.Номенклатура
		|				И ПулЯчеек.Характеристика = ТоварыВЯчейкахОстатки.Характеристика
		|				И ПулЯчеек.Серия = ТоварыВЯчейкахОстатки.Серия
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьДругаяНоменклатураИЛИХарактеристикаИЛИСерия
		|ПОМЕСТИТЬ ДругиеТоварыВЯчейках
		|ИЗ
		|	ПулЯчеек КАК ПулЯчеек
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВЯчейках.Остатки(
		|				,
		|				Ячейка В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ПулЯчеек.Ячейка
		|					ИЗ
		|						ПулЯчеек КАК ПулЯчеек)) КАК ТоварыВЯчейкахОстатки
		|		ПО ПулЯчеек.Ячейка = ТоварыВЯчейкахОстатки.Ячейка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДругиеТоварыВЯчейках.Номенклатура,
		|	ДругиеТоварыВЯчейках.Ячейка,
		|	МАКСИМУМ(ДругиеТоварыВЯчейках.ЕстьДругаяНоменклатура) КАК ЕстьДругаяНоменклатура
		|ПОМЕСТИТЬ НоменклатураВЯчейках
		|ИЗ
		|	ДругиеТоварыВЯчейках КАК ДругиеТоварыВЯчейках
		|
		|СГРУППИРОВАТЬ ПО
		|	ДругиеТоварыВЯчейках.Номенклатура,
		|	ДругиеТоварыВЯчейках.Ячейка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДругиеТоварыВЯчейках.Номенклатура,
		|	ДругиеТоварыВЯчейках.Ячейка,
		|	ДругиеТоварыВЯчейках.Характеристика,
		|	МАКСИМУМ(ДругиеТоварыВЯчейках.ЕстьДругаяНоменклатураИЛИХарактеристика) КАК ЕстьДругаяНоменклатураИЛИХарактеристика
		|ПОМЕСТИТЬ НоменклатураИХарактеристикаВЯчейках
		|ИЗ
		|	ДругиеТоварыВЯчейках КАК ДругиеТоварыВЯчейках
		|
		|СГРУППИРОВАТЬ ПО
		|	ДругиеТоварыВЯчейках.Номенклатура,
		|	ДругиеТоварыВЯчейках.Ячейка,
		|	ДругиеТоварыВЯчейках.Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДругиеТоварыВЯчейках.Номенклатура,
		|	ДругиеТоварыВЯчейках.Ячейка,
		|	ДругиеТоварыВЯчейках.Характеристика,
		|	МАКСИМУМ(ДругиеТоварыВЯчейках.ЕстьДругаяНоменклатураИЛИХарактеристикаИЛИСерия) КАК ЕстьДругаяНоменклатураИЛИХарактеристикаИЛИСерия,
		|	ДругиеТоварыВЯчейках.Серия
		|ПОМЕСТИТЬ НоменклатураИХарактеристикаИСерияВЯчейках
		|ИЗ
		|	ДругиеТоварыВЯчейках КАК ДругиеТоварыВЯчейках
		|
		|СГРУППИРОВАТЬ ПО
		|	ДругиеТоварыВЯчейках.Номенклатура,
		|	ДругиеТоварыВЯчейках.Ячейка,
		|	ДругиеТоварыВЯчейках.Характеристика,
		|	ДругиеТоварыВЯчейках.Серия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПулЯчеек.Номенклатура КАК Номенклатура,
		|	ПулЯчеек.Характеристика КАК Характеристика,
		|	ПулЯчеек.Назначение КАК Назначение,
		|	ПулЯчеек.Серия КАК Серия,
		|	ПулЯчеек.Распоряжение КАК Распоряжение,
		|	ПулЯчеек.Количество КАК Количество,
		|	ПулЯчеек.Ячейка КАК Ячейка,
		|	ПулЯчеек.СвободныйОстаток КАК СвободныйОстаток,
		|	ПулЯчеек.РабочийУчасток КАК РабочийУчасток,
		|	ПулЯчеек.ПорядокОбхода КАК ПорядокОбхода,
		|	ПулЯчеек.Код КАК Код,
		|	ПулЯчеек.Упаковка КАК Упаковка,
		|	ПулЯчеек.Упаковка.КоличествоУпаковок КАК КоличествоВКомплекте,
		|	ПулЯчеек.Вес КАК Вес,
		|	ПулЯчеек.Объем КАК Объем,
		|	ВЫБОР
		|		КОГДА ПулЯчеек.СвободныйОстаток <= ПулЯчеек.Количество
		|			ТОГДА ПулЯчеек.ПриоритетОтбораПодОстаток
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ПулЯчеек.ОписаниеМонотоварности = ЗНАЧЕНИЕ(Перечисление.ОписаниеМонотоварности.ПоНоменклатуре)
		|					ТОГДА ВЫБОР
		|							КОГДА НЕ НоменклатураВЯчейках.ЕстьДругаяНоменклатура
		|								ТОГДА ПулЯчеек.ПриоритетОтбораИзМонотоварныхЯчеек
		|							ИНАЧЕ ПулЯчеек.ПриоритетОтбораИзСмешанныхЯчеек
		|						КОНЕЦ
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ПулЯчеек.ОписаниеМонотоварности = ЗНАЧЕНИЕ(Перечисление.ОписаниеМонотоварности.ПоХарактеристике)
		|							ТОГДА ВЫБОР
		|									КОГДА НЕ НоменклатураИХарактеристикаВЯчейках.ЕстьДругаяНоменклатураИЛИХарактеристика
		|										ТОГДА ПулЯчеек.ПриоритетОтбораИзМонотоварныхЯчеек
		|									ИНАЧЕ ПулЯчеек.ПриоритетОтбораИзСмешанныхЯчеек
		|								КОНЕЦ
		|						ИНАЧЕ ВЫБОР
		|								КОГДА НЕ НоменклатураИХарактеристикаИСерияВЯчейках.ЕстьДругаяНоменклатураИЛИХарактеристикаИЛИСерия
		|									ТОГДА ПулЯчеек.ПриоритетОтбораИзМонотоварныхЯчеек
		|								ИНАЧЕ ПулЯчеек.ПриоритетОтбораИзСмешанныхЯчеек
		|							КОНЕЦ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК ПриоритетСтратегии,
		|	ВЫБОР
		|		КОГДА ПравилаРазмещенияТоваровВЯчейках.ОбластьХранения ЕСТЬ NULL 
		|			ТОГДА 1000
		|		ИНАЧЕ ПравилаРазмещенияТоваровВЯчейках.Приоритет
		|	КОНЕЦ КАК ПриоритетОбласти
		|ИЗ
		|	ПулЯчеек КАК ПулЯчеек
		|		ЛЕВОЕ СОЕДИНЕНИЕ НоменклатураВЯчейках КАК НоменклатураВЯчейках
		|		ПО ПулЯчеек.Номенклатура = НоменклатураВЯчейках.Номенклатура
		|			И ПулЯчеек.Ячейка = НоменклатураВЯчейках.Ячейка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПравилаРазмещенияТоваровВЯчейках КАК ПравилаРазмещенияТоваровВЯчейках
		|		ПО ПулЯчеек.СкладскаяГруппаНоменклатуры = ПравилаРазмещенияТоваровВЯчейках.СкладскаяГруппаНоменклатуры
		|			И ПулЯчеек.СкладскаяГруппаУпаковок = ПравилаРазмещенияТоваровВЯчейках.СкладскаяГруппаУпаковок
		|			И (ПравилаРазмещенияТоваровВЯчейках.Помещение = &Помещение)
		|			И (ПравилаРазмещенияТоваровВЯчейках.Склад = &Склад)
		|		ЛЕВОЕ СОЕДИНЕНИЕ НоменклатураИХарактеристикаВЯчейках КАК НоменклатураИХарактеристикаВЯчейках
		|		ПО ПулЯчеек.Номенклатура = НоменклатураИХарактеристикаВЯчейках.Номенклатура
		|			И ПулЯчеек.Ячейка = НоменклатураИХарактеристикаВЯчейках.Ячейка
		|			И ПулЯчеек.Характеристика = НоменклатураИХарактеристикаВЯчейках.Характеристика
		|		ЛЕВОЕ СОЕДИНЕНИЕ НоменклатураИХарактеристикаИСерияВЯчейках КАК НоменклатураИХарактеристикаИСерияВЯчейках
		|		ПО ПулЯчеек.Ячейка = НоменклатураИХарактеристикаИСерияВЯчейках.Ячейка
		|			И ПулЯчеек.Номенклатура = НоменклатураИХарактеристикаИСерияВЯчейках.Номенклатура
		|			И ПулЯчеек.Характеристика = НоменклатураИХарактеристикаИСерияВЯчейках.Характеристика
		|			И ПулЯчеек.Серия = НоменклатураИХарактеристикаИСерияВЯчейках.Серия
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПересчетовЯчеек КАК СостоянияПересчетовЯчеек
		|		ПО ПулЯчеек.Ячейка = СостоянияПересчетовЯчеек.Ячейка
		|			И (СостоянияПересчетовЯчеек.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияПересчетовЯчеек.ТребуетсяПересчет))
		|
		|УПОРЯДОЧИТЬ ПО
		|	СостоянияПересчетовЯчеек.Состояние,
		|	Номенклатура,
		|	Характеристика,
		|	Назначение,
		|	Серия,
		|	ПриоритетОбласти УБЫВ,
		|	ПриоритетСтратегии,
		|	ПулЯчеек.УровеньДоступности,
		|	ПорядокОбхода,
		|	Код
		|ИТОГИ ПО
		|	Распоряжение,
		|	Номенклатура,
		|	Характеристика,
		|	Назначение,
		|	Серия,
		|	Упаковка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаНераспределенных.Распоряжение,
		|	ТаблицаНераспределенных.Номенклатура,
		|	ТаблицаНераспределенных.СкладскаяГруппаНоменклатуры,
		|	ТаблицаНераспределенных.Характеристика,
		|	ТаблицаНераспределенных.Назначение,
		|	ТаблицаНераспределенных.Серия,
		|	ТаблицаНераспределенных.Упаковка,
		|	ТаблицаНераспределенных.Количество
		|ИЗ
		|	ТаблицаНераспределенных КАК ТаблицаНераспределенных
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОшибокТоварныеМеста КАК ТаблицаОшибокТоварныеМеста
		|		ПО ТаблицаНераспределенных.Номенклатура = ТаблицаОшибокТоварныеМеста.Номенклатура
		|			И ТаблицаНераспределенных.Распоряжение = ТаблицаОшибокТоварныеМеста.Распоряжение
		|ГДЕ
		|	ТаблицаОшибокТоварныеМеста.Номенклатура ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ НоменклатураИХарактеристикаИСерияВЯчейках
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ НоменклатураИХарактеристикаВЯчейках
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ НоменклатураВЯчейках
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДругиеТоварыВЯчейках
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПулЯчеек
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТоварыВЯчейкахОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаНоменклатурыТоварныеМеста";

		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ТаблицаНераспределенных.Упаковка", "ТаблицаНераспределенных.Номенклатура"));

		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаВесУпаковки", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки("ТоварыВЯчейкахОстатки.Упаковка", "ТоварыВЯчейкахОстатки.Номенклатура", Ложь));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаОбъемУпаковки", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаОбъемУпаковки("ТоварыВЯчейкахОстатки.Упаковка", "ТоварыВЯчейкахОстатки.Номенклатура", Ложь));


		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = ТекстЗапроса;

		Запрос.УстановитьПараметр("ТаблицаОшибок", СтруктураТаблиц.ТаблицаОшибок.Скопировать());
		Запрос.УстановитьПараметр("Склад",Склад);
		Запрос.УстановитьПараметр("Помещение",Помещение);

		СтруктураТаблиц.ТаблицаОшибок.Очистить();

		УстановитьПривилегированныйРежим(Истина);
		МассивРезультатов = Запрос.ВыполнитьПакет();
		УстановитьПривилегированныйРежим(Ложь);

		ВыборкаПоРаспоряжениям = МассивРезультатов[9].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ТаблицаОшибок = МассивРезультатов[10].Выгрузить();

		Пока ВыборкаПоРаспоряжениям.Следующий() Цикл

			ВыборкаПоНоменклатуре =  ВыборкаПоРаспоряжениям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 

			Пока ВыборкаПоНоменклатуре.Следующий() Цикл

				ВыборкаПоХарактеристикам = ВыборкаПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

				Пока ВыборкаПоХарактеристикам.Следующий() Цикл

					ВыборкаПоНазначению = ВыборкаПоХарактеристикам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

					Пока ВыборкаПоНазначению.Следующий() Цикл

						ВыборкаПоСериям = ВыборкаПоНазначению.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

						Пока ВыборкаПоСериям.Следующий() Цикл 

							ВыборкаПоУпаковкам = ВыборкаПоСериям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

							Пока ВыборкаПоУпаковкам.Следующий() Цикл 

								//детали
								ВыборкаПоЯчейкам = ВыборкаПоУпаковкам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);


								КоличествоКОтбору = Неопределено;

								Пока ВыборкаПоЯчейкам.Следующий() Цикл

									Если КоличествоКОтбору = Неопределено Тогда

										КоличествоКОтбору = ВыборкаПоЯчейкам.Количество;

									КонецЕсли;

									// Если ячейка заполнена, значит в ней есть остаток в нужной упаковке, 
									// иначе таблица остатков не соединилась бы с таблицей номенклатуры.
									Если ЗначениеЗаполнено(ВыборкаПоЯчейкам.Ячейка)
										И ВыборкаПоЯчейкам.СвободныйОстаток > 0 Тогда

										ОтборСтрокИзТаблицыРасходаИзЯчеек = Новый Структура("Ячейка,Номенклатура,Упаковка,Характеристика,Назначение,Серия");
										ЗаполнитьЗначенияСвойств(ОтборСтрокИзТаблицыРасходаИзЯчеек, ВыборкаПоЯчейкам);

										МассивНайденныхСтрок = СтруктураТаблиц.ТаблицаРасходаИзЯчеек.НайтиСтроки(ОтборСтрокИзТаблицыРасходаИзЯчеек);

										Если МассивНайденныхСтрок.Количество() = 0 Тогда
											СтрокаРасхода 						= СтруктураТаблиц.ТаблицаРасходаИзЯчеек.Добавить();
											ЗаполнитьЗначенияСвойств(СтрокаРасхода, ОтборСтрокИзТаблицыРасходаИзЯчеек);

											СтрокаРасхода.КоличествоУпаковок 	= ВыборкаПоЯчейкам.СвободныйОстаток;

											РабочийУчасток = СтруктураТаблиц.МассивУчастков.Найти(ВыборкаПоЯчейкам.РабочийУчасток);
											Если РабочийУчасток = Неопределено Тогда
												СтруктураТаблиц.МассивУчастков.Добавить(ВыборкаПоЯчейкам.РабочийУчасток);
											КонецЕсли;
										Иначе
											СтрокаРасхода = МассивНайденныхСтрок[0];
										КонецЕсли;

										КоличествоИзЯчейки = Мин(КоличествоКОтбору, СтрокаРасхода.КоличествоУпаковок);

										Если КоличествоИзЯчейки > 0 Тогда
											СтрокаРезультата = СтруктураТаблиц.ТаблицаРезультатов.Добавить();
											ЗаполнитьЗначенияСвойств(СтрокаРезультата, ВыборкаПоЯчейкам);
											СтрокаРезультата.КоличествоУпаковок = КоличествоИзЯчейки;
											СтрокаРезультата.Количество         = КоличествоИзЯчейки / ВыборкаПоЯчейкам.КоличествоВКомплекте;
											СтрокаРезультата.ОбъемУпаковки		= ВыборкаПоЯчейкам.Объем;
											СтрокаРезультата.ВесУпаковки		= ВыборкаПоЯчейкам.Вес;

											СтрокаРезультата.КлючСвязиСТарой = СтруктураТаблиц.ТаблицаРезультатов.Количество();

											СтрокаРасхода.КоличествоУпаковок = СтрокаРасхода.КоличествоУпаковок - КоличествоИзЯчейки; 
											КоличествоКОтбору = КоличествоКОтбору - КоличествоИзЯчейки;
										КонецЕсли;						

									КонецЕсли;

									Если КоличествоКОтбору = 0 Тогда

										Прервать;

									КонецЕсли;

								КонецЦикла;

								Если КоличествоКОтбору <> 0 Тогда

									СтрокаОшибки = СтруктураТаблиц.ТаблицаОшибок.Добавить();
									ЗаполнитьЗначенияСвойств(СтрокаОшибки, ВыборкаПоУпаковкам);
									СтрокаОшибки.Количество = КоличествоКОтбору / ВыборкаПоУпаковкам.КоличествоВКомплекте;
									СтрокаОшибки.КоличествоУпаковок = КоличествоКОтбору;

								КонецЕсли;	

							КонецЦикла;

						КонецЦикла;

					КонецЦикла;

				КонецЦикла;

			КонецЦикла;

		КонецЦикла;

		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаОшибок, СтруктураТаблиц.ТаблицаОшибок);

	КонецЕсли;

КонецПроцедуры

&ИзменениеИКонтроль("СоздатьЗаданияНаОтборПоРаспоряжениям")
Процедура РСК_СоздатьЗаданияНаОтборПоРаспоряжениям(СтруктураПараметров, СтруктураДанных)

	Склад = СтруктураПараметров.Склад;
	Помещение = СтруктураПараметров.Помещение;
	РабочийУчасток = СтруктураПараметров.РабочийУчасток;
	НастройкаФормированияПоРабочимУчасткам = СтруктураПараметров.НастройкаФормированияПоРабочимУчасткам;
	ОграничениеПоВесу = СтруктураПараметров.ОграничениеПоВесу;
	ОграничениеПоОбъему = СтруктураПараметров.ОграничениеПоОбъему;
	ОграничиватьПоОбъему = СтруктураПараметров.ОграничиватьПоОбъему;
	ОграничиватьПоВесу = СтруктураПараметров.ОграничиватьПоВесу;

	Если СтруктураПараметров.Свойство("Исполнитель") Тогда
		Исполнитель = СтруктураПараметров.Исполнитель;
	Иначе 
		Исполнитель = Справочники.Пользователи.ПустаяСсылка();
	КонецЕсли;

	РаспоряженияЗадания = Новый Соответствие;

	Если СтруктураДанных.ТаблицаРезультатов.Количество() > 0 Тогда

		Если НастройкаФормированияПоРабочимУчасткам = "СРазбиениемПоРабочимУчасткам" Тогда

			ЗапросУчастки = Новый Запрос;
			ЗапросУчастки.Текст = "ВЫБРАТЬ
			|	РабочиеУчастки.Ссылка КАК РабочийУчасток,
			|	РабочиеУчастки.ОграничиватьПоВесу КАК ОграничиватьПоВесу,
			|	РабочиеУчастки.ОграничениеПоВесу КАК ОграничениеПоВесу,
			|	РабочиеУчастки.ОграничиватьПоОбъему КАК ОграничиватьПоОбъему,
			|	РабочиеУчастки.ОграничениеПоОбъему КАК ОграничениеПоОбъему
			|ИЗ
			|	Справочник.РабочиеУчастки КАК РабочиеУчастки
			|ГДЕ
			|	РабочиеУчастки.Владелец = &Склад
			|	И РабочиеУчастки.Помещение = &Помещение";

			ЗапросУчастки.УстановитьПараметр("Склад",Склад);
			ЗапросУчастки.УстановитьПараметр("Помещение",Помещение);

			ТаблицаРабочихУчастков = ЗапросУчастки.Выполнить().Выгрузить();

			НоваяСтрока = ТаблицаРабочихУчастков.Добавить();
			НоваяСтрока.РабочийУчасток = Справочники.РабочиеУчастки.ПустаяСсылка();
			НоваяСтрока.ОграничиватьПоОбъему = Ложь;
			НоваяСтрока.ОграничиватьПоВесу = Ложь;

		Иначе	
			ТаблицаРабочихУчастков = Новый ТаблицаЗначений;
			ТаблицаРабочихУчастков.Колонки.Добавить("РабочийУчасток", Новый ОписаниеТипов("СправочникСсылка.РабочиеУчастки"));
			НоваяСтрока = ТаблицаРабочихУчастков.Добавить();
			Если НастройкаФормированияПоРабочимУчасткам = "БезРазбиенияПоРабочимУчасткам" Тогда
				НоваяСтрока.РабочийУчасток = Справочники.РабочиеУчастки.ПустаяСсылка();
			Иначе
				НоваяСтрока.РабочийУчасток = РабочийУчасток;
			КонецЕсли;

		КонецЕсли;

		НевозможныйНабор = 9999999999;

		Для Каждого СтрокаРабочийУчасток Из ТаблицаРабочихУчастков Цикл

			Если НастройкаФормированияПоРабочимУчасткам = "СРазбиениемПоРабочимУчасткам" Тогда						
				МаксимальныйОбъем = ?(СтрокаРабочийУчасток.ОграничиватьПоОбъему, СтрокаРабочийУчасток.ОграничениеПоОбъему, НевозможныйНабор);
				МаксимальныйВес = ?(СтрокаРабочийУчасток.ОграничиватьПоВесу, СтрокаРабочийУчасток.ОграничениеПоВесу, НевозможныйНабор);						
			Иначе
				МаксимальныйОбъем = ?(ОграничиватьПоОбъему, ОграничениеПоОбъему, НевозможныйНабор);
				МаксимальныйВес = ?(ОграничиватьПоВесу, ОграничениеПоВесу, НевозможныйНабор);						
			КонецЕсли;

			Если НастройкаФормированияПоРабочимУчасткам <> "БезРазбиенияПоРабочимУчасткам" Тогда			
				ТаблицаРезультата = СтруктураДанных.ТаблицаРезультатов.НайтиСтроки(Новый Структура("РабочийУчасток",СтрокаРабочийУчасток.РабочийУчасток));			
			Иначе			
				ТаблицаРезультата = СтруктураДанных.ТаблицаРезультатов;
			КонецЕсли;			

			// Разбиение по весу и объему. Соглашения:
			//  - если вес (объем) одной строки больше, чем ограничения - создается отдельный документ,
			//		вес (объем) которого будет больше, чем максимальный
			//	- разбиение по весу (объему) не оптимально, т.к. более приоритетно сохранение порядка обхода
			//			(лучше пусть будет больше заданий, но каждое можно быстрее обойти).

			ТекущееРаспоряжение 	  = Неопределено;
			ФормироватьПоРаспоряжению = Истина;
			ПропуститьТару = 0;
			КлючСвязиСТаройПоследний = 0;

			// Идем сначала результату, т.к. в нем строки упорядочены по обходу
			Для Каждого СтрТабл Из ТаблицаРезультата Цикл

				Если ТекущееРаспоряжение <> СтрТабл.Распоряжение Тогда

					ТекущееРаспоряжение = СтрТабл.Распоряжение;
					ФормироватьПоРаспоряжению = Истина;

					Если Не ЗначениеЗаполнено(ТекущееРаспоряжение.ЗонаОтгрузки	) Тогда

						ФормироватьПоРаспоряжению = Ложь;

						ТекстСообщения = НСтр("ru = 'В распоряжении %Распоряжении% не указана зона отгрузки.
						|Необходимо указать зону отгрузки при настройке формирования заданий на отбор товаров.';
						|en = 'Outbound area is not specified in the %Распоряжении% reference.
						|Specify a outbound area when you set up generation of goods picking jobs.'");

						ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Распоряжении%",ТекущееРаспоряжение);

						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);

					КонецЕсли;

					Если ФормироватьПоРаспоряжению Тогда

						СтруктураДокумента = РаспоряженияЗадания[ТекущееРаспоряжение];

						Если СтруктураДокумента = Неопределено Тогда

							СтруктураДокумента = Новый Структура;
							СтруктураДокумента.Вставить("ДокументОбъект", НовыйОбъектЗадание(ТекущееРаспоряжение,СтрокаРабочийУчасток.РабочийУчасток, Склад, Помещение, Исполнитель));
							СтруктураДокумента.Вставить("Объем", 0);
							СтруктураДокумента.Вставить("Вес", 0);

							РаспоряженияЗадания.Вставить(ТекущееРаспоряжение,СтруктураДокумента);

						ИначеЕсли НастройкаФормированияПоРабочимУчасткам = "СРазбиениемПоРабочимУчасткам" Тогда

							СтруктураДокумента.Объем    = 0;
							СтруктураДокумента.Вес	  = 0;
							СтруктураДокумента.ДокументОбъект = НовыйОбъектЗадание(ТекущееРаспоряжение,СтрокаРабочийУчасток.РабочийУчасток, Склад, Помещение, Исполнитель);

						КонецЕсли;

					КонецЕсли;
				КонецЕсли;

				Если Не ФормироватьПоРаспоряжению Тогда
					Продолжить;
				КонецЕсли;

				Если ПропуститьТару = СтрТабл.КлючСвязиСТарой Тогда
					Продолжить;
				КонецЕсли;

				ПропуститьТару = 0;

				Если (СтрТабл.ОбъемУпаковки*СтрТабл.КоличествоУпаковок > МаксимальныйОбъем
					Или  СтрТабл.ВесУпаковки*СтрТабл.КоличествоУпаковок > МаксимальныйВес) Тогда

					ДокументОбъект = НовыйОбъектЗадание(СтрТабл.Распоряжение,СтрокаРабочийУчасток.РабочийУчасток, Склад, Помещение, Исполнитель);

					Для Каждого СтрокиТаблицы Из ТаблицаРезультата Цикл

						Если СтрокиТаблицы.КлючСвязиСТарой = СтрТабл.КлючСвязиСТарой Тогда
							НоваяСтрока = ДокументОбъект.ТоварыОтбор.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрТабл);
						КонецЕсли;

					КонецЦикла;

					ПропуститьТару = СтрТабл.КлючСвязиСТарой;

					ЗаписатьОбъектЗадание(ДокументОбъект);

				Иначе

					Если КлючСвязиСТаройПоследний <> СтрТабл.КлючСвязиСТарой 
						И (РаспоряженияЗадания[СтрТабл.Распоряжение].Объем + СтрТабл.ОбъемУпаковки*СтрТабл.КоличествоУпаковок) > МаксимальныйОбъем
						Или (РаспоряженияЗадания[СтрТабл.Распоряжение].Вес + СтрТабл.ВесУпаковки*СтрТабл.КоличествоУпаковок) > МаксимальныйВес Тогда

						ЗаписатьОбъектЗадание(РаспоряженияЗадания[СтрТабл.Распоряжение].ДокументОбъект);
						//
						РаспоряженияЗадания[СтрТабл.Распоряжение].Объем    = 0;
						РаспоряженияЗадания[СтрТабл.Распоряжение].Вес	  = 0;
						РаспоряженияЗадания[СтрТабл.Распоряжение].ДокументОбъект = НовыйОбъектЗадание(СтрТабл.Распоряжение,СтрокаРабочийУчасток.РабочийУчасток, Склад, Помещение, Исполнитель);

					КонецЕсли;

					ДокументОбъектТоварыОтбор = РаспоряженияЗадания[СтрТабл.Распоряжение].ДокументОбъект.ТоварыОтбор; // ДокументТабличнаяЧасть.ОтборРазмещениеТоваров.ТоварыОтбор
					НоваяСтрока = ДокументОбъектТоварыОтбор.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрТабл);

					РаспоряженияЗадания[СтрТабл.Распоряжение].Объем = РаспоряженияЗадания[СтрТабл.Распоряжение].Объем
					+ СтрТабл.ОбъемУпаковки*СтрТабл.КоличествоУпаковок;
					РаспоряженияЗадания[СтрТабл.Распоряжение].Вес	= РаспоряженияЗадания[СтрТабл.Распоряжение].Вес 
					+ СтрТабл.ВесУпаковки*СтрТабл.КоличествоУпаковок;

				КонецЕсли;

				КлючСвязиСТарой = СтрТабл.КлючСвязиСТарой;

			КонецЦикла;

			Для Каждого СтрДок Из РаспоряженияЗадания Цикл
				
				Если СтрДок.Значение.ДокументОбъект.ТоварыОтбор.Количество() > 0 Тогда

					ЗаписатьОбъектЗадание(СтрДок.Значение.ДокументОбъект)

				КонецЕсли;
				#Вставка
				//++ РС Консалт: Минаков А.С. Задача 20226
				СсылкаНаОтбор = СтрДок.Значение.ДокументОбъект.Ссылка;
				Если ТипЗнч(СтрДок.Ключ) = Тип("ДокументСсылка.РасходныйОрдерНаТовары")
					И ЗначениеЗаполнено(СсылкаНаОтбор)
					И Не СтрДок.Ключ.ОтгружаемыеТовары.Итог("Количество") = СсылкаНаОтбор.ТоварыОтбор.Итог("Количество") Тогда
					
					ОбщегоНазначения.СообщитьПользователю("" + СтрДок.Ключ + ": в " + СсылкаНаОтбор + " попали не все товары из ордера!", СсылкаНаОтбор)
				КонецЕсли;	
				//++ РС Консалт: Минаков А.С. Задача 20226
				#КонецВставки

			КонецЦикла;
		КонецЦикла;		
	Иначе
		ТекстСообщения = НСтр("ru = 'Не удалось сформировать задания на отбор товаров согласно правилам отбора.';
		|en = 'Cannot generate goods picking jobs according to the picking rules.'");

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	#Вставка
	//Надо будет переделать и удалить - не забыть
	//++РС Консалт: Минаков А.С. ЗагрузкаТСД
	Если СтруктураПараметров.Свойство("ВыгрузитьНаТСД") И СтруктураПараметров.ВыгрузитьНаТСД Тогда
		МассивДокументов = Новый Массив;
		Для Каждого СтрДок Из РаспоряженияЗадания Цикл
			МассивДокументов.Добавить(СтрДок.Значение.ДокументОбъект.Ссылка)	
		КонецЦикла;
		ШаблонДокумента = реа_ОбщийСерверПовтИсп.ПолучитьПредопределенноеЗначение("РС_ШаблонОтборТСД");
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДатаМобайл_ДокументыТСД.ИсходныйДокумент КАК ИсходныйДокумент,
		|	МАКСИМУМ(ДатаМобайл_ДокументыТСД.Ссылка) КАК Ссылка
		|ИЗ
		|	Справочник.ДатаМобайл_ДокументыТСД КАК ДатаМобайл_ДокументыТСД
		|ГДЕ
		|	ДатаМобайл_ДокументыТСД.ИсходныйДокумент В(&ИсходныйДокумент)
		|	И НЕ ДатаМобайл_ДокументыТСД.ПометкаУдаления
		|
		|СГРУППИРОВАТЬ ПО
		|	ДатаМобайл_ДокументыТСД.ИсходныйДокумент");	
		Запрос.УстановитьПараметр("ИсходныйДокумент", МассивДокументов);
		Выборка = Запрос.Выполнить().Выбрать();
		
		СтруктураПоиска = Новый Структура("ИсходныйДокумент");
		Для Каждого СтрДок Из РаспоряженияЗадания Цикл
			
			ИсходныйДокумент = СтрДок.Значение.ДокументОбъект.Ссылка;
			СтруктураПоиска.ИсходныйДокумент = ИсходныйДокумент;
			Если Выборка.НайтиСледующий(СтруктураПоиска) Тогда
				ДокументТСД = Выборка.Ссылка.ПолучитьОбъект()		
			Иначе
				ДокументТСД = Справочники.ДатаМобайл_ДокументыТСД.СоздатьЭлемент()
			КонецЕсли;
			
			ДокументТСД.ИсходныйДокумент = ИсходныйДокумент;
			ДокументТСД.СписокТерминалов.Очистить();
			ДокументТСД.Комментарий = ДокументТСД.ИсходныйДокумент.Комментарий;			
			ДокументТСД.Шаблон = ШаблонДокумента;
			ДокументТСД.Приоритет = 0;
			
			Попытка
				ДокументТСД.Записать()	
			Исключение
				Сообщить(ОписаниеОшибки())
			КонецПопытки;
			
			Выборка.Сбросить()
			
		КонецЦикла
	КонецЕсли;
	//++РС Консалт: Минаков А.С. ЗагрузкаТСД
	#КонецВставки
КонецПроцедуры

//++ РС Консалт: Минаков А.С. Задача 20226 - были отключены на корню дабы избежать пожара. Нужно разобраться, почему это задание вообще запускается
&Вместо("ПриПроведенииДокументовОтгрузкиОбработкаПроведения")
Процедура РСК_ПриПроведенииДокументовОтгрузкиОбработкаПроведения(Источник, Отказ, РежимПроведения)
	
	Возврат
	
КонецПроцедуры

&Вместо("ВыполнитьФоновоеПереоформлениеРасходныхОрдеров")
Процедура РСК_ВыполнитьФоновоеПереоформлениеРасходныхОрдеров(ПараметрыЗадания)
	
	Возврат
	
КонецПроцедуры
//++ РС Консалт: Минаков А.С. Задача 20226

&ИзменениеИКонтроль("ВычислитьТоварыДляОформленияРасходныхОрдеров")
Функция РСК_ВычислитьТоварыДляОформленияРасходныхОрдеров(Параметры, НачинатьОтгрузкуПослеФормированияЗаданияНаПеревозку, ОформлятьСначалаНакладные)
	
	ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров =
		Константы.ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров.Получить();
	
	Если ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров <> 0 Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаОстатков.ДокументОтгрузки КАК ДокументОтгрузки,
		|	ТаблицаОстатков.Номенклатура КАК Номенклатура,
		|	ТаблицаОстатков.Характеристика КАК Характеристика,
		|	ТаблицаОстатков.Назначение КАК Назначение,
		|	ТаблицаОстатков.Серия КАК Серия,
		|	ТаблицаОстатков.Склад КАК Склад,
		|	ВЫБОР
		|		КОГДА ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины В (&МерныеТипыЕдиницИзмерений)
		|			ТОГДА &ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров / 100 * ТаблицаОборотов.КОтгрузкеПриход
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ДопустимоеОтклонение
		|ПОМЕСТИТЬ ВТТоварыКОформлениюРасходныхОрдеров
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.Остатки(
		|			,
		|			Получатель = &Получатель
		|				И Склад = &Склад
		|				И (ДокументОтгрузки В (&РаспоряженияНаОтгрузку)
		|					ИЛИ &ПоВсемРаспоряжениям)
		|				И НЕ ДокументОтгрузки В
		|						(ВЫБРАТЬ
		|							ВТЗаблокированоТоварыКОтгрузке.ДокументОтгрузки
		|						ИЗ
		|							ВТЗаблокированоТоварыКОтгрузке КАК ВТЗаблокированоТоварыКОтгрузке)) КАК ТаблицаОстатков
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке.Обороты(
		|				,
		|				,
		|				,
		|				Получатель = &Получатель
		|					И Склад = &Склад
		|					И (ДокументОтгрузки В (&РаспоряженияНаОтгрузку)
		|						ИЛИ &ПоВсемРаспоряжениям)
		|					И НЕ ДокументОтгрузки В
		|							(ВЫБРАТЬ
		|								ВТЗаблокированоТоварыКОтгрузке.ДокументОтгрузки
		|							ИЗ
		|								ВТЗаблокированоТоварыКОтгрузке КАК ВТЗаблокированоТоварыКОтгрузке)) КАК ТаблицаОборотов
		|		ПО ТаблицаОстатков.ДокументОтгрузки = ТаблицаОборотов.ДокументОтгрузки
		|			И ТаблицаОстатков.Номенклатура = ТаблицаОборотов.Номенклатура
		|			И ТаблицаОстатков.Характеристика = ТаблицаОборотов.Характеристика
		|			И ТаблицаОстатков.Назначение = ТаблицаОборотов.Назначение
		|			И ТаблицаОстатков.Серия = ТаблицаОборотов.Серия
		|			И ТаблицаОстатков.Склад = ТаблицаОборотов.Склад
		|ГДЕ
		|	ТаблицаОстатков.КОтгрузкеОстаток > ВЫБОР
		|			КОГДА ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины В (&МерныеТипыЕдиницИзмерений)
		|				ТОГДА &ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров / 100 * ТаблицаОборотов.КОтгрузкеПриход
		|			ИНАЧЕ 0
		|		КОНЕЦ";
		
		ТекстЗапроса = ТекстЗапроса + ";
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
	Иначе
		
		ТекстЗапроса = "";
		
	КонецЕсли;
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	
	Если Не НачинатьОтгрузкуПослеФормированияЗаданияНаПеревозку Тогда 
		
		ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
		ДополнительныеПараметры.ИмяВременнойТаблицы = "ВТЗаблокированоТоварыКОтгрузке";
		
		ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗначенийЗаблокированныхИзмерений(Неопределено,
			"РегистрНакопления.ТоварыКОтгрузке", "ДокументОтгрузки", МенеджерВТ, ДополнительныеПараметры);
			
		ТекстЗапроса = ТекстЗапроса +
		// ТоварыКОтгрузкеПриход/ТоварыКОформлениюРасход
		"ВЫБРАТЬ
		|	ТоварыКОтгрузкеОбороты.ДокументОтгрузки КАК ДокументОтгрузки,
		|	ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка) КАК ЗаданиеНаПеревозку,
		|	ТоварыКОтгрузкеОбороты.Период КАК Период,
		|	ВЫБОР
		|		КОГДА ТоварыКОтгрузкеОбороты.Получатель В (&ПустойПолучатель)
		|			ТОГДА ТоварыКОтгрузкеОбороты.ДокументОтгрузки
		|		ИНАЧЕ ТоварыКОтгрузкеОбороты.Получатель
		|	КОНЕЦ КАК Получатель,
		|	ТоварыКОтгрузкеОбороты.Склад КАК Склад,
		|	ТоварыКОтгрузкеОбороты.Номенклатура КАК Номенклатура,
		|	ТоварыКОтгрузкеОбороты.Характеристика КАК Характеристика,
		|	ТоварыКОтгрузкеОбороты.Назначение КАК Назначение,
		|	ТоварыКОтгрузкеОбороты.Серия КАК Серия,
		|	СУММА(ВЫБОР
		|		КОГДА ТоварыКОтгрузкеОбороты.КОтгрузкеРасход < 0
		|			ТОГДА -ТоварыКОтгрузкеОбороты.КОтгрузкеРасход
		|		ИНАЧЕ ВЫБОР
		|				КОГДА &ОформлятьСначалаНакладные
		|					ТОГДА ТоварыКОтгрузкеОбороты.КОтгрузкеПриход - ТоварыКОтгрузкеОбороты.КОформлениюПриход
		|				ИНАЧЕ ТоварыКОтгрузкеОбороты.КОтгрузкеПриход
		|			КОНЕЦ
		|	КОНЕЦ) КАК Количество,
		|	ВЫБОР
		|		КОГДА СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ДоКлиента)
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
		#Удаление
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		#КонецУдаления
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
		#КонецВставки
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.КПолучателюОпределяетСлужбаДоставки))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОтгрузкаПоЗаданиюНаПеревозку
		|	
		|ПОМЕСТИТЬ ТоварыКОтгрузке
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.Обороты(
		|			,
		|			,
		|			День,
		|			Получатель = &Получатель
		|				И Склад = &Склад
		|				И (ДокументОтгрузки В (&РаспоряженияНаОтгрузку)
		|					ИЛИ &ПоВсемРаспоряжениям)
		|				И НЕ ДокументОтгрузки В
		|						(ВЫБРАТЬ
		|							ВТЗаблокированоТоварыКОтгрузке.ДокументОтгрузки
		|						ИЗ
		|							ВТЗаблокированоТоварыКОтгрузке КАК ВТЗаблокированоТоварыКОтгрузке)
		|				И &УсловиеДопустимоеОтклонение) КАК ТоварыКОтгрузкеОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияИРеквизитыДоставки КАК СостоянияИРеквизитыДоставки
		|		ПО (СостоянияИРеквизитыДоставки.Склад = ТоварыКОтгрузкеОбороты.Склад)
		|			И (СостоянияИРеквизитыДоставки.Распоряжение = ТоварыКОтгрузкеОбороты.ДокументОтгрузки)
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ТоварыКОтгрузкеОбороты.КОтгрузкеРасход < 0
		|				ТОГДА -ТоварыКОтгрузкеОбороты.КОтгрузкеРасход
		|			ИНАЧЕ ВЫБОР
		|					КОГДА &ОформлятьСначалаНакладные
		|						ТОГДА ТоварыКОтгрузкеОбороты.КОтгрузкеПриход - ТоварыКОтгрузкеОбороты.КОформлениюПриход
		|					ИНАЧЕ ТоварыКОтгрузкеОбороты.КОтгрузкеПриход
		|				КОНЕЦ
		|		КОНЕЦ <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКОтгрузкеОбороты.ДокументОтгрузки,
		|	ТоварыКОтгрузкеОбороты.Склад,
		|	ТоварыКОтгрузкеОбороты.Номенклатура,
		|	ТоварыКОтгрузкеОбороты.Характеристика,
		|	ТоварыКОтгрузкеОбороты.Назначение,
		|	ТоварыКОтгрузкеОбороты.Серия,
		|	ВЫБОР
		|		КОГДА ТоварыКОтгрузкеОбороты.Получатель В (&ПустойПолучатель)
		|			ТОГДА ТоварыКОтгрузкеОбороты.ДокументОтгрузки
		|		ИНАЧЕ ТоварыКОтгрузкеОбороты.Получатель
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ДоКлиента)
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками
		#Удаление
		|						И СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		#КонецУдаления
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
		|						И СостоянияИРеквизитыДоставки.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
		#КонецВставки
		|					ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.КПолучателюОпределяетСлужбаДоставки))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	ТоварыКОтгрузкеОбороты.Период
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТоварыКОтгрузкеОбороты.ДокументОтгрузки,
		|	ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка),
		|	ТоварыКОтгрузкеОбороты.Период,
		|	ВЫБОР
		|		КОГДА ТоварыКОтгрузкеОбороты.Получатель В (&ПустойПолучатель)
		|			ТОГДА ТоварыКОтгрузкеОбороты.ДокументОтгрузки
		|		ИНАЧЕ ТоварыКОтгрузкеОбороты.Получатель
		|	КОНЕЦ,
		|	ТоварыКОтгрузкеОбороты.Склад,
		|	ТоварыКОтгрузкеОбороты.Номенклатура,
		|	ТоварыКОтгрузкеОбороты.Характеристика,
		|	ТоварыКОтгрузкеОбороты.Назначение,
		|	ТоварыКОтгрузкеОбороты.Серия,
		|	СУММА(ТоварыКОтгрузкеОбороты.КОформлениюРасход),
		|	ВЫБОР
		|		КОГДА СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ДоКлиента)
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
		#Удаление
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		#КонецУдаления
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
		#КонецВставки
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.КПолучателюОпределяетСлужбаДоставки))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.Обороты(
		|			,
		|			,
		|			День,
		|			Получатель = &Получатель
		|				И Склад = &Склад
		|				И (ДокументОтгрузки В (&РаспоряженияНаОтгрузку)
		|					ИЛИ &ПоВсемРаспоряжениям)
		|				И НЕ ДокументОтгрузки В
		|						(ВЫБРАТЬ
		|							ВТЗаблокированоТоварыКОтгрузке.ДокументОтгрузки
		|						ИЗ
		|							ВТЗаблокированоТоварыКОтгрузке КАК ВТЗаблокированоТоварыКОтгрузке)
		|				И &УсловиеДопустимоеОтклонение) КАК ТоварыКОтгрузкеОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияИРеквизитыДоставки КАК СостоянияИРеквизитыДоставки
		|		ПО (СостоянияИРеквизитыДоставки.Склад = ТоварыКОтгрузкеОбороты.Склад)
		|			И (СостоянияИРеквизитыДоставки.Распоряжение = ТоварыКОтгрузкеОбороты.ДокументОтгрузки)
		|ГДЕ
		|	&ОформлятьСначалаНакладные
		|	И ТоварыКОтгрузкеОбороты.КОформлениюРасход <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКОтгрузкеОбороты.ДокументОтгрузки,
		|	ТоварыКОтгрузкеОбороты.Склад,
		|	ТоварыКОтгрузкеОбороты.Номенклатура,
		|	ТоварыКОтгрузкеОбороты.Характеристика,
		|	ТоварыКОтгрузкеОбороты.Назначение,
		|	ТоварыКОтгрузкеОбороты.Серия,
		|	ВЫБОР
		|		КОГДА ТоварыКОтгрузкеОбороты.Получатель В (&ПустойПолучатель)
		|			ТОГДА ТоварыКОтгрузкеОбороты.ДокументОтгрузки
		|		ИНАЧЕ ТоварыКОтгрузкеОбороты.Получатель
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ДоКлиента)
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками
		#Удаление
		|						И СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		#КонецУдаления
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
		|						И СостоянияИРеквизитыДоставки.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
		#КонецВставки
		|					ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.КПолучателюОпределяетСлужбаДоставки))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	ТоварыКОтгрузкеОбороты.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыКОтгрузке.ДокументОтгрузки КАК ДокументОтгрузки,
		|	ТоварыКОтгрузке.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку,
		|	ТоварыКОтгрузке.Период КАК Период,
		|	ТоварыКОтгрузке.Получатель КАК Получатель,
		|	ТоварыКОтгрузке.Склад КАК Склад,
		|	ТоварыКОтгрузке.Номенклатура КАК Номенклатура,
		|	ТоварыКОтгрузке.Характеристика КАК Характеристика,
		|	ТоварыКОтгрузке.Назначение КАК Назначение,
		|	ТоварыКОтгрузке.Серия КАК Серия,
		|	ТоварыКОтгрузке.Количество,
		|	ТоварыКОтгрузке.ОтгрузкаПоЗаданиюНаПеревозку КАК ОтгрузкаПоЗаданиюНаПеревозку,
		|	&ДопустимоеОтклонениеЗначение КАК ДопустимоеОтклонение
		|ИЗ
		|	ТоварыКОтгрузке КАК ТоварыКОтгрузке
		|ГДЕ &СоединениеСВТДопустимыхОтклонений
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период
		|ИТОГИ ПО
		|	ЗаданиеНаПеревозку,
		|	ДокументОтгрузки,
		|	Номенклатура,
		|	Характеристика,
		|	Назначение,
		|	Серия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		// КОтгрузкеРасход
		|ВЫБРАТЬ
		|	ТоварыКОтгрузкеОбороты.ДокументОтгрузки КАК ДокументОтгрузки,
		|	ТоварыКОтгрузкеОбороты.Период КАК Период,
		|	ВЫБОР
		|		КОГДА ТоварыКОтгрузкеОбороты.Получатель В (&ПустойПолучатель)
		|			ТОГДА ТоварыКОтгрузкеОбороты.ДокументОтгрузки
		|		ИНАЧЕ ТоварыКОтгрузкеОбороты.Получатель
		|	КОНЕЦ КАК Получатель,
		|	ТоварыКОтгрузкеОбороты.Склад КАК Склад,
		|	ТоварыКОтгрузкеОбороты.Номенклатура КАК Номенклатура,
		|	ТоварыКОтгрузкеОбороты.Характеристика КАК Характеристика,
		|	ТоварыКОтгрузкеОбороты.Назначение КАК Назначение,
		|	ТоварыКОтгрузкеОбороты.Серия КАК Серия,
		|	ТоварыКОтгрузкеОбороты.КОтгрузкеРасход КАК Количество
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.Обороты(
		|			,
		|			,
		|			День,
		|			Получатель = &Получатель
		|				И Склад = &Склад
		|				И (ДокументОтгрузки В (&РаспоряженияНаОтгрузку)
		|					ИЛИ &ПоВсемРаспоряжениям)
		|				И НЕ ДокументОтгрузки В
		|						(ВЫБРАТЬ
		|							ВТЗаблокированоТоварыКОтгрузке.ДокументОтгрузки
		|						ИЗ
		|							ВТЗаблокированоТоварыКОтгрузке КАК ВТЗаблокированоТоварыКОтгрузке)
		|				И &УсловиеДопустимоеОтклонение) КАК ТоварыКОтгрузкеОбороты
		|ГДЕ
		|	ТоварыКОтгрузкеОбороты.КОтгрузкеРасход > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		// СобираетсяПриход + СобраноПриход
		|ВЫБРАТЬ
		|	ТоварыКОтгрузкеОбороты.ДокументОтгрузки КАК ДокументОтгрузки,
		|	ТоварыКОтгрузкеОбороты.Период КАК Период,
		|	ВЫБОР
		|		КОГДА ТоварыКОтгрузкеОбороты.Получатель В (&ПустойПолучатель)
		|			ТОГДА ТоварыКОтгрузкеОбороты.ДокументОтгрузки
		|		ИНАЧЕ ТоварыКОтгрузкеОбороты.Получатель
		|	КОНЕЦ КАК Получатель,
		|	ТоварыКОтгрузкеОбороты.Склад КАК Склад,
		|	ТоварыКОтгрузкеОбороты.Номенклатура КАК Номенклатура,
		|	ТоварыКОтгрузкеОбороты.Характеристика КАК Характеристика,
		|	ТоварыКОтгрузкеОбороты.Назначение КАК Назначение,
		|	ТоварыКОтгрузкеОбороты.Серия КАК Серия,
		|	ТоварыКОтгрузкеОбороты.СобираетсяПриход + ТоварыКОтгрузкеОбороты.СобраноПриход КАК Количество
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.Обороты(
		|			,
		|			,
		|			День,
		|			Получатель = &Получатель
		|				И Склад = &Склад
		|				И (ДокументОтгрузки В (&РаспоряженияНаОтгрузку)
		|					ИЛИ &ПоВсемРаспоряжениям)
		|				И НЕ ДокументОтгрузки В
		|						(ВЫБРАТЬ
		|							ВТЗаблокированоТоварыКОтгрузке.ДокументОтгрузки
		|						ИЗ
		|							ВТЗаблокированоТоварыКОтгрузке КАК ВТЗаблокированоТоварыКОтгрузке)
		|				И &УсловиеДопустимоеОтклонение) КАК ТоварыКОтгрузкеОбороты
		|ГДЕ
		|	ТоварыКОтгрузкеОбороты.СобираетсяПриход + ТоварыКОтгрузкеОбороты.СобраноПриход > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		// КСборкеПриход
		|ВЫБРАТЬ
		|	ТоварыКОтгрузкеОбороты.ДокументОтгрузки КАК ДокументОтгрузки,
		|	ТоварыКОтгрузкеОбороты.Период КАК Период,
		|	ВЫБОР
		|		КОГДА ТоварыКОтгрузкеОбороты.Получатель В (&ПустойПолучатель)
		|			ТОГДА ТоварыКОтгрузкеОбороты.ДокументОтгрузки
		|		ИНАЧЕ ТоварыКОтгрузкеОбороты.Получатель
		|	КОНЕЦ КАК Получатель,
		|	ТоварыКОтгрузкеОбороты.Склад КАК Склад,
		|	ТоварыКОтгрузкеОбороты.Номенклатура КАК Номенклатура,
		|	ТоварыКОтгрузкеОбороты.Характеристика КАК Характеристика,
		|	ТоварыКОтгрузкеОбороты.Назначение КАК Назначение,
		|	ТоварыКОтгрузкеОбороты.Серия КАК Серия,
		|	ТоварыКОтгрузкеОбороты.КСборкеПриход КАК Количество,
		|	ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка) КАК ЗаданиеНаПеревозку,
		|	ЛОЖЬ КАК ОтгрузкаПоЗаданиюНаПеревозку
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.Обороты(
		|			,
		|			,
		|			День,
		|			Получатель = &Получатель
		|				И Склад = &Склад
		|				И (ДокументОтгрузки В (&РаспоряженияНаОтгрузку)
		|					ИЛИ &ПоВсемРаспоряжениям)
		|				И НЕ ДокументОтгрузки В
		|						(ВЫБРАТЬ
		|							ВТЗаблокированоТоварыКОтгрузке.ДокументОтгрузки
		|						ИЗ
		|							ВТЗаблокированоТоварыКОтгрузке КАК ВТЗаблокированоТоварыКОтгрузке)
		|				И &УсловиеДопустимоеОтклонение) КАК ТоварыКОтгрузкеОбороты
		|ГДЕ
		|	ТоварыКОтгрузкеОбороты.КСборкеПриход > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		// Дельта
		|ВЫБРАТЬ
		|	ТоварыКОтгрузкеОстатки.ДокументОтгрузки,
		|	ВЫБОР
		|		КОГДА ТоварыКОтгрузкеОстатки.Получатель В (&ПустойПолучатель)
		|			ТОГДА ТоварыКОтгрузкеОстатки.ДокументОтгрузки
		|		ИНАЧЕ ТоварыКОтгрузкеОстатки.Получатель
		|	КОНЕЦ КАК Получатель,
		|	ТоварыКОтгрузкеОстатки.Склад,
		|	ТоварыКОтгрузкеОстатки.Номенклатура,
		|	ТоварыКОтгрузкеОстатки.Характеристика,
		|	ТоварыКОтгрузкеОстатки.Назначение,
		|	ТоварыКОтгрузкеОстатки.Серия,
		|	ВЫБОР
		|		КОГДА &ОформлятьСначалаНакладные
		|			ТОГДА ТоварыКОтгрузкеОстатки.КОтгрузкеОстаток - ТоварыКОтгрузкеОстатки.КОформлениюОстаток 
		|					- ТоварыКОтгрузкеОстатки.СобираетсяОстаток - ТоварыКОтгрузкеОстатки.СобраноОстаток 
		|					- ТоварыКОтгрузкеОстатки.КСборкеОстаток
		|		ИНАЧЕ ТоварыКОтгрузкеОстатки.КОтгрузкеОстаток - ТоварыКОтгрузкеОстатки.СобираетсяОстаток
		|				- ТоварыКОтгрузкеОстатки.СобраноОстаток - ТоварыКОтгрузкеОстатки.КСборкеОстаток
		|	КОНЕЦ КАК Количество
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.Остатки(
		|			,
		|			Получатель = &Получатель
		|				И Склад = &Склад
		|				И (ДокументОтгрузки В (&РаспоряженияНаОтгрузку)
		|					ИЛИ &ПоВсемРаспоряжениям)
		|				И НЕ ДокументОтгрузки В
		|						(ВЫБРАТЬ
		|							ВТЗаблокированоТоварыКОтгрузке.ДокументОтгрузки
		|						ИЗ
		|							ВТЗаблокированоТоварыКОтгрузке КАК ВТЗаблокированоТоварыКОтгрузке)
		|				И &УсловиеДопустимоеОтклонение) КАК ТоварыКОтгрузкеОстатки
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ОформлятьСначалаНакладные
		|				ТОГДА ТоварыКОтгрузкеОстатки.КОтгрузкеОстаток - ТоварыКОтгрузкеОстатки.КОформлениюОстаток
		|						- ТоварыКОтгрузкеОстатки.СобираетсяОстаток - ТоварыКОтгрузкеОстатки.СобраноОстаток
		|						- ТоварыКОтгрузкеОстатки.КСборкеОстаток
		|			ИНАЧЕ ТоварыКОтгрузкеОстатки.КОтгрузкеОстаток - ТоварыКОтгрузкеОстатки.СобираетсяОстаток
		|					- ТоварыКОтгрузкеОстатки.СобраноОстаток - ТоварыКОтгрузкеОстатки.КСборкеОстаток
		|		КОНЕЦ <> 0";
		
	Иначе
		
		ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
		ДополнительныеПараметры.ИмяВременнойТаблицы = "ВТЗаблокированоЗаданиеНаПеревозку";
		
		ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(Неопределено,
			"Документ.ЗаданиеНаПеревозку", МенеджерВТ, ДополнительныеПараметры);
		
		ДополнительныеПараметры.ИмяВременнойТаблицы = "ВТЗаблокированоТоварыКОтгрузке";
		ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗначенийЗаблокированныхИзмерений(Неопределено,
			"РегистрНакопления.ТоварыКОтгрузке", "ДокументОтгрузки", МенеджерВТ, ДополнительныеПараметры);
		
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА НакладнаяТовары.Ссылка.РеализацияПоЗаказам
		|			ТОГДА НакладнаяТовары.ЗаказКлиента
		|		ИНАЧЕ НакладнаяТовары.Ссылка
		|	КОНЕЦ КАК ДокументОтгрузки
		|ПОМЕСТИТЬ ЗаблокированныеДокументыОтгрузкиПоЗаданиюНаПеревозку
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЗаблокированоЗаданиеНаПеревозку КАК ВтЗаданияНаПеревозку
		|		ПО ЗаданиеНаПеревозкуРаспоряжения.Ссылка = ВтЗаданияНаПеревозку.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК НакладнаяТовары
		|		ПО (НакладнаяТовары.Ссылка = ЗаданиеНаПеревозкуРаспоряжения.Распоряжение)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА НакладнаяТовары.Ссылка.ПеремещениеПоЗаказам
		|			ТОГДА НакладнаяТовары.ЗаказНаПеремещение
		|		ИНАЧЕ НакладнаяТовары.Ссылка
		|	КОНЕЦ
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЗаблокированоЗаданиеНаПеревозку КАК ВтЗаданияНаПеревозку
		|		ПО ЗаданиеНаПеревозкуРаспоряжения.Ссылка = ВтЗаданияНаПеревозку.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Товары КАК НакладнаяТовары
		|		ПО (НакладнаяТовары.Ссылка = ЗаданиеНаПеревозкуРаспоряжения.Распоряжение)
		|
		//++ НЕ УТКА

		//++ Устарело_Переработка24
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НакладнаяТовары.ЗаказДавальца
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЗаблокированоЗаданиеНаПеревозку КАК ВтЗаданияНаПеревозку
		|		ПО ЗаданиеНаПеревозкуРаспоряжения.Ссылка = ВтЗаданияНаПеревозку.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаДавальцу.Товары КАК НакладнаяТовары
		|		ПО (НакладнаяТовары.Ссылка = ЗаданиеНаПеревозкуРаспоряжения.Распоряжение)
		//-- Устарело_Переработка24
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НакладнаяТовары.ЗаказКлиента
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЗаблокированоЗаданиеНаПеревозку КАК ВтЗаданияНаПеревозку
		|		ПО ЗаданиеНаПеревозкуРаспоряжения.Ссылка = ВтЗаданияНаПеревозку.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтгрузкаТоваровСХранения.Товары КАК НакладнаяТовары
		|		ПО (НакладнаяТовары.Ссылка = ЗаданиеНаПеревозкуРаспоряжения.Распоряжение)
		|ГДЕ
		|	НакладнаяТовары.Ссылка.ХозяйственнаяОперация =
		|							ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаДавальцу2_5)
		|
		//-- НЕ УТКА

		//++ НЕ УТ
		
		//++ Устарело_Переработка24
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НакладнаяТовары.ЗаказПереработчику
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЗаблокированоЗаданиеНаПеревозку КАК ВтЗаданияНаПеревозку
		|		ПО ЗаданиеНаПеревозкуРаспоряжения.Ссылка = ВтЗаданияНаПеревозку.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаСырьяПереработчику.Товары КАК НакладнаяТовары
		|		ПО (НакладнаяТовары.Ссылка = ЗаданиеНаПеревозкуРаспоряжения.Распоряжение)
		|
		//-- Устарело_Переработка24
		
		//-- НЕ УТ
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА НакладнаяТовары.Ссылка.ПередачаПоЗаказам
		|			ТОГДА НакладнаяТовары.ЗаказКлиента
		|		ИНАЧЕ НакладнаяТовары.Ссылка
		|	КОНЕЦ КАК ДокументОтгрузки
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЗаблокированоЗаданиеНаПеревозку КАК ВтЗаданияНаПеревозку
		|		ПО ЗаданиеНаПеревозкуРаспоряжения.Ссылка = ВтЗаданияНаПеревозку.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровХранителю.Товары КАК НакладнаяТовары
		|		ПО (НакладнаяТовары.Ссылка = ЗаданиеНаПеревозкуРаспоряжения.Распоряжение)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВложенныйЗапрос.ДокументОтгрузки КАК ДокументОтгрузки
		|ПОМЕСТИТЬ ЗаблокированныеДокументыОтгрузки
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДокументыОтгрузки.ДокументОтгрузки КАК ДокументОтгрузки
		|	ИЗ
		|		ЗаблокированныеДокументыОтгрузкиПоЗаданиюНаПеревозку КАК ДокументыОтгрузки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТЗаблокированоТоварыКОтгрузке.ДокументОтгрузки
		|	ИЗ
		|		ВТЗаблокированоТоварыКОтгрузке КАК ВТЗаблокированоТоварыКОтгрузке) КАК ВложенныйЗапрос
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|
		// ТоварыКОтгрузкеПриход/ТоварыКОформлениюРасход
		|ВЫБРАТЬ
		|	ТоварыКОтгрузке.ДокументОтгрузки КАК ДокументОтгрузки,
		|	НАЧАЛОПЕРИОДА(ТоварыКОтгрузке.Период, ДЕНЬ) КАК Период,
		|	ВЫБОР 
		|		КОГДА ТоварыКОтгрузке.Получатель В (&ПустойПолучатель) 
		|			ТОГДА ТоварыКОтгрузке.ДокументОтгрузки 
		|		ИНАЧЕ ТоварыКОтгрузке.Получатель 
		| 	КОНЕЦ КАК Получатель,
		|	ТоварыКОтгрузке.Склад КАК Склад,
		|	ТоварыКОтгрузке.Номенклатура КАК Номенклатура,
		|	ТоварыКОтгрузке.Характеристика КАК Характеристика,
		|	ТоварыКОтгрузке.Назначение КАК Назначение,
		|	ТоварыКОтгрузке.Серия КАК Серия,
		|	СУММА(ВЫБОР
		|		КОГДА ТоварыКОтгрузке.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ТоварыКОтгрузке.КОтгрузке < 0
		|			ТОГДА -ТоварыКОтгрузке.КОтгрузке
		|		КОГДА ТоварыКОтгрузке.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА ВЫБОР
		|				КОГДА &ОформлятьСначалаНакладные
		|					ТОГДА ТоварыКОтгрузке.КОтгрузке - ТоварыКОтгрузке.КОформлению
		|				ИНАЧЕ ТоварыКОтгрузке.КОтгрузке
		|			КОНЕЦ
		|		ИНАЧЕ 0 
		|	КОНЕЦ) КАК КоличествоКОтгрузке,
		|	ВЫБОР
		|		КОГДА СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ДоКлиента)
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
		#Удаление
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		#КонецУдаления
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
		#КонецВставки
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.КПолучателюОпределяетСлужбаДоставки))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОтгрузкаПоЗаданиюНаПеревозку
		|ПОМЕСТИТЬ ТоварыКОтгрузке
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке КАК ТоварыКОтгрузке
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияИРеквизитыДоставки КАК СостоянияИРеквизитыДоставки
		|		ПО СостоянияИРеквизитыДоставки.Склад = ТоварыКОтгрузке.Склад
		|			И СостоянияИРеквизитыДоставки.Распоряжение = ТоварыКОтгрузке.ДокументОтгрузки
		|ГДЕ
		|	ТоварыКОтгрузке.Получатель = &Получатель
		|	И ТоварыКОтгрузке.Склад = &Склад
		|	И (ТоварыКОтгрузке.ДокументОтгрузки В (&РаспоряженияНаОтгрузку)
		|		ИЛИ &ПоВсемРаспоряжениям)
		|	И НЕ ТоварыКОтгрузке.ДокументОтгрузки В
		|		(ВЫБРАТЬ
		|			ВТЗаблокированоТоварыКОтгрузке.ДокументОтгрузки
		|		ИЗ
		|			ЗаблокированныеДокументыОтгрузки КАК ВТЗаблокированоТоварыКОтгрузке)
		|	И ВЫБОР
		|		КОГДА ТоварыКОтгрузке.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ТоварыКОтгрузке.КОтгрузке < 0
		|			ТОГДА -ТоварыКОтгрузке.КОтгрузке
		|		КОГДА ТоварыКОтгрузке.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА ВЫБОР
		|				КОГДА &ОформлятьСначалаНакладные
		|					ТОГДА ТоварыКОтгрузке.КОтгрузке - ТоварыКОтгрузке.КОформлению
		|				ИНАЧЕ ТоварыКОтгрузке.КОтгрузке
		|			КОНЕЦ
		|		ИНАЧЕ 0 
		|	КОНЕЦ <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКОтгрузке.Номенклатура,
		|	ВЫБОР 
		|		КОГДА ТоварыКОтгрузке.Получатель В (&ПустойПолучатель) 
		|			ТОГДА ТоварыКОтгрузке.ДокументОтгрузки 
		|		ИНАЧЕ ТоварыКОтгрузке.Получатель 
		| 	КОНЕЦ,
		|	ТоварыКОтгрузке.Характеристика,
		|	ТоварыКОтгрузке.ДокументОтгрузки,
		|	ТоварыКОтгрузке.Серия,
		|	ТоварыКОтгрузке.Назначение,
		|	ТоварыКОтгрузке.Склад,
		|	ВЫБОР
		|		КОГДА СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ДоКлиента)
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
		#Удаление
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		#КонецУдаления
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
		#КонецВставки
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.КПолучателюОпределяетСлужбаДоставки))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	НАЧАЛОПЕРИОДА(ТоварыКОтгрузке.Период, ДЕНЬ)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТоварыКОтгрузкеОбороты.ДокументОтгрузки,
		|	ТоварыКОтгрузкеОбороты.Период,
		|	ВЫБОР 
		|		КОГДА ТоварыКОтгрузкеОбороты.Получатель В (&ПустойПолучатель) 
		|			ТОГДА ТоварыКОтгрузкеОбороты.ДокументОтгрузки 
		|		ИНАЧЕ ТоварыКОтгрузкеОбороты.Получатель 
		| 	КОНЕЦ,
		|	ТоварыКОтгрузкеОбороты.Склад,
		|	ТоварыКОтгрузкеОбороты.Номенклатура,
		|	ТоварыКОтгрузкеОбороты.Характеристика,
		|	ТоварыКОтгрузкеОбороты.Назначение,
		|	ТоварыКОтгрузкеОбороты.Серия,
		|	СУММА(ТоварыКОтгрузкеОбороты.КОформлениюРасход),
		|	ВЫБОР
		|		КОГДА СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ДоКлиента)
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
		#Удаление
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		#КонецУдаления
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
		#КонецВставки
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.КПолучателюОпределяетСлужбаДоставки))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.Обороты(
		|			,
		|			,
		|			День,
		|			Получатель = &Получатель
		|				И Склад = &Склад
		|				И (ДокументОтгрузки В (&РаспоряженияНаОтгрузку)
		|					ИЛИ &ПоВсемРаспоряжениям)
		|				И НЕ ДокументОтгрузки В
		|						(ВЫБРАТЬ
		|							ВТЗаблокированоТоварыКОтгрузке.ДокументОтгрузки
		|						ИЗ
		|							ЗаблокированныеДокументыОтгрузки КАК ВТЗаблокированоТоварыКОтгрузке)) КАК ТоварыКОтгрузкеОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияИРеквизитыДоставки КАК СостоянияИРеквизитыДоставки
		|		ПО СостоянияИРеквизитыДоставки.Склад = ТоварыКОтгрузкеОбороты.Склад
		|			И СостоянияИРеквизитыДоставки.Распоряжение = ТоварыКОтгрузкеОбороты.ДокументОтгрузки
		|ГДЕ
		|	&ОформлятьСначалаНакладные
		|	И ТоварыКОтгрузкеОбороты.КОформлениюРасход <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКОтгрузкеОбороты.Назначение,
		|	ТоварыКОтгрузкеОбороты.Характеристика,
		|	ТоварыКОтгрузкеОбороты.Склад,
		|	ТоварыКОтгрузкеОбороты.Номенклатура,
		|	ТоварыКОтгрузкеОбороты.Серия,
		|	ТоварыКОтгрузкеОбороты.ДокументОтгрузки,
		|	ВЫБОР 
		|		КОГДА ТоварыКОтгрузкеОбороты.Получатель В (&ПустойПолучатель) 
		|			ТОГДА ТоварыКОтгрузкеОбороты.ДокументОтгрузки 
		|		ИНАЧЕ ТоварыКОтгрузкеОбороты.Получатель 
		| 	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ДоКлиента)
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
		#Удаление
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		#КонецУдаления
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
		#КонецВставки
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.КПолучателюОпределяетСлужбаДоставки))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	ТоварыКОтгрузкеОбороты.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ТоварыКДоставке.ЗаданиеНаПеревозку, ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка)) КАК ЗаданиеНаПеревозку,
		|	ВЫБОР
		|		КОГДА ТоварыКОтгрузке.ОтгрузкаПоЗаданиюНаПеревозку И ТоварыКДоставке.ЗаданиеНаПеревозку <> ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка)
		|			ТОГДА ТоварыКДоставке.ЗаданиеНаПеревозку.ДатаВремяРейсаПланС
		|		ИНАЧЕ ТоварыКОтгрузке.Период
		|	КОНЕЦ КАК Период,
		|	ТоварыКОтгрузке.Получатель КАК Получатель,
		|	ТоварыКОтгрузке.Склад КАК Склад,
		|	ТоварыКОтгрузке.Номенклатура КАК Номенклатура,
		|	ТоварыКОтгрузке.Характеристика КАК Характеристика,
		|	ТоварыКОтгрузке.Назначение КАК Назначение,
		|	ТоварыКОтгрузке.Серия КАК Серия,
		|	СУММА(ТоварыКОтгрузке.КоличествоКОтгрузке) КАК КоличествоКОтгрузке,
		|	ТоварыКДоставке.Количество КАК КоличествоКДоставке,
		|	ТоварыКОтгрузке.ДокументОтгрузки КАК ДокументОтгрузки,
		|	ТоварыКОтгрузке.ОтгрузкаПоЗаданиюНаПеревозку
		|		 И ЕСТЬNULL(ТоварыКДоставке.ЗаданиеНаПеревозку, ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка)
		|											  КАК ОтгрузкаПоЗаданиюНаПеревозку,
		|	ЕСТЬNULL(ТоварыКДоставке.ВсеТовары, Ложь) КАК ВсеТовары
		|ПОМЕСТИТЬ ТоварыКДоставке
		|ИЗ
		|	ТоварыКОтгрузке КАК ТоварыКОтгрузке
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварыКДоставке КАК ТоварыКДоставке
		|		ПО ТоварыКОтгрузке.ДокументОтгрузки = ТоварыКДоставке.Распоряжение
		|			И ТоварыКОтгрузке.Склад = ТоварыКДоставке.Склад
		|			И (ТоварыКОтгрузке.Номенклатура = ТоварыКДоставке.Номенклатура
		|					И ТоварыКОтгрузке.Характеристика = ТоварыКДоставке.Характеристика
		|					И ТоварыКОтгрузке.Назначение = ТоварыКДоставке.Назначение
		|					И ТоварыКОтгрузке.Серия = ТоварыКДоставке.Серия
		|				ИЛИ ТоварыКДоставке.ВсеТовары)
		|			И (((ТоварыКДоставке.ЗаданиеНаПеревозку.Проведен)
		|			И (ТоварыКДоставке.ЗаданиеНаПеревозку.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданийНаПеревозку.Формируется)))
		|				ИЛИ (ТоварыКДоставке.ЗаданиеНаПеревозку = ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка)))
		|			И (ТоварыКОтгрузке.ОтгрузкаПоЗаданиюНаПеревозку)
		|			И (НЕ &ЗаданиеНаПеревозкуЗаполнено
		|				ИЛИ ТоварыКДоставке.ЗаданиеНаПеревозку = &ЗаданиеНаПеревозку)
		|ГДЕ
		|	НЕ(ТоварыКОтгрузке.ОтгрузкаПоЗаданиюНаПеревозку
		|				И ТоварыКДоставке.ЗаданиеНаПеревозку ЕСТЬ NULL )
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА ТоварыКОтгрузке.ОтгрузкаПоЗаданиюНаПеревозку И ТоварыКДоставке.ЗаданиеНаПеревозку <> ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка)
		|			ТОГДА ТоварыКДоставке.ЗаданиеНаПеревозку.ДатаВремяРейсаПланС
		|		ИНАЧЕ ТоварыКОтгрузке.Период
		|	КОНЕЦ,
		|	ТоварыКОтгрузке.ДокументОтгрузки,
		|	ЕСТЬNULL(ТоварыКДоставке.ЗаданиеНаПеревозку, ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка)),
		|	ТоварыКОтгрузке.ОтгрузкаПоЗаданиюНаПеревозку,
		|	ТоварыКОтгрузке.Склад,
		|	ЕСТЬNULL(ТоварыКДоставке.ВсеТовары, Ложь),
		|	ТоварыКДоставке.Количество,
		|	ТоварыКОтгрузке.Номенклатура,
		|	ТоварыКОтгрузке.Серия,
		|	ТоварыКОтгрузке.Получатель,
		|	ТоварыКОтгрузке.Назначение,
		|	ТоварыКОтгрузке.Характеристика,
		|	ВЫБОР
		|		КОГДА НЕ ТоварыКОтгрузке.ОтгрузкаПоЗаданиюНаПеревозку
		|				ИЛИ ТоварыКДоставке.ВсеТовары
		|			ТОГДА ТоварыКОтгрузке.КоличествоКОтгрузке
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТоварыКОтгрузке.КоличествоКОтгрузке >= ТоварыКДоставке.Количество
		|					ТОГДА ТоварыКДоставке.Количество
		|				ИНАЧЕ ТоварыКОтгрузке.КоличествоКОтгрузке
		|			КОНЕЦ
		|	КОНЕЦ,
		|	ТоварыКОтгрузке.ОтгрузкаПоЗаданиюНаПеревозку
		|		 И ЕСТЬNULL(ТоварыКДоставке.ЗаданиеНаПеревозку, ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыКДоставке.ЗаданиеНаПеревозку,
		|	ТоварыКДоставке.Период,
		|	ТоварыКДоставке.Получатель КАК Получатель,
		|	ТоварыКДоставке.Склад,
		|	ТоварыКДоставке.Номенклатура КАК Номенклатура,
		|	ТоварыКДоставке.Характеристика КАК Характеристика,
		|	ТоварыКДоставке.Назначение КАК Назначение,
		|	ТоварыКДоставке.Серия КАК Серия,
		|	ТоварыКДоставке.КоличествоКОтгрузке КАК КоличествоКОтгрузке,
		|	ТоварыКДоставке.КоличествоКДоставке КАК КоличествоКДоставке,
		|	ТоварыКДоставке.ДокументОтгрузки КАК ДокументОтгрузки,
		|	ТоварыКДоставке.ОтгрузкаПоЗаданиюНаПеревозку КАК ОтгрузкаПоЗаданиюНаПеревозку,
		|	ТоварыКДоставке.ВсеТовары КАК ВсеТовары
		|ИЗ
		|	ТоварыКДоставке КАК ТоварыКДоставке
		|ИТОГИ ПО
		|	ОтгрузкаПоЗаданиюНаПеревозку,
		|	Получатель,
		|	ДокументОтгрузки,
		|	Номенклатура,
		|	Характеристика,
		|	Назначение,
		|	Серия,
		|	КоличествоКОтгрузке,
		|	ЗаданиеНаПеревозку
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТоварыКОтгрузке";
		
	КонецЕсли;
	
	Если ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров <> 0 Тогда
		УсловиеДопустимоеОтклонение = "(ДокументОтгрузки, Номенклатура, Характеристика, Назначение, Серия, Склад) В
		|				(ВЫБРАТЬ
		|					Таблица.ДокументОтгрузки,
		|					Таблица.Номенклатура,
		|					Таблица.Характеристика,
		|					Таблица.Назначение,
		|					Таблица.Серия,
		|					Таблица.Склад
		|				ИЗ
		|					ВТТоварыКОформлениюРасходныхОрдеров КАК Таблица)";
		СоединениеСВТДопустимыхОтклонений = "ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТоварыКОформлениюРасходныхОрдеров КАК ВТТоварыКОформлениюРасходныхОрдеров
		|		ПО ТоварыКОтгрузке.ДокументОтгрузки = ВТТоварыКОформлениюРасходныхОрдеров.ДокументОтгрузки
		|			И ТоварыКОтгрузке.Номенклатура = ВТТоварыКОформлениюРасходныхОрдеров.Номенклатура
		|			И ТоварыКОтгрузке.Характеристика = ВТТоварыКОформлениюРасходныхОрдеров.Характеристика
		|			И ТоварыКОтгрузке.Назначение = ВТТоварыКОформлениюРасходныхОрдеров.Назначение
		|			И ТоварыКОтгрузке.Серия = ВТТоварыКОформлениюРасходныхОрдеров.Серия";
		
		ДопустимоеОтклонениеЗначение = "ВТТоварыКОформлениюРасходныхОрдеров.ДопустимоеОтклонение";
	Иначе
		УсловиеДопустимоеОтклонение = "Истина";
		СоединениеСВТДопустимыхОтклонений = "";
		ДопустимоеОтклонениеЗначение = 0;
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&УсловиеДопустимоеОтклонение", УсловиеДопустимоеОтклонение);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ГДЕ &СоединениеСВТДопустимыхОтклонений", СоединениеСВТДопустимыхОтклонений);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ДопустимоеОтклонениеЗначение", ДопустимоеОтклонениеЗначение);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Получатель",  Параметры.Получатель);
	Запрос.УстановитьПараметр("Склад",       Параметры.Склад);  
	Запрос.УстановитьПараметр("ОформлятьСначалаНакладные", ОформлятьСначалаНакладные); 
	Запрос.УстановитьПараметр("РаспоряженияНаОтгрузку", Параметры.РаспоряженияНаОтгрузку);
	Запрос.УстановитьПараметр("ПоВсемРаспоряжениям", Параметры.РаспоряженияНаОтгрузку.Количество()=0);
	Запрос.УстановитьПараметр("НачинатьОтгрузкуПослеФормированияЗаданияНаПеревозку",
		НачинатьОтгрузкуПослеФормированияЗаданияНаПеревозку);
	Запрос.УстановитьПараметр("ЗаданиеНаПеревозку",          Параметры.ЗаданиеНаПеревозку);
	Запрос.УстановитьПараметр("ЗаданиеНаПеревозкуЗаполнено", ЗначениеЗаполнено(Параметры.ЗаданиеНаПеревозку));
	Запрос.УстановитьПараметр("ПустойПолучатель",            ПустойПолучательОтправитель());
	Запрос.УстановитьПараметр("ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками",
		ПолучитьФункциональнуюОпцию("ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками"));
	Запрос.УстановитьПараметр("ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров",
		ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров);
	Запрос.УстановитьПараметр("МерныеТипыЕдиницИзмерений",
		Справочники.УпаковкиЕдиницыИзмерения.МерныеТипыЕдиницИзмерений());
	
	МассивРезультатов = Запрос.ВыполнитьПакет();  
	
	Если НачинатьОтгрузкуПослеФормированияЗаданияНаПеревозку Тогда
		
		ДеревоТоварыКОтгрузке = МассивРезультатов[МассивРезультатов.Количество()-2].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам); 
		КУдалению = Новый Массив();
		
		Для Каждого УровеньОтгрузкаПоЗаданиюНаПеревозку Из ДеревоТоварыКОтгрузке.Строки Цикл
			Если Не УровеньОтгрузкаПоЗаданиюНаПеревозку.ОтгрузкаПоЗаданиюНаПеревозку Тогда
				Продолжить;
			КонецЕсли;  
			Для Каждого УровеньПолучатель Из УровеньОтгрузкаПоЗаданиюНаПеревозку.Строки Цикл
				Для Каждого УровеньДокументОтгрузки Из УровеньПолучатель.Строки Цикл        
					Для Каждого УровеньНоменклатура Из УровеньДокументОтгрузки.Строки Цикл
						Для Каждого УровеньХарактеристика Из УровеньНоменклатура.Строки  Цикл
							Для Каждого УровеньНазначение Из УровеньХарактеристика.Строки Цикл
								Для Каждого УровеньСерия Из УровеньНазначение.Строки Цикл
									КоличествоКДоставкеПоЗаданиюНаПеревозку = Новый Соответствие();
									Для Каждого УровеньКоличествоКОтгрузке Из УровеньСерия.Строки Цикл 
										
										КоличествоКОтгрузке = УровеньКоличествоКОтгрузке.КоличествоКОтгрузке;
										
										Для Каждого УровеньЗаданиеНаПеревозку Из УровеньКоличествоКОтгрузке.Строки Цикл
											
											СтрокиТаблицыКУдалению = Новый Массив;
											Для Каждого Строка Из УровеньЗаданиеНаПеревозку.Строки Цикл
												
												Если КоличествоКОтгрузке = 0 Тогда
													АдресУдаляемойСтроки = Новый Массив();
													АдресУдаляемойСтроки.Добавить(Строка);
													АдресУдаляемойСтроки.Добавить(УровеньЗаданиеНаПеревозку);
													АдресУдаляемойСтроки.Добавить(УровеньКоличествоКОтгрузке);
													АдресУдаляемойСтроки.Добавить(УровеньСерия);
													АдресУдаляемойСтроки.Добавить(УровеньНазначение);
													АдресУдаляемойСтроки.Добавить(УровеньХарактеристика);
													АдресУдаляемойСтроки.Добавить(УровеньНоменклатура);
													АдресУдаляемойСтроки.Добавить(УровеньДокументОтгрузки);
													АдресУдаляемойСтроки.Добавить(УровеньПолучатель);
													АдресУдаляемойСтроки.Добавить(УровеньОтгрузкаПоЗаданиюНаПеревозку);
													АдресУдаляемойСтроки.Добавить(ДеревоТоварыКОтгрузке);
													
													КУдалению.Добавить(АдресУдаляемойСтроки);
													Продолжить;
												КонецЕсли;  
												
												Если Строка.ВсеТовары Тогда
													КоличествоКДоставке = КоличествоКОтгрузке;
												Иначе
													
													КоличествоКДоставкеИзрасходовано = КоличествоКДоставкеПоЗаданиюНаПеревозку.Получить(Строка.ЗаданиеНаПеревозку);
													КоличествоКДоставкеИзрасходовано = ?(КоличествоКДоставкеИзрасходовано = Неопределено,0,КоличествоКДоставкеИзрасходовано);
													КоличествоКДоставке = Строка.КоличествоКДоставке - КоличествоКДоставкеИзрасходовано;
													КоличествоКДоставке = Мин(КоличествоКОтгрузке,КоличествоКДоставке);
													Если КоличествоКДоставке > 0 Тогда
														КоличествоКДоставкеПоЗаданиюНаПеревозку.Вставить(Строка.ЗаданиеНаПеревозку, КоличествоКДоставке+КоличествоКДоставкеИзрасходовано);
													Иначе
														АдресУдаляемойСтроки = Новый Массив();
														АдресУдаляемойСтроки.Добавить(Строка);
														АдресУдаляемойСтроки.Добавить(УровеньЗаданиеНаПеревозку);
														АдресУдаляемойСтроки.Добавить(УровеньКоличествоКОтгрузке);
														АдресУдаляемойСтроки.Добавить(УровеньСерия);
														АдресУдаляемойСтроки.Добавить(УровеньНазначение);
														АдресУдаляемойСтроки.Добавить(УровеньХарактеристика);
														АдресУдаляемойСтроки.Добавить(УровеньНоменклатура);
														АдресУдаляемойСтроки.Добавить(УровеньДокументОтгрузки);
														АдресУдаляемойСтроки.Добавить(УровеньПолучатель);
														АдресУдаляемойСтроки.Добавить(УровеньОтгрузкаПоЗаданиюНаПеревозку);
														АдресУдаляемойСтроки.Добавить(ДеревоТоварыКОтгрузке);
														
														КУдалению.Добавить(АдресУдаляемойСтроки);
														Продолжить;
													КонецЕсли
												КонецЕсли;
												
												Строка.КоличествоКОтгрузке = КоличествоКДоставке;
												КоличествоКОтгрузке = КоличествоКОтгрузке - КоличествоКДоставке;
												
											КонецЦикла;
											
										КонецЦикла;
										
									КонецЦикла; 
								КонецЦикла;
							КонецЦикла;
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
		Для Каждого АдресКУдалению Из КУдалению Цикл
			
			Уровней = АдресКУдалению.Количество();
			Для Индекс = 0 По Уровней - 2 Цикл
				// Конец массива не обрабатываем т.к. там ссылка на корень дерева
				
				ТекущаяСтрока = АдресКУдалению[Индекс];
				Родитель = АдресКУдалению[Индекс + 1]; // СтрокаДереваЗначений -
				
				Если Индекс = 0 Тогда
					Родитель.Строки.Удалить(ТекущаяСтрока);
				ИначеЕсли ТекущаяСтрока.Строки.Количество() = 0 Тогда
					// Это не лист, а пустой родитель не имеет смысла, к удалению
					Родитель.Строки.Удалить(ТекущаяСтрока);
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварыКОтгрузке.ДокументОтгрузки КАК ДокументОтгрузки,
		|	ТоварыКОтгрузке.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку,
		|	ТоварыКОтгрузке.Период КАК Период,
		|	ТоварыКОтгрузке.Получатель КАК Получатель,
		|	ТоварыКОтгрузке.Склад КАК Склад,
		|	ТоварыКОтгрузке.Номенклатура КАК Номенклатура,
		|	ТоварыКОтгрузке.Характеристика КАК Характеристика,
		|	ТоварыКОтгрузке.Назначение КАК Назначение,
		|	ТоварыКОтгрузке.Серия КАК Серия,
		|	ТоварыКОтгрузке.КоличествоКОтгрузке КАК Количество,
		|	ТоварыКОтгрузке.ОтгрузкаПоЗаданиюНаПеревозку КАК ОтгрузкаПоЗаданиюНаПеревозку
		|ПОМЕСТИТЬ ТоварыКОтгрузке
		|ИЗ
		|	&ТоварыКОтгрузке КАК ТоварыКОтгрузке
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыКОтгрузке.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку,
		|	ВЫБОР
		|		КОГДА СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ДоКлиента)
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
		#Удаление
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		#КонецУдаления
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
		#КонецВставки
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.КПолучателюОпределяетСлужбаДоставки))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОтгрузкаПоЗаданиюНаПеревозку,
		|	ТоварыКОтгрузке.ДокументОтгрузки КАК ДокументОтгрузки,
		|	НАЧАЛОПЕРИОДА(ТоварыКОтгрузке.Период, ДЕНЬ) КАК Период,
		|	ВЫБОР 
		|		КОГДА ТоварыКОтгрузке.Получатель В (&ПустойПолучатель) 
		|			ТОГДА ТоварыКОтгрузке.ДокументОтгрузки 
		|		ИНАЧЕ ТоварыКОтгрузке.Получатель 
		| 	КОНЕЦ КАК Получатель,
		|	ТоварыКОтгрузке.Склад,
		|	ТоварыКОтгрузке.Номенклатура,
		|	ТоварыКОтгрузке.Характеристика,
		|	ТоварыКОтгрузке.Назначение,
		|	ТоварыКОтгрузке.Серия,
		|	СУММА(ТоварыКОтгрузке.КОтгрузке) КАК Количество
		|ПОМЕСТИТЬ ТоварыКОтгрузкеРасход
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке КАК ТоварыКОтгрузке
		|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаблокированныеДокументыОтгрузки КАК ЗаблокированныеДокументыОтгрузки
		|		ПО ТоварыКОтгрузке.ДокументОтгрузки = ЗаблокированныеДокументыОтгрузки.ДокументОтгрузки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияИРеквизитыДоставки КАК СостоянияИРеквизитыДоставки
		|		ПО СостоянияИРеквизитыДоставки.Склад = ТоварыКОтгрузке.Склад
		|			И СостоянияИРеквизитыДоставки.Распоряжение = ТоварыКОтгрузке.ДокументОтгрузки

		|ГДЕ
		|	ТоварыКОтгрузке.Получатель = &Получатель
		|	И ТоварыКОтгрузке.Склад = &Склад
		|	И (ТоварыКОтгрузке.ДокументОтгрузки В (&РаспоряженияНаОтгрузку)
		|			ИЛИ &ПоВсемРаспоряжениям)
		|	И ТоварыКОтгрузке.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ТоварыКОтгрузке.КОтгрузке > 0
		|	И (НЕ &ЗаданиеНаПеревозкуЗаполнено
		|			ИЛИ ТоварыКОтгрузке.ЗаданиеНаПеревозку = &ЗаданиеНаПеревозку)
		|	И ЗаблокированныеДокументыОтгрузки.ДокументОтгрузки ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКОтгрузке.Серия,
		|	ТоварыКОтгрузке.Назначение,
		|	ТоварыКОтгрузке.Номенклатура,
		|	ТоварыКОтгрузке.Характеристика,
		|	ТоварыКОтгрузке.ЗаданиеНаПеревозку,
		|	ВЫБОР
		|		КОГДА СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ДоКлиента)
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
		#Удаление
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		#КонецУдаления
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
		#КонецВставки
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.КПолучателюОпределяетСлужбаДоставки))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	ТоварыКОтгрузке.ДокументОтгрузки,
		|	ВЫБОР 
		|		КОГДА ТоварыКОтгрузке.Получатель В (&ПустойПолучатель) 
		|			ТОГДА ТоварыКОтгрузке.ДокументОтгрузки 
		|		ИНАЧЕ ТоварыКОтгрузке.Получатель 
		| 	КОНЕЦ,
		|	ТоварыКОтгрузке.Склад,
		|	НАЧАЛОПЕРИОДА(ТоварыКОтгрузке.Период, ДЕНЬ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыКОтгрузке.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку,
		|	ВЫБОР
		|		КОГДА СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ДоКлиента)
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
		#Удаление
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		#КонецУдаления
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
		#КонецВставки
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.КПолучателюОпределяетСлужбаДоставки))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОтгрузкаПоЗаданиюНаПеревозку,
		|	ТоварыКОтгрузке.ДокументОтгрузки КАК ДокументОтгрузки,
		|	НАЧАЛОПЕРИОДА(ТоварыКОтгрузке.Период, ДЕНЬ) КАК Период,
		|	ВЫБОР 
		|		КОГДА ТоварыКОтгрузке.Получатель В (&ПустойПолучатель) 
		|			ТОГДА ТоварыКОтгрузке.ДокументОтгрузки 
		|		ИНАЧЕ ТоварыКОтгрузке.Получатель 
		| 	КОНЕЦ КАК Получатель,
		|	ТоварыКОтгрузке.Склад,
		|	ТоварыКОтгрузке.Номенклатура,
		|	ТоварыКОтгрузке.Характеристика,
		|	ТоварыКОтгрузке.Назначение,
		|	ТоварыКОтгрузке.Серия,
		|	СУММА(ТоварыКОтгрузке.Собирается + ТоварыКОтгрузке.Собрано) КАК Количество
		|ПОМЕСТИТЬ ТоварыСобираетсяСобрано
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке КАК ТоварыКОтгрузке
		|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаблокированныеДокументыОтгрузки КАК ЗаблокированныеДокументыОтгрузки
		|		ПО ТоварыКОтгрузке.ДокументОтгрузки = ЗаблокированныеДокументыОтгрузки.ДокументОтгрузки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияИРеквизитыДоставки КАК СостоянияИРеквизитыДоставки
		|		ПО СостоянияИРеквизитыДоставки.Склад = ТоварыКОтгрузке.Склад
		|			И СостоянияИРеквизитыДоставки.Распоряжение = ТоварыКОтгрузке.ДокументОтгрузки

		|ГДЕ
		|	ТоварыКОтгрузке.Получатель = &Получатель
		|	И ТоварыКОтгрузке.Склад = &Склад
		|	И (ТоварыКОтгрузке.ДокументОтгрузки В (&РаспоряженияНаОтгрузку)
		|			ИЛИ &ПоВсемРаспоряжениям)
		|	И ТоварыКОтгрузке.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ТоварыКОтгрузке.Собирается + ТоварыКОтгрузке.Собрано > 0
		|	И (НЕ &ЗаданиеНаПеревозкуЗаполнено
		|			ИЛИ ТоварыКОтгрузке.ЗаданиеНаПеревозку = &ЗаданиеНаПеревозку)
		|	И ЗаблокированныеДокументыОтгрузки.ДокументОтгрузки ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКОтгрузке.Серия,
		|	ТоварыКОтгрузке.Назначение,
		|	ТоварыКОтгрузке.Номенклатура,
		|	ТоварыКОтгрузке.Характеристика,
		|	ТоварыКОтгрузке.ЗаданиеНаПеревозку,
		|	ВЫБОР
		|		КОГДА СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ДоКлиента)
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
		#Удаление
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		#КонецУдаления
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
		#КонецВставки
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.КПолучателюОпределяетСлужбаДоставки))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	ТоварыКОтгрузке.ДокументОтгрузки,
		|	ВЫБОР 
		|		КОГДА ТоварыКОтгрузке.Получатель В (&ПустойПолучатель) 
		|			ТОГДА ТоварыКОтгрузке.ДокументОтгрузки 
		|		ИНАЧЕ ТоварыКОтгрузке.Получатель 
		| 	КОНЕЦ,
		|	ТоварыКОтгрузке.Склад,
		|	НАЧАЛОПЕРИОДА(ТоварыКОтгрузке.Период, ДЕНЬ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыКОтгрузке.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку,
		|	ВЫБОР
		|		КОГДА СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ДоКлиента)
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
		#Удаление
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		#КонецУдаления
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
		#КонецВставки
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.КПолучателюОпределяетСлужбаДоставки))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОтгрузкаПоЗаданиюНаПеревозку,
		|	ТоварыКОтгрузке.ДокументОтгрузки КАК ДокументОтгрузки,
		|	НАЧАЛОПЕРИОДА(ТоварыКОтгрузке.Период, ДЕНЬ) КАК Период,
		|	ВЫБОР 
		|		КОГДА ТоварыКОтгрузке.Получатель В (&ПустойПолучатель) 
		|			ТОГДА ТоварыКОтгрузке.ДокументОтгрузки 
		|		ИНАЧЕ ТоварыКОтгрузке.Получатель 
		| 	КОНЕЦ КАК Получатель,
		|	ТоварыКОтгрузке.Склад,
		|	ТоварыКОтгрузке.Номенклатура,
		|	ТоварыКОтгрузке.Характеристика,
		|	ТоварыКОтгрузке.Назначение,
		|	ТоварыКОтгрузке.Серия,
		|	СУММА(ТоварыКОтгрузке.КСборке) КАК Количество
		|ПОМЕСТИТЬ ТоварыКСборке
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке КАК ТоварыКОтгрузке
		|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаблокированныеДокументыОтгрузки КАК ЗаблокированныеДокументыОтгрузки
		|		ПО ТоварыКОтгрузке.ДокументОтгрузки = ЗаблокированныеДокументыОтгрузки.ДокументОтгрузки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияИРеквизитыДоставки КАК СостоянияИРеквизитыДоставки
		|		ПО СостоянияИРеквизитыДоставки.Склад = ТоварыКОтгрузке.Склад
		|			И СостоянияИРеквизитыДоставки.Распоряжение = ТоварыКОтгрузке.ДокументОтгрузки
		|ГДЕ
		|	ТоварыКОтгрузке.Получатель = &Получатель
		|	И ТоварыКОтгрузке.Склад = &Склад
		|	И (ТоварыКОтгрузке.ДокументОтгрузки В (&РаспоряженияНаОтгрузку)
		|			ИЛИ &ПоВсемРаспоряжениям)
		|	И ТоварыКОтгрузке.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ТоварыКОтгрузке.КСборке > 0
		|	И (НЕ &ЗаданиеНаПеревозкуЗаполнено
		|			ИЛИ ТоварыКОтгрузке.ЗаданиеНаПеревозку = &ЗаданиеНаПеревозку)
		|	И ЗаблокированныеДокументыОтгрузки.ДокументОтгрузки ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКОтгрузке.Серия,
		|	ТоварыКОтгрузке.Назначение,
		|	ТоварыКОтгрузке.Номенклатура,
		|	ТоварыКОтгрузке.Характеристика,
		|	ТоварыКОтгрузке.ЗаданиеНаПеревозку,
		|	ВЫБОР
		|		КОГДА СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ДоКлиента)
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
		#Удаление
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		#КонецУдаления
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
		#КонецВставки
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.КПолучателюОпределяетСлужбаДоставки))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	ТоварыКОтгрузке.ДокументОтгрузки,
		|	ВЫБОР 
		|		КОГДА ТоварыКОтгрузке.Получатель В (&ПустойПолучатель) 
		|			ТОГДА ТоварыКОтгрузке.ДокументОтгрузки 
		|		ИНАЧЕ ТоварыКОтгрузке.Получатель 
		| 	КОНЕЦ,
		|	ТоварыКОтгрузке.Склад,
		|	НАЧАЛОПЕРИОДА(ТоварыКОтгрузке.Период, ДЕНЬ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыКОтгрузке.ДокументОтгрузки КАК ДокументОтгрузки,
		|	ТоварыКОтгрузке.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку,
		|	ТоварыКОтгрузке.Период КАК Период,
		|	ТоварыКОтгрузке.Получатель КАК Получатель,
		|	ТоварыКОтгрузке.Склад КАК Склад,
		|	ТоварыКОтгрузке.Номенклатура КАК Номенклатура,
		|	ТоварыКОтгрузке.Характеристика КАК Характеристика,
		|	ТоварыКОтгрузке.Назначение КАК Назначение,
		|	ТоварыКОтгрузке.Серия КАК Серия,
		|	ТоварыКОтгрузке.Количество,
		|	ТоварыКОтгрузке.ОтгрузкаПоЗаданиюНаПеревозку КАК ОтгрузкаПоЗаданиюНаПеревозку,
		|	&ДопустимоеОтклонениеЗначение КАК ДопустимоеОтклонение
		|ИЗ
		|	ТоварыКОтгрузке КАК ТоварыКОтгрузке
		|ГДЕ &СоединениеСВТДопустимыхОтклонений
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период
		|ИТОГИ ПО
		|	ЗаданиеНаПеревозку,
		|	ДокументОтгрузки,
		|	Номенклатура,
		|	Характеристика,
		|	Назначение,
		|	Серия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ТоварыКОтгрузкеРасход.ОтгрузкаПоЗаданиюНаПеревозку
		|			ТОГДА ТоварыКОтгрузкеРасход.ЗаданиеНаПеревозку
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка)
		|	КОНЕЦ КАК ЗаданиеНаПеревозку,
		|	ТоварыКОтгрузкеРасход.ОтгрузкаПоЗаданиюНаПеревозку,
		|	ТоварыКОтгрузкеРасход.ДокументОтгрузки,
		|	ТоварыКОтгрузкеРасход.Период КАК Период,
		|	ТоварыКОтгрузкеРасход.Получатель,
		|	ТоварыКОтгрузкеРасход.Склад,
		|	ТоварыКОтгрузкеРасход.Номенклатура,
		|	ТоварыКОтгрузкеРасход.Характеристика,
		|	ТоварыКОтгрузкеРасход.Назначение,
		|	ТоварыКОтгрузкеРасход.Серия,
		|	ТоварыКОтгрузкеРасход.Количество
		|ИЗ
		|	ТоварыКОтгрузкеРасход КАК ТоварыКОтгрузкеРасход
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ТоварыСобираетсяСобрано.ОтгрузкаПоЗаданиюНаПеревозку
		|			ТОГДА ТоварыСобираетсяСобрано.ЗаданиеНаПеревозку
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка)
		|	КОНЕЦ КАК ЗаданиеНаПеревозку,
		|	ТоварыСобираетсяСобрано.ОтгрузкаПоЗаданиюНаПеревозку,
		|	ТоварыСобираетсяСобрано.ДокументОтгрузки,
		|	ТоварыСобираетсяСобрано.Период КАК Период,
		|	ТоварыСобираетсяСобрано.Получатель,
		|	ТоварыСобираетсяСобрано.Склад,
		|	ТоварыСобираетсяСобрано.Номенклатура,
		|	ТоварыСобираетсяСобрано.Характеристика,
		|	ТоварыСобираетсяСобрано.Назначение,
		|	ТоварыСобираетсяСобрано.Серия,
		|	ТоварыСобираетсяСобрано.Количество
		|ИЗ
		|	ТоварыСобираетсяСобрано КАК ТоварыСобираетсяСобрано
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ТоварыКСборке.ОтгрузкаПоЗаданиюНаПеревозку
		|			ТОГДА ТоварыКСборке.ЗаданиеНаПеревозку
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка)
		|	КОНЕЦ КАК ЗаданиеНаПеревозку,
		|	ТоварыКСборке.ОтгрузкаПоЗаданиюНаПеревозку,
		|	ТоварыКСборке.ДокументОтгрузки,
		|	ТоварыКСборке.Период КАК Период,
		|	ТоварыКСборке.Получатель,
		|	ТоварыКСборке.Склад,
		|	ТоварыКСборке.Номенклатура,
		|	ТоварыКСборке.Характеристика,
		|	ТоварыКСборке.Назначение,
		|	ТоварыКСборке.Серия,
		|	ТоварыКСборке.Количество
		|ИЗ
		|	ТоварыКСборке КАК ТоварыКСборке
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыКОтгрузке.ДокументОтгрузки КАК ДокументОтгрузки,
		|	ВЫБОР
		|		КОГДА ТоварыКОтгрузке.ОтгрузкаПоЗаданиюНаПеревозку
		|			ТОГДА ТоварыКОтгрузке.ЗаданиеНаПеревозку
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка)
		|	КОНЕЦ КАК ЗаданиеНаПеревозку,
		|	ТоварыКОтгрузке.Получатель КАК Получатель,
		|	ТоварыКОтгрузке.Склад КАК Склад,
		|	ТоварыКОтгрузке.Номенклатура КАК Номенклатура,
		|	ТоварыКОтгрузке.Характеристика КАК Характеристика,
		|	ТоварыКОтгрузке.Назначение КАК Назначение,
		|	ТоварыКОтгрузке.Серия КАК Серия,
		|	СУММА(ТоварыКОтгрузке.Количество) КАК Количество,
		|	ТоварыКОтгрузке.ОтгрузкаПоЗаданиюНаПеревозку КАК ОтгрузкаПоЗаданиюНаПеревозку
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТоварыКОтгрузке.ДокументОтгрузки КАК ДокументОтгрузки,
		|		ТоварыКОтгрузке.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку,
		|		ТоварыКОтгрузке.Получатель КАК Получатель,
		|		ТоварыКОтгрузке.Склад КАК Склад,
		|		ТоварыКОтгрузке.Номенклатура КАК Номенклатура,
		|		ТоварыКОтгрузке.Характеристика КАК Характеристика,
		|		ТоварыКОтгрузке.Назначение КАК Назначение,
		|		ТоварыКОтгрузке.Серия КАК Серия,
		|		ТоварыКОтгрузке.Количество КАК Количество,
		|		ТоварыКОтгрузке.ОтгрузкаПоЗаданиюНаПеревозку КАК ОтгрузкаПоЗаданиюНаПеревозку
		|	ИЗ
		|		ТоварыКОтгрузке КАК ТоварыКОтгрузке
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТоварыКОтгрузкеРасход.ДокументОтгрузки,
		|		ТоварыКОтгрузкеРасход.ЗаданиеНаПеревозку,
		|		ТоварыКОтгрузкеРасход.Получатель,
		|		ТоварыКОтгрузкеРасход.Склад,
		|		ТоварыКОтгрузкеРасход.Номенклатура,
		|		ТоварыКОтгрузкеРасход.Характеристика,
		|		ТоварыКОтгрузкеРасход.Назначение,
		|		ТоварыКОтгрузкеРасход.Серия,
		|		-ТоварыКОтгрузкеРасход.Количество,
		|		ТоварыКОтгрузкеРасход.ОтгрузкаПоЗаданиюНаПеревозку
		|	ИЗ
		|		ТоварыКОтгрузкеРасход КАК ТоварыКОтгрузкеРасход
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТоварыСобираетсяСобрано.ДокументОтгрузки,
		|		ТоварыСобираетсяСобрано.ЗаданиеНаПеревозку,
		|		ТоварыСобираетсяСобрано.Получатель,
		|		ТоварыСобираетсяСобрано.Склад,
		|		ТоварыСобираетсяСобрано.Номенклатура,
		|		ТоварыСобираетсяСобрано.Характеристика,
		|		ТоварыСобираетсяСобрано.Назначение,
		|		ТоварыСобираетсяСобрано.Серия,
		|		-ТоварыСобираетсяСобрано.Количество,
		|		ТоварыСобираетсяСобрано.ОтгрузкаПоЗаданиюНаПеревозку
		|	ИЗ
		|		ТоварыСобираетсяСобрано КАК ТоварыСобираетсяСобрано
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТоварыКСборке.ДокументОтгрузки,
		|		ТоварыКСборке.ЗаданиеНаПеревозку,
		|		ТоварыКСборке.Получатель,
		|		ТоварыКСборке.Склад,
		|		ТоварыКСборке.Номенклатура,
		|		ТоварыКСборке.Характеристика,
		|		ТоварыКСборке.Назначение,
		|		ТоварыКСборке.Серия,
		|		-ТоварыКСборке.Количество,
		|		ТоварыКСборке.ОтгрузкаПоЗаданиюНаПеревозку
		|	ИЗ
		|		ТоварыКСборке КАК ТоварыКСборке) КАК ТоварыКОтгрузке
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКОтгрузке.Склад,
		|	ТоварыКОтгрузке.Номенклатура,
		|	ТоварыКОтгрузке.ОтгрузкаПоЗаданиюНаПеревозку,
		|	ТоварыКОтгрузке.Характеристика,
		|	ТоварыКОтгрузке.ДокументОтгрузки,
		|	ТоварыКОтгрузке.Серия,
		|	ТоварыКОтгрузке.Получатель,
		|	ВЫБОР
		|		КОГДА ТоварыКОтгрузке.ОтгрузкаПоЗаданиюНаПеревозку
		|			ТОГДА ТоварыКОтгрузке.ЗаданиеНаПеревозку
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка)
		|	КОНЕЦ,
		|	ТоварыКОтгрузке.Назначение
		|
		|ИМЕЮЩИЕ
		|	СУММА(ТоварыКОтгрузке.Количество) <> 0"; 
			
		Запрос.УстановитьПараметр("ТоварыКОтгрузке", ОбщегоНазначенияУТ.ДанныеДерева(ДеревоТоварыКОтгрузке));
		Запрос.УстановитьПараметр("ПустойПолучатель", ПустойПолучательОтправитель());
		Запрос.УстановитьПараметр("ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров",
			ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров);
		Запрос.УстановитьПараметр("МерныеТипыЕдиницИзмерений",
			Справочники.УпаковкиЕдиницыИзмерения.МерныеТипыЕдиницИзмерений());
		
		Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
		
		Если ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров <> 0 Тогда
			СоединениеСВТДопустимыхОтклонений = 
				"ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТоварыКОформлениюРасходныхОрдеров КАК ВТТоварыКОформлениюРасходныхОрдеров
				|		ПО ТоварыКОтгрузке.ДокументОтгрузки = ВТТоварыКОформлениюРасходныхОрдеров.ДокументОтгрузки
				|			И ТоварыКОтгрузке.Номенклатура = ВТТоварыКОформлениюРасходныхОрдеров.Номенклатура
				|			И ТоварыКОтгрузке.Характеристика = ВТТоварыКОформлениюРасходныхОрдеров.Характеристика
				|			И ТоварыКОтгрузке.Назначение = ВТТоварыКОформлениюРасходныхОрдеров.Назначение
				|			И ТоварыКОтгрузке.Серия = ВТТоварыКОформлениюРасходныхОрдеров.Серия";
				
			ДопустимоеОтклонениеЗначение = "ВТТоварыКОформлениюРасходныхОрдеров.ДопустимоеОтклонение"
		Иначе
			СоединениеСВТДопустимыхОтклонений = "";
			ДопустимоеОтклонениеЗначение = 0;
		КонецЕсли;
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"ГДЕ &СоединениеСВТДопустимыхОтклонений", СоединениеСВТДопустимыхОтклонений);
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&ДопустимоеОтклонениеЗначение", ДопустимоеОтклонениеЗначение);
		
		МассивРезультатов = Запрос.ВыполнитьПакет(); 
	
		ДеревоТоварыКОтгрузке 	= МассивРезультатов[МассивРезультатов.Количество()-5].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам); 
		ТоварыКОтгрузкеРасход   = МассивРезультатов[МассивРезультатов.Количество()-4].Выгрузить();
		ТоварыСобираетсяСобрано = МассивРезультатов[МассивРезультатов.Количество()-3].Выгрузить();
		ТоварыКСборке         	= МассивРезультатов[МассивРезультатов.Количество()-2].Выгрузить();  
		ТаблицаДельты           = МассивРезультатов[МассивРезультатов.Количество()-1].Выгрузить();
				
	Иначе
		
		ДеревоТоварыКОтгрузке 	= МассивРезультатов[МассивРезультатов.Количество()-5].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам); 
		ТоварыКОтгрузкеРасход   = МассивРезультатов[МассивРезультатов.Количество()-4].Выгрузить();
		ТоварыСобираетсяСобрано = МассивРезультатов[МассивРезультатов.Количество()-3].Выгрузить();
		ТоварыКСборке         	= МассивРезультатов[МассивРезультатов.Количество()-2].Выгрузить();  
		ТаблицаДельты           = МассивРезультатов[МассивРезультатов.Количество()-1].Выгрузить();
		
	КонецЕсли;

	ВычитаемыеТаблицы = Новый ТаблицаЗначений;
	ВычитаемыеТаблицы.Колонки.Добавить("Таблица");
	ВычитаемыеТаблицы.Колонки.Добавить("ОбходСверхуВниз");
	
	НоваяСтрока = ВычитаемыеТаблицы.Вставить(0);
	НоваяСтрока.Таблица = ТоварыКОтгрузкеРасход;
	НоваяСтрока.ОбходСверхуВниз = Истина;
	
	НоваяСтрока = ВычитаемыеТаблицы.Вставить(1);
	НоваяСтрока.Таблица = ТоварыСобираетсяСобрано;
	НоваяСтрока.ОбходСверхуВниз = Истина;
	
	НоваяСтрока = ВычитаемыеТаблицы.Вставить(2);
	НоваяСтрока.Таблица = ТоварыКСборке;
	НоваяСтрока.ОбходСверхуВниз = Ложь;
	
	ВычестьТаблицуИзДерева(ДеревоТоварыКОтгрузке, ВычитаемыеТаблицы, ТаблицаДельты);
	
	СтруктураТоварыДляОформленияРасходныхОрдеров = Новый Структура;
	СтруктураТоварыДляОформленияРасходныхОрдеров.Вставить("ДеревоТоварыКОтгрузке", ДеревоТоварыКОтгрузке);
	СтруктураТоварыДляОформленияРасходныхОрдеров.Вставить("ТоварыКСборке", ТоварыКСборке);

	Возврат СтруктураТоварыДляОформленияРасходныхОрдеров
	
КонецФункции

&ИзменениеИКонтроль("ТребуетсяПереоформитьРасходныеОрдера")
Функция РСК_ТребуетсяПереоформитьРасходныеОрдера(Склад, Получатель)
	
	ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров =
		Константы.ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров.Получить();
	
	Если ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров <> 0 Тогда
		
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ТаблицаОборотов.ДокументОтгрузки КАК ДокументОтгрузки,
		|	ТаблицаОборотов.Номенклатура     КАК Номенклатура,
		|	ТаблицаОборотов.Характеристика   КАК Характеристика,
		|	ТаблицаОборотов.Назначение       КАК Назначение,
		|	ТаблицаОборотов.Серия            КАК Серия,
		|	ТаблицаОборотов.Склад            КАК Склад,
		|	ТаблицаОборотов.КОтгрузкеПриход  КАК Количество
		|
		|ПОМЕСТИТЬ ТаблицаОборотов
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.Обороты(
		|			,
		|			,
		|			,
		|			Получатель = &Получатель
		|				И Склад = &Склад
		|				И НЕ ДокументОтгрузки В
		|						(ВЫБРАТЬ
		|							ВТЗаблокированоТоварыКОтгрузке.ДокументОтгрузки
		|						ИЗ
		|							ВТЗаблокированоТоварыКОтгрузке КАК ВТЗаблокированоТоварыКОтгрузке)) КАК ТаблицаОборотов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОстатков.ДокументОтгрузки КАК ДокументОтгрузки,
		|	ТаблицаОстатков.Номенклатура КАК Номенклатура,
		|	ТаблицаОстатков.Характеристика КАК Характеристика,
		|	ТаблицаОстатков.Назначение КАК Назначение,
		|	ТаблицаОстатков.Серия КАК Серия,
		|	ТаблицаОстатков.Склад КАК Склад
		|ПОМЕСТИТЬ ВТТоварыКОформлениюРасходныхОрдеров
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.Остатки(
		|			,
		|			Получатель = &Получатель
		|				И Склад = &Склад
		|				И НЕ ДокументОтгрузки В
		|						(ВЫБРАТЬ
		|							ВТЗаблокированоТоварыКОтгрузке.ДокументОтгрузки
		|						ИЗ
		|							ВТЗаблокированоТоварыКОтгрузке КАК ВТЗаблокированоТоварыКОтгрузке)) КАК ТаблицаОстатков
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОборотов КАК ТаблицаОборотов
		|		ПО ТаблицаОстатков.ДокументОтгрузки = ТаблицаОборотов.ДокументОтгрузки
		|			И ТаблицаОстатков.Номенклатура = ТаблицаОборотов.Номенклатура
		|			И ТаблицаОстатков.Характеристика = ТаблицаОборотов.Характеристика
		|			И ТаблицаОстатков.Назначение = ТаблицаОборотов.Назначение
		|			И ТаблицаОстатков.Серия = ТаблицаОборотов.Серия
		|			И ТаблицаОстатков.Склад = ТаблицаОборотов.Склад
		|ГДЕ
		|	ТаблицаОстатков.КОтгрузкеОстаток > ВЫБОР
		|			КОГДА ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины В (&МерныеТипыЕдиницИзмерений)
		|				ТОГДА &ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров / 100 * ЕСТЬNULL(ТаблицаОборотов.Количество,0)
		|			ИНАЧЕ 0
		|		КОНЕЦ";
		
		ТекстЗапроса = ТекстЗапроса + ";
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
	Иначе
		
		ТекстЗапроса = "";
		
	КонецЕсли;
	
	НачинатьОтгрузкуПослеФормированияЗаданияНаПеревозку =
		СкладыСервер.НачинатьОтгрузкуПослеФормированияЗаданияНаПеревозку(Склад);
	
	Если НачинатьОтгрузкуПослеФормированияЗаданияНаПеревозку Тогда
		
		ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
		ДополнительныеПараметры.ИмяВременнойТаблицы = "ВТЗаблокированоЗаданиеНаПеревозку";
		
		МенеджерВТ = Новый МенеджерВременныхТаблиц;
		ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(Неопределено,
			"Документ.ЗаданиеНаПеревозку", МенеджерВТ, ДополнительныеПараметры);
		
		ДополнительныеПараметры.ИмяВременнойТаблицы = "ВТЗаблокированоТоварыКОтгрузке";
		ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗначенийЗаблокированныхИзмерений(Неопределено,
			"РегистрНакопления.ТоварыКОтгрузке", "ДокументОтгрузки", МенеджерВТ, ДополнительныеПараметры);
			
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
		Запрос.Текст = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА НакладнаяТовары.Ссылка.РеализацияПоЗаказам
		|			ТОГДА НакладнаяТовары.ЗаказКлиента
		|		ИНАЧЕ НакладнаяТовары.Ссылка
		|	КОНЕЦ КАК ДокументОтгрузки
		|ПОМЕСТИТЬ ЗаблокированныеДокументыОтгрузкиПоЗаданиюНаПеревозку
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЗаблокированоЗаданиеНаПеревозку КАК ВтЗаданияНаПеревозку
		|		ПО ЗаданиеНаПеревозкуРаспоряжения.Ссылка = ВтЗаданияНаПеревозку.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК НакладнаяТовары
		|		ПО (НакладнаяТовары.Ссылка = ЗаданиеНаПеревозкуРаспоряжения.Распоряжение)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА НакладнаяТовары.Ссылка.ПеремещениеПоЗаказам
		|			ТОГДА НакладнаяТовары.ЗаказНаПеремещение
		|		ИНАЧЕ НакладнаяТовары.Ссылка
		|	КОНЕЦ
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЗаблокированоЗаданиеНаПеревозку КАК ВтЗаданияНаПеревозку
		|		ПО ЗаданиеНаПеревозкуРаспоряжения.Ссылка = ВтЗаданияНаПеревозку.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Товары КАК НакладнаяТовары
		|		ПО (НакладнаяТовары.Ссылка = ЗаданиеНаПеревозкуРаспоряжения.Распоряжение)
		|
		//++ НЕ УТКА

		//++ Устарело_Переработка24
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НакладнаяТовары.ЗаказДавальца
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЗаблокированоЗаданиеНаПеревозку КАК ВтЗаданияНаПеревозку
		|		ПО ЗаданиеНаПеревозкуРаспоряжения.Ссылка = ВтЗаданияНаПеревозку.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаДавальцу.Товары КАК НакладнаяТовары
		|		ПО (НакладнаяТовары.Ссылка = ЗаданиеНаПеревозкуРаспоряжения.Распоряжение)
		//-- Устарело_Переработка24
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НакладнаяТовары.ЗаказКлиента
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЗаблокированоЗаданиеНаПеревозку КАК ВтЗаданияНаПеревозку
		|		ПО ЗаданиеНаПеревозкуРаспоряжения.Ссылка = ВтЗаданияНаПеревозку.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтгрузкаТоваровСХранения.Товары КАК НакладнаяТовары
		|		ПО (НакладнаяТовары.Ссылка = ЗаданиеНаПеревозкуРаспоряжения.Распоряжение)
		|ГДЕ
		|	НакладнаяТовары.Ссылка.ХозяйственнаяОперация =
		|							ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаДавальцу2_5)
		|
		//-- НЕ УТКА

		//++ НЕ УТ
		
		//++ Устарело_Переработка24
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НакладнаяТовары.ЗаказПереработчику
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЗаблокированоЗаданиеНаПеревозку КАК ВтЗаданияНаПеревозку
		|		ПО ЗаданиеНаПеревозкуРаспоряжения.Ссылка = ВтЗаданияНаПеревозку.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаСырьяПереработчику.Товары КАК НакладнаяТовары
		|		ПО (НакладнаяТовары.Ссылка = ЗаданиеНаПеревозкуРаспоряжения.Распоряжение)
		|
		//-- Устарело_Переработка24
		
		//-- НЕ УТ
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА НакладнаяТовары.Ссылка.ПередачаПоЗаказам
		|			ТОГДА НакладнаяТовары.ЗаказКлиента
		|		ИНАЧЕ НакладнаяТовары.Ссылка
		|	КОНЕЦ КАК ДокументОтгрузки
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЗаблокированоЗаданиеНаПеревозку КАК ВтЗаданияНаПеревозку
		|		ПО ЗаданиеНаПеревозкуРаспоряжения.Ссылка = ВтЗаданияНаПеревозку.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровХранителю.Товары КАК НакладнаяТовары
		|		ПО (НакладнаяТовары.Ссылка = ЗаданиеНаПеревозкуРаспоряжения.Распоряжение)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВложенныйЗапрос.ДокументОтгрузки КАК ДокументОтгрузки
		|ПОМЕСТИТЬ ЗаблокированныеДокументыОтгрузки
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДокументыОтгрузки.ДокументОтгрузки КАК ДокументОтгрузки
		|	ИЗ
		|		ЗаблокированныеДокументыОтгрузкиПоЗаданиюНаПеревозку КАК ДокументыОтгрузки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТЗаблокированоТоварыКОтгрузке.ДокументОтгрузки
		|	ИЗ
		|		ВТЗаблокированоТоварыКОтгрузке КАК ВТЗаблокированоТоварыКОтгрузке) КАК ВложенныйЗапрос
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыКОтгрузкеОбороты.ДокументОтгрузки КАК ДокументОтгрузки,
		|	ТоварыКОтгрузкеОбороты.Получатель КАК Получатель,
		|	ТоварыКОтгрузкеОбороты.Склад КАК Склад,
		|	ТоварыКОтгрузкеОбороты.Номенклатура КАК Номенклатура,
		|	ТоварыКОтгрузкеОбороты.Характеристика КАК Характеристика,
		|	ТоварыКОтгрузкеОбороты.Назначение КАК Назначение,
		|	ТоварыКОтгрузкеОбороты.Серия КАК Серия,
		|	СУММА(ВЫБОР
		|		КОГДА ТоварыКОтгрузкеОбороты.КОтгрузкеРасход < 0
		|			ТОГДА -ТоварыКОтгрузкеОбороты.КОтгрузкеРасход
		|		ИНАЧЕ ВЫБОР
		|				КОГДА &ОформлятьСначалаНакладные
		|					ТОГДА ТоварыКОтгрузкеОбороты.КОтгрузкеПриход - ТоварыКОтгрузкеОбороты.КОформлениюПриход
		|				ИНАЧЕ ТоварыКОтгрузкеОбороты.КОтгрузкеПриход
		|			КОНЕЦ
		|	КОНЕЦ) КАК КоличествоКОтгрузке,
		|	ВЫБОР
		|		КОГДА СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ДоКлиента)
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
		#Удаление
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		#КонецУдаления
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
		#КонецВставки
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.КПолучателюОпределяетСлужбаДоставки))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОтгрузкаПоЗаданиюНаПеревозку
		|ПОМЕСТИТЬ ТоварыКОтгрузке
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.Обороты(
		|			,
		|			,
		|			,
		|			Склад = &Склад
		|				И Получатель = &Получатель
		|				И НЕ ДокументОтгрузки В
		|						(ВЫБРАТЬ
		|							ВТЗаблокированоТоварыКОтгрузке.ДокументОтгрузки
		|						ИЗ
		|							ЗаблокированныеДокументыОтгрузки КАК ВТЗаблокированоТоварыКОтгрузке)
		|				И &УсловиеДопустимоеОтклонение) КАК ТоварыКОтгрузкеОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияИРеквизитыДоставки КАК СостоянияИРеквизитыДоставки
		|		ПО СостоянияИРеквизитыДоставки.Склад = ТоварыКОтгрузкеОбороты.Склад
		|			И СостоянияИРеквизитыДоставки.Распоряжение = ТоварыКОтгрузкеОбороты.ДокументОтгрузки
		|ГДЕ
		|	ВЫБОР
		|		КОГДА ТоварыКОтгрузкеОбороты.КОтгрузкеРасход < 0
		|			ТОГДА -ТоварыКОтгрузкеОбороты.КОтгрузкеРасход
		|		ИНАЧЕ ВЫБОР
		|				КОГДА &ОформлятьСначалаНакладные
		|					ТОГДА ТоварыКОтгрузкеОбороты.КОтгрузкеПриход - ТоварыКОтгрузкеОбороты.КОформлениюПриход
		|				ИНАЧЕ ТоварыКОтгрузкеОбороты.КОтгрузкеПриход
		|			КОНЕЦ
		|	КОНЕЦ <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКОтгрузкеОбороты.Номенклатура,
		|	ТоварыКОтгрузкеОбороты.Получатель,
		|	ТоварыКОтгрузкеОбороты.Характеристика,
		|	ТоварыКОтгрузкеОбороты.ДокументОтгрузки,
		|	ТоварыКОтгрузкеОбороты.Серия,
		|	ТоварыКОтгрузкеОбороты.Назначение,
		|	ТоварыКОтгрузкеОбороты.Склад,
		|	ВЫБОР
		|		КОГДА СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ДоКлиента)
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
		#Удаление
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		#КонецУдаления
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
		#КонецВставки
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.КПолучателюОпределяетСлужбаДоставки))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТоварыКОтгрузкеОбороты.ДокументОтгрузки,
		|	ТоварыКОтгрузкеОбороты.Получатель,
		|	ТоварыКОтгрузкеОбороты.Склад,
		|	ТоварыКОтгрузкеОбороты.Номенклатура,
		|	ТоварыКОтгрузкеОбороты.Характеристика,
		|	ТоварыКОтгрузкеОбороты.Назначение,
		|	ТоварыКОтгрузкеОбороты.Серия,
		|	СУММА(ТоварыКОтгрузкеОбороты.КОформлениюРасход),
		|	ВЫБОР
		|		КОГДА СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ДоКлиента)
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
		#Удаление
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		#КонецУдаления
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
		#КонецВставки
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.КПолучателюОпределяетСлужбаДоставки))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.Обороты(
		|			,
		|			,
		|			,
		|			Склад = &Склад
		|				И Получатель = &Получатель
		|				И НЕ ДокументОтгрузки В
		|						(ВЫБРАТЬ
		|							ВТЗаблокированоТоварыКОтгрузке.ДокументОтгрузки
		|						ИЗ
		|							ЗаблокированныеДокументыОтгрузки КАК ВТЗаблокированоТоварыКОтгрузке)
		|				И &УсловиеДопустимоеОтклонение) КАК ТоварыКОтгрузкеОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияИРеквизитыДоставки КАК СостоянияИРеквизитыДоставки
		|		ПО СостоянияИРеквизитыДоставки.Склад = ТоварыКОтгрузкеОбороты.Склад
		|			И СостоянияИРеквизитыДоставки.Распоряжение = ТоварыКОтгрузкеОбороты.ДокументОтгрузки
		|ГДЕ
		|	&ОформлятьСначалаНакладные
		|	И ТоварыКОтгрузкеОбороты.КОформлениюРасход <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКОтгрузкеОбороты.Назначение,
		|	ТоварыКОтгрузкеОбороты.Характеристика,
		|	ТоварыКОтгрузкеОбороты.Склад,
		|	ТоварыКОтгрузкеОбороты.Номенклатура,
		|	ТоварыКОтгрузкеОбороты.Серия,
		|	ТоварыКОтгрузкеОбороты.ДокументОтгрузки,
		|	ТоварыКОтгрузкеОбороты.Получатель,
		|	ВЫБОР
		|		КОГДА СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ДоКлиента)
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
		#Удаление
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		#КонецУдаления
		#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
		|				ИЛИ (&ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками И СостоянияИРеквизитыДоставки.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
		#КонецВставки
		|				ИЛИ СостоянияИРеквизитыДоставки.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.КПолучателюОпределяетСлужбаДоставки))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыКОтгрузке.ДокументОтгрузки КАК ДокументОтгрузки,
		|	ТоварыКОтгрузке.Склад КАК Склад,
		|	ТоварыКОтгрузке.Получатель КАК Получатель,
		|	ТоварыКОтгрузке.Номенклатура КАК Номенклатура,
		|	ТоварыКОтгрузке.Характеристика КАК Характеристика,
		|	ТоварыКОтгрузке.Назначение КАК Назначение,
		|	ТоварыКОтгрузке.Серия КАК Серия,
		|	ТоварыКОтгрузке.КоличествоКОтгрузке,
		|	СУММА(ВЫБОР
		|			КОГДА НЕ ТоварыКОтгрузке.ОтгрузкаПоЗаданиюНаПеревозку
		|					ИЛИ ТоварыКДоставке.ВсеТовары
		|				ТОГДА ТоварыКОтгрузке.КоличествоКОтгрузке
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ТоварыКОтгрузке.КоличествоКОтгрузке >= ТоварыКДоставке.Количество
		|						ТОГДА ТоварыКДоставке.Количество
		|					ИНАЧЕ ТоварыКОтгрузке.КоличествоКОтгрузке
		|				КОНЕЦ
		|		КОНЕЦ) КАК Количество
		|ПОМЕСТИТЬ ТоварыКОтгрузкеИДоставке
		|ИЗ
		|	ТоварыКОтгрузке КАК ТоварыКОтгрузке
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварыКДоставке КАК ТоварыКДоставке
		|		ПО ТоварыКОтгрузке.ДокументОтгрузки = ТоварыКДоставке.Распоряжение
		|			И ТоварыКОтгрузке.Склад = ТоварыКДоставке.Склад
		|			И (ТоварыКОтгрузке.Номенклатура = ТоварыКДоставке.Номенклатура
		|					И ТоварыКОтгрузке.Характеристика = ТоварыКДоставке.Характеристика
		|					И ТоварыКОтгрузке.Назначение = ТоварыКДоставке.Назначение
		|					И ТоварыКОтгрузке.Серия = ТоварыКДоставке.Серия
		|				ИЛИ ТоварыКДоставке.ВсеТовары)
		|			И (ТоварыКДоставке.ЗаданиеНаПеревозку.Проведен)
		|			И (ТоварыКДоставке.ЗаданиеНаПеревозку.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданийНаПеревозку.Формируется))
		|			И (ТоварыКОтгрузке.ОтгрузкаПоЗаданиюНаПеревозку)
		|ГДЕ
		|	НЕ(ТоварыКОтгрузке.ОтгрузкаПоЗаданиюНаПеревозку
		|				И ТоварыКДоставке.ЗаданиеНаПеревозку ЕСТЬ NULL )
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКОтгрузке.Характеристика,
		|	ТоварыКОтгрузке.Получатель,
		|	ТоварыКОтгрузке.Серия,
		|	ТоварыКОтгрузке.Назначение,
		|	ТоварыКОтгрузке.ДокументОтгрузки,
		|	ТоварыКОтгрузке.Склад,
		|	ТоварыКОтгрузке.Номенклатура,
		|	ТоварыКОтгрузке.КоличествоКОтгрузке
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыКОтгрузке.ДокументОтгрузки КАК ДокументОтгрузки,
		|	ТоварыКОтгрузке.Склад,
		|	ТоварыКОтгрузке.Получатель,
		|	ТоварыКОтгрузке.Номенклатура,
		|	ТоварыКОтгрузке.Характеристика,
		|	ТоварыКОтгрузке.Назначение,
		|	ТоварыКОтгрузке.Серия,
		|	ТоварыКОтгрузке.КОтгрузкеРасход КАК Количество
		|ПОМЕСТИТЬ ТоварыКОтгрузкеРасход
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.Обороты(
		|			,
		|			,
		|			,
		|			Склад = &Склад
		|				И Получатель = &Получатель
		|				И НЕ ДокументОтгрузки В
		|						(ВЫБРАТЬ
		|							ВТЗаблокированоТоварыКОтгрузке.ДокументОтгрузки
		|						ИЗ
		|							ЗаблокированныеДокументыОтгрузки КАК ВТЗаблокированоТоварыКОтгрузке)
		|				И &УсловиеДопустимоеОтклонение) КАК ТоварыКОтгрузке
		|ГДЕ
		| ТоварыКОтгрузке.КОтгрузкеРасход > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыКОтгрузкеОстатки.ДокументОтгрузки,
		|	ТоварыКОтгрузкеОстатки.Склад,
		|	ТоварыКОтгрузкеОстатки.Получатель,
		|	ТоварыКОтгрузкеОстатки.Номенклатура,
		|	ТоварыКОтгрузкеОстатки.Характеристика,
		|	ТоварыКОтгрузкеОстатки.Назначение,
		|	ТоварыКОтгрузкеОстатки.Серия,
		|	СУММА(ТоварыКОтгрузкеОстатки.СобираетсяОстаток + ТоварыКОтгрузкеОстатки.СобраноОстаток) КАК Количество
		|ПОМЕСТИТЬ ТоварыСобраноСобирается
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.Остатки(
		|			,
		|			Склад = &Склад
		|				И Получатель = &Получатель
		|				И НЕ ДокументОтгрузки В
		|						(ВЫБРАТЬ
		|							ВТЗаблокированоТоварыКОтгрузке.ДокументОтгрузки
		|						ИЗ
		|							ЗаблокированныеДокументыОтгрузки КАК ВТЗаблокированоТоварыКОтгрузке)
		|				И &УсловиеДопустимоеОтклонение) КАК ТоварыКОтгрузкеОстатки
		|ГДЕ
		|	ТоварыКОтгрузкеОстатки.СобираетсяОстаток + ТоварыКОтгрузкеОстатки.СобраноОстаток <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКОтгрузкеОстатки.Склад,
		|	ТоварыКОтгрузкеОстатки.Получатель,
		|	ТоварыКОтгрузкеОстатки.Назначение,
		|	ТоварыКОтгрузкеОстатки.ДокументОтгрузки,
		|	ТоварыКОтгрузкеОстатки.Характеристика,
		|	ТоварыКОтгрузкеОстатки.Номенклатура,
		|	ТоварыКОтгрузкеОстатки.Серия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыКОтгрузкеОстатки.ДокументОтгрузки,
		|	ТоварыКОтгрузкеОстатки.Склад,
		|	ТоварыКОтгрузкеОстатки.Получатель,
		|	ТоварыКОтгрузкеОстатки.Номенклатура,
		|	ТоварыКОтгрузкеОстатки.Характеристика,
		|	ТоварыКОтгрузкеОстатки.Назначение,
		|	ТоварыКОтгрузкеОстатки.Серия,
		|	СУММА(ТоварыКОтгрузкеОстатки.КСборкеОстаток) КАК Количество
		|ПОМЕСТИТЬ ТоварыКСборке
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.Остатки(
		|			,
		|			Склад = &Склад
		|				И Получатель = &Получатель
		|				И НЕ ДокументОтгрузки В
		|						(ВЫБРАТЬ
		|							ВТЗаблокированоТоварыКОтгрузке.ДокументОтгрузки
		|						ИЗ
		|							ЗаблокированныеДокументыОтгрузки КАК ВТЗаблокированоТоварыКОтгрузке)
		|				И &УсловиеДопустимоеОтклонение) КАК ТоварыКОтгрузкеОстатки
		|ГДЕ
		|	ТоварыКОтгрузкеОстатки.КСборкеОстаток <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКОтгрузкеОстатки.Склад,
		|	ТоварыКОтгрузкеОстатки.Получатель,
		|	ТоварыКОтгрузкеОстатки.Назначение,
		|	ТоварыКОтгрузкеОстатки.ДокументОтгрузки,
		|	ТоварыКОтгрузкеОстатки.Характеристика,
		|	ТоварыКОтгрузкеОстатки.Номенклатура,
		|	ТоварыКОтгрузкеОстатки.Серия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыКОтгрузкеОстатки.ДокументОтгрузки,
		|	ТоварыКОтгрузкеОстатки.Склад,
		|	ТоварыКОтгрузкеОстатки.Получатель,
		|	ТоварыКОтгрузкеОстатки.Номенклатура,
		|	ТоварыКОтгрузкеОстатки.Характеристика,
		|	ТоварыКОтгрузкеОстатки.Назначение,
		|	ТоварыКОтгрузкеОстатки.Серия,
		|	СУММА(ТоварыКОтгрузкеОстатки.КОтгрузкеПриход) КАК КОтгрузкеПриход,
		|	СУММА(ТоварыКОтгрузкеОстатки.КОтгрузкеРасход) КАК КОтгрузкеРасход,
		|	СУММА(ТоварыКОтгрузкеОстатки.СобираетсяСобраноОстаток) КАК СобираетсяСобраноОстаток,
		|	СУММА(ТоварыКОтгрузкеОстатки.КСборкеОстаток) КАК КСборкеОстаток
		|ПОМЕСТИТЬ ТоварыКОтгрузкеОстатки
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТоварыКОтгрузкеИДоставке.ДокументОтгрузки КАК ДокументОтгрузки,
		|		ТоварыКОтгрузкеИДоставке.Склад КАК Склад,
		|		ТоварыКОтгрузкеИДоставке.Получатель КАК Получатель,
		|		ТоварыКОтгрузкеИДоставке.Номенклатура КАК Номенклатура,
		|		ТоварыКОтгрузкеИДоставке.Характеристика КАК Характеристика,
		|		ТоварыКОтгрузкеИДоставке.Назначение КАК Назначение,
		|		ТоварыКОтгрузкеИДоставке.Серия КАК Серия,
		|		ВЫБОР
		|			КОГДА ТоварыКОтгрузкеИДоставке.Количество < ТоварыКОтгрузкеИДоставке.КоличествоКОтгрузке
		|				ТОГДА ТоварыКОтгрузкеИДоставке.Количество
		|			ИНАЧЕ ТоварыКОтгрузкеИДоставке.КоличествоКОтгрузке
		|		КОНЕЦ КАК КОтгрузкеПриход,
		|		0 КАК КОтгрузкеРасход,
		|		0 КАК СобираетсяСобраноОстаток,
		|		0 КАК КСборкеОстаток
		|	ИЗ
		|		ТоварыКОтгрузкеИДоставке КАК ТоварыКОтгрузкеИДоставке
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТоварыКОтгрузкеРасход.ДокументОтгрузки,
		|		ТоварыКОтгрузкеРасход.Склад,
		|		ТоварыКОтгрузкеРасход.Получатель,
		|		ТоварыКОтгрузкеРасход.Номенклатура,
		|		ТоварыКОтгрузкеРасход.Характеристика,
		|		ТоварыКОтгрузкеРасход.Назначение,
		|		ТоварыКОтгрузкеРасход.Серия,
		|		0,
		|		ТоварыКОтгрузкеРасход.Количество,
		|		0,
		|		0
		|	ИЗ
		|		ТоварыКОтгрузкеРасход КАК ТоварыКОтгрузкеРасход
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТоварыСобраноСобирается.ДокументОтгрузки,
		|		ТоварыСобраноСобирается.Склад,
		|		ТоварыСобраноСобирается.Получатель,
		|		ТоварыСобраноСобирается.Номенклатура,
		|		ТоварыСобраноСобирается.Характеристика,
		|		ТоварыСобраноСобирается.Назначение,
		|		ТоварыСобраноСобирается.Серия,
		|		0,
		|		0,
		|		ТоварыСобраноСобирается.Количество,
		|		0
		|	ИЗ
		|		ТоварыСобраноСобирается КАК ТоварыСобраноСобирается
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТоварыКСборке.ДокументОтгрузки,
		|		ТоварыКСборке.Склад,
		|		ТоварыКСборке.Получатель,
		|		ТоварыКСборке.Номенклатура,
		|		ТоварыКСборке.Характеристика,
		|		ТоварыКСборке.Назначение,
		|		ТоварыКСборке.Серия,
		|		0,
		|		0,
		|		0,
		|		ТоварыКСборке.Количество
		|	ИЗ
		|		ТоварыКСборке КАК ТоварыКСборке) КАК ТоварыКОтгрузкеОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКОтгрузкеОстатки.ДокументОтгрузки,
		|	ТоварыКОтгрузкеОстатки.Склад,
		|	ТоварыКОтгрузкеОстатки.Получатель,
		|	ТоварыКОтгрузкеОстатки.Номенклатура,
		|	ТоварыКОтгрузкеОстатки.Характеристика,
		|	ТоварыКОтгрузкеОстатки.Назначение,
		|	ТоварыКОтгрузкеОстатки.Серия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ТоварыКОтгрузкеОстатки.ДокументОтгрузки,
		|	ТоварыКОтгрузкеОстатки.Склад,
		|	ТоварыКОтгрузкеОстатки.Получатель,
		|	ТоварыКОтгрузкеОстатки.Номенклатура,
		|	ТоварыКОтгрузкеОстатки.Характеристика,
		|	ТоварыКОтгрузкеОстатки.Назначение,
		|	ТоварыКОтгрузкеОстатки.Серия,
		|	ТоварыКОтгрузкеОстатки.КОтгрузкеПриход,
		|	ТоварыКОтгрузкеОстатки.КОтгрузкеРасход,
		|	ТоварыКОтгрузкеОстатки.СобираетсяСобраноОстаток,
		|	ТоварыКОтгрузкеОстатки.КСборкеОстаток
		|ИЗ
		|	ТоварыКОтгрузкеОстатки КАК ТоварыКОтгрузкеОстатки
		|ГДЕ
		|	ТоварыКОтгрузкеОстатки.КОтгрузкеПриход - ТоварыКОтгрузкеОстатки.КОтгрузкеРасход - ТоварыКОтгрузкеОстатки.СобираетсяСобраноОстаток > ТоварыКОтгрузкеОстатки.КСборкеОстаток
		|			ИЛИ ТоварыКОтгрузкеОстатки.КСборкеОстаток > 0 И
		|	ТоварыКОтгрузкеОстатки.КОтгрузкеПриход - ТоварыКОтгрузкеОстатки.КОтгрузкеРасход - ТоварыКОтгрузкеОстатки.СобираетсяСобраноОстаток < ТоварыКОтгрузкеОстатки.КСборкеОстаток";
		
	Иначе
		
		ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
		ДополнительныеПараметры.ИмяВременнойТаблицы = "ВТЗаблокированоТоварыКОтгрузке";
		
		МенеджерВТ = Новый МенеджерВременныхТаблиц;
		ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗначенийЗаблокированныхИзмерений(Неопределено,
			"РегистрНакопления.ТоварыКОтгрузке", "ДокументОтгрузки", МенеджерВТ, ДополнительныеПараметры);
			
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
		Запрос.Текст = ТекстЗапроса +
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ТоварыКОтгрузкеОстатки.Склад,
		|	ТоварыКОтгрузкеОстатки.Получатель,
		|	ТоварыКОтгрузкеОстатки.ДокументОтгрузки,
		|	ТоварыКОтгрузкеОстатки.Номенклатура,
		|	ТоварыКОтгрузкеОстатки.Характеристика,
		|	ТоварыКОтгрузкеОстатки.Назначение,
		|	ТоварыКОтгрузкеОстатки.Серия
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.Остатки(
		|			,
		|			Склад = &Склад
		|				И Получатель = &Получатель
		|				И НЕ ДокументОтгрузки В
		|						(ВЫБРАТЬ
		|							ВТЗаблокированоТоварыКОтгрузке.ДокументОтгрузки
		|						ИЗ
		|							ВТЗаблокированоТоварыКОтгрузке КАК ВТЗаблокированоТоварыКОтгрузке)
		|				И &УсловиеДопустимоеОтклонение) КАК ТоварыКОтгрузкеОстатки
		|ГДЕ
		|	(&ОформлятьСначалаНакладные
		|				И ТоварыКОтгрузкеОстатки.КОтгрузкеОстаток - ТоварыКОтгрузкеОстатки.КОформлениюОстаток - ТоварыКОтгрузкеОстатки.СобираетсяОстаток - ТоварыКОтгрузкеОстатки.СобраноОстаток > ТоварыКОтгрузкеОстатки.КСборкеОстаток
		|			ИЛИ НЕ &ОформлятьСначалаНакладные
		|				И ТоварыКОтгрузкеОстатки.КОтгрузкеОстаток - ТоварыКОтгрузкеОстатки.СобираетсяОстаток - ТоварыКОтгрузкеОстатки.СобраноОстаток > ТоварыКОтгрузкеОстатки.КСборкеОстаток)
		|	ИЛИ ТоварыКОтгрузкеОстатки.КСборкеОстаток > 0 И 
		|	(&ОформлятьСначалаНакладные
		|				И ТоварыКОтгрузкеОстатки.КОтгрузкеОстаток - ТоварыКОтгрузкеОстатки.КОформлениюОстаток - ТоварыКОтгрузкеОстатки.СобираетсяОстаток - ТоварыКОтгрузкеОстатки.СобраноОстаток < ТоварыКОтгрузкеОстатки.КСборкеОстаток
		|			ИЛИ НЕ &ОформлятьСначалаНакладные
		|				И ТоварыКОтгрузкеОстатки.КОтгрузкеОстаток - ТоварыКОтгрузкеОстатки.СобираетсяОстаток - ТоварыКОтгрузкеОстатки.СобраноОстаток < ТоварыКОтгрузкеОстатки.КСборкеОстаток)";
		
	КонецЕсли;
	
	Если ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров <> 0 Тогда
		УсловиеДопустимоеОтклонение = "(ДокументОтгрузки, Номенклатура, Характеристика, Назначение, Серия, Склад) В
		|				(ВЫБРАТЬ
		|					Таблица.ДокументОтгрузки,
		|					Таблица.Номенклатура,
		|					Таблица.Характеристика,
		|					Таблица.Назначение,
		|					Таблица.Серия,
		|					Таблица.Склад
		|				ИЗ
		|					ВТТоварыКОформлениюРасходныхОрдеров КАК Таблица)"
	Иначе
		УсловиеДопустимоеОтклонение = "Истина";
	КонецЕсли;
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеДопустимоеОтклонение", УсловиеДопустимоеОтклонение);
	
	ОформлятьСначалаНакладные = Константы.ПорядокОформленияНакладныхРасходныхОрдеров.Получить() = Перечисления.ПорядокОформленияНакладныхРасходныхОрдеров.СначалаНакладные;
	Запрос.УстановитьПараметр("ОформлятьСначалаНакладные", ОформлятьСначалаНакладные);	
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Получатель", Получатель);
	Запрос.УстановитьПараметр("ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками", ПолучитьФункциональнуюОпцию("ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками"));
	Запрос.УстановитьПараметр("ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров",ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров);
	Запрос.УстановитьПараметр("МерныеТипыЕдиницИзмерений", Справочники.УпаковкиЕдиницыИзмерения.МерныеТипыЕдиницИзмерений());	

	Возврат Не Запрос.Выполнить().Пустой()
	
КонецФункции

