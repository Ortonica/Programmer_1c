//++Конарев Проведение документов 
//
Процедура СформироватьДвиженияОтраженияУслугСоисполнителя(Документ, Отказ) Экспорт
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.ЗаданиеТорговомуПредставителю") Тогда
		ТаблицаДвижений	= Документы.ЗаданиеТорговомуПредставителю.СформироватьТаблицуДвиженийЗаданияТорговомуПредставителю(Документ);
		ОтразитьУслугиСоисполнителейЗадания(Документ, ТаблицаДвижений); 
	Иначе
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Документы.ПриобретениеУслугПрочихАктивов.ТекстЗапросаДвиженияОтраженияУслугСоисполнителей(Запрос, Документ); 
		ТаблицаДвиженийДокумента = Запрос.Выполнить().Выгрузить(); 
		
		Документ.Движения.РСК_УслугиСоисполнителей.Записывать = Истина;
		Документ.Движения.РСК_УслугиСоисполнителей.Загрузить(ТаблицаДвиженийДокумента);
		Документ.Движения.РСК_УслугиСоисполнителей.Записать();
		
		ВыполнитьКонтрольРезультатовОтражения(Запрос, Документ, Отказ);

	КонецЕсли;
	
КонецПроцедуры  

//Формирует записи регистра РСК_УслугиСоисполнителей
//
Процедура ОтразитьУслугиСоисполнителейЗадания(Документ, ТаблицаДвижений)
	
	НаборЗаписей = РегистрыНакопления.РСК_УслугиСоисполнителей.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Документ);
	НаборЗаписей.Загрузить(ТаблицаДвижений);
	НаборЗаписей.Записать();
	
КонецПроцедуры

//Удаляет движения документа из регистра РСК_УслугиСоисполнителей
//
Процедура ОчиститьДвиженияЗадания(Документ) Экспорт
	
	НаборЗаписей = РегистрыНакопления.РСК_УслугиСоисполнителей.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Документ);
	НаборЗаписей.Записать(); 
	
КонецПроцедуры

//Выполняет контроль результатов отражения услуг соисполнителей
//
Процедура ВыполнитьКонтрольРезультатовОтражения(Запрос, Документ, Отказ)

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РСК_УслугиСоисполнителейОстатки.Содержание КАК Содержание,
	|	РСК_УслугиСоисполнителейОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	РСК_УслугиСоисполнителейОстатки.Сделка КАК Сделка,
	|	РСК_УслугиСоисполнителейОстатки.СуммаОстаток КАК СуммаОстаток
	|ИЗ
	|	РегистрНакопления.РСК_УслугиСоисполнителей.Остатки(
	|			,
	|			(Сделка, Содержание) В
	|				(ВЫБРАТЬ
	|					ВТ_УслугиСоисполнителей.Сделка КАК Сделка,
	|					ВТ_УслугиСоисполнителей.Содержание КАК Содержание
	|				ИЗ
	|					ВТ_УслугиСоисполнителей КАК ВТ_УслугиСоисполнителей)) КАК РСК_УслугиСоисполнителейОстатки
	|ГДЕ
	|	(РСК_УслугиСоисполнителейОстатки.КоличествоОстаток < 0
	|			ИЛИ РСК_УслугиСоисполнителейОстатки.СуммаОстаток < 0)";
	
	Результат = Запрос.Выполнить().Выбрать();
	
	ШаблонОшибкиКоличество = "По услуге ""%1"" привышено количество, доступное к приобретению по сделке ""%2"", на %3";
	ШаблонОшибкиСумма = "По услуге ""%1"" привышена сумма приобретения по сделке ""%2"", на %3";
	Пока Результат.Следующий() Цикл
		Если Результат.КоличествоОстаток < 0 Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон(ШаблонОшибкиКоличество, Результат.Содержание, Результат.Сделка, -Результат.КоличествоОстаток)); 		
		КонецЕсли;
		Если Результат.СуммаОстаток < 0 Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон(ШаблонОшибкиСумма, Результат.Содержание, Результат.Сделка, -Результат.СуммаОстаток)); 	
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры