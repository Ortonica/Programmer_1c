// Возвращает структуру значений полей текущей строки
// РС Консалт: Трофимов Евгений 05.07.2022
//
// Параметры:
//  ТабличнаяЧасть	 - ЭлементФормы - Элемент формы табличной части, у которой нужно получить значения текущей строки
//  КлючевыеПоля	 - Строка - Имена полей табличной части через запятую
// 
Функция ПолучитьТекущуюСтроку(ТабличнаяЧасть, КлючевыеПоля) Экспорт

	ТД = ТабличнаяЧасть.ТекущиеДанные;
	Если ТД = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СтруктураКП = Новый Структура(КлючевыеПоля);
	ЗаполнитьЗначенияСвойств(СтруктураКП, ТД);
	
	Возврат СтруктураКП;

КонецФункции // ПолучитьТекущуюСтроку()

// Устанавливает в элементе формы табличной части текущую строку
// РС Консалт: Трофимов Евгений 05.07.2022
//
// Параметры:
//  ТабличнаяЧасть		 - ЭлементФормы - Элемент формы табличной части, в которой нужно сделать активной сроку. Например: ЭлементыФормы.Товары
//  СоответствующаяТЗ	 - ТаблицаЗначений - соответствующая таблица значений элементу формы. Например: Объект.Товары
//  СтруктураКП			 - Структура - Структура, полученная функцией РСК_Клиент.ПолучитьТекущуюСтроку() 
//
Процедура УстановитьТекущуюСтроку(ТабличнаяЧасть, СоответствующаяТЗ, СтруктураКП) Экспорт

	Если СтруктураКП = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НайденныеСтроки = СоответствующаяТЗ.НайтиСтроки(СтруктураКП);
	Если НайденныеСтроки.Количество() > 0 Тогда
		ТабличнаяЧасть.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
	КонецЕсли;

КонецПроцедуры // УстановитьТекущуюСтроку()

// Выводит на печать массив Актов выдачи ТСР
// РС Консалт: Трофимов Евгений 05.07.2022 Выдача ТСР
//
// Параметры:
//  МассивАктов	 		- Массив - Массив ссылок на документ ПоручениеЭкспедитору
//  ДвусторонняяПечать	- Булево - Двусторонняя печать
//
Процедура ПечатьАктов(МассивАктов, ДвусторонняяПечать = Ложь) Экспорт

	ТабДок = РСК_ВызовСервера.ПечатьАктов(МассивАктов);
	//++ РС Консалт: Трофимов Евгений 06.11.2022 Задача 21686
	//e1cib/data/Документ.Задание?ref=9af40156f2cba01c4e8273733c5aaacc
	//Претензия. Чмилева Екатерина: в пункте выдачи для распечатки акта используется кнопка Акт выдачи ТСР (односторонняя печать)
	//а должна быть 2-х, согласно выставленной форме печати в заказе клиента
	Если ДвусторонняяПечать Тогда
		ТабДок.ДвусторонняяПечать = ТипДвустороннейПечати.ПереворотВлево;
	КонецЕсли;
	//-- КонецЗадачи 21686	

	ИдентификаторПечатнойФормы = "ПФ_MXL_АктВыдачиТСР";
	НазваниеПечатнойФормы = НСтр("ru = 'Акт выдачи ТСР'");
	
	Если Не ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.Печать") Тогда
		ТабДок.Показать(НазваниеПечатнойФормы);
		Возврат;
	КонецЕсли;     
	МодульУправлениеПечатьюКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеПечатьюКлиент");     
	КоллекцияПечатныхФорм = МодульУправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм(ИдентификаторПечатнойФормы);
	ПечатнаяФорма = МодульУправлениеПечатьюКлиент.ОписаниеПечатнойФормы(КоллекцияПечатныхФорм, ИдентификаторПечатнойФормы);
	ПечатнаяФорма.СинонимМакета = НазваниеПечатнойФормы;
	ПечатнаяФорма.ТабличныйДокумент = ТабДок;
	ПечатнаяФорма.ИмяФайлаПечатнойФормы = НазваниеПечатнойФормы;
	
	ОбластиОбъектов = Новый СписокЗначений;
	МодульУправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм, ОбластиОбъектов);
	
КонецПроцедуры

// Выводит окно печатной формы на экран
//++ РС Консалт: Трофимов Евгений 22.07.2022 Задача 19001
//e1cib/data/Документ.Задание?ref=96dd9eec45a943c14094b81302446221
//
// Параметры:
//  ТабДок  - ТабличныйДокумент - Табличный документ, который нужно вывести на печать
//  ИдентификаторПечатнойФормы  - Строка - Идентификатор ПФ для привязки настроек пользователя
//  НазваниеПечатнойФормы  - Строка - Название ПФ. По идее, должно выводиться в заголовке окна печати, но этого не происходит :(
//
Процедура ВывестиНаПечать(ТабДок, ИдентификаторПечатнойФормы, НазваниеПечатнойФормы) Экспорт

	Если Не ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.Печать") Тогда
		ТабДок.Показать(НазваниеПечатнойФормы);
		Возврат;
	КонецЕсли;     

	КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм(ИдентификаторПечатнойФормы);
	ПечатнаяФорма = УправлениеПечатьюКлиент.ОписаниеПечатнойФормы(КоллекцияПечатныхФорм, ИдентификаторПечатнойФормы);
	ПечатнаяФорма.СинонимМакета = НазваниеПечатнойФормы;
	ПечатнаяФорма.ТабличныйДокумент = ТабДок;
	ПечатнаяФорма.ИмяФайлаПечатнойФормы = НазваниеПечатнойФормы;
	
	ПараметрыПечати = УправлениеПечатьюКлиент.ПараметрыПечати();
	ПараметрыПечати.ЗаголовокФормы = НазваниеПечатнойФормы;
	
	ОбластиОбъектов = Новый СписокЗначений;
	УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм, ОбластиОбъектов, ПараметрыПечати);

КонецПроцедуры // ВывестиНаПечать()

// Закрывает все открытые окна без сохранения
//++ РС Консалт: Трофимов Евгений 04.08.2022 Задача 19394
//e1cib/data/Документ.Задание?ref=a08e5944efdf2c724d9f9d3c61ee1f3b
Процедура ЗакрытьВсеОкна() Экспорт

	Окна = ПолучитьОкна();
	Для Каждого Окно Из Окна Цикл
		Если Окно.Основное ИЛИ Окно.НачальнаяСтраница Тогда
			Продолжить;
		КонецЕсли;
		Форма = Окно.ПолучитьСодержимое();
		Если Форма <> Неопределено И ТипЗнч(Форма) = Тип("УправляемаяФорма") Тогда
			Форма.Модифицированность = Ложь;
			Форма.Закрыть();
		КонецЕсли;    
	КонецЦикла; 

КонецПроцедуры

// Возвращает Истина, если все окна закрыты
//++ РС Консалт: Трофимов Евгений 04.08.2022 Задача 19394
//e1cib/data/Документ.Задание?ref=a08e5944efdf2c724d9f9d3c61ee1f3b
Функция ВсеОкнаЗакрыты() Экспорт

	ОкнаПриложения = ПолучитьОкна();
	Для Каждого О Из ОкнаПриложения Цикл
		Если НЕ О.Основное И НЕ О.НачальнаяСтраница И НЕ О.Заголовок = "Эмулятор сканера" Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	Возврат Истина;

КонецФункции // ВсеОкнаЗакрыты()

#Область СозданиеНаОсновании 

Процедура СоздатьНаОснованииПриходныйОрдерНаТовары(МассивСсылок, ПараметрыВыполнения) Экспорт
	
	//++ РС Консалт: Минаков А.С. Задача 20226
	ОчиститьСообщения();
	
	МассивРаспоряжений = Новый Массив;
	СоответствиеРаспоряжений = Новый Соответствие;
	
	Если Не ТипЗнч(МассивСсылок) = Тип("Массив") Тогда
		Распоряжение = МассивСсылок;
		МассивСсылок = Новый Массив(1);
		МассивСсылок[0] = Распоряжение
	КонецЕсли;	
	
	Для Каждого Документ Из МассивСсылок Цикл
		Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") 
			И ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(Документ, "ПоступлениеПоЗаказам") Тогда
			
			ДокументПоступления = ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(Документ, "ЗаказПоставщику")			
		ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.ПеремещениеТоваров") 
			И ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(Документ, "ПеремещениеПоЗаказам") Тогда
			
			ДокументПоступления = ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(Документ, "ЗаказНаПеремещение") 
		Иначе 
			ДокументПоступления = Документ
		КонецЕсли;
		
		МассивРаспоряжений.Добавить(ДокументПоступления);
		
		СоответствиеРаспоряжений.Вставить(Документ, ДокументПоступления)
	КонецЦикла;	
	
	ТаблицаКОформлению = РСК_ВызовСервера.ПолучитьТаблицуКОформлению(МассивРаспоряжений);
	
	Для Каждого Документ Из МассивСсылок Цикл
		
		ДокументПоступления = СоответствиеРаспоряжений.Получить(Документ);
		
		НетТоваровКОформлению = Истина;
		Для Каждого СтрокаКОформлению Из ТаблицаКОформлению Цикл
			Если СтрокаКОформлению.ДокументПоступления = ДокументПоступления Тогда
				НетТоваровКОформлению = Ложь;
				Прервать
			КонецЕсли;
		КонецЦикла;
		
		Если НетТоваровКОформлению Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для " + Документ + " не будет создан ордер т.к. нет товаров к оформлению", Документ)
		КонецЕсли
		
	КонецЦикла;
	
	Если ТаблицаКОформлению.Количество() Тогда
		ДополнительныеПараметры = Новый Структура("ТаблицаКОформлению", ТаблицаКОформлению);
		ОписаниеОповещения = Новый ОписаниеОповещения("ВводДатыЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВводДаты(ОписаниеОповещения, ТекущаяДата(), "Укажите дату поступления", ЧастиДаты.Дата)
	КонецЕсли 
	//++ РС Консалт: Минаков А.С. Задача 20226
	
КонецПроцедуры 

Процедура ВводДатыЗавершение(ДатаПоступления, ДополнительныеПараметры) Экспорт
	
	//++ РС Консалт: Минаков А.С. Задача 20226
	ТаблицаКОформлению = ДополнительныеПараметры.ТаблицаКОформлению;
	ЗонаПриемки = реа_ОбщийСерверПовтИсп.ПолучитьПредопределенноеЗначение("РС_Ячейка", "Приемка");
	Для Каждого ПараметрыОснования Из ТаблицаКОформлению Цикл
		
		Основание = Новый Структура;
		Основание.Вставить("Распоряжение",               ПараметрыОснования.ДокументПоступления);
		Основание.Вставить("Отправитель",                ПараметрыОснования.Отправитель);
		Основание.Вставить("Склад",                      ПараметрыОснования.Склад);
		Основание.Вставить("ЗонаПриемки",                ЗонаПриемки);
		Основание.Вставить("ДатаВходящегоДокумента",     ПараметрыОснования.ДатаВходящегоДокумента);
		Основание.Вставить("НомерВходящегоДокумента",    ПараметрыОснования.НомерВходящегоДокумента);
		Основание.Вставить("ДатаПоступления",            ДатаПоступления);
		Основание.Вставить("ХозяйственнаяОперация",      ПараметрыОснования.ХозяйственнаяОперация);
		
		ОткрытьФорму("Документ.ПриходныйОрдерНаТовары.Форма.ФормаДокумента", Новый Структура("Основание", Основание),, Новый УникальныйИдентификатор)
	КонецЦикла
	//++ РС Консалт: Минаков А.С. Задача 20226
	
КонецПроцедуры

Процедура СозданиеПриобретениеУслугПрочихАктивов(ДокументОснование, СтандартнаяОбработка) Экспорт 
	
	Если ДокументОснование = Неопределено Тогда	
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("ОбщаяФорма.РСК_ФормаПодбораСтрок",Новый Структура("Основание",ДокументОснование)); 
	
КонецПроцедуры
#КонецОбласти

// Возвращает Истина если это копия
// 
// Возвращаемое значение:
//   - Булево
//
Функция ЭтоКопия() Экспорт
    ПараметрыКлиента = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиента();
 
    Если ПараметрыКлиента.Свойство("РаботаСВнешнимиРесурсамиЗаблокирована")
        И ПараметрыКлиента.Свойство("РазделениеВключено")
        И Не ПараметрыКлиента.РазделениеВключено Тогда
         
        Возврат Истина;
         
    КонецЕсли;
     
    Возврат Ложь;
КонецФункции // ЭтоКопия()

