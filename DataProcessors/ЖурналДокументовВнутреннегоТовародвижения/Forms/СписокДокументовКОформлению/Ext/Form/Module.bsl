
&НаСервере
&После("ПриСозданииНаСервере")
Процедура РСК_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//++РС Консалт: Минаков А.С. Задача 21074	
	КоллекцияПечатныхФорм = РегистрыСведений.НастройкиПечатиОбъектов.КомплектПечатныхФорм(
		"Документ.ПеремещениеТоваров",
		Неопределено,
		0);
	
	Если КоллекцияПечатныхФорм <> Неопределено Тогда
	
		Для Каждого ТекСтрока Из КоллекцияПечатныхФорм Цикл
			
			НоваяСтрока = КомплектПечатныхФорм.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока)
			
		КонецЦикла
		
	КонецЕсли	
	//++РС Консалт: Минаков А.С. Задача 21074
	
КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("СформироватьТекстыЗапросов")
Процедура РСК_СформироватьТекстыЗапросов()
	
	ПараметрыОтбора = НакладныеСервер.ПараметрыОтбораРаспоряжений(Организация,, Склад, ОтборХозяйственныеОперации, Менеджер);
	
	Пакет = Новый Массив;
	Выборка = Новый Массив;
	Состояния = НакладныеСервер.СостоянияПоХозоперациям(ОтборХозяйственныеОперации.ВыгрузитьЗначения());
	Для каждого КЗ Из Состояния Цикл
		Пакет.Добавить(НакладныеСервер.ТекстЗапросаСостояний(КЗ.Ключ, ПараметрыОтбора, КЗ.Значение));
		
		Если КЗ.Ключ = "СостоянияРасходныхОрдеров" Тогда
			Выборка.Добавить(
			"ВЫБРАТЬ
			|	СостоянияРасходныхОрдеров.Распоряжение КАК Распоряжение,
			|	СостоянияРасходныхОрдеров.Склад КАК Склад,
			|	СостоянияРасходныхОрдеров.Склад КАК Отправитель,
			|	ВЫБОР
			|		КОГДА ТИПЗНАЧЕНИЯ(СостоянияРасходныхОрдеров.Распоряжение) = ТИП(Документ.ЗаказНаВнутреннееПотребление)
			//++ НЕ УТКА
			|			ИЛИ ТИПЗНАЧЕНИЯ(СостоянияРасходныхОрдеров.Распоряжение) = ТИП(Документ.ЗаказНаРемонт)
			//-- НЕ УТКА
			|			ТОГДА НЕОПРЕДЕЛЕНО
			|		ИНАЧЕ СостоянияРасходныхОрдеров.Получатель
			|	КОНЕЦ КАК Получатель,
			|	ВЫБОР
			//++ НЕ УТКА

			//++ Устарело_Производство21
			|		КОГДА ТИПЗНАЧЕНИЯ(СостоянияРасходныхОрдеров.Распоряжение) = ТИП(Документ.ЗаказНаПроизводство)
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство)
			//-- Устарело_Производство21
			|		КОГДА ТИПЗНАЧЕНИЯ(СостоянияРасходныхОрдеров.Распоряжение) = ТИП(Документ.ЭтапПроизводства2_2)
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство)
			|		КОГДА ТИПЗНАЧЕНИЯ(СостоянияРасходныхОрдеров.Распоряжение) = ТИП(Документ.ЗаказНаРемонт)
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
			//-- НЕ УТКА
			|		КОГДА ИСТИНА
			|			ТОГДА NULL
			|	КОНЕЦ КАК ХозОперация,
			|	ВЫБОР
			|		КОГДА ТИПЗНАЧЕНИЯ(СостоянияРасходныхОрдеров.Распоряжение) В (&ТипыЗаказов)
			|			ТОГДА 0
			|		ИНАЧЕ 4
			|	КОНЕЦ КАК СостояниеНакладной,
			|	СостоянияРасходныхОрдеров.Состояние КАК СостояниеРасходногоОрдера,
			|	ВЫБОР
			|		КОГДА СпрСкладыПолучатель.Ссылка ЕСТЬ NULL
			|				ИЛИ ВЫБОР
			|					КОГДА ТИПЗНАЧЕНИЯ(СостоянияРасходныхОрдеров.Распоряжение) = ТИП(Документ.ЗаказНаПеремещение)
			|						ТОГДА ВЫРАЗИТЬ(СостоянияРасходныхОрдеров.Распоряжение КАК Документ.ЗаказНаПеремещение).ВариантПриемкиТоваров
			|					КОГДА ТИПЗНАЧЕНИЯ(СостоянияРасходныхОрдеров.Распоряжение) = ТИП(Документ.ЗаказНаСборку)
			|						ТОГДА ВЫРАЗИТЬ(СостоянияРасходныхОрдеров.Распоряжение КАК Документ.ЗаказНаСборку).ВариантПриемкиТоваров
			//++ НЕ УТКА
			|					КОГДА ТИПЗНАЧЕНИЯ(СостоянияРасходныхОрдеров.Распоряжение) = ТИП(Документ.ЭтапПроизводства2_2)
			|						ТОГДА ВЫРАЗИТЬ(СостоянияРасходныхОрдеров.Распоряжение КАК Документ.ЭтапПроизводства2_2).ВариантПриемкиТоваров
			//-- НЕ УТКА
			|				КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным)
			|			ТОГДА 4
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СостояниеПриходногоОрдера,
			|	ИСТИНА КАК НакладнаяНаОтгрузку,
			|	ЛОЖЬ КАК НакладнаяНаПриемку
			|ИЗ
			|	ВТСостоянияРасходныхОрдеров КАК СостоянияРасходныхОрдеров
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСкладыПолучатель
			|		ПО (СпрСкладыПолучатель.Ссылка = СостоянияРасходныхОрдеров.Получатель)
			|			И (СпрСкладыПолучатель.ИспользоватьОрдернуюСхемуПриПоступлении)
			|			И (СпрСкладыПолучатель.ДатаНачалаОрдернойСхемыПриПоступлении <= &НачалоТекущегоДня)");
		ИначеЕсли КЗ.Ключ = "СостоянияПриходныхОрдеров" Тогда
			Выборка.Добавить(
			"ВЫБРАТЬ
			|	СостоянияПриходныхОрдеров.Распоряжение КАК Распоряжение,
			|	СостоянияПриходныхОрдеров.Склад КАК Склад,
			|	ВЫБОР
			|		КОГДА СостоянияПриходныхОрдеров.Распоряжение ССЫЛКА Документ.ПрочееОприходованиеТоваров
			|			ТОГДА НЕОПРЕДЕЛЕНО
			|		ИНАЧЕ СостоянияПриходныхОрдеров.Отправитель
			|	КОНЕЦ КАК Отправитель,
			|	СостоянияПриходныхОрдеров.Склад КАК Получатель,
			|	ВЫБОР
			//++ НЕ УТКА
			|		КОГДА ТИПЗНАЧЕНИЯ(СостоянияПриходныхОрдеров.Распоряжение) = ТИП(Документ.ЭтапПроизводства2_2)
			|			ТОГДА СостоянияПриходныхОрдеров.ХозОперация
			//-- НЕ УТКА
			|		КОГДА ИСТИНА
			|			ТОГДА NULL
			|	КОНЕЦ КАК ХозОперация,
			|	ВЫБОР
			|		КОГДА ТИПЗНАЧЕНИЯ(СостоянияПриходныхОрдеров.Распоряжение) В (&ТипыЗаказов)
			|			ТОГДА 0
			|		ИНАЧЕ 4
			|	КОНЕЦ КАК СостояниеНакладной,
			|	ВЫБОР
			|		КОГДА СпрСкладыОтправитель.Ссылка ЕСТЬ NULL
			|				ИЛИ ВЫБОР
			|					КОГДА СостоянияПриходныхОрдеров.Распоряжение ССЫЛКА Документ.СборкаТоваров
			|						ТОГДА ВЫБОР
			|								КОГДА ВЫРАЗИТЬ(СостоянияПриходныхОрдеров.Распоряжение КАК Документ.СборкаТоваров).ЗаказНаСборку = ЗНАЧЕНИЕ(Документ.ЗаказНаСборку.ПустаяСсылка)
			|									ТОГДА НЕОПРЕДЕЛЕНО
			|								ИНАЧЕ ВЫРАЗИТЬ(СостоянияПриходныхОрдеров.Распоряжение КАК Документ.СборкаТоваров).ВариантПриемкиТоваров
			|							КОНЕЦ
			//++ НЕ УТ
			|					КОГДА СостоянияПриходныхОрдеров.Распоряжение ССЫЛКА Документ.ДвижениеПродукцииИМатериалов
			|						ТОГДА ВЫРАЗИТЬ(СостоянияПриходныхОрдеров.Распоряжение КАК Документ.ДвижениеПродукцииИМатериалов).ВариантПриемкиТоваров
			//-- НЕ УТ
			|				КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным)
			|			ТОГДА 4
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СостояниеРасходногоОрдера,
			|	СостоянияПриходныхОрдеров.Состояние КАК СостояниеПриходногоОрдера,
			|	ЛОЖЬ КАК НакладнаяНаОтгрузку,
			|	ИСТИНА КАК НакладнаяНаПриемку
			|ИЗ
			|	ВтСостоянияПриходныхОрдеров КАК СостоянияПриходныхОрдеров
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСкладыОтправитель
			|		ПО (СпрСкладыОтправитель.Ссылка = СостоянияПриходныхОрдеров.Отправитель)
			|			И (СпрСкладыОтправитель.ИспользоватьОрдернуюСхемуПриОтгрузке)
			|			И (СпрСкладыОтправитель.ДатаНачалаОрдернойСхемыПриОтгрузке <= &НачалоТекущегоДня)
			|ГДЕ
			|	НЕ СостоянияПриходныхОрдеров.Распоряжение ССЫЛКА Документ.ЗаказНаПеремещение
			|	И НЕ СостоянияПриходныхОрдеров.Распоряжение ССЫЛКА Документ.ПеремещениеТоваров
			//++ НЕ УТ
			|	И НЕ (СостоянияПриходныхОрдеров.Распоряжение ССЫЛКА Документ.ЗаказМатериаловВПроизводство
			|			И ВЫРАЗИТЬ(СостоянияПриходныхОрдеров.Распоряжение КАК Документ.ЗаказМатериаловВПроизводство).УправлениеПроизводством2_2)
			|	И НЕ (СостоянияПриходныхОрдеров.Распоряжение ССЫЛКА Документ.ДвижениеПродукцииИМатериалов
			|			И СостоянияПриходныхОрдеров.Распоряжение.ХозяйственнаяОперация В(
			|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую),
			|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой),
			|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой),
			|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеПолуфабрикатов),
			|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеПолуфабрикатовМеждуФилиалами)))
			//-- НЕ УТ
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	СостоянияПриходныхОрдеров.Распоряжение,
			|	СостоянияПриходныхОрдеров.Отправитель,
			|	СостоянияПриходныхОрдеров.Отправитель,
			|	СостоянияПриходныхОрдеров.Склад,
			|	NULL,
			|	ВЫБОР
			|		КОГДА ТИПЗНАЧЕНИЯ(СостоянияПриходныхОрдеров.Распоряжение) В (&ТипыЗаказов)
			|			ТОГДА 0
			|		ИНАЧЕ 4
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА СпрСкладыОтправитель.Ссылка ЕСТЬ NULL
			|				ИЛИ ВЫБОР
			|					КОГДА СостоянияПриходныхОрдеров.Распоряжение ССЫЛКА Документ.ПеремещениеТоваров
			|						ТОГДА ВЫБОР
			|								КОГДА НЕ ВЫРАЗИТЬ(СостоянияПриходныхОрдеров.Распоряжение КАК Документ.ПеремещениеТоваров).ПеремещениеПоЗаказам
			|									ТОГДА НЕОПРЕДЕЛЕНО
			|								ИНАЧЕ ВЫРАЗИТЬ(СостоянияПриходныхОрдеров.Распоряжение КАК Документ.ПеремещениеТоваров).ВариантПриемкиТоваров
			|							КОНЕЦ
			//++ НЕ УТ
			|					КОГДА СостоянияПриходныхОрдеров.Распоряжение ССЫЛКА Документ.ДвижениеПродукцииИМатериалов
			|						ТОГДА ВЫРАЗИТЬ(СостоянияПриходныхОрдеров.Распоряжение КАК Документ.ДвижениеПродукцииИМатериалов).ВариантПриемкиТоваров
			//-- НЕ УТ
			|				КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным)
			|			ТОГДА 4
			|		ИНАЧЕ 0
			|	КОНЕЦ,
			|	СостоянияПриходныхОрдеров.Состояние,
			|	ИСТИНА,
			|	ЛОЖЬ
			|ИЗ
			|	ВтСостоянияПриходныхОрдеров КАК СостоянияПриходныхОрдеров
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСкладыОтправитель
			|		ПО (СпрСкладыОтправитель.Ссылка = СостоянияПриходныхОрдеров.Отправитель)
			|			И (СпрСкладыОтправитель.ИспользоватьОрдернуюСхемуПриОтгрузке)
			|			И (СпрСкладыОтправитель.ДатаНачалаОрдернойСхемыПриОтгрузке <= &НачалоТекущегоДня)
			|ГДЕ
			|	СостоянияПриходныхОрдеров.Распоряжение ССЫЛКА Документ.ЗаказНаПеремещение
			|		ИЛИ СостоянияПриходныхОрдеров.Распоряжение ССЫЛКА Документ.ПеремещениеТоваров
			//++ НЕ УТ
			|	ИЛИ (СостоянияПриходныхОрдеров.Распоряжение ССЫЛКА Документ.ЗаказМатериаловВПроизводство
			|			И ВЫРАЗИТЬ(СостоянияПриходныхОрдеров.Распоряжение КАК Документ.ЗаказМатериаловВПроизводство).УправлениеПроизводством2_2)
			|	ИЛИ (СостоянияПриходныхОрдеров.Распоряжение ССЫЛКА Документ.ДвижениеПродукцииИМатериалов
			|			И СостоянияПриходныхОрдеров.Распоряжение.ХозяйственнаяОперация В(
			|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую),
			|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой),
			|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой),
			|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеПолуфабрикатов),
			|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеПолуфабрикатовМеждуФилиалами)))
			//-- НЕ УТ
			|");
		ИначеЕсли КЗ.Ключ = "СостоянияПеремещений" Тогда
			Выборка.Добавить(
			"ВЫБРАТЬ
			|	СостоянияПеремещений.Распоряжение КАК Распоряжение,
			|	ДокЗаказНаПеремещение.СкладОтправитель КАК Склад,
			|	ДокЗаказНаПеремещение.СкладОтправитель КАК Отправитель,
			|	ДокЗаказНаПеремещение.СкладПолучатель КАК Получатель,
			|	NULL КАК ХозОперация,
			|	СостоянияПеремещений.Состояние КАК СостояниеНакладной,
			|	ВЫБОР
			|		КОГДА СпрСкладыОтправитель.Ссылка ЕСТЬ NULL
			|			ТОГДА 4
			|		КОГДА СостоянияПеремещений.Состояние = 1
			|			ТОГДА 1
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СостояниеРасходногоОрдера,
			|	ВЫБОР
			|		КОГДА СпрСкладыПолучатель.Ссылка ЕСТЬ NULL
			|				ИЛИ ДокЗаказНаПеремещение.ВариантПриемкиТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным)
			|			ТОГДА 4
			|		КОГДА СостоянияПеремещений.Состояние = 1
			|			ТОГДА 1
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СостояниеПриходногоОрдера,
			|	ИСТИНА КАК НакладнаяНаОтгрузку,
			|	ЛОЖЬ КАК НакладнаяНаПриемку
			|ИЗ
			|	ВтСостоянияПеремещений КАК СостоянияПеремещений
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПеремещение КАК ДокЗаказНаПеремещение
			|		ПО СостоянияПеремещений.Распоряжение = ДокЗаказНаПеремещение.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСкладыОтправитель
			|		ПО (СпрСкладыОтправитель.Ссылка = ДокЗаказНаПеремещение.СкладОтправитель)
			|			И (СпрСкладыОтправитель.ИспользоватьОрдернуюСхемуПриОтгрузке)
			|			И (СпрСкладыОтправитель.ДатаНачалаОрдернойСхемыПриОтгрузке <= &НачалоТекущегоДня)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСкладыПолучатель
			|		ПО (СпрСкладыПолучатель.Ссылка = ДокЗаказНаПеремещение.СкладПолучатель)
			|			И (СпрСкладыПолучатель.ИспользоватьОрдернуюСхемуПриПоступлении)
			|			И (СпрСкладыПолучатель.ДатаНачалаОрдернойСхемыПриПоступлении <= &НачалоТекущегоДня)");
		ИначеЕсли КЗ.Ключ = "СостоянияСборок" Тогда
			Выборка.Добавить(
			"ВЫБРАТЬ
			|	СостоянияСборок.Распоряжение КАК Распоряжение,
			|	ДокЗаказНаСборку.Склад КАК Склад,
			|	ДокЗаказНаСборку.Склад КАК Отправитель,
			|	ДокЗаказНаСборку.Склад КАК Получатель,
			|	NULL КАК ХозОперация,
			|	СостоянияСборок.Состояние КАК СостояниеНакладной,
			|	ВЫБОР
			|		КОГДА СпрСкладыОтправитель.Ссылка ЕСТЬ NULL
			|			ТОГДА 4
			|		КОГДА СостоянияСборок.Состояние = 1
			|			ТОГДА 1
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СостояниеРасходногоОрдера,
			|	ВЫБОР
			|		КОГДА СпрСкладыПолучатель.Ссылка ЕСТЬ NULL
			|				ИЛИ ДокЗаказНаСборку.ВариантПриемкиТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным)
			|			ТОГДА 4
			|		КОГДА СостоянияСборок.Состояние = 1
			|			ТОГДА 1
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СостояниеПриходногоОрдера,
			|	ИСТИНА КАК НакладнаяНаОтгрузку,
			|	ИСТИНА КАК НакладнаяНаПриемку
			|ИЗ
			|	ВтСостоянияСборок КАК СостоянияСборок
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку КАК ДокЗаказНаСборку
			|		ПО СостоянияСборок.Распоряжение = ДокЗаказНаСборку.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСкладыОтправитель
			|		ПО (СпрСкладыОтправитель.Ссылка = ДокЗаказНаСборку.Склад)
			|			И (СпрСкладыОтправитель.ИспользоватьОрдернуюСхемуПриОтгрузке)
			|			И (СпрСкладыОтправитель.ДатаНачалаОрдернойСхемыПриОтгрузке <= &НачалоТекущегоДня)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСкладыПолучатель
			|		ПО (СпрСкладыПолучатель.Ссылка = ДокЗаказНаСборку.Склад)
			|			И (СпрСкладыПолучатель.ИспользоватьОрдернуюСхемуПриПоступлении)
			|			И (СпрСкладыПолучатель.ДатаНачалаОрдернойСхемыПриПоступлении <= &НачалоТекущегоДня)");
		ИначеЕсли КЗ.Ключ = "СостоянияВнутреннихПотреблений" Тогда
			Выборка.Добавить(
			"ВЫБРАТЬ
			|	СостоянияВнутреннихПотреблений.Распоряжение КАК Распоряжение,
			|	СостоянияВнутреннихПотреблений.Склад КАК Склад,
			|	СостоянияВнутреннихПотреблений.Склад КАК Отправитель,
			|	НЕОПРЕДЕЛЕНО КАК Получатель,
			|	ВЫБОР
			//++ НЕ УТКА
			|		КОГДА СостоянияВнутреннихПотреблений.Распоряжение ССЫЛКА Документ.ЗаказНаРемонт
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
			//-- НЕ УТКА
			|		КОГДА ИСТИНА
			|			ТОГДА NULL
			|	КОНЕЦ КАК ХозОперация,
			|	СостоянияВнутреннихПотреблений.Состояние КАК СостояниеНакладной,
			|	ВЫБОР
			|		КОГДА СпрСкладыОтправитель.Ссылка ЕСТЬ NULL
			|			ТОГДА 4
			|		КОГДА СостоянияВнутреннихПотреблений.Состояние = 1
			|			ТОГДА 1
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СостояниеРасходногоОрдера,
			|	4 КАК СостояниеПриходногоОрдера,
			|	ИСТИНА КАК НакладнаяНаОтгрузку,
			|	ЛОЖЬ КАК НакладнаяНаПриемку
			|ИЗ
			|	ВтСостоянияВнутреннихПотреблений КАК СостоянияВнутреннихПотреблений
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСкладыОтправитель
			|		ПО (СпрСкладыОтправитель.Ссылка = СостоянияВнутреннихПотреблений.Склад)
			|			И (СпрСкладыОтправитель.ИспользоватьОрдернуюСхемуПриОтгрузке)
			|			И (СпрСкладыОтправитель.ДатаНачалаОрдернойСхемыПриОтгрузке <= &НачалоТекущегоДня)");
		//++ НЕ УТ
		ИначеЕсли КЗ.Ключ = "СостоянияПередачВПроизводство" Тогда
			Выборка.Добавить(
			"ВЫБРАТЬ
			|	СостоянияПередачВПроизводство.Распоряжение КАК Распоряжение,
			|	СостоянияПередачВПроизводство.Склад КАК Склад,
			|	СостоянияПередачВПроизводство.Склад КАК Отправитель,
			|	СостоянияПередачВПроизводство.Получатель КАК Получатель,
			|	ВЫБОР
			//++ НЕ УТКА

			//++ Устарело_Производство21
			|		КОГДА ТИПЗНАЧЕНИЯ(СостоянияПередачВПроизводство.Распоряжение) = ТИП(Документ.ЗаказНаПроизводство)
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство)
			//-- Устарело_Производство21
			|		КОГДА ТИПЗНАЧЕНИЯ(СостоянияПередачВПроизводство.Распоряжение) = ТИП(Документ.ЭтапПроизводства2_2)
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство)
			//-- НЕ УТКА
			|		КОГДА ИСТИНА
			|			ТОГДА NULL
			|	КОНЕЦ КАК ХозОперация,
			|	СостоянияПередачВПроизводство.Состояние КАК СостояниеНакладной,
			|	ВЫБОР
			|		КОГДА СпрСкладыОтправитель.Ссылка ЕСТЬ NULL
			|			ТОГДА 4
			|		КОГДА СостоянияПередачВПроизводство.Состояние = 1
			|			ТОГДА 1
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СостояниеРасходногоОрдера,
			|	4 КАК СостояниеПриходногоОрдера,
			|	ИСТИНА КАК НакладнаяНаОтгрузку,
			|	ЛОЖЬ КАК НакладнаяНаПриемку
			|ИЗ
			|	ВтСостоянияПередачВПроизводство КАК СостоянияПередачВПроизводство
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСкладыОтправитель
			|		ПО (СпрСкладыОтправитель.Ссылка = СостоянияПередачВПроизводство.Склад)
			|			И (СпрСкладыОтправитель.ИспользоватьОрдернуюСхемуПриОтгрузке)
			|			И (СпрСкладыОтправитель.ДатаНачалаОрдернойСхемыПриОтгрузке <= &НачалоТекущегоДня)");
		//-- НЕ УТ

		//++ НЕ УТКА
		ИначеЕсли КЗ.Ключ = "СостоянияПередачИзПроизводства" Тогда
			Выборка.Добавить(
			"ВЫБРАТЬ
			|	СостоянияПередачИзПроизводства.Распоряжение КАК Распоряжение,
			|	СостоянияПередачИзПроизводства.Склад КАК Склад,
			|	СостоянияПередачИзПроизводства.Отправитель КАК Отправитель,
			|	СостоянияПередачИзПроизводства.Склад КАК Получатель,
			|	СостоянияПередачИзПроизводства.ХозОперация КАК ХозОперация,
			|	СостоянияПередачИзПроизводства.Состояние КАК СостояниеНакладной,
			|	4 КАК СостояниеРасходногоОрдера,
			|	ВЫБОР
			|		КОГДА СпрСкладыПолучатель.Ссылка ЕСТЬ NULL
			|				ИЛИ ДокЭтапПроизводства.ВариантПриемкиТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным)
			|			ТОГДА 4
			|		КОГДА СостоянияПередачИзПроизводства.Состояние = 1
			|			ТОГДА 1
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СостояниеПриходногоОрдера,
			|	ЛОЖЬ КАК НакладнаяНаОтгрузку,
			|	ИСТИНА КАК НакладнаяНаПриемку
			|ИЗ
			|	ВтСостоянияПередачИзПроизводства КАК СостоянияПередачИзПроизводства
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ДокЭтапПроизводства
			|		ПО СостоянияПередачИзПроизводства.Распоряжение = ДокЭтапПроизводства.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСкладыПолучатель
			|		ПО (СпрСкладыПолучатель.Ссылка = СостоянияПередачИзПроизводства.Склад)
			|			И (СпрСкладыПолучатель.ИспользоватьОрдернуюСхемуПриПоступлении)
			|			И (СпрСкладыПолучатель.ДатаНачалаОрдернойСхемыПриПоступлении <= &НачалоТекущегоДня)");
		//-- НЕ УТКА
		КонецЕсли;
		
	КонецЦикла;
	
	ТекстЗапросаРасчетаСостояний = СтрСоединить(Пакет, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
	ТекстЗапросаСпискаРаспоряжений =
		СтрЗаменить(
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Распоряжение КАК Ссылка,
		|	ВложенныйЗапрос.Склад КАК Склад,
		|	ВложенныйЗапрос.Отправитель КАК Отправитель,
		|	ВложенныйЗапрос.Получатель КАК Получатель,
		|	ВложенныйЗапрос.ХозОперация КАК ХозОперация,
		|	МАКСИМУМ(ВложенныйЗапрос.СостояниеНакладной) КАК СостояниеНакладной,
		|	МАКСИМУМ(ВложенныйЗапрос.СостояниеРасходногоОрдера) КАК СостояниеОрдераНаОтгрузку,
		|	МАКСИМУМ(ВложенныйЗапрос.СостояниеПриходногоОрдера) КАК СостояниеОрдераНаПриемку,
		|	МАКСИМУМ(ВложенныйЗапрос.НакладнаяНаОтгрузку) КАК НакладнаяНаОтгрузку,
		|	МАКСИМУМ(ВложенныйЗапрос.НакладнаяНаПриемку) КАК НакладнаяНаПриемку
		|ПОМЕСТИТЬ ВтОстаткиСостояния
		|ИЗ
		|	ТекстЗапросаВложенный КАК ВложенныйЗапрос
		|ГДЕ
		|	НЕ &ОтбиратьПоРаспоряжениям Или ВложенныйЗапрос.Распоряжение В (&Распоряжения)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Распоряжение,
		|	ВложенныйЗапрос.Склад,
		|	ВложенныйЗапрос.Отправитель,
		|	ВложенныйЗапрос.Получатель,
		|	ВложенныйЗапрос.ХозОперация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
	#Вставка
	//++РС Консалт: Минаков А.С. Задача 21074
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	МАКСИМУМ(ЗаданиеНаПеревозку.Ссылка.Дата) КАК Дата,
	|	ЗаданиеНаПеревозку.Распоряжение КАК Распоряжение,
	|	ЗаданиеНаПеревозку.Склад КАК Склад
	|ПОМЕСТИТЬ ВтМаксимальныеЗадания
	|ИЗ
	|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозку
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОстаткиСостояния КАК ВтОстаткиСостояния
	|		ПО (&ЗаданиеНаПеревозку = ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка)
	|				ИЛИ ЗаданиеНаПеревозку.Ссылка = &ЗаданиеНаПеревозку)
	|			И (ЗаданиеНаПеревозку.Ссылка.Проведен)
	|			И ЗаданиеНаПеревозку.Распоряжение = ВтОстаткиСостояния.Ссылка
	|			И ЗаданиеНаПеревозку.Склад = ВтОстаткиСостояния.Склад
	|			И ЗаданиеНаПеревозку.Ссылка.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданийНаПеревозку.Формируется), ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданийНаПеревозку.КПогрузке))
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаданиеНаПеревозку.Распоряжение,
	|	ЗаданиеНаПеревозку.Склад
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Распоряжение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаданиеНаПеревозку.Ссылка КАК ЗаданиеНаПеревозку,
	|	ЗаданиеНаПеревозку.Распоряжение КАК Распоряжение,
	|	ЗаданиеНаПеревозку.РСК_Накладная КАК Накладная,
	|	ЗаданиеНаПеревозку.Склад КАК Склад,
	|	МАКСИМУМ(ЕСТЬNULL(РасходныйОрдерНаТовары.Ссылка, ЗНАЧЕНИЕ(Документ.РасходныйОрдерНаТовары.ПустаяСсылка))) КАК Ордер
	|ПОМЕСТИТЬ ВтЗадания
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		МАКСИМУМ(ЗаданиеНаПеревозку.Ссылка) КАК Ссылка,
	|		ЗаданиеНаПеревозку.Распоряжение КАК Распоряжение,
	|		ЗаданиеНаПеревозку.Склад КАК Склад
	|	ИЗ
	|		Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозку
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтМаксимальныеЗадания КАК ВтМаксимальныеЗадания
	|			ПО (&ЗаданиеНаПеревозку = ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка)
	|					ИЛИ ЗаданиеНаПеревозку.Ссылка = &ЗаданиеНаПеревозку)
	|				И (ЗаданиеНаПеревозку.Ссылка.Проведен)
	|				И ЗаданиеНаПеревозку.Ссылка.Дата = ВтМаксимальныеЗадания.Дата
	|				И ЗаданиеНаПеревозку.Распоряжение = ВтМаксимальныеЗадания.Распоряжение
	|				И ЗаданиеНаПеревозку.Склад = ВтМаксимальныеЗадания.Склад
	|				И ЗаданиеНаПеревозку.Ссылка.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданийНаПеревозку.Формируется), ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданийНаПеревозку.КПогрузке))
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗаданиеНаПеревозку.Распоряжение,
	|		ЗаданиеНаПеревозку.Склад) КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозку
	|		ПО ВложенныйЗапрос.Ссылка = ЗаданиеНаПеревозку.Ссылка
	|			И ВложенныйЗапрос.Склад = ЗаданиеНаПеревозку.Склад
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК РасходныйОрдерНаТовары
	|		ПО (ЗаданиеНаПеревозку.Ссылка = РасходныйОрдерНаТовары.Ссылка.ЗаданиеНаПеревозку)
	|			И (РасходныйОрдерНаТовары.Распоряжение = ЗаданиеНаПеревозку.Распоряжение)
	|			И (РасходныйОрдерНаТовары.Ссылка.Склад = ЗаданиеНаПеревозку.Склад)
	|			И (РасходныйОрдерНаТовары.Ссылка.Проведен)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаданиеНаПеревозку.Ссылка,
	|	ЗаданиеНаПеревозку.Распоряжение,
	|	ЗаданиеНаПеревозку.РСК_Накладная,
	|	ЗаданиеНаПеревозку.Склад
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Распоряжение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ПеремещениеТоваров.Дата) КАК Дата,
	|	ВтОстаткиСостояния.Ссылка КАК ДокументОтгрузки,
	|	ВтОстаткиСостояния.Склад
	|ПОМЕСТИТЬ ВтМаксимальныеНакладные
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОстаткиСостояния КАК ВтОстаткиСостояния
	|		ПО (ПеремещениеТоваров.Проведен)
	|			И (НЕ ПеремещениеТоваров.Ссылка В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ЗаданиеНаПеревозку.РСК_Накладная
	|					ИЗ
	|						Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозку
	|					ГДЕ
	|						ЗаданиеНаПеревозку.Ссылка.Проведен
	|						И ЗаданиеНаПеревозку.Доставлено))
	|			И (ВЫБОР
	|				КОГДА ПеремещениеТоваров.ПеремещениеПоЗаказам
	|					ТОГДА ПеремещениеТоваров.ЗаказНаПеремещение
	|				ИНАЧЕ ПеремещениеТоваров.Ссылка
	|			КОНЕЦ = ВтОстаткиСостояния.Ссылка)
	|			И ПеремещениеТоваров.СкладОтправитель = ВтОстаткиСостояния.Склад
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтОстаткиСостояния.Ссылка,
	|	ВтОстаткиСостояния.Склад
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ПеремещениеТоваров.Ссылка) КАК Накладная,
	|	ВтМаксимальныеНакладные.ДокументОтгрузки КАК ДокументОтгрузки,
	|	ВтМаксимальныеНакладные.Склад КАК Склад
	|ПОМЕСТИТЬ ВтНакладные
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтМаксимальныеНакладные КАК ВтМаксимальныеНакладные
	|		ПО (ПеремещениеТоваров.Проведен)
	|			И ПеремещениеТоваров.Дата = ВтМаксимальныеНакладные.Дата
	|			И ПеремещениеТоваров.СкладОтправитель = ВтМаксимальныеНакладные.Склад
	|			И (НЕ ПеремещениеТоваров.Ссылка В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ЗаданиеНаПеревозку.РСК_Накладная
	|					ИЗ
	|						Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозку
	|					ГДЕ
	|						ЗаданиеНаПеревозку.Ссылка.Проведен
	|						И ЗаданиеНаПеревозку.Доставлено))
	|			И (ВЫБОР
	|				КОГДА ПеремещениеТоваров.ПеремещениеПоЗаказам
	|					ТОГДА ПеремещениеТоваров.ЗаказНаПеремещение
	|				ИНАЧЕ ПеремещениеТоваров.Ссылка
	|			КОНЕЦ = ВтМаксимальныеНакладные.ДокументОтгрузки)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтМаксимальныеНакладные.ДокументОтгрузки,
	|	ВтМаксимальныеНакладные.Склад
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	МАКСИМУМ(РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка.Дата) КАК Дата,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Распоряжение КАК Распоряжение,
	|	ВтОстаткиСостояния.Склад КАК Склад
	|ПОМЕСТИТЬ ВтМаксимальныеОрдера
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК РасходныйОрдерНаТоварыТоварыПоРаспоряжениям
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОстаткиСостояния КАК ВтОстаткиСостояния
	|		ПО РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Распоряжение = ВтОстаткиСостояния.Ссылка
	|			И (РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка.Проведен)
	|			И (РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка.ЗаданиеНаПеревозку = ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка))
	|			И (РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка.Склад = ВтОстаткиСостояния.Склад)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Распоряжение,
	|	ВтОстаткиСостояния.Склад
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Распоряжение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасходныйОрдерНаТовары.Ссылка КАК Ордер,
	|	РасходныйОрдерНаТовары.Статус КАК СтатусОрдера,
	|	ВложенныйЗапрос.Распоряжение КАК Распоряжение,
	|	ВложенныйЗапрос.Склад
	|ПОМЕСТИТЬ ВтОрдера
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		МАКСИМУМ(РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка) КАК Ссылка,
	|		РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Распоряжение КАК Распоряжение,
	|		ВтМаксимальныеОрдера.Склад КАК Склад
	|	ИЗ
	|		Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК РасходныйОрдерНаТоварыТоварыПоРаспоряжениям
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтМаксимальныеОрдера КАК ВтМаксимальныеОрдера
	|			ПО РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Распоряжение = ВтМаксимальныеОрдера.Распоряжение
	|				И РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка.Дата = ВтМаксимальныеОрдера.Дата
	|				И (РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка.Проведен)
	|				И (РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка.ЗаданиеНаПеревозку = ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка))
	|				И (РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка.Склад = ВтМаксимальныеОрдера.Склад)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Распоряжение,
	|		ВтМаксимальныеОрдера.Склад) КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
	|		ПО ВложенныйЗапрос.Ссылка = РасходныйОрдерНаТовары.Ссылка
	|			И ВложенныйЗапрос.Склад = РасходныйОрдерНаТовары.Склад
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВложенныйЗапрос.Распоряжение
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОтбору.Распоряжение КАК Распоряжение,
	|	СУММА(ТоварыКОтбору.КОтбору + ТоварыКОтбору.Отобрано) КАК ОтобраноОрдер
	|ПОМЕСТИТЬ ВтОтборыОрдера
	|ИЗ
	|	РегистрНакопления.ТоварыКОтбору КАК ТоварыКОтбору
	|ГДЕ
	|	ТоварыКОтбору.Регистратор В
	|			(ВЫБРАТЬ
	|				ВтОрдера.Ордер
	|			ИЗ
	|				ВтОрдера КАК ВтОрдера
	|		
	|			ОБЪЕДИНИТЬ
	|		
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ВтЗадания.Ордер
	|			ИЗ
	|				ВтЗадания КАК ВтЗадания)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОтбору.Распоряжение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Распоряжение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОтбору.Распоряжение КАК Распоряжение,
	|	СУММА(ТоварыКОтбору.Отобрано) КАК Отобрано
	|ПОМЕСТИТЬ ВтОтборы
	|ИЗ
	|	РегистрНакопления.ТоварыКОтбору КАК ТоварыКОтбору
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтборРазмещениеТоваров КАК ОтборРазмещениеТоваров
	|		ПО ТоварыКОтбору.Регистратор = ОтборРазмещениеТоваров.Ссылка
	|			И (ТоварыКОтбору.Распоряжение В
	|				(ВЫБРАТЬ
	|					ВтОтборыОрдера.Распоряжение
	|				ИЗ
	|					ВтОтборыОрдера КАК ВтОтборыОрдера))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОтбору.Распоряжение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Распоряжение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	//++РС Консалт: Минаков А.С. Задача 21074
	#КонецВставки
		|ВЫБРАТЬ
		|	РеестрДокументов.НомерДокументаИБ КАК Номер,
		|	ЕСТЬNULL(РеестрДокументов.ДатаДокументаИБ, ДАТАВРЕМЯ(1,1,1)) КАК Дата,
		|	ТИПЗНАЧЕНИЯ(РеестрДокументов.Ссылка) КАК ТипРаспоряжения,
		|	ОстаткиСостояния.СостояниеНакладной КАК СостояниеНакладной,
		|	ОстаткиСостояния.СостояниеОрдераНаОтгрузку КАК СостояниеОрдераНаОтгрузку,
		|	ОстаткиСостояния.СостояниеОрдераНаПриемку КАК СостояниеОрдераНаПриемку,
		|	ОстаткиСостояния.НакладнаяНаОтгрузку КАК НакладнаяНаОтгрузку,
		|	ОстаткиСостояния.НакладнаяНаПриемку КАК НакладнаяНаПриемку,
		|	РеестрДокументов.Организация КАК Организация,
		|	РеестрДокументов.Подразделение КАК Подразделение,
		|	ОстаткиСостояния.Склад КАК Склад,
		|	ОстаткиСостояния.Отправитель КАК Отправитель,
		|	ОстаткиСостояния.Получатель КАК Получатель,
		|	РеестрДокументов.Ответственный КАК Менеджер,
		|	ЕСТЬNULL(ОстаткиСостояния.ХозОперация, РеестрДокументов.ХозяйственнаяОперация) КАК ХозяйственнаяОперация,
		|	ОстаткиСостояния.Ссылка КАК Ссылка,
		|	РеестрДокументов.Комментарий КАК Комментарий
	#Вставка
	//++РС Консалт: Минаков А.С. Задача 21074
	|	,ВтЗадания.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВтЗадания.Накладная, НЕОПРЕДЕЛЕНО) В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка), ЗНАЧЕНИЕ(Документ.ПеремещениеТоваров.ПустаяСсылка))
	|			ТОГДА ВтНакладные.Накладная
	|		ИНАЧЕ ВтЗадания.Накладная
	|	КОНЕЦ КАК Накладная,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(РасходныйОрдерНаТовары.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ПустаяСсылка)
	|			ТОГДА ВтОрдера.СтатусОрдера
	|		ИНАЧЕ РасходныйОрдерНаТовары.Статус
	|	КОНЕЦ КАК СтатусОрдера,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВтЗадания.Ордер, ЗНАЧЕНИЕ(Документ.РасходныйОрдерНаТовары.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.РасходныйОрдерНаТовары.ПустаяСсылка)
	|			ТОГДА ВтОрдера.Ордер
	|		ИНАЧЕ ВтЗадания.Ордер
	|	КОНЕЦ КАК Ордер,
	|	ЕСТЬNULL(ВтОтборыОрдера.ОтобраноОрдер, 0) = ЕСТЬNULL(ВтОтборы.Отобрано, 0) 
	|	И НЕ ЕСТЬNULL(ВЫБОР
	|		КОГДА ЕСТЬNULL(РасходныйОрдерНаТовары.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ПустаяСсылка)
	|			ТОГДА ВтОрдера.СтатусОрдера
	|		ИНАЧЕ РасходныйОрдерНаТовары.Статус
	|	КОНЕЦ, ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Подготовлено) КАК СтатусСборки
	//++РС Консалт: Минаков А.С. Задача 21074
	#КонецВставки
		|ИЗ
		|	ВтОстаткиСостояния КАК ОстаткиСостояния
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументов
		|		ПО ОстаткиСостояния.Ссылка = РеестрДокументов.Ссылка
		|			И (НЕ РеестрДокументов.ДополнительнаяЗапись)
	#Вставка
	//++РС Консалт: Минаков А.С. Задача 21074
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтЗадания КАК ВтЗадания
	|		ПО ОстаткиСостояния.Ссылка = ВтЗадания.Распоряжение
	|			И ОстаткиСостояния.Склад = ВтЗадания.Склад
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
	|		ПО ВтЗадания.Ордер = РасходныйОрдерНаТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтНакладные КАК ВтНакладные
	|		ПО ОстаткиСостояния.Ссылка = ВтНакладные.ДокументОтгрузки
	|			И ОстаткиСостояния.Склад = ВтНакладные.Склад
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОрдера КАК ВтОрдера
	|		ПО ОстаткиСостояния.Ссылка = ВтОрдера.Распоряжение
	|			И ОстаткиСостояния.Склад = ВтОрдера.Склад
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОтборыОрдера КАК ВтОтборыОрдера
	|		ПО (ВЫБОР
	|				КОГДА ЕСТЬNULL(ВтЗадания.Ордер, ЗНАЧЕНИЕ(Документ.РасходныйОрдерНаТовары.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.РасходныйОрдерНаТовары.ПустаяСсылка)
	|					ТОГДА ВтОрдера.Ордер
	|				ИНАЧЕ ВтЗадания.Ордер
	|			КОНЕЦ = ВтОтборыОрдера.Распоряжение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОтборы КАК ВтОтборы
	|		ПО (ВтОтборыОрдера.Распоряжение = ВтОтборы.Распоряжение)
	//++РС Консалт: Минаков А.С. Задача 21074
	#КонецВставки
		|ГДЕ
		|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ОстаткиСостояния.Ссылка) В(
		|					ТИП(Документ.ЗаказНаПеремещение),
		|					ТИП(Документ.ПеремещениеТоваров)) ТОГДА
		|				НЕ &ОтбиратьПоСкладу ИЛИ ОстаткиСостояния.Склад В (&Склад)
		|				И (&АктыОРасхожденияхДоступны
		|					ИЛИ ОстаткиСостояния.СостояниеНакладной <> 0 И ОстаткиСостояния.СостояниеНакладной <> 4
		|					ИЛИ ОстаткиСостояния.СостояниеОрдераНаОтгрузку <> 0 И ОстаткиСостояния.СостояниеОрдераНаОтгрузку <> 4)
		//++ НЕ УТ
		|			КОГДА ТИПЗНАЧЕНИЯ(ОстаткиСостояния.Ссылка) = ТИП(Документ.ЗаказМатериаловВПроизводство)
		|					И ОстаткиСостояния.Ссылка.УправлениеПроизводством2_2 ТОГДА
		|				НЕ &ОтбиратьПоСкладу ИЛИ ОстаткиСостояния.Склад В (&Склад)
		|			КОГДА ТИПЗНАЧЕНИЯ(ОстаткиСостояния.Ссылка) = ТИП(Документ.ДвижениеПродукцииИМатериалов)
		|					И ОстаткиСостояния.Ссылка.ХозяйственнаяОперация В(
		|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую),
		|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой),
		|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой),
		|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеПолуфабрикатов),
		|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеПолуфабрикатовМеждуФилиалами)) ТОГДА
		|				НЕ &ОтбиратьПоСкладу ИЛИ ОстаткиСостояния.Склад В (&Склад)
		//-- НЕ УТ
		|			ИНАЧЕ		
		|				ИСТИНА
		|			КОНЕЦ
	#Вставка
	//++РС Консалт: Минаков А.С. Задача 21074
	|	И (&ЗаданиеНаПеревозку = ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка) ИЛИ НЕ ВтЗадания.ЗаданиеНаПеревозку ЕСТЬ NULL)
	//++РС Консалт: Минаков А.С. Задача 21074
	#КонецВставки
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата", "ТекстЗапросаВложенный", "(" + СтрСоединить(Выборка, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении()) + ")");
	
КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("ОбновитьСписокРаспоряженияНаОформлениеНаСервере")
Процедура РСК_ОбновитьСписокРаспоряженияНаОформлениеНаСервере()

	Если Элементы.СписокРаспоряженияНаОформление.ТекущаяСтрока <> Неопределено Тогда
		ТекущийДокумент = СписокРаспоряженияНаОформление.НайтиПоИдентификатору(Элементы.СписокРаспоряженияНаОформление.ТекущаяСтрока).Ссылка;
	Иначе
		ТекущийДокумент = Неопределено;
	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапросаРасчетаСостояний);
	ПараметрыОтбора = НакладныеСервер.ПараметрыОтбораРаспоряжений(Организация,, Склад, ОтборХозяйственныеОперации, Менеджер);
	НакладныеСервер.ДобавитьПараметрыОтбораПоРееструДокументов(Запрос, ПараметрыОтбора);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	ТипыЗаказов = Новый Массив;
	ТипыЗаказов.Добавить(Тип("ДокументСсылка.ЗаказНаВнутреннееПотребление"));
	ТипыЗаказов.Добавить(Тип("ДокументСсылка.ЗаказНаПеремещение"));
	ТипыЗаказов.Добавить(Тип("ДокументСсылка.ЗаказНаСборку"));
	//++ НЕ УТ
	ТипыЗаказов.Добавить(Тип("ДокументСсылка.ЗаказМатериаловВПроизводство"));
	//-- НЕ УТ
	//++ НЕ УТКА
	//++ Устарело_Производство21
	ТипыЗаказов.Добавить(Тип("ДокументСсылка.ЗаказНаПроизводство"));
	//-- Устарело_Производство21
	ТипыЗаказов.Добавить(Тип("ДокументСсылка.ЗаказНаРемонт"));
	ТипыЗаказов.Добавить(Тип("ДокументСсылка.ЭтапПроизводства2_2"));
	//-- НЕ УТКА

	Запрос.УстановитьПараметр("НачалоТекущегоДня", НачалоДня(ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("Организация",       СписокОрганизаций.ВыгрузитьЗначения());
	Запрос.УстановитьПараметр("Склад",             Склад);
	Запрос.УстановитьПараметр("Менеджер",          Менеджер);
	Запрос.УстановитьПараметр("ХозОперация",       ОтборХозяйственныеОперации.ВыгрузитьЗначения());
	Запрос.УстановитьПараметр("ТипыЗаказов",       ТипыЗаказов);
	Запрос.УстановитьПараметр("Распоряжения",      Распоряжения.ВыгрузитьЗначения());

	Запрос.Выполнить();

	Запрос.Текст = ТекстЗапросаСпискаРаспоряжений;
	Запрос.УстановитьПараметр("ОтбиратьПоРаспоряжениям", ЗначениеЗаполнено(Распоряжения));
	Запрос.УстановитьПараметр("АктыОРасхожденияхДоступны", ДоступностьАктовОРасхождениях);
	#Вставка
	//++РС Консалт: Минаков А.С. Задача 21074
	Запрос.УстановитьПараметр("ЗаданиеНаПеревозку", ЗаданиеНаПеревозку);
	//++РС Консалт: Минаков А.С. Задача 21074
	#КонецВставки

	Запрос.Текст = ТекстЗапросаСпискаРаспоряжений;

	УстановитьПривилегированныйРежим(Истина);
	СписокРаспоряженияНаОформление.Загрузить(Запрос.Выполнить().Выгрузить());
	УстановитьПривилегированныйРежим(Ложь);

	Если ТекущийДокумент <> Неопределено Тогда
		Найдено = СписокРаспоряженияНаОформление.НайтиСтроки(Новый Структура("Ссылка", ТекущийДокумент));
		Если ЗначениеЗаполнено(Найдено) Тогда
			Элементы.СписокРаспоряженияНаОформление.ТекущаяСтрока = Найдено[0].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РСК_ЗаданиеНаПеревозкуПриИзмененииВместо(Элемент)
	
	//++РС Консалт: Минаков А.С. Задача 21074	
	ЗаданиеНаПеревозкуПриИзмененииНаСервере()
	//++РС Консалт: Минаков А.С. Задача 21074
	
КонецПроцедуры

&НаСервере
Процедура ЗаданиеНаПеревозкуПриИзмененииНаСервере()
	
	//++РС Консалт: Минаков А.С. Задача 21074
	СформироватьТекстыЗапросов();
	ОбновитьСписокРаспоряженияНаОформлениеНаСервере()
	//++РС Консалт: Минаков А.С. Задача 21074
	
КонецПроцедуры

&НаКлиенте
Процедура РСК_ПечатьКомплектаДокументовВместо(Команда)
	
	//++РС Консалт: Минаков А.С. Задача 21074
	МассивОбъектов = Новый Массив;
	
	Для Каждого ВыделеннаяСтрока Из Элементы.СписокРаспоряженияНаОформление.ВыделенныеСтроки Цикл
		ДанныеСтроки = Элементы.СписокРаспоряженияНаОформление.ДанныеСтроки(ВыделеннаяСтрока);
		Если ЗначениеЗаполнено(ДанныеСтроки.Накладная) Тогда
			МассивОбъектов.Добавить(ДанныеСтроки.Накладная)
		КонецЕсли
	КонецЦикла;
	
	Если Не МассивОбъектов.Количество() Тогда
		Возврат
	КонецЕсли;	
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
	"Документ.ПеремещениеТоваров",
	"КомплектДокументов",
	МассивОбъектов,
	ЭтаФорма,
	Новый Структура(
	"ПереопределитьПользовательскиеНастройкиКоличества,АдресКомплектаПечатныхФорм,ФиксированныйКомплект",
	Истина, ПоместитьКомплектПечатныхФормВоВременноеХранилищеСервер(), Истина))			
	//++РС Консалт: Минаков А.С. Задача 21074
	
КонецПроцедуры

&НаСервере
Функция ПоместитьКомплектПечатныхФормВоВременноеХранилищеСервер()
	
	//++РС Консалт: Минаков А.С. Задача 21074
	Возврат ПоместитьВоВременноеХранилище(КомплектПечатныхФорм.Выгрузить())
	//++РС Консалт: Минаков А.С. Задача 21074
	
КонецФункции

&НаСервере
&ИзменениеИКонтроль("НастройкиФормы")
Функция РСК_НастройкиФормы(ИсточникНастроек)

	ИменаСохраняемыхРеквизитов =
	"Организация,
	|Склад,
	|Менеджер,
	|СостояниеНакладной,
	|СостояниеОрдераНаОтгрузку,
	|СостояниеОрдераНаПриемку,
	|ОтборХозяйственныеОперации,
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	|ЗаданиеНаПеревозку, 
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	|ОтборТипыДокументов";

	Настройки = Новый Структура(ИменаСохраняемыхРеквизитов);
	ЗаполнитьЗначенияСвойств(Настройки, ИсточникНастроек);

	Возврат Настройки;

КонецФункции

&НаКлиенте
&ИзменениеИКонтроль("ОформитьПоЗаказам")
Процедура РСК_ОформитьПоЗаказам(Команда)

	Перем СписокОшибок;

	// &ЗамерПроизводительности
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина,
	"Обработка.ЖурналДокументовВнутреннегоТовародвижения.Форма.СписокДокументовКОформлению.Команда.ОформитьПоЗаказам");

	ВыделенныеСтроки = Элементы.СписокРаспоряженияНаОформление.ВыделенныеСтроки;
	Если Не ОбщегоНазначенияУТКлиент.ВыбраныДокументыКОформлению(
		ВыделенныеСтроки, ПараметрыЖурнала()) Тогда
		Возврат;
	КонецЕсли;

	ОчиститьСообщения();

	ГруппировкиРаспоряжений = НакладныеКлиент.ДанныеДляОформленияПоЗаказам(СписокРаспоряженияНаОформление,
	#Удаление
	ВыделенныеСтроки, "ХозяйственнаяОперация,Склад,Отправитель,Получатель,Подразделение",
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	ВыделенныеСтроки, "Ссылка, ХозяйственнаяОперация,Склад,Отправитель,Получатель,Подразделение",
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	СписокОшибок, "Объект.СписокРаспоряженияНаОформление", ХозяйственныеОперацииИДокументы);

	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(СписокОшибок);

	Если ЗначениеЗаполнено(ГруппировкиРаспоряжений) Тогда

		ПараметрыПроцедуры = Новый Структура();
		ПараметрыПроцедуры.Вставить("ГруппировкиРаспоряжений", ГруппировкиРаспоряжений);
		ПараметрыПроцедуры.Вставить("ПараметрыФормыСозданныхДокументов", ПараметрыФормыСозданныхДокументов());
		ПараметрыПроцедуры.Вставить("ПолеОшибки", "Объект.СписокРаспоряженияНаОформление");

		НаименованиеЗадания = НСтр("ru = 'Журнал внутренних документов: Оформление по заказам';
		|en = 'Journal of internal document: Registration by orders'");

		ДлительнаяОперация = ВыполнитьДействияВФоне(
		ДействиеОформитьНакладныеПоЗаказам(),
		ПараметрыПроцедуры,
		НаименованиеЗадания);
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);

		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		Новый ОписаниеОповещения("ВыполнитьДействияВФонеЗавершение", ЭтотОбъект), ПараметрыОжидания);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
&ИзменениеИКонтроль("ОформитьПоОтгрузкеПриемке")
Процедура РСК_ОформитьПоОтгрузкеПриемке(Команда)

	Перем СписокОшибок;

	// &ЗамерПроизводительности
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина,
	"Обработка.ЖурналДокументовВнутреннегоТовародвижения.Форма.СписокДокументовКОформлению.Команда.ОформитьПоОтгрузкеПриемке");

	ВыделенныеСтроки = Элементы.СписокРаспоряженияНаОформление.ВыделенныеСтроки;
	Если Не ОбщегоНазначенияУТКлиент.ВыбраныДокументыКОформлению(
		ВыделенныеСтроки, ПараметрыЖурнала()) Тогда
		Возврат;
	КонецЕсли;

	ОчиститьСообщения();

	ГруппировкиРаспоряжений = НакладныеКлиент.ДанныеДляОформленияПоОрдерам(СписокРаспоряженияНаОформление,
	#Удаление
	ВыделенныеСтроки, "ХозяйственнаяОперация,Склад,Отправитель,Получатель",
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	ВыделенныеСтроки, "Ссылка, ХозяйственнаяОперация,Склад,Отправитель,Получатель,Подразделение",
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	СписокОшибок, "Объект.СписокРаспоряженияНаОформление", ХозяйственныеОперацииИДокументы);

	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(СписокОшибок);

	Если ЗначениеЗаполнено(ГруппировкиРаспоряжений) Тогда

		ПараметрыПроцедуры = Новый Структура();
		ПараметрыПроцедуры.Вставить("ГруппировкиРаспоряжений", ГруппировкиРаспоряжений);
		ПараметрыПроцедуры.Вставить("ПараметрыФормыСозданныхДокументов", ПараметрыФормыСозданныхДокументов());
		ПараметрыПроцедуры.Вставить("ПолеОшибки", "Объект.СписокРаспоряженияНаОформление");

		НаименованиеЗадания = НСтр("ru = 'Журнал внутренних документов: Оформление по отгрузке/приемке';
		|en = 'Journal of internal documents: Registration of shipment/receipt'");

		ДлительнаяОперация = ВыполнитьДействияВФоне(
		ДействиеОформитьНакладныеПоОрдерам(),
		ПараметрыПроцедуры,
		НаименованиеЗадания);
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);

		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		Новый ОписаниеОповещения("ВыполнитьДействияВФонеЗавершение", ЭтотОбъект), ПараметрыОжидания);

	КонецЕсли;

КонецПроцедуры
