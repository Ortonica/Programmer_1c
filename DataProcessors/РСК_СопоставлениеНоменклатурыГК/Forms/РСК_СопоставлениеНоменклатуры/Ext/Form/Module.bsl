&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//РеализацияТоваровИУслуг = Параметры.КоммерческоеПредложение;
	//
	//ГосКонтракт = Параметры.ГосКонтракт;
	//ОбъектыЗакупки.Загрузить(Параметры.ОбъектыЗакупки.Выгрузить());
	//НоменклатураОбъектовЗакупки.Загрузить(Параметры.НоменклатураОбъектовЗакупки.Выгрузить());
	//
	//ОбновитьТаблицы();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТаблицы()
	
	ЗаполнитьТаблицуРаспределения();
	ЗаполнитьОбъектыЗакупки();
	ОбновитьСостояниеКнопкиПрименить();

КонецПроцедуры  

&НаСервере
Процедура ЗаполнитьТаблицуРаспределения()
	
	Товары = РеализацияТоваровИУслуг.Товары.Выгрузить();
	
	НоменклатураКРаспределению.Очистить();
	
	Для Каждого Строка Из Товары Цикл 	
		
		НоваяСтрока = НоменклатураКРаспределению.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОбъектыЗакупки()
	
	ТаблицаНоменклатура.Очистить();
	
	Для Каждого ОбъектЗакупки Из ОбъектыЗакупки Цикл  
		
		Отбор = Новый Структура;
		Отбор.Вставить("Идентификатор", ОбъектЗакупки.Идентификатор);
		НайденныеСтроки = НоменклатураОбъектовЗакупки.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество() = 0 Тогда 
			
			// Если у Объекта закупки нет сопоставленной номенклатуры в таблице НоменклатураОбъектовЗакупки
			НоваяСтрока = ТаблицаНоменклатура.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОбъектЗакупки, "Наименование,Количество,Идентификатор,Цена");
			
			Продолжить;
			
		КонецЕсли;
		
		// Если у Объекта закупки есть сопоставленнпя номенклатурп в таблице НоменклатураОбъектовЗакупки
		Для Каждого НоменклатураОбъектаЗакупки Из НайденныеСтроки Цикл 
			
			НоваяСтрока = ТаблицаНоменклатура.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОбъектЗакупки, "Наименование,Количество,Идентификатор,Цена");
			ЗаполнитьЗначенияСвойств(НоваяСтрока, НоменклатураОбъектаЗакупки, "Номенклатура,Характеристика,НоменклатураПартнера");
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьКСтроке(Команда)
	
	НазначитьНоменклатуру();

КонецПроцедуры

&НаКлиенте
Процедура НазначитьНоменклатуру()
	
	Если Элементы.ТаблицаНоменклатура.ВыделенныеСтроки.Количество() > 1 
		Или Элементы.ТаблицаНоменклатура.ВыделенныеСтроки.Количество() = 0 
		Или Элементы.НоменклатураКРаспределению.ВыделенныеСтроки.Количество() > 1 
		Или Элементы.НоменклатураКРаспределению.ВыделенныеСтроки.Количество() = 0 Тогда 
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо выделить одну строку в каждой таблице для сопоставления");
		Возврат;
	КонецЕсли;  
	
	ТекущиеДанныеНоменклатура = Элементы.ТаблицаНоменклатура.ТекущиеДанные;
	ТекущиеДанныеРаспределение = Элементы.НоменклатураКРаспределению.ТекущиеДанные;
	
	Если ТекущиеДанныеНоменклатура = Неопределено Или ТекущиеДанныеРаспределение = Неопределено Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо выделить одну строку в каждой таблице для сопоставления");
		Возврат;	
	КонецЕсли;
	
	ТекущиеДанныеНоменклатура.Номенклатура = ТекущиеДанныеРаспределение.Номенклатура;
	ТекущиеДанныеНоменклатура.Характеристика = ТекущиеДанныеРаспределение.Характеристика;
	ТекущиеДанныеНоменклатура.Изменено = Истина;
	
	ДанныеНоменклатуры = Новый Структура;
	ДанныеНоменклатуры.Вставить("Номенклатура", ТекущиеДанныеНоменклатура.Номенклатура);
	ДанныеНоменклатуры.Вставить("Характеристика", ТекущиеДанныеНоменклатура.Характеристика);
	
	НоменклатураПартнера = НайтиНоменклатуруПартнера(ДанныеНоменклатуры); 
	
	ТекущиеДанныеНоменклатура.НоменклатураПартнера = НоменклатураПартнера;
	
	ОбновитьСостояниеКнопкиПрименить();

КонецПроцедуры    

&НаСервере
Функция НайтиНоменклатуруПартнера(ДанныеНоменклатуры) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НоменклатураКонтрагентов.Ссылка КАК Ссылка,
	|	НоменклатураКонтрагентов.Характеристика КАК Характеристика,
	|	НоменклатураКонтрагентов.Номенклатура КАК Номенклатура
	|ИЗ
	|	Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
	|ГДЕ
	|	НоменклатураКонтрагентов.Владелец = &Владелец И 
	|	НЕ НоменклатураКонтрагентов.ЭтоГруппа";
	
	Запрос.УстановитьПараметр("Владелец", ГосКонтракт.Контрагент.Партнер);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	ЕстьХарактеристика = ЗначениеЗаполнено(ДанныеНоменклатуры.Характеристика);
	
	// Поиск с учетом характеристика (если имеется)
	Отбор = Новый Структура;
	Отбор.Вставить("Номенклатура", ДанныеНоменклатуры.Номенклатура);
	
	Если ЕстьХарактеристика Тогда 
		Отбор.Вставить("Характеристика", ДанныеНоменклатуры.Характеристика);
	КонецЕсли;
	
	НайденныеСтроки = Результат.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() > 0 Тогда 
		Возврат НайденныеСтроки[0].Ссылка;		
	КонецЕсли;
	
	Если ЕстьХарактеристика Тогда 
		
		// Если поиск с характеристикой не удался
		// Поиск без учета характеристики (если имеется)
		Отбор = Новый Структура;
		Отбор.Вставить("Номенклатура", ДанныеНоменклатуры.Номенклатура);
		
		НайденныеСтроки = Результат.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество() > 0 Тогда 
			Возврат НайденныеСтроки[0].Ссылка;		
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Неопределено;
	                              
КонецФункции

&НаКлиенте
Процедура Применить(Команда)  
	
	Если ЕстьПустаяНоменклатураПартнера() Тогда 
		Оповещение = Новый ОписаниеОповещения("ВопросОСозданииНоменклатурыПартнераЗавершение", ЭтотОбъект);
		ВопросТекст = "Будет создана Номенклатура клиента для строк содержащих пустое значение. Продолжить?";
		ПоказатьВопрос(Оповещение, ВопросТекст, РежимДиалогаВопрос.ОКОтмена);                                   
		
		Возврат;
	КонецЕсли;
		
	ЗакрытьФормуСопоставления();
	
КонецПроцедуры  

&НаСервере
Функция ЕстьПустаяНоменклатураПартнера()
	
	ЕстьПустаяНоменклатура = Ложь;
	
	Для Каждого Стр Из ТаблицаНоменклатура Цикл 
		
		Если Не ЗначениеЗаполнено(Стр.НоменклатураПартнера) Тогда 
			ЕстьПустаяНоменклатура = Истина;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ЕстьПустаяНоменклатура;
	
КонецФункции

&НаКлиенте
Процедура ВопросОСозданииНоменклатурыПартнераЗавершение(Результат, ДопПараметры) Экспорт 
	
	Если Результат = КодВозвратаДиалога.ОК Тогда 	
		
		НоваяНоменклатура = СоздатьНоменклатуруПартнераКПустымСтрокам();
		
		Если НоваяНоменклатура.Количество() > 0 Тогда 
			Оповещение = Новый ОписаниеОповещения("ЗакрытьФормуСопоставления", ЭтотОбъект);
			Текст = СообщениеСозданнойНоменклатуры(НоваяНоменклатура);
			ПоказатьПредупреждение(Оповещение, Текст);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СообщениеСозданнойНоменклатуры(Знач НоваяНоменклатура)
	
	ПеречислениеНоменклатуры = ПеречислениеНоменклатуры(НоваяНоменклатура);
	Текст = "Созданы следующие объекты: " + Символы.ПС + ПеречислениеНоменклатуры;
	
	Возврат Текст;

КонецФункции

&НаСервере
Функция ПеречислениеНоменклатуры(Знач НоваяНоменклатура)
	
	ПеречислениеНоменклатуры = Новый Массив;
	Счетчик = 1;
	Для Каждого Строка из НоваяНоменклатура Цикл
		ПеречислениеНоменклатуры.Добавить(СтрШаблон("%1) Номенклатура клиента: %2", Счетчик, Строка));
		Счетчик = Счетчик + 1;
	КонецЦикла;    
	
	ПеречислениеТекст = СтрСоединить(ПеречислениеНоменклатуры, "," + Символы.ПС);
	
	Возврат ПеречислениеТекст;

КонецФункции 

&НаКлиенте
Процедура ЗакрытьФормуСопоставления(Результат = Неопределено) Экспорт 
	
	Закрыть(ТаблицаНоменклатура);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСостояниеКнопкиПрименить()

	ВсеСопоставлено = Истина;
	
	Для Каждого Стр Из ТаблицаНоменклатура Цикл 
		Если Не ЗначениеЗаполнено(Стр.Номенклатура) Тогда 
			ВсеСопоставлено = Ложь;			
		КонецЕсли;
	КонецЦикла;
	
	Элементы.ФормаПрменить.Доступность = ВсеСопоставлено;
	
КонецПроцедуры

&НаСервере
Функция СоздатьНоменклатуруПартнераКПустымСтрокам() 
	
	НоваяНоменклатураПартнера = Новый Массив;
	
	Для Каждого Строка Из ТаблицаНоменклатура цикл
		
		Если ЗначениеЗаполнено(Строка.НоменклатураПартнера) Тогда 
			Продолжить;
		КонецЕсли;	
		
		НоваяНоменклатура = Справочники.НоменклатураКонтрагентов.СоздатьЭлемент();
		НоваяНоменклатура.ВладелецНоменклатуры = ГосКонтракт.Контрагент.Партнер;
		НоваяНоменклатура.Владелец = ГосКонтракт.Контрагент.Партнер;
		НоваяНоменклатура.Наименование = Строка.Наименование;
		НоваяНоменклатура.Номенклатура = Строка.Номенклатура;
		НоваяНоменклатура.Идентификатор = Строка.Номенклатура;  
		НоваяНоменклатура.НаименованиеНоменклатуры = НоваяНоменклатура.Наименование;		
		НоваяНоменклатура.Идентификатор = НоваяНоменклатура.НаименованиеНоменклатуры + "#" + НоваяНоменклатура.НаименованиеХарактеристики + "#" + НоваяНоменклатура.НаименованиеУпаковки;
		
		Попытка
			НоваяНоменклатура.Записать();    
			Строка.НоменклатураПартнера = НоваяНоменклатура.Ссылка;
			НоваяНоменклатураПартнера.Добавить(НоваяНоменклатура.Ссылка);
		Исключение       
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось создать номенклатуру к товару: " + Строка.Наименование + ". см. Журнал регистрации");
			ЗаписьЖурналаРегистрации("ГосКонтрактСозданиеНоменклатуры", УровеньЖурналаРегистрации.Ошибка, Метаданные.Справочники.НоменклатураКонтрагентов, , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки; 
		
	КонецЦикла; 
	
	Возврат НоваяНоменклатураПартнера;
	
КонецФункции	

&НаКлиенте
Процедура НоменклатураКРаспределениюВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	НазначитьНоменклатуру();
	
КонецПроцедуры

&НаКлиенте
Процедура Сбросить(Команда)
	
	ОбновитьТаблицы();
	
КонецПроцедуры

&НаКлиенте
Процедура РеализацияТоваровИУслугПриИзменении(Элемент)
	
	РеализацияТоваровИУслугПриИзмененииНаСервере();
	
	ОбновитьТаблицы();
	
КонецПроцедуры

&НаСервере
Процедура РеализацияТоваровИУслугПриИзмененииНаСервере()  
	
	Если ЗначениеЗаполнено(РеализацияТоваровИУслуг) Тогда 
		Если ЗначениеЗаполнено(РеализацияТоваровИУслуг.Договор) Тогда 
			ГосКонтракт = РеализацияТоваровИУслуг.Договор.ГосударственныйКонтракт;
			ГосударственныйКонтратктПриИзмененииНаСервере();
		КонецЕсли;
	КонецЕсли;    
	
КонецПроцедуры   

&НаСервере
Процедура ГосударственныйКонтратктПриИзмененииНаСервере()
	
	НоменклатураОбъектовЗакупки.Загрузить(ГосКонтракт.НоменклатураОбъектовЗакупки.Выгрузить());
	ОбъектыЗакупки.Загрузить(ГосКонтракт.ОбъектыЗакупки.Выгрузить());
	ОбновитьТаблицы();
	
КонецПроцедуры

&НаКлиенте
Процедура ГосКонтракт1ПриИзменении(Элемент)
	
	ГосударственныйКонтратктПриИзмененииНаСервере();
	
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНоменклатуру(Команда)
	НовСтрока = ТаблицаНоменклатура.Добавить();
	ЗаполнитьЗначенияСвойств(НовСтрока,ЭтаФорма.Элементы.ТаблицаНоменклатура.ТекущиеДанные);
КонецПроцедуры                      

//&НаСервере
//Процедура ЗакраситьПоляССуммой()
//	УсловноеОформление.Элементы.Очистить();
//	
//	Элемент = УсловноеОформление.Элементы.Добавить();
//	
//	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();                               
//	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаНоменклатураЦена);
//	
//	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
//	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.");
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура НоменклатураКРаспределениюПриАктивизацииСтроки(Элемент)
//	ЗакраситьПоляССуммой();	
//КонецПроцедуры


        