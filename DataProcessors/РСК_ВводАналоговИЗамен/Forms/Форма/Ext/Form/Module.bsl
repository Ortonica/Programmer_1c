//++ РС Консалт: Тарасов Михаил 20.02.2023 Задача 23959
//e1cib/data/Документ.Задание?ref=b9f22338004dbaef43605cf6e10c83d6

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Номенклатура") И ЗначениеЗаполнено(Параметры.Номенклатура) Тогда 
		
		ОпределитьАналогиНоменклатуры(Параметры.Номенклатура);
		
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура ОпределитьАналогиНоменклатуры(Номенклатура) 
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РСК_АналогиИЗамены.ИсточникНоменклатура КАК ИсточникНоменклатура,
		|	РСК_АналогиИЗамены.ИсточникХарактеристика КАК ИсточникХарактеристика,
		|	ВЫБОР
		|		КОГДА РСК_АналогиИЗамены.ИсточникНоменклатура = &Номенклатура
		|				И РСК_АналогиИЗамены.ИсточникХарактеристика = ЗНАЧЕНИЕ(СПРАВОЧНИК.ХАрактеристикиНоменклатуры.ПустаяСсылка)
		|			ТОГДА 1
		|		КОГДА РСК_АналогиИЗамены.ПриемникНоменклатура = &Номенклатура
		|				И РСК_АналогиИЗамены.ПриемникХарактеристика = ЗНАЧЕНИЕ(СПРАВОЧНИК.ХАрактеристикиНоменклатуры.ПустаяСсылка)
		|			ТОГДА 2
		|		КОГДА РСК_АналогиИЗамены.ИсточникНоменклатура = &Номенклатура
		|			ТОГДА 3
		|		ИНАЧЕ 4
		|	КОНЕЦ КАК Порядок
		|ИЗ
		|	РегистрСведений.РСК_АналогиИЗамены КАК РСК_АналогиИЗамены
		|ГДЕ
		|	(РСК_АналогиИЗамены.ИсточникНоменклатура = &Номенклатура
		|			ИЛИ РСК_АналогиИЗамены.ПриемникНоменклатура = &Номенклатура)
		|	И РСК_АналогиИЗамены.ВидСвязи = ЗНАЧЕНИЕ(Перечисление.РСК_АналогиИЗаменыВидыСвязи.Аналог)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Порядок";	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура); 
	
	ВДЗ = Запрос.Выполнить().Выбрать();
	Если ВДЗ.Следующий() Тогда
		АналогНоменклатура = ВДЗ.ИсточникНоменклатура;
		АналогХарактеристика = ВДЗ.ИсточникХарактеристика;
	Иначе
		АналогНоменклатура = Номенклатура;
	КонецЕсли;                            
	
	АналогОбновитьНаСервере();
	
КонецПроцедуры

#Область Замена

&НаСервере
Процедура ЗаменаОбновитьНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РСК_АналогиИЗамены.ПриемникНоменклатура КАК ПриемникНоменклатура,
		|	РСК_АналогиИЗамены.ПриемникХарактеристика КАК ПриемникХарактеристика,
		|	РСК_АналогиИЗамены.ПриемникСерия КАК ПриемникСерия
		|ИЗ
		|	РегистрСведений.РСК_АналогиИЗамены КАК РСК_АналогиИЗамены
		|ГДЕ
		|	РСК_АналогиИЗамены.ИсточникНоменклатура = &ИсточникНоменклатура
		|	И РСК_АналогиИЗамены.ИсточникХарактеристика = &ИсточникХарактеристика
		|	И РСК_АналогиИЗамены.ИсточникСерия = &ИсточникСерия
		|	И РСК_АналогиИЗамены.ВидСвязи = ЗНАЧЕНИЕ(Перечисление.РСК_АналогиИЗаменыВидыСвязи.Замена)";
	
	Запрос.УстановитьПараметр("ИсточникНоменклатура", ЗаменаИсточникНоменклатура);
	Запрос.УстановитьПараметр("ИсточникСерия", ЗаменаИсточникСерия);
	Запрос.УстановитьПараметр("ИсточникХарактеристика", ЗаменаИсточникХарактеристика);
	
	ВДЗ = Запрос.Выполнить().Выбрать();
	
	Если ВДЗ.Следующий() Тогда   
		
		ЗаменаИмеетсяНоменклатура = ВДЗ.ПриемникНоменклатура;
		ЗаменаИмеетсяХарактеристика = ВДЗ.ПриемникХарактеристика;
		ЗаменаИмеетсяСерия = ВДЗ.ПриемникСерия;
		
	Иначе     
		
		ЗаменаИмеетсяНоменклатура = Справочники.Номенклатура.ПустаяСсылка();
		ЗаменаИмеетсяХарактеристика = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		ЗаменаИмеетсяСерия = Справочники.СерииНоменклатуры.ПустаяСсылка();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаменаОбновить(Команда)
	ЗаменаОбновитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗаменаИсточникНоменклатураПриИзменении(Элемент)
	ЗаменаОбновитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗаменаИсточникХарактеристикаПриИзменении(Элемент)
	ЗаменаОбновитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗаменаИсточникСерияПриИзменении(Элемент)
	ЗаменаОбновитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаменаСохранитьНаСервере()  
	
	МенеджерЗаписи = РегистрыСведений.РСК_АналогиИЗамены.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ИсточникНоменклатура = ЗаменаИсточникНоменклатура;
	МенеджерЗаписи.ИсточникХарактеристика = ЗаменаИсточникХарактеристика;
	МенеджерЗаписи.ИсточникСерия = ЗаменаИсточникСерия;   
	МенеджерЗаписи.ВидСвязи = Перечисления.РСК_АналогиИЗаменыВидыСвязи.Замена;
	МенеджерЗаписи.ПриемникНоменклатура = ЗаменаПриемникНоменклатура;  
	МенеджерЗаписи.ПриемникХарактеристика = ЗаменаПриемникХарактеристика;
	МенеджерЗаписи.ПриемникСерия = ЗаменаПриемникСерия; 
	
	МенеджерЗаписи.Записать(Истина); 
	
	Сообщить("Данные о замене обновлены");
	
	ЗаменаОбновитьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаменаСохранить(Команда)
	
	Если НЕ ЗначениеЗаполнено(ЗаменаИсточникНоменклатура) Тогда
		Сообщить("Не заполнена заменяемая номенклатура");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ЗаменаПриемникНоменклатура) Тогда
		Сообщить("Не заполнена номенклатура, на которую осуществляется замена");
		Возврат;
	КонецЕсли;                                                               
	
	ЗаменаОбновитьНаСервере();
	
	Если ЗначениеЗаполнено(ЗаменаИмеетсяНоменклатура) Тогда  
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаменаПослеВопросаОСохранении", ЭтаФорма), "Существующая замена для набора данных будет изменена. Продолжить?", РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли; 
	
	ЗаменаСохранитьНаСервере();
	
	Элементы.ЗаменаСписок.Обновить();
	
КонецПроцедуры           

&НаКлиенте 
Процедура ЗаменаПослеВопросаОСохранении(Результат, ДопПараметры) Экспорт 
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ЗаменаСохранитьНаСервере();
	
	Элементы.ЗаменаСписок.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура ЗаменаУдалитьНаСервере()
	
	МенеджерЗаписи = РегистрыСведений.РСК_АналогиИЗамены.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ИсточникНоменклатура = ЗаменаИсточникНоменклатура;
	МенеджерЗаписи.ИсточникХарактеристика = ЗаменаИсточникХарактеристика;
	МенеджерЗаписи.ИсточникСерия = ЗаменаИсточникСерия;   
	МенеджерЗаписи.ВидСвязи = Перечисления.РСК_АналогиИЗаменыВидыСвязи.Замена;
	
	МенеджерЗаписи.Удалить();
	
	Сообщить("Данные о замене обновлены");
	
	ЗаменаОбновитьНаСервере();	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаменаУдалить(Команда)
	
	ЗаменаОбновитьНаСервере();
	
	Если НЕ ЗначениеЗаполнено(ЗаменаИмеетсяНоменклатура) Тогда
		Сообщить("Отсутствуют данные о замене для текущего набора данных");
		Возврат;
	КонецЕсли;  
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ЗаменаПослеВопросаОбУдалении", ЭтаФорма), "Существующая замена для набора данных будет удалена. Продолжить?", РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры       

&НаКлиенте 
Процедура ЗаменаПослеВопросаОбУдалении(Результат, ДопПараметры) Экспорт 
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ЗаменаУдалитьНаСервере(); 
	
	Элементы.ЗаменаСписок.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаменаСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;   
	
	ЗаменаИсточникНоменклатура = Элемент.ТекущиеДанные.ИсточникНоменклатура;  
	ЗаменаИсточникХарактеристика = Элемент.ТекущиеДанные.ИсточникХарактеристика;
	ЗаменаИсточникСерия = Элемент.ТекущиеДанные.ИсточникСерия;  
	ЗаменаПриемникНоменклатура = Элемент.ТекущиеДанные.ПриемникНоменклатура;  
	ЗаменаПриемникХарактеристика = Элемент.ТекущиеДанные.ПриемникХарактеристика;
	ЗаменаПриемникСерия = Элемент.ТекущиеДанные.ПриемникСерия; 
	ЗаменаИмеетсяНоменклатура = ЗаменаПриемникНоменклатура;     
	ЗаменаИмеетсяХарактеристика = ЗаменаПриемникХарактеристика;
	ЗаменаИмеетсяСерия = ЗаменаПриемникСерия;
	
КонецПроцедуры  

#КонецОбласти

#Область Аналог

&НаСервере
Функция ПолучитьТаблицуАналогов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РСК_АналогиИЗамены.ИсточникНоменклатура КАК Номенклатура,
		|	РСК_АналогиИЗамены.ИсточникХарактеристика КАК Характеристика,
		|	РСК_АналогиИЗамены.ИсточникСерия КАК Серия,
		|	спрНоменклатура.Наименование КАК Наименование,
		|	ХарактеристикиНоменклатуры.Наименование КАК Наименование1,
		|	СерииНоменклатуры.Наименование КАК Наименование2
		|ИЗ
		|	РегистрСведений.РСК_АналогиИЗамены КАК РСК_АналогиИЗамены
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК спрНоменклатура
		|		ПО РСК_АналогиИЗамены.ИсточникНоменклатура = спрНоменклатура.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|		ПО РСК_АналогиИЗамены.ИсточникХарактеристика = ХарактеристикиНоменклатуры.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
		|		ПО РСК_АналогиИЗамены.ИсточникСерия = СерииНоменклатуры.Ссылка
		|ГДЕ
		|	РСК_АналогиИЗамены.ВидСвязи = ЗНАЧЕНИЕ(Перечисление.РСК_АналогиИЗаменыВидыСвязи.Аналог)
		|	И РСК_АналогиИЗамены.ПриемникНоменклатура = &Номенклатура
		|	И РСК_АналогиИЗамены.ПриемникХарактеристика = &Характеристика
		|	И РСК_АналогиИЗамены.ПриемникСерия = &Серия
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РСК_АналогиИЗамены.ПриемникНоменклатура,
		|	РСК_АналогиИЗамены.ПриемникХарактеристика,
		|	РСК_АналогиИЗамены.ПриемникСерия,
		|	спрНоменклатура.Наименование,
		|	ХарактеристикиНоменклатуры.Наименование,
		|	СерииНоменклатуры.Наименование
		|ИЗ
		|	РегистрСведений.РСК_АналогиИЗамены КАК РСК_АналогиИЗамены
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК спрНоменклатура
		|		ПО РСК_АналогиИЗамены.ПриемникНоменклатура = спрНоменклатура.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|		ПО РСК_АналогиИЗамены.ПриемникХарактеристика = ХарактеристикиНоменклатуры.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
		|		ПО РСК_АналогиИЗамены.ПриемникСерия = СерииНоменклатуры.Ссылка
		|ГДЕ
		|	РСК_АналогиИЗамены.ВидСвязи = ЗНАЧЕНИЕ(Перечисление.РСК_АналогиИЗаменыВидыСвязи.Аналог)
		|	И РСК_АналогиИЗамены.ИсточникНоменклатура = &Номенклатура
		|	И РСК_АналогиИЗамены.ИсточникХарактеристика = &Характеристика
		|	И РСК_АналогиИЗамены.ИсточникСерия = &Серия
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РСК_АналогиИЗамены1.ИсточникНоменклатура,
		|	РСК_АналогиИЗамены1.ИсточникХарактеристика,
		|	РСК_АналогиИЗамены1.ИсточникСерия,
		|	спрНоменклатура.Наименование,
		|	ХарактеристикиНоменклатуры.Наименование,
		|	СерииНоменклатуры.Наименование
		|ИЗ
		|	РегистрСведений.РСК_АналогиИЗамены КАК РСК_АналогиИЗамены
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РСК_АналогиИЗамены КАК РСК_АналогиИЗамены1
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК спрНоменклатура
		|			ПО РСК_АналогиИЗамены1.ИсточникНоменклатура = спрНоменклатура.Ссылка
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|			ПО РСК_АналогиИЗамены1.ИсточникХарактеристика = ХарактеристикиНоменклатуры.Ссылка
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
		|			ПО РСК_АналогиИЗамены1.ИсточникСерия = СерииНоменклатуры.Ссылка
		|		ПО РСК_АналогиИЗамены.ПриемникНоменклатура = РСК_АналогиИЗамены1.ПриемникНоменклатура
		|			И РСК_АналогиИЗамены.ПриемникХарактеристика = РСК_АналогиИЗамены1.ПриемникХарактеристика
		|			И РСК_АналогиИЗамены.ПриемникСерия = РСК_АналогиИЗамены1.ПриемникСерия
		|			И РСК_АналогиИЗамены.ВидСвязи = РСК_АналогиИЗамены1.ВидСвязи
		|ГДЕ
		|	РСК_АналогиИЗамены.ВидСвязи = ЗНАЧЕНИЕ(Перечисление.РСК_АналогиИЗаменыВидыСвязи.Аналог)
		|	И РСК_АналогиИЗамены.ИсточникНоменклатура = &Номенклатура
		|	И РСК_АналогиИЗамены.ИсточникХарактеристика = &Характеристика
		|	И РСК_АналогиИЗамены.ИсточникСерия = &Серия
		|	И НЕ(РСК_АналогиИЗамены1.ИсточникНоменклатура = &Номенклатура
		|				И РСК_АналогиИЗамены1.ИсточникХарактеристика = &Характеристика
		|				И РСК_АналогиИЗамены1.ИсточникСерия = &Серия)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование,
		|	Наименование1,
		|	Наименование2";
	
	Запрос.УстановитьПараметр("Номенклатура", АналогНоменклатура);  
	Запрос.УстановитьПараметр("Характеристика", АналогХарактеристика);
	Запрос.УстановитьПараметр("Серия", АналогСерия);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

&НаСервере
Процедура АналогОбновитьНаСервере()
		
	АналогТаблица.Загрузить(ПолучитьТаблицуАналогов());		
	
КонецПроцедуры

&НаКлиенте
Процедура АналогОбновить(Команда)
	
	АналогОбновитьНаСервере();
	Элементы.АналогСписок.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура АналогСохранитьНаСервере()
	
	//Удаляем старые записи по аналогам. Считаем, что пересечение групп аналогов невозможно, 
	//потому удаляем все данные по текущим наборам, будь они источник или приемник
	СтараяТаблица = ПолучитьТаблицуАналогов();
	
	Строка = СтараяТаблица.Добавить();
	Строка.Номенклатура = АналогНоменклатура;  
	Строка.Характеристика = АналогХарактеристика;
	Строка.Серия = АналогСерия;
	
	Для Каждого СтрокаТаблицы ИЗ АналогТаблица Цикл  
		
		Строка = СтараяТаблица.Добавить();
		Строка.Номенклатура = СтрокаТаблицы.Номенклатура;  
		Строка.Характеристика = СтрокаТаблицы.Характеристика;
		Строка.Серия = СтрокаТаблицы.Серия;	
		
	КонецЦикла; 
	
	СтараяТаблица.Свернуть("Номенклатура, Характеристика, Серия");
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЧ.Номенклатура КАК Номенклатура,
		|	ТЧ.Характеристика КАК Характеристика,
		|	ТЧ.Серия КАК Серия
		|ПОМЕСТИТЬ ТЧ
		|ИЗ
		|	&ТЧ КАК ТЧ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РСК_АналогиИЗамены.ИсточникНоменклатура КАК ИсточникНоменклатура,
		|	РСК_АналогиИЗамены.ИсточникХарактеристика КАК ИсточникХарактеристика,
		|	РСК_АналогиИЗамены.ИсточникСерия КАК ИсточникСерия,
		|	РСК_АналогиИЗамены.ВидСвязи КАК ВидСвязи
		|ИЗ
		|	РегистрСведений.РСК_АналогиИЗамены КАК РСК_АналогиИЗамены
		|ГДЕ
		|	РСК_АналогиИЗамены.ВидСвязи = ЗНАЧЕНИЕ(Перечисление.РСК_АналогиИЗаменыВидыСвязи.Аналог)
		|	И ((РСК_АналогиИЗамены.ИсточникНоменклатура, РСК_АналогиИЗамены.ИсточникХарактеристика, РСК_АналогиИЗамены.ИсточникСерия) В
		|				(ВЫБРАТЬ
		|					ТЧ.Номенклатура КАК Номенклатура,
		|					ТЧ.Характеристика КАК Характеристика,
		|					ТЧ.Серия КАК Серия
		|				ИЗ
		|					ТЧ КАК ТЧ)
		|			ИЛИ (РСК_АналогиИЗамены.ПриемникНоменклатура, РСК_АналогиИЗамены.ПриемникХарактеристика, РСК_АналогиИЗамены.ПриемникСерия) В
		|				(ВЫБРАТЬ
		|					ТЧ.Номенклатура КАК Номенклатура,
		|					ТЧ.Характеристика КАК Характеристика,
		|					ТЧ.Серия КАК Серия
		|				ИЗ
		|					ТЧ КАК ТЧ))";
	Запрос.УстановитьПараметр("ТЧ", СтараяТаблица);
	ВДЗ = Запрос.Выполнить().Выбрать();
	Пока ВДЗ.Следующий() Цикл    
		МенеджерЗаписи = РегистрыСведений.РСК_АналогиИЗамены.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ВДЗ);
		МенеджерЗаписи.Удалить();
	КонецЦикла;  
	
	//Создаём новые записи аналогов	
	ВременнаяТаблица = АналогТаблица.Выгрузить();
	ВременнаяТаблица.Свернуть("Номенклатура, Характеристика, Серия");
	СтрокаДубль = ВременнаяТаблица.НайтиСтроки(Новый Структура("Номенклатура, Характеристика, Серия", АналогНоменклатура, АналогХарактеристика, АналогСерия));
	Для Каждого Строка ИЗ СтрокаДубль Цикл
		ВременнаяТаблица.Удалить(Строка);	
	КонецЦикла;                    
	
	Если ВременнаяТаблица.Количество() = 0 Тогда 
		
		Сообщить("Данные об аналогах обновлены");
		АналогОбновитьНаСервере();
		Возврат;    
		
	КонецЕсли;
	
	Для Каждого Строка ИЗ ВременнаяТаблица Цикл
		
		МенеджерЗаписи = РегистрыСведений.РСК_АналогиИЗамены.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.ИсточникНоменклатура = Строка.Номенклатура;
		МенеджерЗаписи.ИсточникХарактеристика = Строка.Характеристика;
		МенеджерЗаписи.ИсточникСерия = Строка.Серия;  
		МенеджерЗаписи.ВидСвязи = Перечисления.РСК_АналогиИЗаменыВидыСвязи.Аналог;
		МенеджерЗаписи.ПриемникНоменклатура = АналогНоменклатура;      
		МенеджерЗаписи.ПриемникХарактеристика = АналогХарактеристика;
		МенеджерЗаписи.ПриемникСерия = АналогСерия;  
		МенеджерЗаписи.Записать(Истина);
		
	КонецЦикла; 
	
	Сообщить("Данные об аналогах обновлены");
	АналогОбновитьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура АналогСохранить(Команда)
	
	Если НЕ ЗначениеЗаполнено(АналогНоменклатура) Тогда
		Сообщить("Не указана номенклатура, для которой формируется список аналогов");
		Возврат;
	КонецЕсли;  
	
	Если АналогТаблица.НайтиСтроки(Новый Структура("Номенклатура", ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"))).Количество() > 0 Тогда     
		Сообщить("Не во всех строках аналогов указана номенклатура");
		Возврат;	
	КонецЕсли;
	
	ПоказатьВопрос(Новый ОписаниеОповещения("АналогПослеВопросаОСохранении", ЭтаФорма), "Данные об аналогах будут обновлены. Продолжить?", РежимДиалогаВопрос.ДаНет);	
	
КонецПроцедуры  

&НаКлиенте
Процедура АналогПослеВопросаОСохранении(Результат, ДопПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	АналогСохранитьНаСервере();  
	
	Элементы.АналогСписок.Обновить();	
	
КонецПроцедуры

&НаКлиенте
Процедура АналогНоменклатураПриИзменении(Элемент)
	АналогОбновитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура АналогХарактеристикаПриИзменении(Элемент)
	АналогОбновитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура АналогСерияПриИзменении(Элемент)
	АналогОбновитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура АналогСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;   
	
	АналогНоменклатура = Элемент.ТекущиеДанные.Номенклатура;
	АналогХарактеристика = Элемент.ТекущиеДанные.Характеристика;
	АналогСерия = Элемент.ТекущиеДанные.Серия;        
	
	АналогОбновитьНаСервере();
	
КонецПроцедуры

#КонецОбласти

//-- КонецЗадачи 23959
