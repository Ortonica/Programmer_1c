 
&НаСервере
&ИзменениеИКонтроль("ПриСозданииНаСервере")
Процедура РСК_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	УстановитьУсловноеОформление();
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ЦветЗеленый = ЦветаСтиля.РезультатУспехЦвет;
	ЦветКрасный = ЦветаСтиля.РезультатПроблемаЦвет;
	ЕдиницаИзмеренияВеса = Константы.ЕдиницаИзмеренияВеса.Получить();
	ЕдиницаИзмеренияОбъема = Константы.ЕдиницаИзмеренияОбъема.Получить();

	ЗаданиеНаПеревозку    = Параметры.ЗаданиеНаПеревозку;
	ТранспортноеСредство  = Параметры.ТранспортноеСредство;
	Вес = Параметры.ВесЗадания;
	Объем = Параметры.ОбъемЗадания;

	РеквизитыТС = ДоставкаТоваров.РеквизитыТС(ТранспортноеСредство);
	ЗаполнитьЗначенияСвойств(ЭтаФорма, РеквизитыТС);

	ЗаголовокВес = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Вес, %1';
	|en = 'Weight, %1'"),
	ЕдиницаИзмеренияВеса);
	ЗаголовокОбъем = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Объем, %1';
	|en = 'Volume, %1'"),
	ЕдиницаИзмеренияОбъема);
	Элементы.ТоварыКДоставкеВес.Заголовок = ЗаголовокВес;
	Элементы.ТоварыКДоставкеОбъем.Заголовок = ЗаголовокОбъем;

	Если Параметры.ВидДоставки = Перечисления.ВидыДоставки.НаСклад Тогда
		Элементы.РаспоряженияПолучатель.Видимость = Ложь;
	Иначе
		Элементы.РаспоряженияОтправитель.Видимость = Ложь;
	КонецЕсли;

	РейсПункт = Новый Массив;

	Если ЗначениеЗаполнено(ТранспортноеСредство) Тогда
		РейсПункт.Добавить(Новый ФорматированнаяСтрока(Строка(ТранспортноеСредство),,,,"ПоказатьТранспортноеСредство"));
	КонецЕсли;
	Если ЗначениеЗаполнено(Параметры.ДатаВремяРейсаПланС) Тогда
		Если ЗначениеЗаполнено(РейсПункт) Тогда
			РейсПункт.Добавить(", ");
		КонецЕсли;
		РейсПункт.Добавить(Формат(Параметры.ДатаВремяРейсаПланС, НСтр("ru = 'ДФ=''dd.MM.yyyy HH:mm''';
		|en = 'DF=''MM/dd/yyyy hh:mm tt'''")));
	КонецЕсли;

	Если ЗначениеЗаполнено(ЗаданиеНаПеревозку) Тогда
		Если ЗначениеЗаполнено(РейсПункт) Тогда
			РейсПункт.Добавить(", ");
		КонецЕсли;
		РейсПункт.Добавить(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗаданиеНаПеревозку, "Номер"));
	КонецЕсли;

	Если РейсПункт.Количество() > 0 Тогда
		РейсПункт.Вставить(0, Новый ФорматированнаяСтрока(НСтр("ru = 'Рейс:';
		|en = 'Trip:'") + " ", Новый Шрифт(,,Истина)));
	КонецЕсли;

	Если Параметры.Свойство("Адрес")
		И ЗначениеЗаполнено(Параметры.Адрес) Тогда
		Если РейсПункт.Количество() > 0 Тогда
			РейсПункт.Добавить(Символы.ПС);
		КонецЕсли;
		РейсПункт.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Пункт:';
		|en = 'Point:'") + " ", Новый Шрифт(,,Истина)));
		РейсПункт.Добавить(Параметры.Адрес);
		Если ЗначениеЗаполнено(Параметры.ВремяС) Тогда
			ШаблонВремени = НСтр("ru = 'с %ВремяС% по %ВремяПо%';
			|en = 'from %ВремяС% to %ВремяПо%'");
			Если НачалоДня(Параметры.ВремяС) = НачалоДня(Параметры.ДатаВремяРейсаПланС) Тогда
				Если НачалоДня(Параметры.ВремяС) = НачалоДня(Параметры.ВремяПо) Тогда
					Текст = СтрЗаменить(ШаблонВремени, "%ВремяС%", Формат(Параметры.ВремяС, НСтр("ru = 'ДФ=''HH:mm''';
					|en = 'DF=''HH:mm'''")));
					Текст = СтрЗаменить(Текст, "%ВремяПо%", Формат(Параметры.ВремяПо, НСтр("ru = 'ДФ=''HH:mm''';
					|en = 'DF=''HH:mm'''")));
				Иначе
					Текст = СтрЗаменить(ШаблонВремени, "%ВремяС%", Формат(Параметры.ВремяС, НСтр("ru = 'ДФ=''dd.MM.yyyy HH:mm''';
					|en = 'DF=''MM/dd/yyyy hh:mm tt'''")));
					Текст = СтрЗаменить(Текст, "%ВремяПо%", Формат(Параметры.ВремяПо, НСтр("ru = 'ДФ=''dd.MM.yyyy HH:mm''';
					|en = 'DF=''MM/dd/yyyy hh:mm tt'''")));
				КонецЕсли;
			Иначе
				Если НачалоДня(Параметры.ВремяС) = НачалоДня(Параметры.ВремяПо) Тогда
					Текст = СтрЗаменить(ШаблонВремени, "%ВремяС%", Формат(Параметры.ВремяС, НСтр("ru = 'ДФ=''dd.MM.yyyy HH:mm''';
					|en = 'DF=''MM/dd/yyyy hh:mm tt'''")));
					Текст = СтрЗаменить(Текст, "%ВремяПо%", Формат(Параметры.ВремяПо, НСтр("ru = 'ДФ=''HH:mm''';
					|en = 'DF=''HH:mm'''")));
				Иначе
					Текст = СтрЗаменить(ШаблонВремени, "%ВремяС%", Формат(Параметры.ВремяС, НСтр("ru = 'ДФ=''dd.MM.yyyy HH:mm''';
					|en = 'DF=''MM/dd/yyyy hh:mm tt'''")));
					Текст = СтрЗаменить(Текст, "%ВремяПо%", Формат(Параметры.ВремяПо, НСтр("ru = 'ДФ=''dd.MM.yyyy HH:mm''';
					|en = 'DF=''MM/dd/yyyy hh:mm tt'''")));
				КонецЕсли;
			КонецЕсли;
			РейсПункт.Добавить("," + " " + Текст);
		КонецЕсли;
	КонецЕсли;

	Если РейсПункт.Количество() > 0 Тогда
		Элементы.ДекорацияРейсПункт.Заголовок = Новый ФорматированнаяСтрока(РейсПункт);
	Иначе
		Элементы.ДекорацияРейсПункт.Видимость = Ложь;
	КонецЕсли;

	ЗаголовокВес = НСтр("ru = 'Вес,';
	|en = 'Weight,'") + " " + ЕдиницаИзмеренияВеса;
	ЗаголовокОбъем = НСтр("ru = 'Объем,';
	|en = 'Volume,'") + " " + ЕдиницаИзмеренияОбъема;
	Элементы.РаспоряженияВес.Заголовок = ЗаголовокВес;
	Элементы.ТоварыКДоставкеВес.Заголовок = ЗаголовокВес;
	Элементы.РаспоряженияОбъем.Заголовок = ЗаголовокОбъем;
	Элементы.ТоварыКДоставкеОбъем.Заголовок = ЗаголовокОбъем;

	Распоряжения.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресРаспоряжений));
	Для Каждого Стр Из Распоряжения Цикл
		Стр.Время = ДоставкаТоваровКлиентСервер.ПредставлениеВремениДоставки(Стр.ВремяС,Стр.ВремяПо);
		#Вставка
		//++ РС Консалт: Минаков А.С. Задача 20226
		Если Стр.Распоряжение.Метаданные().Реквизиты.Найти("Контрагент") = Неопределено Тогда		
			//++ РС Консалт: Минаков А.С. Задача 20226
			#КонецВставки
			Стр.ПолучательОтправительПредставление = ДоставкаТоваровКлиентСервер.ПредставлениеПолучателяОтправителя(
			Стр.ПолучательОтправитель, Стр.Перевозчик, Параметры.ВидДоставки);
			#Вставка
			//++ РС Консалт: Минаков А.С. Задача 20226
		Иначе
			Стр.ПолучательОтправительПредставление = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Стр.Распоряжение, "Контрагент")
		КонецЕсли
		//++ РС Консалт: Минаков А.С. Задача 20226
		#КонецВставки
	КонецЦикла;

	ДоставкаТоваровКлиентСервер.ОтобразитьНедогрузПерегруз(ЭтаФорма,ЭтаФорма);

	Если Параметры.Свойство("Статус")
		И Параметры.Статус = Перечисления.СтатусыЗаданийНаПеревозку.Закрыто Тогда

		Элементы.ТоварыКДоставке.Видимость = Ложь;

	Иначе

		Элементы.ДекорацияНетТоваров.Видимость = Ложь;

	КонецЕсли;

	#Область РасчетТоваров

	СсылкиНаРаспоряжения = Распоряжения.Выгрузить(,"Распоряжение").ВыгрузитьКолонку("Распоряжение");
	СоответствиеТипов = Новый Соответствие;
	ТекстЗапроса = "";
	Если Параметры.ВидДоставки = Перечисления.ВидыДоставки.НаСклад Тогда
		Для Каждого Ссылка Из СсылкиНаРаспоряжения Цикл
			ТипСсылки = ТипЗнч(Ссылка);
			Если ТипСсылки = Тип("ДокументСсылка.ПоручениеЭкспедитору")
				Или СоответствиеТипов[ТипСсылки] <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			СоответствиеТипов.Вставить(ТипСсылки,Истина);
			МенеджерДокументов = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Ссылка);
			ТекстЗапросаТоварыКДоставкеНаНашСклад = МенеджерДокументов.ТекстЗапросаТоварыКДоставке();
			Если ТекстЗапроса = "" Тогда
				ПоложениеИЗ = Найти(ТекстЗапросаТоварыКДоставкеНаНашСклад, "ИЗ");
				ТекстЗапроса = ТекстЗапроса
				+ Лев(ТекстЗапросаТоварыКДоставкеНаНашСклад,ПоложениеИЗ - 1)
				+ " ПОМЕСТИТЬ ТоварыРаспоряжения
				|" + Прав(ТекстЗапросаТоварыКДоставкеНаНашСклад,СтрДлина(ТекстЗапросаТоварыКДоставкеНаНашСклад) - ПоложениеИЗ + 1);
			Иначе
				ТекстЗапроса = ТекстЗапроса + "
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|" + ТекстЗапросаТоварыКДоставкеНаНашСклад;
			КонецЕсли;
		КонецЦикла;

		Если СоответствиеТипов.Количество() = 0 Тогда

			Элементы.ТоварыКДоставке.Видимость = Ложь;

			Возврат; // В распоряжениях только поручения экспедиторам, товаров нет

		КонецЕсли;

	Иначе
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	Т.ДокументОтгрузки КАК Ссылка,
		|	Т.Склад,
		|	Т.Номенклатура,
		|	Т.Характеристика,
		|	Т.Назначение,
		|	Т.Серия,
		|	Т.КОтгрузкеПриход КАК Количество
		|ПОМЕСТИТЬ ТоварыРаспоряжения
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.Обороты(
		|			,
		|			,
		|			,
		|			ДокументОтгрузки В (&Ссылки)) КАК Т
		|ГДЕ
		|	Т.КОтгрузкеПриход > 0"
	КонецЕсли;

	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияУТ.РазделительЗапросовВПакете() +
	"ВЫБРАТЬ
	|	ТоварыКДоставке.Номенклатура КАК Номенклатура,
	|	ТоварыКДоставке.Характеристика КАК Характеристика,
	|	ТоварыКДоставке.Назначение КАК Назначение,
	|	ТоварыКДоставке.Серия КАК Серия,
	|	ТоварыКДоставке.Количество КАК Количество,
	|	ТоварыКДоставке.ВсеТовары КАК ВсеТовары,
	|	ТоварыКДоставке.Распоряжение КАК Распоряжение,
	|	ТоварыКДоставке.Склад КАК Склад,
	|	ТоварыКДоставке.ПолучательОтправитель КАК ПолучательОтправитель
	|ПОМЕСТИТЬ ТоварыЗадания
	|ИЗ
	|	&ТоварыКДоставке КАК ТоварыКДоставке
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Распоряжения.Распоряжение,
	|	Распоряжения.Склад
	|ПОМЕСТИТЬ Распоряжения
	|ИЗ
	|	&Распоряжения КАК Распоряжения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	|" + СтрЗаменить(РСК_ВызовСервера.ТекстЗапросаВесОбъем(),
	"&ОтборПоРаспоряжениям",
	"ТаблицаТовары.Ссылка В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ТоварыРаспоряжения.Ссылка
	|				ИЗ
	|					ТоварыРаспоряжения КАК ТоварыРаспоряжения)") + "
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	|ВЫБРАТЬ
	|	ВлТоварыКДоставке.Распоряжение,
	|	ВлТоварыКДоставке.Склад,
	|	ВлТоварыКДоставке.ПолучательОтправитель,
	|	МИНИМУМ(ВлТоварыКДоставке.ВсеТовары) КАК ВсеТовары,
	|	ВлТоварыКДоставке.Номенклатура,
	|	ВлТоварыКДоставке.Характеристика,
	|	ВлТоварыКДоставке.Назначение,
	|	ВлТоварыКДоставке.ЕдиницаИзмерения,
	|	ВлТоварыКДоставке.Серия,
	|	СУММА(ВлТоварыКДоставке.Количество) КАК Количество,
	|	СУММА(ВлТоварыКДоставке.Вес) КАК Вес,
	|	СУММА(ВлТоварыКДоставке.Объем) КАК Объем,
	|	МАКСИМУМ(ВлТоварыКДоставке.КоличествоМаксимум) КАК КоличествоМаксимум,
	|	МАКСИМУМ(ВлТоварыКДоставке.ВесМаксимум) КАК ВесМаксимум,
	|	МАКСИМУМ(ВлТоварыКДоставке.ОбъемМаксимум) КАК ОбъемМаксимум,
	|	МАКСИМУМ(ВлТоварыКДоставке.ОбъемЕдиницы) КАК ОбъемЕдиницы,
	|	МАКСИМУМ(ВлТоварыКДоставке.ВесЕдиницы) КАК ВесЕдиницы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыРаспоряжения.Ссылка КАК Распоряжение,
	|		ТоварыРаспоряжения.Склад КАК Склад,
	|		ТоварыЗадания.ПолучательОтправитель КАК ПолучательОтправитель,
	|		ЛОЖЬ КАК ВсеТовары,
	|		ТоварыРаспоряжения.Номенклатура КАК Номенклатура,
	|		ТоварыРаспоряжения.Характеристика КАК Характеристика,
	|		ТоварыРаспоряжения.Назначение КАК Назначение,
	|		ТоварыРаспоряжения.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		ТоварыРаспоряжения.Серия КАК Серия,
	|		ВЫБОР
	|			КОГДА ТоварыЗадания.Количество > ТоварыРаспоряжения.Количество
	|				ТОГДА ТоварыРаспоряжения.Количество
	|			ИНАЧЕ ТоварыЗадания.Количество
	|		КОНЕЦ КАК Количество,
	#Удаление
	|		&ТекстЗапросаВесНоменклатуры * ВЫБОР
	|			КОГДА ТоварыЗадания.Количество > ТоварыРаспоряжения.Количество
	|				ТОГДА ТоварыРаспоряжения.Количество
	|			ИНАЧЕ ТоварыЗадания.Количество
	|		КОНЕЦ КАК Вес,
	|		&ТекстЗапросаОбъемНоменклатуры * ВЫБОР
	|			КОГДА ТоварыЗадания.Количество > ТоварыРаспоряжения.Количество
	|				ТОГДА ТоварыРаспоряжения.Количество
	|			ИНАЧЕ ТоварыЗадания.Количество
	|		КОНЕЦ КАК Объем,
	#КонецУдаления
	|		ТоварыРаспоряжения.Количество КАК КоличествоМаксимум,
	#Удаление
	|		ТоварыРаспоряжения.Количество * &ТекстЗапросаВесНоменклатуры КАК ВесМаксимум,
	|		ТоварыРаспоряжения.Количество * &ТекстЗапросаОбъемНоменклатуры КАК ОбъемМаксимум,
	|		&ТекстЗапросаОбъемНоменклатуры КАК ОбъемЕдиницы,
	|		&ТекстЗапросаВесНоменклатуры КАК ВесЕдиницы
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	|		ЕСТЬNULL(ВтВесОбъем.Вес, 0) * ВЫБОР
	|			КОГДА ТоварыЗадания.Количество > ТоварыРаспоряжения.Количество
	|				ТОГДА ТоварыРаспоряжения.Количество
	|			ИНАЧЕ ТоварыЗадания.Количество
	|		КОНЕЦ / ЕСТЬNULL(ВтВесОбъем.Количество, 1) КАК Вес,
	|		ЕСТЬNULL(ВтВесОбъем.Объем, 0) * ВЫБОР
	|			КОГДА ТоварыЗадания.Количество > ТоварыРаспоряжения.Количество
	|				ТОГДА ТоварыРаспоряжения.Количество
	|			ИНАЧЕ ТоварыЗадания.Количество
	|		КОНЕЦ / ЕСТЬNULL(ВтВесОбъем.Количество, 1) КАК Объем,
	|		ЕСТЬNULL(ВтВесОбъем.Объем, 0) * ТоварыРаспоряжения.Количество / ЕСТЬNULL(ВтВесОбъем.Количество, 1) КАК ОбъемМаксимум,
	|		ЕСТЬNULL(ВтВесОбъем.Вес, 0) * ТоварыРаспоряжения.Количество / ЕСТЬNULL(ВтВесОбъем.Количество, 1) КАК ВесМаксимум,
	|		ЕСТЬNULL(ВтВесОбъем.ОбъемЕдиницы, 0) КАК ОбъемЕдиницы,
	|		ЕСТЬNULL(ВтВесОбъем.ВесЕдиницы, 0) КАК ВесЕдиницы
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	|	ИЗ
	|		ТоварыРаспоряжения КАК ТоварыРаспоряжения
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыЗадания КАК ТоварыЗадания
	|			ПО ТоварыРаспоряжения.Ссылка = ТоварыЗадания.Распоряжение
	|				И ТоварыРаспоряжения.Склад = ТоварыЗадания.Склад
	|				И ТоварыРаспоряжения.Номенклатура = ТоварыЗадания.Номенклатура
	|				И ТоварыРаспоряжения.Характеристика = ТоварыЗадания.Характеристика
	|				И ТоварыРаспоряжения.Назначение = ТоварыЗадания.Назначение
	|				И ТоварыРаспоряжения.Серия = ТоварыЗадания.Серия
	|				И (НЕ ТоварыЗадания.ВсеТовары)
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтВесОбъем КАК ВтВесОбъем
	|			ПО ТоварыРаспоряжения.Ссылка = ВтВесОбъем.Распоряжение
	|				И ТоварыРаспоряжения.Склад = ВтВесОбъем.Склад
	|				И ТоварыРаспоряжения.Номенклатура = ВтВесОбъем.Номенклатура
	|				И ТоварыРаспоряжения.Характеристика = ВтВесОбъем.Характеристика
	|				И ТоварыРаспоряжения.Назначение = ВтВесОбъем.Назначение
	|				И ТоварыРаспоряжения.Серия = ВтВесОбъем.Серия
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыРаспоряжения.Ссылка,
	|		ТоварыРаспоряжения.Склад,
	|		ТоварыЗадания.ПолучательОтправитель,
	|		ИСТИНА,
	|		ТоварыРаспоряжения.Номенклатура,
	|		ТоварыРаспоряжения.Характеристика,
	|		ТоварыРаспоряжения.Назначение,
	|		ТоварыРаспоряжения.Номенклатура.ЕдиницаИзмерения,
	|		ТоварыРаспоряжения.Серия,
	|		ТоварыРаспоряжения.Количество,
	#Удаление
	|		&ТекстЗапросаВесНоменклатуры * ТоварыРаспоряжения.Количество,
	|		&ТекстЗапросаОбъемНоменклатуры * ТоварыРаспоряжения.Количество,
	#КонецУдаления
	|		ТоварыРаспоряжения.Количество,
	#Удаление
	|		ТоварыРаспоряжения.Количество * &ТекстЗапросаВесНоменклатуры,
	|		ТоварыРаспоряжения.Количество * &ТекстЗапросаОбъемНоменклатуры,
	|		&ТекстЗапросаОбъемНоменклатуры,
	|		&ТекстЗапросаВесНоменклатуры
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	|		ЕСТЬNULL(ВтВесОбъем.Вес, 0) * ТоварыРаспоряжения.Количество / ЕСТЬNULL(ВтВесОбъем.Количество, 1) КАК Вес,
	|		ЕСТЬNULL(ВтВесОбъем.Объем, 0) * ТоварыРаспоряжения.Количество / ЕСТЬNULL(ВтВесОбъем.Количество, 1) КАК Объем,
	|		ЕСТЬNULL(ВтВесОбъем.Объем, 0) * ТоварыРаспоряжения.Количество / ЕСТЬNULL(ВтВесОбъем.Количество, 1) КАК ОбъемМаксимум,
	|		ЕСТЬNULL(ВтВесОбъем.Вес, 0) * ТоварыРаспоряжения.Количество / ЕСТЬNULL(ВтВесОбъем.Количество, 1) КАК ВесМаксимум,
	|		ЕСТЬNULL(ВтВесОбъем.ОбъемЕдиницы, 0) КАК ОбъемЕдиницы,
	|		ЕСТЬNULL(ВтВесОбъем.ВесЕдиницы, 0) КАК ВесЕдиницы
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	|	ИЗ
	|		ТоварыРаспоряжения КАК ТоварыРаспоряжения
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыЗадания КАК ТоварыЗадания
	|			ПО ТоварыРаспоряжения.Ссылка = ТоварыЗадания.Распоряжение
	|				И ТоварыРаспоряжения.Склад = ТоварыЗадания.Склад
	#Удаление
	|				И (ТоварыЗадания.ВсеТовары)) КАК ВлТоварыКДоставке
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	|				И (ТоварыЗадания.ВсеТовары)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтВесОбъем КАК ВтВесОбъем
	|			ПО ТоварыРаспоряжения.Ссылка = ВтВесОбъем.Распоряжение
	|				И ТоварыРаспоряжения.Склад = ВтВесОбъем.Склад
	|				И ТоварыРаспоряжения.Номенклатура = ВтВесОбъем.Номенклатура
	|				И ТоварыРаспоряжения.Характеристика = ВтВесОбъем.Характеристика
	|				И ТоварыРаспоряжения.Назначение = ВтВесОбъем.Назначение
	|				И ТоварыРаспоряжения.Серия = ВтВесОбъем.Серия) КАК ВлТоварыКДоставке
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВлТоварыКДоставке.ПолучательОтправитель,
	|	ВлТоварыКДоставке.Номенклатура,
	|	ВлТоварыКДоставке.Распоряжение,
	|	ВлТоварыКДоставке.Склад,
	|	ВлТоварыКДоставке.Характеристика,
	|	ВлТоварыКДоставке.Серия,
	|	ВлТоварыКДоставке.ЕдиницаИзмерения,
	|	ВлТоварыКДоставке.Назначение
	|
	|УПОРЯДОЧИТЬ ПО
	|	МАКСИМУМ(ВлТоварыКДоставке.Вес) УБЫВ,
	|	МАКСИМУМ(ВлТоварыКДоставке.Объем) УБЫВ";

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
	"&ТекстЗапросаВесНоменклатуры",
	Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
	"ТоварыРаспоряжения.Номенклатура.ЕдиницаИзмерения",
	"ТоварыРаспоряжения.Номенклатура"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
	"&ТекстЗапросаОбъемНоменклатуры",
	Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаОбъемУпаковки(
	"ТоварыРаспоряжения.Номенклатура.ЕдиницаИзмерения",
	"ТоварыРаспоряжения.Номенклатура"));

	ТаблицаТовары = ПолучитьИзВременногоХранилища(Параметры.АдресТоваровКДоставке);
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылки", СсылкиНаРаспоряжения);
	Запрос.УстановитьПараметр("ТоварыКДоставке", ТаблицаТовары);
	Запрос.УстановитьПараметр("Распоряжения", Распоряжения.Выгрузить());

	ТоварыКДоставке.Загрузить(Запрос.Выполнить().Выгрузить());

	ПересчитатьВесОбъемРаспоряженийПоТоварамКДоставке();

	#КонецОбласти
	#Вставка
	//++ РС Консалт: Трофимов Евгений 10.04.2023 Тикет 25061
	//e1cib/data/Документ.Задание?ref=b45e0a00897a6bee41f9ac6b2f1c8fea
	НесобранныеТовары.ТекстЗапроса = СтрЗаменить(
		НесобранныеТовары.ТекстЗапроса,
		"ДокументОтгрузки = ЗНАЧЕНИЕ(Документ.ЗаказНаПеремещение.ПустаяСсылка)",
		"ДокументОтгрузки = &Распоряжение"
	);
	НесобранныеТовары.Параметры.УстановитьЗначениеПараметра("Распоряжение", Документы.ЗаказНаПеремещение.ПустаяСсылка());
	
	ЭтоАдресныйСклад = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗаданиеНаПеревозку, "Склад.ИспользоватьАдресноеХранение");
	Элементы.РаспоряженияРСК_СборкаЗавершена.Видимость = ЭтоАдресныйСклад;
	Элементы.НесобранныеТовары.Видимость = ЭтоАдресныйСклад;
	//-- КонецТикета 25061	
	#КонецВставки

КонецПроцедуры
  
&НаКлиенте
&После("РаспоряженияВыбор")
Процедура РСК_РаспоряженияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	//++ РС Консалт: Минаков А.С. Задача 20226
	Если Поле = Элементы.РаспоряженияРСК_Накладная Тогда
		ПоказатьЗначение(,Элементы.Распоряжения.ТекущиеДанные.РСК_Накладная)
	КонецЕсли
	//++ РС Консалт: Минаков А.С. Задача 20226
	
КонецПроцедуры

&НаКлиенте
&После("РаспоряженияПриАктивизацииСтрокиОбработчикОжидания")
Процедура РСК_РаспоряженияПриАктивизацииСтрокиОбработчикОжидания()
	
	//++ РС Консалт: Минаков А.С. Задача 20226
	ТекущиеДанные = Элементы.Распоряжения.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Элементы.ТоварыКДоставке.ТолькоПросмотр = Ложь
	Иначе
		Элементы.ТоварыКДоставке.ТолькоПросмотр = ТекущиеДанные.РСК_Транзитная
	КонецЕсли
	//++ РС Консалт: Минаков А.С. Задача 20226
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	//++ РС Консалт: Минаков А.С. Задача 20226
	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Распоряжения.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Распоряжения.РСК_Транзитная");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.СветлоСерый);
	//++ РС Консалт: Минаков А.С. Задача 20226
	
	//++ РС Консалт: Трофимов Евгений 10.04.2023 Тикет 25062
	//e1cib/data/Документ.Задание?ref=94371d4af0b4403c43fef0b1ff172c4a
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Распоряжения.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Распоряжения.СборкаЗавершена");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", Новый Цвет(204,255,204));
		
	//-- КонецТикета 25062	
КонецПроцедуры

&НаКлиенте
Процедура РСК_РаспоряженияПриАктивизацииСтрокиПосле(Элемент)
	//++ РС Консалт: Трофимов Евгений 10.04.2023 Тикет 25061
	//e1cib/data/Документ.Задание?ref=b45e0a00897a6bee41f9ac6b2f1c8fea
	ДанныеСтроки = Элементы.Распоряжения.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	НесобранныеТовары.Параметры.УстановитьЗначениеПараметра("Распоряжение", ДанныеСтроки.Распоряжение);
	Элементы.НесобранныеТовары.Обновить();
	//-- КонецТикета 25061	
КонецПроцедуры
