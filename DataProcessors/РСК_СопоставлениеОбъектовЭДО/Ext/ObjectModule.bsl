//Доработка обмена с ЭДО. Сопоставление договоров, номенклатуры (полный автомат без участия пользователя)
//++ РС Консалт: Трофимов Евгений 16.09.2022 Тикет 20359
//e1cib/data/Документ.Задание?ref=94e137c71231048947b8209affeeaed4
Процедура АвтоСопоставление(СтруктураПараметров, АдресХранилища = "") Экспорт
	
	НеСопоставленнаяНоменклатура = Новый ТаблицаЗначений;
	НеСопоставленнаяНоменклатура.Колонки.Добавить("Контракт", Новый ОписаниеТипов("СправочникСсылка.ГосударственныеКонтракты"));
	НеСопоставленнаяНоменклатура.Колонки.Добавить("НоменклатураКонтрагента", Новый ОписаниеТипов("СправочникСсылка.НоменклатураКонтрагентов"));
	СтруктураОтвета = Новый Структура;
	СтруктураОтвета.Вставить("НеСопоставленнаяНоменклатура", НеСопоставленнаяНоменклатура);
	СтруктураОтвета.Вставить("Протокол", "");
	
    УстановитьПривилегированныйРежим(Истина);
	СозданиеГосКонтрактов(СтруктураОтвета);
	СопоставлениеДоговоров(СтруктураОтвета);
	СопоставлениеНоменклатурыВГосКонтрактах(СтруктураОтвета);
	
	ПоместитьВоВременноеХранилище(СтруктураОтвета, АдресХранилища);

КонецПроцедуры

Процедура СозданиеГосКонтрактов(СтруктураОтвета)
	
	ДополнитьПротокол(СтруктураОтвета, "Создание государственных контрактов...");
	
	СпособОбработки	= "ГосударственныеКонтрактыЕИС";
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЭлектронныйДокументВходящийЭДО.Ссылка КАК ВходящийЭД
		|ИЗ
		|	Документ.ЭлектронныйДокументВходящийЭДО КАК ЭлектронныйДокументВходящийЭДО
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыУчетаДокументовЭДО КАК ОбъектыУчетаДокументовЭДО
		|		ПО ЭлектронныйДокументВходящийЭДО.Ссылка = ОбъектыУчетаДокументовЭДО.ЭлектронныйДокумент
		|ГДЕ
		|	ОбъектыУчетаДокументовЭДО.ОбъектУчета ЕСТЬ NULL
		|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ё = 0;
	ПрошлыйПроцентВыполнения = 0;
	Пока Выборка.Следующий() Цикл
		ё = ё + 1;
		ПроцентВыполнения = ё * 100 / Выборка.Количество();
		Если ПрошлыйПроцентВыполнения <> Окр(ПроцентВыполнения) Тогда
			ПрошлыйПроцентВыполнения = Окр(ПроцентВыполнения);
			ДлительныеОперации.СообщитьПрогресс(ПрошлыйПроцентВыполнения, "Создание государственных контрактов ("+ё+" из "+Выборка.Количество()+")");
		КонецЕсли;
	
		//Взято из Документы.ЭлектронныйДокументВходящийЭДО.ФормаДокумента.МодульФормы.СоздатьДокументыУчета()
		ПараметрыЗаполнения = ЭлектронныеДокументыЭДО.ДанныеДокументовДляОтраженияВУчете(
			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Выборка.ВходящийЭД)
		);
		ИнтеграцияЭДО.ОтразитьВУчетеЭлектронныеДокументы(ПараметрыЗаполнения, СпособОбработки);
		ДополнитьПротокол(СтруктураОтвета, "Создан государственный контракт", Выборка.ВходящийЭД); 
		
	КонецЦикла;	
	ДополнитьПротокол(СтруктураОтвета, "••••••••••••••••••••••••••");

КонецПроцедуры

Процедура СопоставлениеДоговоров(СтруктураОтвета)
	
	ДополнитьПротокол(СтруктураОтвета, "Сопоставление договоров...");

	Запрос = Новый Запрос(ТекстЗапросаСопоставленияДоговоров());
	Запрос.УстановитьПараметр("ПоказыватьСопоставленные", Ложь);
	Запрос.УстановитьПараметр("ПоказыватьОтсутствующиеПодходящиеДоговоры", Ложь);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ё = 0;
	ПрошлыйПроцентВыполнения = 0;
	Пока Выборка.Следующий() Цикл
		ё = ё + 1;
		ПроцентВыполнения = ё * 100 / Выборка.Количество();
		Если ПрошлыйПроцентВыполнения <> Окр(ПроцентВыполнения) Тогда
			ПрошлыйПроцентВыполнения = Окр(ПроцентВыполнения);
			ДлительныеОперации.СообщитьПрогресс(ПрошлыйПроцентВыполнения, "Сопоставление договоров ("+ё+" из "+Выборка.Количество()+")");
		КонецЕсли;
		оДоговор = Выборка.ПодходящийДоговор.ПолучитьОбъект();
		оДоговор.ГосударственныйКонтракт = Выборка.ГосударственныйКонтракт;
		оДоговор.Записать();
		ДополнитьПротокол(СтруктураОтвета, "Договор сопоставлен с государственным контрактом", Выборка.ПодходящийДоговор);
	КонецЦикла;
	ДополнитьПротокол(СтруктураОтвета, "••••••••••••••••••••••••••");

КонецПроцедуры

Функция ТекстЗапросаСопоставленияДоговоров() Экспорт

	Текст =
		"ВЫБРАТЬ
		|	ЭлектронныйДокументВходящийЭДО.Ссылка КАК ВходящийЭД,
		|	ОбъектыУчетаДокументовЭДО.ОбъектУчета КАК ГосударственныйКонтракт,
		|	ЕСТЬNULL(ДоговорыКонтрагентов.Ссылка, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) КАК СопоставленныйДоговор,
		|	ПодходящиеДоговоры.Ссылка КАК ПодходящийДоговор
		|ИЗ
		|	Документ.ЭлектронныйДокументВходящийЭДО КАК ЭлектронныйДокументВходящийЭДО
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыУчетаДокументовЭДО КАК ОбъектыУчетаДокументовЭДО
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГосударственныеКонтракты КАК ГосударственныеКонтракты
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|				ПО ГосударственныеКонтракты.Ссылка = ДоговорыКонтрагентов.ГосударственныйКонтракт
		|			ПО ОбъектыУчетаДокументовЭДО.ОбъектУчета = ГосударственныеКонтракты.Ссылка
		|		ПО ЭлектронныйДокументВходящийЭДО.Ссылка = ОбъектыУчетаДокументовЭДО.ЭлектронныйДокумент
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ПодходящиеДоговоры
		|		ПО ЭлектронныйДокументВходящийЭДО.НомерДокумента = ПодходящиеДоговоры.Номер
		|			И ЭлектронныйДокументВходящийЭДО.ДатаДокумента = ПодходящиеДоговоры.Дата
		|			И ЭлектронныйДокументВходящийЭДО.Контрагент = ПодходящиеДоговоры.Контрагент
		|ГДЕ
		|	(ЕСТЬNULL(ДоговорыКонтрагентов.Ссылка, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		|			ИЛИ &ПоказыватьСопоставленные)
		|	И (НЕ ПодходящиеДоговоры.Ссылка ЕСТЬ NULL
		|			ИЛИ &ПоказыватьОтсутствующиеПодходящиеДоговоры)
		|";
	
	Возврат Текст;
	
КонецФункции // ТекстЗапросаСопоставленияДоговоров()

Процедура СопоставлениеНоменклатурыВГосКонтрактах(СтруктураОтвета)

	ДополнитьПротокол(СтруктураОтвета, "Чтение гос.заказов...");
	ДлительныеОперации.СообщитьПрогресс(1, "Чтение гос.заказов...");
	Запрос = Новый Запрос(ТекстЗапросаЗаполненияСписков());
	Запрос.УстановитьПараметр("ПоказватьСНулевымКоличеством", Ложь);
	Результаты = Запрос.ВыполнитьПакет();
	тзГосконтракты = Результаты[2].Выгрузить();
	тзОбъектыЗакупки = Результаты[1].Выгрузить();
	тзПодходящаяНоменклатура = Результаты[3].Выгрузить();
	
	ДополнитьПротокол(СтруктураОтвета, "Сопоставление номенклатуры...");
	
	ё = 0;
	ПрошлыйПроцентВыполнения = 0;
	Для Каждого СтрокаГК Из тзГосконтракты Цикл
		ё = ё + 1;
		ПроцентВыполнения = ё * 100 / тзГосконтракты.Количество();
		Если ПрошлыйПроцентВыполнения <> Окр(ПроцентВыполнения) Тогда
			ПрошлыйПроцентВыполнения = Окр(ПроцентВыполнения);
			ДлительныеОперации.СообщитьПрогресс(ПрошлыйПроцентВыполнения, "Сопоставление номенклатуры ("+ё+" из "+тзГосконтракты.Количество()+")");
		КонецЕсли;
	
		Фильтр = Новый Структура("ГосударственныйКонтракт", СтрокаГК.ГосударственныйКонтракт);
		тзERP = тзОбъектыЗакупки.Скопировать(Фильтр);
		тзУТ = тзПодходящаяНоменклатура.Скопировать(Фильтр);
		тзРезультат = тзERP.СкопироватьКолонки();
		
		МассивЦен = ОбщегоНазначения.ВыгрузитьКолонку(тзERP, "Цена", Истина);
		МожноСопоставлятьТолькоПоЦене = МассивЦен.Количество() = тзERP.Количество();
		
		СтрокаУТ = Неопределено;
		Для Каждого СтрокаERP Из тзERP Цикл
			
			Если тзERP.Количество() = 1 И тзУТ.Количество() > 0 Тогда
				СтрокаУТ = тзУТ[0];
			Иначе
				СтрокаУТ = ПолучитьПодходящуюСтрокуУТ(тзУТ, СтрокаERP.Цена, СтрокаERP.Наименование, МожноСопоставлятьТолькоПоЦене); 
			КонецЕсли;
			
			Если СтрокаУТ = Неопределено Тогда
				НС = СтруктураОтвета.НеСопоставленнаяНоменклатура.Добавить();
				НС.Контракт = СтрокаГК.ГосударственныйКонтракт;
				НС.НоменклатураКонтрагента = СтрокаERP.НоменклатураПартнера;
				Прервать;
			КонецЕсли;
			
			Если МожноСопоставлятьТолькоПоЦене Тогда
				СтрокиОтправителя = тзУТ.НайтиСтроки(
					Новый Структура(
						"Цена", 
						СтрокаУТ.Цена
					)
				);
			Иначе
				СтрокиОтправителя = тзУТ.НайтиСтроки(
					Новый Структура(
						"ПредставлениеГосКонтракта,Цена", 
						СтрокаУТ.ПредставлениеГосКонтракта,
						СтрокаУТ.Цена
					)
				);
			КонецЕсли;
			
			Для Каждого СтрОтпр Из СтрокиОтправителя Цикл
				МожноРаспределить = Мин(СтрОтпр.Количество, СтрокаERP.Количество);
				Если МожноРаспределить <= 0 Тогда
					Продолжить;
				КонецЕсли;
				
				НС = тзРезультат.Добавить();
				ЗаполнитьЗначенияСвойств(НС, СтрокаERP);
				НС.НоменклатураПартнера = СтрОтпр.НоменклатураПартнера;
				НС.Номенклатура = СтрОтпр.Номенклатура;
				НС.Характеристика = СтрОтпр.Характеристика;
				НС.Упаковка = СтрОтпр.Упаковка;
				НС.Количество = МожноРаспределить;
				СтрокаERP.Количество = СтрокаERP.Количество - МожноРаспределить; 
				СтрОтпр.Количество = СтрОтпр.Количество - МожноРаспределить;
			КонецЦикла;
			
		КонецЦикла;
		
		//Проверка на полное сопоставление
		Если тзERP.Итог("Количество") > 0 ИЛИ тзУТ.Итог("Количество") > 0 Тогда
			ДополнитьПротокол(СтруктураОтвета, "!!! Не удалось распределить всю номенклатуру для госконтракта", СтрокаГК.ГосударственныйКонтракт);
			Если СтрокаУТ <> Неопределено Тогда
				НС = СтруктураОтвета.НеСопоставленнаяНоменклатура.Добавить();
				НС.Контракт = СтрокаГК.ГосударственныйКонтракт;
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		Отказ = Ложь;
		ЗаписатьГосКонтракт(СтрокаГК.ГосударственныйКонтракт, тзРезультат, Отказ); 
		Если Отказ Тогда
			ДополнитьПротокол(СтруктураОтвета, "!!! Не удалось записать госконтракт", СтрокаГК.ГосударственныйКонтракт);
			Если СтрокаУТ <> Неопределено Тогда
				НС = СтруктураОтвета.НеСопоставленнаяНоменклатура.Добавить();
				НС.Контракт = СтрокаГК.ГосударственныйКонтракт;
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		ДополнитьПротокол(
			СтруктураОтвета, 
			"Госконтракт успешно сопоставлен с номенклатурой" + ?(МожноСопоставлятьТолькоПоЦене," (только по ценам)",""), 
			СтрокаГК.ГосударственныйКонтракт
		);
		
	КонецЦикла;
	ДополнитьПротокол(СтруктураОтвета, "••••••••••••••••••••••••••");

КонецПроцедуры

Функция ПолучитьПодходящуюСтрокуУТ(тзУТ, Цена, Знач НаименованиеВГосКонтракте, МожноСопоставлятьТолькоПоЦене = Ложь) Экспорт

	Если СтрЧислоСтрок(НаименованиеВГосКонтракте) > 1 Тогда
		НаименованиеВГосКонтракте = СтрПолучитьСтроку(НаименованиеВГосКонтракте, 1);
	КонецЕсли;
	
	КлючКод = "";
	ПерваяБуква = НайтиПервуюБукву(НаименованиеВГосКонтракте);
	Если ПерваяБуква > 1 Тогда
		КлючКод = СокрЛП(Лев(НаименованиеВГосКонтракте, ПерваяБуква - 1));
	КонецЕсли;
	
	
	Для Каждого СтрокаУТ Из тзУТ Цикл
		Если СтрНайти(СтрокаУТ.ПредставлениеГосКонтракта, НаименованиеВГосКонтракте) > 0 
			И Цена = СтрокаУТ.Цена
			И СтрокаУТ.Количество > 0 Тогда
			
			Возврат СтрокаУТ;
			
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(КлючКод) Тогда
			Если СтрНайти(СтрокаУТ.ПредставлениеГосКонтракта, КлючКод)
				И Цена = СтрокаУТ.Цена
				И СтрокаУТ.Количество > 0 Тогда
				
				Возврат СтрокаУТ;
				
			КонецЕсли;				
		КонецЕсли;

		Если МожноСопоставлятьТолькоПоЦене 
			И Цена = СтрокаУТ.Цена
			И СтрокаУТ.Количество > 0 Тогда
				
				Возврат СтрокаУТ;
				
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
КонецФункции // ПолучитьПодходящуюСтрокуУТ()

Функция НайтиПервуюБукву(СтрокаПоиска)

	Буквы = "ёйцукенгшщзхъэждлорпавыфячсмитьбюqwertyuioplkjhgfdsazxcvbnm";
	Для НомерПозиции = 1 По СтрДлина(СтрокаПоиска) Цикл
		ОдинСимвол = Сред(СтрокаПоиска, НомерПозиции, 1);
		Если СтрНайти(Буквы, нРег(ОдинСимвол)) Тогда
			Возврат НомерПозиции;
		КонецЕсли;
	КонецЦикла;
	
	Возврат 0;

КонецФункции // НайтиПервуюБукву()


Функция ТекстЗапросаЗаполненияСписков() Экспорт

	Текст =
		"ВЫБРАТЬ
		|	ОбъектыУчетаДокументовЭДО.ОбъектУчета КАК ГосударственныйКонтракт,
		|	ГосударственныеКонтрактыНоменклатураОбъектовЗакупки.НоменклатураПартнера КАК НоменклатураПартнера,
		|	ГосударственныеКонтрактыНоменклатураОбъектовЗакупки.Количество КАК Количество,
		|	ГосударственныеКонтрактыНоменклатураОбъектовЗакупки.Номенклатура КАК Номенклатура,
		|	ГосударственныеКонтрактыНоменклатураОбъектовЗакупки.Характеристика КАК Характеристика,
		|	ГосударственныеКонтрактыНоменклатураОбъектовЗакупки.Упаковка КАК Упаковка,
		|	ГосударственныеКонтрактыНоменклатураОбъектовЗакупки.Идентификатор КАК Идентификатор,
		|	ГосударственныеКонтрактыОбъектыЗакупки.Цена КАК Цена,
		|	ГосударственныеКонтрактыОбъектыЗакупки.Наименование КАК Наименование,
		|	ДоговорыКонтрагентов.Ссылка КАК Договор
		|ПОМЕСТИТЬ ДанныеERP
		|ИЗ
		|	Документ.ЭлектронныйДокументВходящийЭДО КАК ЭлектронныйДокументВходящийЭДО
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыУчетаДокументовЭДО КАК ОбъектыУчетаДокументовЭДО
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГосударственныеКонтракты.НоменклатураОбъектовЗакупки КАК ГосударственныеКонтрактыНоменклатураОбъектовЗакупки
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГосударственныеКонтракты.ОбъектыЗакупки КАК ГосударственныеКонтрактыОбъектыЗакупки
		|				ПО ГосударственныеКонтрактыНоменклатураОбъектовЗакупки.Ссылка = ГосударственныеКонтрактыОбъектыЗакупки.Ссылка
		|					И ГосударственныеКонтрактыНоменклатураОбъектовЗакупки.Идентификатор = ГосударственныеКонтрактыОбъектыЗакупки.Идентификатор
		|			ПО ОбъектыУчетаДокументовЭДО.ОбъектУчета = ГосударственныеКонтрактыНоменклатураОбъектовЗакупки.Ссылка
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|			ПО ОбъектыУчетаДокументовЭДО.ОбъектУчета = ДоговорыКонтрагентов.ГосударственныйКонтракт
		|		ПО ЭлектронныйДокументВходящийЭДО.Ссылка = ОбъектыУчетаДокументовЭДО.ЭлектронныйДокумент
		|ГДЕ
		|	ГосударственныеКонтрактыНоменклатураОбъектовЗакупки.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|	И (ГосударственныеКонтрактыОбъектыЗакупки.Количество > 0
		|			ИЛИ &ПоказватьСНулевымКоличеством)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеERP.ГосударственныйКонтракт КАК ГосударственныйКонтракт,
		|	ДанныеERP.НоменклатураПартнера КАК НоменклатураПартнераСтарая,
		|	ДанныеERP.НоменклатураПартнера.Наименование КАК НаименованиеНоменклатурыПартнера,
		|	ДанныеERP.Количество КАК Количество,
		|	ДанныеERP.Номенклатура КАК Номенклатура,
		|	ДанныеERP.Характеристика КАК Характеристика,
		|	ДанныеERP.Упаковка КАК Упаковка,
		|	ДанныеERP.Идентификатор КАК Идентификатор,
		|	ДанныеERP.Цена КАК Цена,
		|	ДанныеERP.Наименование КАК Наименование,
		|	ДанныеERP.Договор КАК Договор,
		|	ЗНАЧЕНИЕ(Справочник.НоменклатураКонтрагентов.ПустаяСсылка) КАК НоменклатураПартнера
		|ИЗ
		|	ДанныеERP КАК ДанныеERP
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеERP.ГосударственныйКонтракт КАК ГосударственныйКонтракт,
		|	МАКСИМУМ(ДанныеERP.Договор) КАК Договор,
		|	МАКСИМУМ(ЕСТЬNULL(докЗаказКлиента.Ссылка, ЗНАЧЕНИЕ(Документ.ЗаказКлиента.ПустаяСсылка))) КАК ЗаказКлиента
		|ИЗ
		|	ДанныеERP КАК ДанныеERP
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК докЗаказКлиента
		|		ПО ДанныеERP.Договор = докЗаказКлиента.Договор
		|			И (НЕ докЗаказКлиента.ПометкаУдаления)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеERP.ГосударственныйКонтракт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеERP.ГосударственныйКонтракт КАК ГосударственныйКонтракт,
		|	ЗаказКлиентаТовары.НоменклатураПартнера КАК НоменклатураПартнера,
		|	ЗаказКлиентаТовары.Номенклатура КАК Номенклатура,
		|	ЗаказКлиентаТовары.Характеристика КАК Характеристика,
		|	ЕСТЬNULL(ЗаказКлиентаТовары.НоменклатураПартнера.НаименованиеПолное, """") КАК ПредставлениеГосКонтракта,
		|	ЗаказКлиентаТовары.Цена КАК Цена,
		|	ЗаказКлиентаТовары.Количество КАК Количество,
		|	ЗаказКлиентаТовары.Упаковка КАК Упаковка
		|ИЗ
		|	ДанныеERP КАК ДанныеERP
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
		|		ПО ДанныеERP.Договор = ЗаказКлиентаТовары.Ссылка.Договор";

	Возврат Текст;

КонецФункции


Процедура ДополнитьПротокол(СтруктураОтвета, Текст="", СсылочныйОбъект = Неопределено)

	СтруктураОтвета.Протокол = СтруктураОтвета.Протокол
	+ ?(ПустаяСтрока(СтруктураОтвета.Протокол),"",Символы.ПС)
	+ Формат(ТекущаяДата(),"ДЛФ=T") + " " + Текст
	+ ?(ЗначениеЗаполнено(СсылочныйОбъект)," "+СсылочныйОбъект,"");

	Если ЗначениеЗаполнено(СсылочныйОбъект) Тогда
		ЗаписьЖурналаРегистрации(
			"Сопоставление объектов ЭДО",
			УровеньЖурналаРегистрации.Предупреждение,
			СсылочныйОбъект.Метаданные(),
			СсылочныйОбъект,
			Текст
		);
	Иначе
		ЗаписьЖурналаРегистрации("Сопоставление объектов ЭДО",УровеньЖурналаРегистрации.Предупреждение,,,Текст);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьГосКонтракт(ГосКонтракт, тзОбъектыЗакупки, Отказ = Ложь) Экспорт

	НачатьТранзакцию();
	
	тзДанныеЗаписи = тзОбъектыЗакупки.Скопировать(Новый Структура("ГосударственныйКонтракт",ГосКонтракт));
	Для Каждого Стр Из тзДанныеЗаписи Цикл
		Если НЕ ЗначениеЗаполнено(Стр.НоменклатураПартнера) Тогда
			ОтменитьТранзакцию();
			ОбщегоНазначения.СообщитьПользователю(
				"Не заполнена номенклатура партнёра в заказе клиента. "+ОписаниеОшибки(),,,,
				Отказ
			);
			Возврат;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Стр.НоменклатураПартнераСтарая) Тогда
		
			Если Стр.НоменклатураПартнераСтарая <> Стр.НоменклатураПартнера Тогда
				оНоменклатураПартнераСтарая = Стр.НоменклатураПартнераСтарая.ПолучитьОбъект();
				оНоменклатураПартнера = Стр.НоменклатураПартнера.ПолучитьОбъект();
				
				ЗаполнитьЗначенияСвойств(оНоменклатураПартнера, оНоменклатураПартнераСтарая,,"Код,НаименованиеПолное");
				Попытка
					оНоменклатураПартнера.Записать();
				Исключение
					ОтменитьТранзакцию();
					ОбщегоНазначения.СообщитьПользователю(
						"Не удалось записать номенклатуру партнёра. "+ОписаниеОшибки(),
						Стр.НоменклатураПартнера,,,
						Отказ
					);
					Возврат;
				КонецПопытки;
				
				Попытка
					оНоменклатураПартнераСтарая.УстановитьПометкуУдаления(Истина);
				ИСключение
					ОтменитьТранзакцию();
					ОбщегоНазначения.СообщитьПользователю(
						"Не удалось пометить на удаление номенклатуру партнёра. "+ОписаниеОшибки(),
						Стр.НоменклатураПартнераСтарая,,,
						Отказ
					);
					Возврат;
				КонецПопытки;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	
	тзДанныеЗаписи.Свернуть("Идентификатор,НоменклатураПартнера,Номенклатура,Характеристика,Упаковка","Количество");
	
	
	о = ГосКонтракт.ПолучитьОбъект();
	о.НоменклатураОбъектовЗакупки.Загрузить(тзДанныеЗаписи);
	
	Попытка
		о.Записать();
	Исключение
		ОтменитьТранзакцию();
		ОбщегоНазначения.СообщитьПользователю(
			"Не удалось записать государственный контракт. "+ОписаниеОшибки(),
			ГосКонтракт,,,
			Отказ
		);
		Возврат;
	КонецПопытки;
	
	ЗафиксироватьТранзакцию();
	

КонецПроцедуры
