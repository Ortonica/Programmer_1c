
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбновитьСписокСопоставлений();
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокСопоставлений()
	
	МодульОбъекта = РеквизитФормыВЗначение("Объект");

	Запрос = Новый Запрос(МодульОбъекта.ТекстЗапросаСопоставленияДоговоров());
	
	Запрос.УстановитьПараметр("ПоказыватьСопоставленные", ПоказатьСопоставленные);
	Запрос.УстановитьПараметр("ПоказыватьОтсутствующиеПодходящиеДоговоры", ПоказатьОтсутствующиеПодходящиеДоговоры);
	СписокСопоставлений.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры // ОбновитьСписокСопоставлений()

&НаКлиенте
Процедура ПоказатьСопоставленныеПриИзменении(Элемент)
	ОбновитьСписокСопоставлений();
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОтсутствующиеПодходящиеДоговорыПриИзменении(Элемент)
	ОбновитьСписокСопоставлений();
КонецПроцедуры

&НаКлиенте
Процедура СписокСопоставленийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
    ДанныеСтроки = Элемент.ДанныеСтроки(ВыбраннаяСтрока);
    ИмяПоля = Сред(Поле.Имя, СтрДлина(Элемент.Имя)+1);
    ПоказатьЗначение(, ДанныеСтроки[ИмяПоля]);
КонецПроцедуры

&НаКлиенте
Процедура Сопоставить(Команда)
	СопоставитьНаСервере();
	Закрыть(Истина);
КонецПроцедуры

&НаСервере
Функция СопоставитьНаСервере()
	
	Для Каждого СтрокаРезультата Из СписокСопоставлений Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаРезультата.ПодходящийДоговор) Тогда
			Продолжить;
		КонецЕсли;
		
		оДоговор = СтрокаРезультата.ПодходящийДоговор.ПолучитьОбъект();
		оДоговор.ГосударственныйКонтракт = СтрокаРезультата.ГосударственныйКонтракт;
		оДоговор.Записать();
		
	КонецЦикла;
	
КонецФункции

