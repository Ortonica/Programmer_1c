
&НаСервере
&ИзменениеИКонтроль("НастроитьДинамическийСписок")
Процедура РСК_НастроитьДинамическийСписок()

	СвойстваСписка = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка();

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Файлы.Ссылка КАК Ссылка,
	|	Файлы.ПометкаУдаления,
	|	ВЫБОР
	|		КОГДА Файлы.ПометкаУдаления = ИСТИНА
	|			ТОГДА ЕСТЬNULL(Файлы.ИндексКартинки, 2) + 1
	|		ИНАЧЕ ЕСТЬNULL(Файлы.ИндексКартинки, 2)
	|	КОНЕЦ КАК ИндексКартинки,
	|	Файлы.Наименование КАК Наименование,
	|	ВЫРАЗИТЬ(Файлы.Описание КАК СТРОКА(500)) КАК Описание,
	|	Файлы.Автор,
	|	Файлы.ДатаСоздания,
	|	Файлы.Изменил КАК Отредактировал,
	|	ДОБАВИТЬКДАТЕ(Файлы.ДатаМодификацииУниверсальная, СЕКУНДА, &СекундДоМестногоВремени) КАК ДатаИзменения,
	|	ВЫРАЗИТЬ(Файлы.Размер / 1024 КАК ЧИСЛО(10, 0)) КАК Размер,
	|	Файлы.ПодписанЭП,
	|	Файлы.Зашифрован,
	|	ВЫБОР
	|		КОГДА Файлы.ПодписанЭП
	|				И Файлы.Зашифрован
	|			ТОГДА 2
	|		КОГДА Файлы.Зашифрован
	|			ТОГДА 1
	|		КОГДА Файлы.ПодписанЭП
	|			ТОГДА 0
	|		ИНАЧЕ -1
	|	КОНЕЦ КАК НомерКартинкиПодписанЗашифрован,
	|	ВЫБОР
	|		КОГДА НЕ Файлы.Редактирует В (&ПустыеПользователи)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФайлРедактируется,
	|	ВЫБОР
	|		КОГДА Файлы.Редактирует = &ТекущийПользователь
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФайлРедактируетТекущийПользователь,
	|	ВЫБОР
	|		КОГДА НЕ Файлы.Редактирует В (&ПустыеПользователи)
	|				И Файлы.Редактирует <> &ТекущийПользователь
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФайлРедактируетДругойПользователь,
	|	Файлы.Расширение КАК Расширение,
	|	ВЫБОР
	|		КОГДА СтатусыСинхронизацииФайловСОблачнымСервисом.УчетнаяЗапись <> НЕОПРЕДЕЛЕНО
	|				И Файлы.Редактирует = НЕОПРЕДЕЛЕНО
	|			ТОГДА СтатусыСинхронизацииФайловСОблачнымСервисом.УчетнаяЗапись
	|		ИНАЧЕ Файлы.Редактирует
	|	КОНЕЦ КАК Редактирует,
	|	Файлы.Редактирует КАК РедактируетПользователь,
	|	&ЭтоГруппа КАК ЭтоГруппа,
	|	&Служебный КАК Служебный,
	|	Файлы.ВладелецФайла КАК ВладелецФайла,
	|	Файлы.ХранитьВерсии КАК ХранитьВерсии
	|ИЗ
	|	&ИмяСправочника КАК Файлы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСинхронизацииФайловСОблачнымСервисом КАК СтатусыСинхронизацииФайловСОблачнымСервисом
	|		ПО Файлы.Ссылка = СтатусыСинхронизацииФайловСОблачнымСервисом.Файл
	|ГДЕ
	|	Файлы.ВладелецФайла = &ВладелецФайлов";

	#Вставка
	//++ РС Консалт: Трофимов Евгений 19.09.2022 Задача 20428
	//e1cib/data/Документ.Задание?ref=a6f953b3a4189cef4cb1f9e43e6bd006
	//Добавление колонки РСК_ТипФайла для справочника ЗаказКлиентаПрисоединенныеФайлы
	ТекстЗапроса = ТекстЗапросаСписка(ИмяСправочникаХранилищаФайлов);
	//-- КонецЗадачи 20428	
	#КонецВставки	
	ПолноеИмяСправочника = "Справочник." + ИмяСправочникаХранилищаФайлов;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяСправочника", ПолноеИмяСправочника);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Служебный", ?(ЕстьРеквизитСлужебный, "Файлы.Служебный", "ЛОЖЬ"));

	СвойстваСписка.ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЭтоГруппа",
	?(ЕстьГруппыФайлов, "Файлы.ЭтоГруппа", "ЛОЖЬ"));

	СвойстваСписка.ОсновнаяТаблица  = ПолноеИмяСправочника;
	СвойстваСписка.ДинамическоеСчитываниеДанных = Истина;
	ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.Список, СвойстваСписка);

	ПустыеПользователи = Новый Массив;
	ПустыеПользователи.Добавить(Неопределено);
	ПустыеПользователи.Добавить(Справочники.Пользователи.ПустаяСсылка());
	ПустыеПользователи.Добавить(Справочники.ВнешниеПользователи.ПустаяСсылка());
	ПустыеПользователи.Добавить(Справочники.УчетныеЗаписиСинхронизацииФайлов.ПустаяСсылка());

	Список.Параметры.УстановитьЗначениеПараметра("ВладелецФайлов",      Параметры.ВладелецФайла);
	Список.Параметры.УстановитьЗначениеПараметра("ТекущийПользователь", Пользователи.АвторизованныйПользователь());
	Список.Параметры.УстановитьЗначениеПараметра("ПустыеПользователи",  ПустыеПользователи);

	ДатаУниверсальная = ТекущаяДатаСеанса();
	Список.Параметры.УстановитьЗначениеПараметра("СекундДоМестногоВремени",
	МестноеВремя(ДатаУниверсальная, ЧасовойПоясСеанса()) - ДатаУниверсальная);

КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 19.09.2022 Задача 20428
//e1cib/data/Документ.Задание?ref=a6f953b3a4189cef4cb1f9e43e6bd006
&НаСервереБезКонтекста
Функция ТекстЗапросаСписка(ИмяСправочникаХранилищаФайлов)
	
	//Запросы отличаются только полем РСК_ТипФайла
	Если ИмяСправочникаХранилищаФайлов = "ЗаказКлиентаПрисоединенныеФайлы" Тогда
		Текст =
			"ВЫБРАТЬ
			|	Файлы.Ссылка КАК Ссылка,
			|	Файлы.ПометкаУдаления КАК ПометкаУдаления,
			|	ВЫБОР
			|		КОГДА Файлы.ПометкаУдаления = ИСТИНА
			|			ТОГДА ЕСТЬNULL(Файлы.ИндексКартинки, 2) + 1
			|		ИНАЧЕ ЕСТЬNULL(Файлы.ИндексКартинки, 2)
			|	КОНЕЦ КАК ИндексКартинки,
			|	Файлы.Наименование КАК Наименование,
			|	ВЫРАЗИТЬ(Файлы.Описание КАК СТРОКА(500)) КАК Описание,
			|	Файлы.Автор КАК Автор,
			|	Файлы.ДатаСоздания КАК ДатаСоздания,
			|	Файлы.Изменил КАК Отредактировал,
			|	ДОБАВИТЬКДАТЕ(Файлы.ДатаМодификацииУниверсальная, СЕКУНДА, &СекундДоМестногоВремени) КАК ДатаИзменения,
			|	ВЫРАЗИТЬ(Файлы.Размер / 1024 КАК ЧИСЛО(10, 0)) КАК Размер,
			|	Файлы.ПодписанЭП КАК ПодписанЭП,
			|	Файлы.Зашифрован КАК Зашифрован,
			|	ВЫБОР
			|		КОГДА Файлы.ПодписанЭП
			|				И Файлы.Зашифрован
			|			ТОГДА 2
			|		КОГДА Файлы.Зашифрован
			|			ТОГДА 1
			|		КОГДА Файлы.ПодписанЭП
			|			ТОГДА 0
			|		ИНАЧЕ -1
			|	КОНЕЦ КАК НомерКартинкиПодписанЗашифрован,
			|	ВЫБОР
			|		КОГДА НЕ Файлы.Редактирует В (&ПустыеПользователи)
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ФайлРедактируется,
			|	ВЫБОР
			|		КОГДА Файлы.Редактирует = &ТекущийПользователь
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ФайлРедактируетТекущийПользователь,
			|	ВЫБОР
			|		КОГДА НЕ Файлы.Редактирует В (&ПустыеПользователи)
			|				И Файлы.Редактирует <> &ТекущийПользователь
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ФайлРедактируетДругойПользователь,
			|	Файлы.Расширение КАК Расширение,
			|	ВЫБОР
			|		КОГДА СтатусыСинхронизацииФайловСОблачнымСервисом.УчетнаяЗапись <> НЕОПРЕДЕЛЕНО
			|				И Файлы.Редактирует = НЕОПРЕДЕЛЕНО
			|			ТОГДА СтатусыСинхронизацииФайловСОблачнымСервисом.УчетнаяЗапись
			|		ИНАЧЕ Файлы.Редактирует
			|	КОНЕЦ КАК Редактирует,
			|	Файлы.Редактирует КАК РедактируетПользователь,
			|	&ЭтоГруппа КАК ЭтоГруппа,
			|	&Служебный КАК Служебный,
			|	Файлы.ВладелецФайла КАК ВладелецФайла,
			|	Файлы.ХранитьВерсии КАК ХранитьВерсии,
			|	Файлы.РСК_ТипФайла КАК РСК_ТипФайла
			|ИЗ
			|	&ИмяСправочника КАК Файлы
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСинхронизацииФайловСОблачнымСервисом КАК СтатусыСинхронизацииФайловСОблачнымСервисом
			|		ПО Файлы.Ссылка = СтатусыСинхронизацииФайловСОблачнымСервисом.Файл
			|ГДЕ
			|	Файлы.ВладелецФайла = &ВладелецФайлов
			|";
	Иначе
		Текст =
			"ВЫБРАТЬ
			|	Файлы.Ссылка КАК Ссылка,
			|	Файлы.ПометкаУдаления КАК ПометкаУдаления,
			|	ВЫБОР
			|		КОГДА Файлы.ПометкаУдаления = ИСТИНА
			|			ТОГДА ЕСТЬNULL(Файлы.ИндексКартинки, 2) + 1
			|		ИНАЧЕ ЕСТЬNULL(Файлы.ИндексКартинки, 2)
			|	КОНЕЦ КАК ИндексКартинки,
			|	Файлы.Наименование КАК Наименование,
			|	ВЫРАЗИТЬ(Файлы.Описание КАК СТРОКА(500)) КАК Описание,
			|	Файлы.Автор КАК Автор,
			|	Файлы.ДатаСоздания КАК ДатаСоздания,
			|	Файлы.Изменил КАК Отредактировал,
			|	ДОБАВИТЬКДАТЕ(Файлы.ДатаМодификацииУниверсальная, СЕКУНДА, &СекундДоМестногоВремени) КАК ДатаИзменения,
			|	ВЫРАЗИТЬ(Файлы.Размер / 1024 КАК ЧИСЛО(10, 0)) КАК Размер,
			|	Файлы.ПодписанЭП КАК ПодписанЭП,
			|	Файлы.Зашифрован КАК Зашифрован,
			|	ВЫБОР
			|		КОГДА Файлы.ПодписанЭП
			|				И Файлы.Зашифрован
			|			ТОГДА 2
			|		КОГДА Файлы.Зашифрован
			|			ТОГДА 1
			|		КОГДА Файлы.ПодписанЭП
			|			ТОГДА 0
			|		ИНАЧЕ -1
			|	КОНЕЦ КАК НомерКартинкиПодписанЗашифрован,
			|	ВЫБОР
			|		КОГДА НЕ Файлы.Редактирует В (&ПустыеПользователи)
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ФайлРедактируется,
			|	ВЫБОР
			|		КОГДА Файлы.Редактирует = &ТекущийПользователь
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ФайлРедактируетТекущийПользователь,
			|	ВЫБОР
			|		КОГДА НЕ Файлы.Редактирует В (&ПустыеПользователи)
			|				И Файлы.Редактирует <> &ТекущийПользователь
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ФайлРедактируетДругойПользователь,
			|	Файлы.Расширение КАК Расширение,
			|	ВЫБОР
			|		КОГДА СтатусыСинхронизацииФайловСОблачнымСервисом.УчетнаяЗапись <> НЕОПРЕДЕЛЕНО
			|				И Файлы.Редактирует = НЕОПРЕДЕЛЕНО
			|			ТОГДА СтатусыСинхронизацииФайловСОблачнымСервисом.УчетнаяЗапись
			|		ИНАЧЕ Файлы.Редактирует
			|	КОНЕЦ КАК Редактирует,
			|	Файлы.Редактирует КАК РедактируетПользователь,
			|	&ЭтоГруппа КАК ЭтоГруппа,
			|	&Служебный КАК Служебный,
			|	Файлы.ВладелецФайла КАК ВладелецФайла,
			|	Файлы.ХранитьВерсии КАК ХранитьВерсии,
			|	ЗНАЧЕНИЕ(Перечисление.РСК_ТипПрисоединенногоКСделкеФайла.ПустаяСсылка) КАК РСК_ТипФайла
			|ИЗ
			|	&ИмяСправочника КАК Файлы
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСинхронизацииФайловСОблачнымСервисом КАК СтатусыСинхронизацииФайловСОблачнымСервисом
			|		ПО Файлы.Ссылка = СтатусыСинхронизацииФайловСОблачнымСервисом.Файл
			|ГДЕ
			|	Файлы.ВладелецФайла = &ВладелецФайлов
			|";
	КонецЕсли;
	
	Возврат Текст;

КонецФункции // ТекстЗапросаСписка()

&НаКлиенте
Процедура РСК_СписокВыборВместо(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	//++ РС Консалт: Трофимов Евгений 19.09.2022 Задача 20428
	//e1cib/data/Документ.Задание?ref=a6f953b3a4189cef4cb1f9e43e6bd006
	Если Поле.Имя = "СписокРСК_ТипФайла" Тогда
		Если Элементы.Список.РежимВыбора Тогда
			Возврат;
		КонецЕсли;
		СтандартнаяОбработка = Ложь;
		ДанныеСтроки = Элемент.ДанныеСтроки(ВыбраннаяСтрока);
		ДопПарам = Новый Структура("ЗаказКлиентаПрисоединенныеФайлы", ДанныеСтроки.Ссылка);
		
		ПоказатьВводЗначения(
			Новый ОписаниеОповещения("ПослеВыбораТипаФайла", ЭтаФорма, ДопПарам), 
			ДанныеСтроки.РСК_ТипФайла,
			"Укажите тип файла",
			Новый ОписаниеТипов("ПеречислениеСсылка.РСК_ТипПрисоединенногоКСделкеФайла")
		);
		
		Возврат;
	КонецЕсли;	
	//-- КонецЗадачи 20428	
	
	ПродолжитьВызов(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
	
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 19.09.2022 Задача 20428
//e1cib/data/Документ.Задание?ref=a6f953b3a4189cef4cb1f9e43e6bd006
&НаКлиенте
Процедура ПослеВыбораТипаФайла(Значение, ДополнительныеПараметры) Экспорт
	
	Если Значение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьНовыйТипФайла(
		ДополнительныеПараметры.ЗаказКлиентаПрисоединенныеФайлы,
		Значение
	);
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 19.09.2022 Задача 20428
//e1cib/data/Документ.Задание?ref=a6f953b3a4189cef4cb1f9e43e6bd006
&НаСервереБезКонтекста
Процедура ЗаписатьНовыйТипФайла(ЗаказКлиентаПрисоединенныеФайлы, ТипФайла)

	о = ЗаказКлиентаПрисоединенныеФайлы.ПолучитьОбъект();
	о.РСК_ТипФайла = ТипФайла;
	о.Записать();

КонецПроцедуры // ЗаписатьНовыйТипФайла()

&НаСервере
Процедура РСК_ПриСозданииНаСервереВместо(Отказ, СтандартнаяОбработка)
		
	ВладелецФайла = Параметры.ВладелецФайла;
	
	ТекущаяСсылка = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ТекущаяСтрока");
	СписокОткрытИзКарточкиФайла = ЗначениеЗаполнено(ТекущаяСсылка);
	Элементы.ВладелецФайла.Видимость = СписокОткрытИзКарточкиФайла И Не Параметры.СкрыватьВладельца;
	Если СписокОткрытИзКарточкиФайла И ВладелецФайла = Неопределено Тогда
		ВладелецФайла = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущаяСсылка, "ВладелецФайла");
		Параметры.ВладелецФайла = ВладелецФайла;
	КонецЕсли;
	Если Параметры.ВладелецФайла = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'Список присоединенных файлов можно посмотреть
		                             |только в форме объекта-владельца.';
		                             |en = 'You can view the list of attached files
		                             |only in the object form of their owner.'");
	КонецЕсли;
	
	ТипВладельца = ТипЗнч(Параметры.ВладелецФайла);
	Если Метаданные.ОпределяемыеТипы.ВладелецФайлов.Тип.СодержитТип(ТипВладельца) Тогда
		ПолноеИмяВладельца = Метаданные.НайтиПоТипу(ТипВладельца).Имя;
		Если Метаданные.Справочники.Найти(ПолноеИмяВладельца + "ПрисоединенныеФайлы") = Неопределено Тогда
			ЭтоВладелецЭлементовСправочникаФайлы = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ФормаРедактировать.ТолькоВоВсехДействиях           = Параметры.ПростаяФорма;
	Элементы.ФормаОткрыть.ТолькоВоВсехДействиях                 = Параметры.ПростаяФорма;
	Элементы.ФормаЗакончитьРедактирование.ТолькоВоВсехДействиях = Параметры.ПростаяФорма;
	Элементы.СписокВажныеРеквизиты.Видимость                    = Не Параметры.ПростаяФорма;
	Предпросмотр                                                = Параметры.ПростаяФорма;
	
	ПоказыватьКолонкуРазмер = РаботаСФайламиСлужебный.ПолучитьПоказыватьКолонкуРазмер();
	Если Не ПоказыватьКолонкуРазмер Тогда
		Элементы.СписокРазмер.Видимость = Ложь;
	КонецЕсли;
	
	Если Не ПустаяСтрока(Параметры.ЗаголовокФормы) Тогда
		Заголовок = Параметры.ЗаголовокФормы;
	ИначеЕсли СписокОткрытИзКарточкиФайла Тогда
		Заголовок = Заголовок + ": " + ОбщегоНазначения.ПредметСтрокой(ВладелецФайла);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ПараметрыОтправки) Тогда
		ПараметрыОтправки = Параметры.ПараметрыОтправки;
	Иначе
		ПараметрыОтправки = РаботаСФайламиСлужебный.ПодготовитьСтруктуруПараметровОтправки();
	КонецЕсли;
	
	Если Параметры.РежимВыбора Тогда
		СтандартныеПодсистемыСервер.УстановитьКлючНазначенияФормы(ЭтотОбъект, "ВыборПодбор");
		РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		Заголовок = НСтр("ru = 'Выбор присоединенного файла';
						|en = 'Select attached file'");
	Иначе
		Элементы.Список.РежимВыбора = Ложь;
	КонецЕсли;
	
	НастройкиФайлов = РаботаСФайламиСлужебный.НастройкиФайлов();
	
	ИмяСправочникаХранилищаФайлов = Неопределено;
	
	ЗаголовокОшибки = НСтр("ru = 'Ошибка при настройке динамического списка присоединенных файлов.';
							|en = 'An error occurred when configuring the dynamic list of attached files.'");
	ОкончаниеОшибки = НСтр("ru = 'В этом случае настройка динамического списка невозможна.';
							|en = 'Cannot configure the dynamic list.'");
	
	ИмяСправочникаХранилищаФайлов = РаботаСФайламиСлужебный.ИмяСправочникаХраненияФайлов(
		Параметры.ВладелецФайла, "", ЗаголовокОшибки, ОкончаниеОшибки);
	ТипСправочникаСФайлами = Тип("СправочникСсылка." + ИмяСправочникаХранилищаФайлов);
	МетаданныеСправочникаСФайлами = Метаданные.НайтиПоТипу(ТипСправочникаСФайлами);
	ИмяСправочникаХранилищаВерсийФайлов = РаботаСФайламиСлужебный.ИмяСправочникаХраненияВерсийФайлов(
		Параметры.ВладелецФайла, "", ЗаголовокОшибки, ОкончаниеОшибки);
	ЕстьГруппыФайлов = МетаданныеСправочникаСФайлами.Иерархический;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда 
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		ЕстьПравоИспользоватьШаблоны = МодульУправлениеДоступом.ЕстьПраво("Чтение", Справочники.ПапкиФайлов.Шаблоны);
	Иначе
		ЕстьПравоИспользоватьШаблоны = ПравоДоступа("Чтение", Метаданные.Справочники.Файлы) И ПравоДоступа("Чтение", Метаданные.Справочники.ПапкиФайлов)
	КонецЕсли;
	
	Если НЕ ЕстьПравоИспользоватьШаблоны Или НастройкиФайлов.НеСоздаватьФайлыПоШаблону.Найти(Метаданные.НайтиПоТипу(ТипЗнч(ВладелецФайла))) <> Неопределено Тогда
		Элементы.ДобавитьФайлПоШаблону.Видимость = Ложь;
		Элементы.СписокКонтекстноеМенюДобавитьФайлПоШаблону.Видимость = Ложь;
	КонецЕсли;
	
	ЕстьВерсииФайлов = ЭтоВладелецЭлементовСправочникаФайлы;
	Если ТипЗнч(Пользователи.АвторизованныйПользователь()) = Тип("СправочникСсылка.ВнешниеПользователи") Тогда
		РаботаСФайламиСлужебный.ИзменитьФормуДляВнешнегоПользователя(ЭтотОбъект, Истина);
	КонецЕсли;
	
	ЕстьРеквизитСлужебный = РаботаСФайламиСлужебный.ЕстьРеквизитСлужебный(ИмяСправочникаХранилищаФайлов);
	НастроитьДинамическийСписок();
	
	Если Не ЕстьГруппыФайлов Тогда
		СкрытьКнопкиСозданияГруппы();
	КонецЕсли;
	
	ЕстьПравоДобавления = Истина;
	Если НЕ ПравоДоступа("ИнтерактивноеДобавление", МетаданныеСправочникаСФайлами) Тогда
		СкрытьКнопкиДобавления();
		ЕстьПравоДобавления = Ложь;
	КонецЕсли;
	
	Если Пользователи.ЭтоСеансВнешнегоПользователя() Тогда
		ТолькоПросмотр = Не ПравоДоступа("Редактирование", МетаданныеСправочникаСФайлами);
	Иначе
		ТолькоПросмотр = Не ПравоДоступа("Редактирование", МетаданныеСправочникаСФайлами);
	КонецЕсли;
	
	Если ТолькоПросмотр Тогда
		СкрытьКнопкиИзменения();
	КонецЕсли;
	
	ИменаВсехКомандФормы = ПолучитьИменаКомандФормы();
	ИменаЭлементов = Новый Массив;
	
	Для Каждого ЭлементФормы Из Элементы Цикл
		
		Если ТипЗнч(ЭлементФормы) <> Тип("КнопкаФормы") Тогда
			Продолжить;
		КонецЕсли;
		
		Если ИменаВсехКомандФормы.Найти(ЭлементФормы.ИмяКоманды) <> Неопределено
			Или ИменаВсехКомандФормы.Найти(ЭлементФормы.Имя) <> Неопределено Тогда
				ИменаЭлементов.Добавить(ЭлементФормы.Имя);
		КонецЕсли;
		
	КонецЦикла;
	
	ИменаЭлементовКнопокФормы = Новый ФиксированныйМассив(ИменаЭлементов);
	
	ПриИзмененииИспользованияПодписанияИлиШифрованияНаСервере();
	
	ИспользоватьПредпросмотр = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		ТипСправочникаСФайлами, "Предпросмотр");
	Если ИспользоватьПредпросмотр <> Неопределено Тогда
		Предпросмотр = ИспользоватьПредпросмотр;
	КонецЕсли;
	
	Элементы.АдресДанныхФайла.Видимость = Предпросмотр;
	Элементы.Предпросмотр.Пометка       = Предпросмотр;
	
	РасширенияПоддерживающиеПредпросмотр = РаботаСФайламиСлужебный.СписокРасширенийДляПредпросмотра();
	
	ОбновитьПояснениеОблачногоСервиса();
	
	Элементы.НастроитьСинхронизацию.Видимость = ПравоДоступа("Редактирование", Метаданные.Справочники.УчетныеЗаписиСинхронизацииФайлов);
	ЕстьЭлектроннаяПодпись = ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ЭлектроннаяПодпись");
	Элементы.ПечатьСоШтампом.Видимость = ЕстьЭлектроннаяПодпись;
	Элементы.СравнитьФайлы.Видимость = Не ОбщегоНазначения.ЭтоLinuxКлиент() И Не ОбщегоНазначения.ЭтоВебКлиент();
	
	ЗапрещенныеРасширения = РаботаСФайламиСлужебный.СписокЗапрещенныхРасширений();
	Элементы.ПоказыватьСлужебныеФайлы.Видимость = ЕстьРеквизитСлужебный
		И Пользователи.ЭтоПолноправныйПользователь();
	
	УстановитьУсловноеОформление();
	Если ЕстьРеквизитСлужебный Тогда
		РаботаСФайламиСлужебный.ДобавитьОтборыВСписокФайлов(Список);
	Иначе
		РаботаСФайламиСлужебный.УстановитьОтборПоПометкеУдаления(Список.Отбор);
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКоманды = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКоманды");
		ПараметрыРазмещения = МодульПодключаемыеКоманды.ПараметрыРазмещения();
		Типы = Новый Массив;
		Типы.Добавить(ТипСправочникаСФайлами);
		ПараметрыРазмещения.Источники = Новый ОписаниеТипов(Типы);
		МодульПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	Если ОбщегоНазначения.ЭтоМобильныйКлиент() Тогда
		Элементы.ПодменюДобавить.Отображение = ОтображениеКнопки.Картинка;
		Элементы.ДобавитьФайлСоСканера.Заголовок = НСтр("ru = 'С камеры устройства...';
														|en = 'From device camera...'");
	КонецЕсли;
	
	РаботаСФайламиПереопределяемый.ПриСозданииФормыСпискаФайлов(ЭтотОбъект);
	
	Элементы.СписокРСК_ТипФайла.Видимость = ТипЗнч(Параметры.ВладелецФайла) = Тип("ДокументСсылка.ЗаказКлиента");

КонецПроцедуры



