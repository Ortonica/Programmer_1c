
&НаСервере
Процедура РСК_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	//++ РС Консалт: Трофимов Евгений 28.06.2022 Задача 18502
	//e1cib/data/Документ.Задание?ref=8091e09e31ca7a44432d28359e3002e6
	//Решаем проблему указания складов: https://youtu.be/Xwe0pKxQOlo
	НайденныеСтроки = Объект.Товары.НайтиСтроки(Новый Структура("ЭтоСкладВыбраннойГруппы", Ложь));
	Для Каждого СтрокаСклада Из НайденныеСтроки Цикл
		СтрокаСклада.ЭтоСкладВыбраннойГруппы = Истина;
	КонецЦикла;
	//-- КонецЗадачи 18502	
КонецПроцедуры

&НаКлиенте
&ИзменениеИКонтроль("СкорректироватьИзменениеКоличества")
Функция РСК_СкорректироватьИзменениеКоличества(КоличествоИзменениеИсходное, СтрокаТовары)

	КлючевыеПараметры = ОбеспечениеВДокументахКлиентСервер.КлючевыеПараметрыФормыЗапросаКоличестваИСерий();
	ЗаполнитьЗначенияСвойств(КлючевыеПараметры, Параметры);

	КоличествоИзменение = КоличествоИзменениеИсходное;

	СтрокаТовары = Элементы.Товары.ТекущиеДанные;
	#Вставка
	//++ РС Консалт: Трофимов Евгений 28.06.2022 Задача 18502
	//e1cib/data/Документ.Задание?ref=8091e09e31ca7a44432d28359e3002e6
	Если ОтключитьКонтрольКоличества Тогда
		Возврат КоличествоИзменение;
	КонецЕсли;
	//-- КонецЗадачи 18502
	#КонецВставки

	// Нельзя изменить на количество большее чем указано в документе.
	Если Не КлючевыеПараметры.ПодборТоваров Тогда

		КоличествоИзменение = Мин(КоличествоИзменение, Объект.КоличествоУпаковок - Объект.Товары.Итог("Подобрано"));
		Если КоличествоИзменение < КоличествоИзменениеИсходное Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Указано количество больше, чем требуется подобрать. Изменено на: %1 %2.';
			|en = 'The specified quantity is more than required to pick. Changed to: %1 %2.'"),
			СтрокаТовары.Подобрано + КоличествоИзменение, ЕдиницаИзмерения);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,);
		КонецЕсли;
	КонецЕсли;

	// Нельзя оставить количество меньшнее чем оформлено.
	Если Не КлючевыеПараметры.ПодборТоваров
		И СтрокаТовары.ЭтоСтрокаДокумента Тогда

		КоличествоРезультат = СтрокаТовары.Подобрано + КоличествоИзменение;
		КоличествоКорректировка = -Мин(КоличествоРезультат - Объект.КоличествоОформлено, 0);
		КоличествоИзменение = КоличествоИзменение + КоличествоКорректировка;
		Если КоличествоКорректировка > 0 Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Указано количество меньше чем отгружено. Изменено на %1 %2.';
			|en = 'Quantity specified is less than shipped. Changed to %1 %2.'"),
			СтрокаТовары.Подобрано + КоличествоИзменение, ЕдиницаИзмерения);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,);
		КонецЕсли;
	КонецЕсли;

	Возврат КоличествоИзменение;

КонецФункции

&НаСервере
&ИзменениеИКонтроль("УправлениеЭлементамиФормыПриСозданииИИзмененииРеквизитов")
Процедура РСК_УправлениеЭлементамиФормыПриСозданииИИзмененииРеквизитов(Элемент)
	
	КлючевыеПараметры = ОбеспечениеВДокументахКлиентСервер.КлючевыеПараметрыФормыЗапросаКоличестваИСерий();
	ЗаполнитьЗначенияСвойств(КлючевыеПараметры, Параметры);
	
	Если Элемент = Неопределено Или Элемент = Элементы.СоставНабора  Или Элемент = Элементы.Упаковка Тогда
		
		ЕдиницаИзмерения = Неопределено;
		ЕдиницаИзмеренияНабора = Неопределено;
		Если Объект.ВариантКомплектацииНоменклатуры.Пустая() Тогда
			ЕдиницаИзмерения = Объект.Упаковка;
		Иначе
			ЕдиницаИзмерения = Объект.СоставНабора.НайтиПоИдентификатору(Элементы.СоставНабора.ТекущаяСтрока).Упаковка;
			ЕдиницаИзмеренияНабора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Номенклатура, "ЕдиницаИзмерения");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЕдиницаИзмерения) Тогда
			ЕдиницаИзмерения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущаяНоменклатура, "ЕдиницаИзмерения");
		КонецЕсли;
		ЕдиницаИзмеренияСерий = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущаяНоменклатура, "ЕдиницаИзмерения");
		ЕдиницаИзмеренияКоэффициент = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(ЕдиницаИзмерения, ТекущаяНоменклатура);
		ДопустимоеОтклонение = Константы.ДопустимоеОтклонениеПриОкругленииКоличества.Получить();
		ЭтоМернаяЕдиница = Справочники.УпаковкиЕдиницыИзмерения.ЭтоМернаяЕдиница(ЕдиницаИзмеренияСерий, "");
	
		
		// Упаковка в заголовках табличной части Товары.
		Элементы.ТоварыВРезерве.Заголовок = СтрШаблон(НСтр("ru = 'В резерве, %1';
															|en = 'In reserve, %1'"), ЕдиницаИзмерения);
		Элементы.ТоварыДоступно.Заголовок = СтрШаблон(НСтр("ru = 'Доступно, %1';
															|en = 'Available, %1'"), ЕдиницаИзмерения);
		Элементы.ТоварыГруппаПодобрано.Заголовок = СтрШаблон(НСтр("ru = 'Подобрано, %1';
																	|en = 'Selected, %1'"), ЕдиницаИзмерения);
		Элементы.Упаковка.ПодсказкаВвода = ЕдиницаИзмерения;
		
		// Упаковка в заголовках табличной части Серии.
		Элементы.СерииДоступно.Заголовок = СтрШаблон(НСтр("ru = 'Доступно, %1';
															|en = 'Available, %1'"), ЕдиницаИзмеренияСерий);
		Элементы.СерииПодобрано.Заголовок = СтрШаблон(НСтр("ru = 'Подобрано, %1';
															|en = 'Selected, %1'"), ЕдиницаИзмеренияСерий);
		
		ФорматнаяСтрока = "ЧДЦ=3; ЧН=0,000";
		Элементы.НадписьОбеспечено.Заголовок = СтрШаблон(
			НСтр("ru = 'Обособленно в наличии - %1 %3, в наличии и ожидается - %2 %3.';
				|en = 'Assigned in stock - %1 %3, available and expected - %2 %3.'"),
			Формат(Объект.Товары.Итог("ВНаличииОбособленно"), ФорматнаяСтрока),
			Формат(Объект.Товары.Итог("ПоГрафикуОбособленно"), ФорматнаяСтрока),
			ЕдиницаИзмерения);
			
	КонецЕсли;
	
	Если Элемент = Неопределено Или Элемент = Элементы.Упаковка Тогда
		
		Обработки.ЗапросКоличестваИСерий.ВыгрузитьВидыЦенВСписок(Объект, Элементы.ВидЦены.СписокВыбора, Ложь);
		Элементы.ВидЦены.СписокВыбора.Добавить(Справочники.ВидыЦен.ПустаяСсылка(), НСтр("ru = '<произвольная>';
																						|en = '<custom>'"));
		Если Элементы.ВидЦены.СписокВыбора.НайтиПоЗначению(Объект.ВидЦены) = Неопределено Тогда
			Объект.ВидЦены = Справочники.ВидыЦен.ПустаяСсылка();
		КонецЕсли;
		Обработки.ЗапросКоличестваИСерий.ВыгрузитьВидыЦенВСписок(Объект, Элементы.Цена.СписокВыбора, Истина);
		
		ЕдиницаИзмеренияТипИзмеряемойВеличины = "";
		УпаковкаТипИзмеряемойВеличины = "";
		
		ЕдиницаМерная  = Справочники.УпаковкиЕдиницыИзмерения.ЭтоМернаяЕдиница(ЕдиницаИзмеренияСерий, ЕдиницаИзмеренияТипИзмеряемойВеличины);
		УпаковкаМерная = Справочники.УпаковкиЕдиницыИзмерения.ЭтоМернаяЕдиница(Объект.Упаковка,  УпаковкаТипИзмеряемойВеличины);
		
		Если ЕдиницаМерная
			И УпаковкаТипИзмеряемойВеличины <> ЕдиницаИзмеренияТипИзмеряемойВеличины
			И УпаковкаТипИзмеряемойВеличины <> "Упаковка"
			И УпаковкаТипИзмеряемойВеличины <> ""
			Или ЕдиницаИзмеренияТипИзмеряемойВеличины = "КоличествоШтук"
				И УпаковкаМерная Тогда
			
			Элементы.Количество.Видимость = Истина;
			Элементы.НоменклатураЕдиницаИзмерения.Видимость = Истина;
			
		Иначе
			
			Элементы.Количество.Видимость = Ложь;
			Элементы.НоменклатураЕдиницаИзмерения.Видимость = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Элемент = Неопределено Или Элемент = Элементы.ВидЦены Тогда
		
		Элементы.ЦенаНабор.ТолькоПросмотр     = ЗначениеЗаполнено(Объект.ВидЦены);
		Элементы.ЦенаНабор.ПропускатьПриВводе = ЗначениеЗаполнено(Объект.ВидЦены);
		
	КонецЕсли;
	
	Если Элемент = Неопределено Или Элемент = Элементы.Цена Тогда
		
		ВидЦеныПредставление = ?(ЗначениеЗаполнено(Объект.ВидЦены), Объект.ВидЦены, НСтр("ru = '<произвольная>';
																						|en = '<custom>'"));
		
	КонецЕсли;
	
	Если Элемент = Неопределено Или Элемент = Элементы.Цена Или Элемент = Элементы.ВариантПредоставленияСкидки Тогда
		
		Элементы.ПроцентРучнойСкидкиНаценки.КнопкаСпискаВыбора = Ложь;
		Элементы.ПроцентРучнойСкидкиНаценки.СписокВыбора.Очистить();
		
		Если ВариантПредоставленияСкидки = "СКИДКА" Тогда
			Элементы.СтраницыВариантыПредоставленияСкидки.ТекущаяСтраница = Элементы.Скидка;
			Если МаксимальныйПроцентСкидки > 0 Тогда
				Элементы.ПроцентРучнойСкидкиНаценки.КнопкаСпискаВыбора = Истина;
				Элементы.ПроцентРучнойСкидкиНаценки.СписокВыбора.Добавить(
					МаксимальныйПроцентСкидки,
					Формат(МаксимальныйПроцентСкидки, "ЧДЦ=2"));
			КонецЕсли;
		Иначе
			Элементы.СтраницыВариантыПредоставленияСкидки.ТекущаяСтраница = Элементы.Наценка;
			Если МаксимальныйПроцентНаценки > 0 Тогда
				Элементы.ПроцентРучнойСкидкиНаценки.КнопкаСпискаВыбора = Истина;
				Элементы.ПроцентРучнойСкидкиНаценки.СписокВыбора.Добавить(
					МаксимальныйПроцентНаценки,
					Формат(МаксимальныйПроцентНаценки, "ЧДЦ=2"));
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Элемент = Неопределено
			Или Элемент = Элементы.Количество
			Или Элемент = Элементы.Упаковка
			Или Элемент = Элементы.КоличествоУпаковок Тогда
			
			Если ОкруглятьКоличество И Объект.Количество <> Цел(Объект.Количество) Тогда
				
				Элементы.Округлить.Видимость = Истина;
				Элементы.НоменклатураЕдиницаИзмерения.ЦветТекста = ЦветаСтиля.ПоясняющийОшибкуТекст;
				Элементы.Количество.ЦветТекста                   = ЦветаСтиля.ПоясняющийОшибкуТекст;
				
			Иначе
				
				Элементы.Округлить.Видимость = Ложь;
				Элементы.НоменклатураЕдиницаИзмерения.ЦветТекста = ЦветаСтиля.ЦветТекстаПоля;
				Элементы.Количество.ЦветТекста                   = ЦветаСтиля.ЦветТекстаПоля;
				
			КонецЕсли;
			
	КонецЕсли;
	
	Если Элемент = Неопределено
			Или Элемент = Элементы.РежимОтображенияТоваров Тогда
			
			Элементы.ТоварыВРезерве.Видимость = РежимОтображенияТоваров = "СвободныеОстатки";
			Элементы.ТоварыДоступно.Видимость = РежимОтображенияТоваров <> "Все";
			Элементы.ТоварыВНаличии.Видимость = РежимОтображенияТоваров = "СвободныеОстатки";
			Элементы.ТоварыПоГрафику.Видимость = РежимОтображенияТоваров = "ОстаткиИГрафик";
			
	КонецЕсли;

	Если Элемент = Неопределено
			Или Элемент = Элементы.СоставНабора Тогда
				ТекущийТипНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущаяНоменклатура,
					 "ТипНоменклатуры");
	
					ЭтоРаботаИлиУслуга = ТекущийТипНоменклатуры = Перечисления.ТипыНоменклатуры.Работа
						Или ТекущийТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга;
					Элементы.СтраницыТоварыСерии.Видимость = Не ЭтоРаботаИлиУслуга;
				
	КонецЕсли;

	Если Элемент = Неопределено
			Или Элемент = Элементы.СоставНабора
			Или Элемент = Элементы.ПереключательОбособленно
			Или Элемент = Элементы.РежимОтображенияТоваров
			Или Элемент = Элементы.ТолькоСкладыВыбраннойГруппы Тогда
		
		ОтборСтрокТовары = Новый Структура();
		ОтборСтрокТовары.Вставить("Обособленно", Объект.Обособленно);
		Если Не Объект.ВариантКомплектацииНоменклатуры.Пустая() Тогда
			ОтборСтрокТовары.Вставить("ИндексТовараДляОтбора", ТекущийИндексТовараДляОтбора);
		КонецЕсли;
		
		Если РежимОтображенияТоваров = "СвободныеОстатки" Тогда
			ОтборСтрокТовары.Вставить("ЕстьОстатокНаСкладе", Истина);
		КонецЕсли;
		
		Если РежимОтображенияТоваров = "ОстаткиИГрафик" Тогда
			ОтборСтрокТовары.Вставить("ЕстьОстатокВГрафике", Истина);
		КонецЕсли;
		
		Если ТолькоСкладыВыбраннойГруппы Тогда
			#Удаление
			ОтборСтрокТовары.Вставить("ЭтоСкладВыбраннойГруппы", Истина);
			#КонецУдаления
			#Вставка
			//++ РС Консалт: Трофимов Евгений 14.11.2022 Тикет 21848
			//e1cib/data/Документ.Задание?ref=81e36685e214105d4f66e5a228fd2a8e
			ОтборСтрокТовары.Вставить("Склад", Объект.Склад);
			//-- КонецТикета 21848			
			#КонецВставки
		КонецЕсли;
		
		Элементы.Товары.ОтборСтрок = Новый ФиксированнаяСтруктура(ОтборСтрокТовары);
		
	КонецЕсли;
	
	Если Элемент = Элементы.КУказаниюСерий Тогда
		
		Элементы.СтраницыТоварыСерии.ТекущаяСтраница = Элементы.СтраницаСерии;
		
		СтрокаТовары = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
		ОтборСтрокСерии = Новый Структура();
		ОтборСтрокСерии.Вставить("Номенклатура",   СтрокаТовары.Номенклатура);
		ОтборСтрокСерии.Вставить("Характеристика", СтрокаТовары.Характеристика);
		ОтборСтрокСерии.Вставить("Склад",          СтрокаТовары.Склад);
		Если РежимОтображенияСерий = "СвободныеОстатки" Тогда
			ОтборСтрокСерии.Вставить("ПроверятьДоступность", Истина);
		КонецЕсли;
		ОтборСтрокСерии.Вставить("Назначение", ?(СтрокаТовары.Обособленно И Не ЗначениеЗаполнено(СтрокаТовары.Назначение),
		                                        Неопределено,
		                                        СтрокаТовары.Назначение));
		
		Элементы.Серии.ОтборСтрок = Новый ФиксированнаяСтруктура(ОтборСтрокСерии);
		
		ВидНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТовары.Номенклатура, "ВидНоменклатуры");
		
		НастройкиИспользованияСерий = Справочники.ВидыНоменклатуры.НастройкиИспользованияСерий(
			ВидНоменклатуры,
			Параметры.ПараметрыУказанияСерий,
			Новый Структура("Склад", СтрокаТовары.Склад));
		НастройкиИспользованияСерий = Новый ФиксированнаяСтруктура(НастройкиИспользованияСерий);
		
		Элементы.ГруппаСерииРеквизитыЛокализации.Видимость = Ложь;
		Элементы.СерииДатаПроизводства.Видимость = Ложь;
		
		УправлениеСвойствамиУТ.ДобавитьКолонкиДополнительныхРеквизитов(
			НастройкиИспользованияСерий,
			ЭтотОбъект,
			"Объект.Серии",
			"Серии",
			Элементы.СерииДоступно.Имя,
			Истина);
			
		Для Каждого Описание Из НастройкиИспользованияСерий.ОписанияИспользованияРеквизитовСерии Цикл
			
			ИмяЭлементаСерий = Обработки.ЗапросКоличестваИСерий.НазванияЭлементовСерий(Описание.ИмяРеквизита);
			Если Описание.ИмяНастройки <> "ИспользоватьRFIDМеткиСерии" Тогда
				
				НастраиваемыйЭлемент = Элементы.Найти(ИмяЭлементаСерий);
				
				Если НастраиваемыйЭлемент = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				НастраиваемыйЭлемент.Видимость = Описание.Использование; 
				
				Если Не ПустаяСтрока(Описание.Формат) Тогда
					НастраиваемыйЭлемент.Формат = Описание.Формат;
				КонецЕсли;
				
				Если Не ПустаяСтрока(Описание.ПредставлениеФорматнойСтрокиВЗаголовке) Тогда
					ПредставлениеЗаголовкаКолонки = НСтр("ru = '%ПредставлениеРеквизита% (%ПредставлениеФормата%)';
														|en = '%ПредставлениеРеквизита% (%ПредставлениеФормата%)'");
					ПредставлениеЗаголовкаКолонки = СтрЗаменить(ПредставлениеЗаголовкаКолонки, "%ПредставлениеРеквизита%", Описание.ПредставлениеРеквизита);
					ПредставлениеЗаголовкаКолонки = СтрЗаменить(ПредставлениеЗаголовкаКолонки, "%ПредставлениеФормата%", Описание.ПредставлениеФорматнойСтрокиВЗаголовке);
					
					НастраиваемыйЭлемент.Заголовок = ПредставлениеЗаголовкаКолонки; 
				КонецЕсли;
				
				Если Описание.ИмяРеквизита = "ГоденДо" Тогда
					Элементы.СерииЗаполнитьПоFEFO.Видимость = Описание.Использование;
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
			
		ВариантПолученияДанных = Обработки.ПодборСерийВДокументы.ВариантПолучениеДанныхИзРегистровПоПараметрамФормы(
			Параметры.ПараметрыУказанияСерий,
			Неопределено,
			СтрокаТовары.Склад,
			ВидНоменклатуры);
		Заголовки = Обработки.ПодборСерийВДокументы.ЗаголовкиПоВариантуПолучениеДанныхИзРегистров(ВариантПолученияДанных);
		Если Заголовки.ЗаголовокКнопки <> "" Тогда
			Элементы.РежимОтображенияСерий.СписокВыбора[0].Представление = Заголовки.ЗаголовокКнопки;
		КонецЕсли;
		Если Заголовки.ЗаголовокСвободногоОстатка <> "" Тогда
			Элементы.СерииДоступно.Заголовок = СтрЗаменить(Заголовки.ЗаголовокСвободногоОстатка,
				"%ЕдиницаИзмерения%", Строка(ЕдиницаИзмеренияСерий));
		КонецЕсли;
		
		Элементы.ГруппаКоличествоИДействие.Видимость = Ложь;
		Элементы.ГруппаДействияИОбособленно.Видимость = Ложь;
		Элементы.ГруппаТребуетсяПодобратьПодобрано.Видимость = Ложь;
		Элементы.ГруппаСтраницаСерииПодобратьПоСтроке.Видимость = Истина;
		Элементы.СоставНабора.Доступность = Ложь;
		
	КонецЕсли;
	
	Если Элемент = Элементы.КВыборуДействий Тогда
		
		Элементы.СтраницыТоварыСерии.ТекущаяСтраница = Элементы.СтраницаТовары;
		Элементы.ГруппаКоличествоИДействие.Видимость = Истина;
		Элементы.ГруппаСтраницаСерииПодобратьПоСтроке.Видимость = Ложь;
		Элементы.ГруппаДействияИОбособленно.Видимость = Истина;
		Элементы.ГруппаТребуетсяПодобратьПодобрано.Видимость = Истина;
		Элементы.СоставНабора.Доступность = Истина;
		
	КонецЕсли;
	
	Если Элемент = Неопределено
			Или Элемент = Элементы.КВыборуДействий
			Или Элемент = Элементы.Количество
			Или Элемент = Элементы.КоличествоУпаковок
			Или Элемент = Элементы.Упаковка Тогда
				
				СформироватьНадписьПодобратьПодобрано(ЭтотОбъект);
			
	КонецЕсли;
	
	Если Элемент = Неопределено
			Или Элемент = Элементы.КВыборуДействий
			Или Элемент = Элементы.КУказаниюСерий Тогда
			
			Элементы.НадписьОбеспечено.Видимость = Не КлючевыеПараметры.ПодборТоваров
				И Элементы.СтраницыТоварыСерии.ТекущаяСтраница = Элементы.СтраницаТовары
				И ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Услуга
				И ПолучитьФункциональнуюОпцию("ИспользоватьОбособленноеОбеспечениеЗаказов")
				И Не Объект.Обособленно
				И (Объект.Товары.Итог("ВНаличииОбособленно") > 0
					Или Объект.Товары.Итог("ПоГрафикуОбособленно") > 0);
				
			Элементы.НадписьПодобратьПодобрано.Видимость = КлючевыеПараметры.ПодборТоваров
				И Элементы.СтраницыТоварыСерии.ТекущаяСтраница = Элементы.СтраницаТовары;
				
			Элементы.ДекорацияИнформация.Видимость = Элементы.НадписьОбеспечено.Видимость
				Или Элементы.НадписьПодобратьПодобрано.Видимость;
			
	КонецЕсли;
	
	// Ограничение списка действий.
	Если Элемент = Неопределено
			Или Элемент = Элементы.ПереключательОбособленно Тогда
				
				Если ДопустимыеВариантыОбеспечения <> Неопределено Тогда
					
					Элементы.ПереключательОбособленно.Доступность =
						ДопустимыеВариантыОбеспечения.Обособленные.Количество() > 0
						И ДопустимыеВариантыОбеспечения.Необособленные.Количество() > 0;
						
					СписокЭлементов = ?(Объект.Обособленно,
						ДопустимыеВариантыОбеспечения.Обособленные,
						ДопустимыеВариантыОбеспечения.Необособленные);
						
					Элементы.Действие.СписокВыбора.ЗагрузитьЗначения(СписокЭлементов);
					Элементы.Действие.Доступность = Элементы.Действие.СписокВыбора.Количество() > 1;
						
				КонецЕсли;
				
	КонецЕсли;
	
	Если Элемент = Неопределено
			Или Элемент = Элементы.ПереключательОбособленно
			Или Элемент = Элементы.Действие Тогда
			
		НужноУказыватьСерии = Ложь;
		Для Каждого Строка Из Объект.Товары Цикл
			Если Строка.СтатусУказанияСерий <> 0 Тогда
				НужноУказыватьСерии = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Элементы.КУказаниюСерий.Видимость            = НужноУказыватьСерии;
		Элементы.ТоварыСтатусУказанияСерий.Видимость = НужноУказыватьСерии;
		
	КонецЕсли;
	
КонецПроцедуры
