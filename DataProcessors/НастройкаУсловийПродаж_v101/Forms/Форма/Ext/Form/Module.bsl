
&НаКлиенте
Процедура ПерейтиКНастройке(Команда)
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.НастройкаУсловий;
	ПерейтиКНастройкеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПерейтиКНастройкеНаСервере()
	
	ТаблицаОбработки = ПреобразоватьСписокВТаблицуЗначений();
	ТаблицаДействующихСкидок = ПолучитьДействующиеСкидкиПоПартнерам(ТаблицаОбработки);
	Если ТаблицаОбработки.Количество() > 0 Тогда
		ЗаполнитьДеревоНастройки(ТаблицаОбработки,ТаблицаДействующихСкидок);
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Функция ПреобразоватьСписокВТаблицуЗначений()
	
	ТаблицаОбработки = Новый ТаблицаЗначений;
	ТаблицаОбработки.Колонки.Добавить("Партнер",Новый ОписаниеТипов("СправочникСсылка.Партнеры"));

	Для Каждого Стр Из СписокПартнеров Цикл 
		Если Стр.Значение <> Справочники.Партнеры.ПустаяСсылка() Тогда
			НоваяСтрока = ТаблицаОбработки.Добавить();
			НоваяСтрока.Партнер = Стр.Значение;
		КонецЕсли;
	КонецЦикла;
	
	
	Возврат ТаблицаОбработки;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДействующиеСкидкиПоПартнерам(ТаблицаОбработки) 
	
	ТаблицаСкидок = Новый ТаблицаЗначений;
	ТаблицаСкидок.Колонки.Добавить("ИндивидуальноеСоглашение",Новый ОписаниеТипов("СправочникСсылка.СоглашенияСКлиентами"));
	ТаблицаСкидок.Колонки.Добавить("Скидка",Новый ОписаниеТипов("СписокЗначений"));
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Партнеры",ТаблицаОбработки);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Партнеры.Партнер КАК Партнер
	|ПОМЕСТИТЬ ВТ_Партнеры
	|ИЗ
	|	&Партнеры КАК Партнеры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоглашенияСКлиентами.Ссылка КАК ИндивидуальноеСоглашение,
	|	ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка КАК СкидкаНаценка
	|ИЗ
	|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействиеСкидокНаценок.СрезПоследних КАК ДействиеСкидокНаценокСрезПоследних
	|		ПО (ДействиеСкидокНаценокСрезПоследних.Источник = СоглашенияСКлиентами.Ссылка)
	|			И (ДействиеСкидокНаценокСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДействияСкидок.Действует))
	|ГДЕ
	|	СоглашенияСКлиентами.Партнер В
	|			(ВЫБРАТЬ
	|				ВТ_Партнеры.Партнер КАК Партнер
	|			ИЗ
	|				ВТ_Партнеры КАК ВТ_Партнеры)
	|ИТОГИ ПО
	|	ИндивидуальноеСоглашение";
	
	Соглашения = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);		
	Пока Соглашения.Следующий() Цикл  
		СтрокаТаблицы = ТаблицаСкидок.Добавить();
		СтрокаТаблицы.ИндивидуальноеСоглашение = Соглашения.ИндивидуальноеСоглашение;
		ДействующиеСкидки = Соглашения.Выбрать(); 
		СписокСкидок 	  = Новый СписокЗначений; 
		Пока ДействующиеСкидки.Следующий() Цикл
			СписокСкидок.Добавить(ДействующиеСкидки.СкидкаНаценка);
		КонецЦикла;	
		СтрокаТаблицы.Скидка = СписокСкидок;
	КонецЦикла;
		
	Возврат ТаблицаСкидок;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДеревоНастройки(ТаблицаПартнеров,ТаблицаДействующихСкидок)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Партнеры",ТаблицаПартнеров);
	Запрос.УстановитьПараметр("ДатаНачалаДействия",ТекущаяДата());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Партнеры.Партнер КАК Партнер
	|ПОМЕСТИТЬ ВТ_Партнеры
	|ИЗ
	|	&Партнеры КАК Партнеры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Партнеры.Партнер КАК Партнер,
	|	ЕСТЬNULL(СоглашенияСКлиентами.Ссылка, ""БУДЕТ СОЗДАНО"") КАК ИндивидуальноеСоглашение,
	|	ЕСТЬNULL(СоглашенияСКлиентами.ДатаНачалаДействия, &ДатаНачалаДействия) КАК НачалоДействия,
	|	СоглашенияСКлиентами.ГрафикОплаты КАК Отсрочка,
	|	СоглашенияСКлиентами.Подразделение КАК Подразделение,
	|	""Скидка"" КАК Скидка
	|ИЗ
	|	ВТ_Партнеры КАК ВТ_Партнеры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
	|		ПО ВТ_Партнеры.Партнер = СоглашенияСКлиентами.Партнер
	|			И (СоглашенияСКлиентами.ВидСоглашенияДляОграниченияИзменения = ЗНАЧЕНИЕ(Перечисление.ВидыСоглашенийСКлиентамиДляОграниченияИзменения.Индивидуальные))
	|ИТОГИ ПО
	|	Партнер";
	
	Результат = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);  
	ЗначениеВРеквизитФормы(Результат,"ДеревоНастройки"); 
	Дерево = РеквизитФормыВЗначение("ДеревоНастройки");
	ДополнитьДеревоДаннымиОСкидках(Дерево,ТаблицаДействующихСкидок); 
	ЗначениеВРеквизитФормы(Дерево,"ДеревоНастройки");	
	
КонецПроцедуры  

&НаСервереБезКонтекста
Процедура ДополнитьДеревоДаннымиОСкидках(текСтрока,ТаблицаДействующихСкидок)
	СтрокиДЗ = текСтрока.Строки;
	Для Каждого ТекСтр Из СтрокиДЗ Цикл
		Если ТипЗнч(ТекСтр.ИндивидуальноеСоглашение) = Тип("СправочникСсылка.СоглашенияСКлиентами") Тогда
			Скидка = ТаблицаДействующихСкидок.НайтиСтроки(Новый Структура("ИндивидуальноеСоглашение",ТекСтр.ИндивидуальноеСоглашение))[0].Скидка;
			ТекСтр.Скидка = Скидка;
		КонецЕсли;
		ДополнитьДеревоДаннымиОСкидках(ТекСтр,ТаблицаДействующихСкидок);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьУсловияПродаж(Команда)
	УстановитьУсловияПродажНаСервере();
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловияПродажНаСервере()
	Дерево = РеквизитФормыВЗначение("ДеревоНастройки");
	ОбработатьСозданиеИРедактированиеСоглашений(Дерево);
	ПерейтиКНастройкеНаСервере();
КонецПроцедуры 

&НаСервере
Процедура ОбработатьСозданиеИРедактированиеСоглашений(текСтрока)
	СтрокиДЗ = текСтрока.Строки;
	Для Каждого ТекСтр Из СтрокиДЗ Цикл  
		Если ЗначениеЗаполнено(ТекСтр.ИндивидуальноеСоглашение) Тогда
			Если ТипЗнч(ТекСтр.ИндивидуальноеСоглашение) = Тип("СправочникСсылка.СоглашенияСКлиентами") Тогда
				ОбработатьИзменениеСуществующегоСоглашения(ТекСтр);	
			ИначеЕсли ТипЗнч(ТекСтр.ИндивидуальноеСоглашение) = Тип("Строка") Тогда
				ОбработатьСозданиеНовогоСоглашения(ТекСтр);
			КонецЕсли; 
		КонецЕсли;
		ОбработатьСозданиеИРедактированиеСоглашений(ТекСтр);
	КонецЦикла;
КонецПроцедуры   

&НаСервереБезКонтекста  
Процедура ОбработатьИзменениеСуществующегоСоглашения(ЗначенияЗаполнения)
	
	Соглашение = ЗначенияЗаполнения.ИндивидуальноеСоглашение.ПолучитьОбъект();
	ОтключитьДействующиеСкидки(Соглашение.Ссылка);
	Соглашение.ГрафикОплаты = ЗначенияЗаполнения.Отсрочка;
	УстановитьСкидки(Соглашение.Ссылка,ЗначенияЗаполнения.Скидка,ЗначенияЗаполнения.НачалоДействия);
	Соглашение.Записать();
	
КонецПроцедуры  

&НаСервере 
Процедура ОбработатьСозданиеНовогоСоглашения(ЗначенияЗаполнения)
	
	НовоеСоглашение = Справочники.СоглашенияСКлиентами.СоздатьЭлемент();
	ЗаполнитьЗначенияСвойств(НовоеСоглашение,ЭтотОбъект); 
	НовоеСоглашение.Наименование = СтрШАблон("ИС с %1 %2",ЗначенияЗаполнения.Партнер,ЗначенияЗаполнения.Отсрочка);
	НовоеСоглашение.Статус  	 = Перечисления.СтатусыСоглашенийСКлиентами.Действует;
	НовоеСоглашение.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
	НовоеСоглашение.ВидСоглашенияДляОграниченияИзменения = Перечисления.ВидыСоглашенийСКлиентамиДляОграниченияИзменения.Индивидуальные;
	НовоеСоглашение.ВидСоглашенияДляОграниченияЧтения 	 = Перечисления.ВидыСоглашенийСКлиентамиДляОграниченияИзменения.Индивидуальные;   
	НовоеСоглашение.ГрафикОплаты = ЗначенияЗаполнения.Отсрочка;
	НовоеСоглашение.Партнер      = ЗначенияЗаполнения.Партнер;
	НовоеСоглашение.Контрагент	 = ПартнерыИКонтрагенты.ПолучитьКонтрагентаПартнераПоУмолчанию(ЗначенияЗаполнения.Партнер);
    НовоеСоглашение.Дата 		 = ЗначенияЗаполнения.НачалоДействия;
	НовоеСоглашение.Подразделение 	   = ЗначенияЗаполнения.Подразделение;
    НовоеСоглашение.ДатаНачалаДействия = ЗначенияЗаполнения.НачалоДействия;	
	НовоеСоглашение.Записать();
	
    УстановитьСкидки(НовоеСоглашение.Ссылка,ЗначенияЗаполнения.Скидка,ЗначенияЗаполнения.НачалоДействия);
	
КонецПроцедуры


&НаСервереБезКонтекста 
Процедура ОтключитьДействующиеСкидки(Соглашение) 
	
	Записи = РегистрыСведений.ДействиеСкидокНаценок.СоздатьНаборЗаписей();
	Записи.Отбор.Источник.Установить(Соглашение);
	Записи.Прочитать();
	Для Каждого Запись из Записи Цикл
		Запись.Статус = Перечисления.СтатусыДействияСкидок.НеДействует;
	КонецЦикла;
	Записи.Записать(); 
	
КонецПроцедуры   

&НаСервереБезКонтекста 
Процедура УстановитьСкидки(Соглашение,Скидки,ДатаНачалаДействия) 
	
	Для Каждого Скидка из Скидки Цикл
		Запись 			  	 = РегистрыСведений.ДействиеСкидокНаценок.СоздатьМенеджерЗаписи(); 
		Запись.Источник		 = Соглашение;
		Запись.Период 	 	 = ДатаНачалаДействия;
		Запись.СкидкаНаценка = Скидка.Значение;
		Запись.Статус 		 = Перечисления.СтатусыДействияСкидок.Действует;
		Запись.Ответственный = Пользователи.ТекущийПользователь();
		Запись.Записать();
	КонецЦикла;
 
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИспользуютсяДоговорыКонтрагентов = Истина;
	Элементы.ГруппаПорядокРасчетовОплатаРеквизиты.Доступность = Ложь;
	ДатаНачала = ТекущаяДата();  
				
КонецПроцедуры

&НаКлиенте
Процедура НеИспользуютсяДоговорыКонтрагентовПриИзменении(Элемент)
	Элементы.ГруппаПорядокРасчетовОплатаРеквизиты.Доступность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНастройкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.ИндивидуальноеСоглашение) Тогда
		Отказ = Истина;
		Возврат;
	Иначе 
		ПартнерНовойСтроки = Элемент.ТекущиеДанные.Партнер;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНастройкиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.ИндивидуальноеСоглашение = "БУДЕТ СОЗДАНО";
		Элемент.ТекущиеДанные.НачалоДействия 		   = ДатаНачала;
		Элемент.ТекущиеДанные.Партнер 				   = ПартнерНовойСтроки;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДатаНачалаДействияПриИзмененииНаСервере()
	Дерево = РеквизитФормыВЗначение("ДеревоНастройки");
	УстановитьДатуНачалаДействияСкидок(Дерево,ДатаНачала);
	ЗначениеВРеквизитФормы(Дерево,"ДеревоНастройки");
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаДействияПриИзменении(Элемент)
	ДатаНачалаДействияПриИзмененииНаСервере();
КонецПроцедуры   

&НаСервереБезКонтекста
Процедура УстановитьДатуНачалаДействияСкидок(текСтрока,Дата) 
	
	СтрокиДЗ = текСтрока.Строки;
	Для Каждого ТекСтр Из СтрокиДЗ Цикл
		Если ЗначениеЗаполнено(ТекСтр.ИндивидуальноеСоглашение) Тогда
			ТекСтр.НачалоДействия = Дата;
		КонецЕсли;
		УстановитьДатуНачалаДействияСкидок(ТекСтр,Дата);
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда) 
	ОповещениеОВыборе = Новый ОписаниеОповещения("ОбработкаВыбора",ЭтотОбъект);
	ПоказатьВопрос(ОповещениеОВыборе,"Все установленные настройки будут удалены, продолжить?",РежимДиалогаВопрос.ДаНет);
КонецПроцедуры  

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранныйОтвет,ДополнительныеПараметры)Экспорт 
	Если ВыбранныйОтвет = КодВозвратаДиалога.Да Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ПодборПартнеров;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНастройкиСкидкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Элемент.Родитель.ТекущиеДанные.Скидка.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.СкидкиНаценки");
КонецПроцедуры


