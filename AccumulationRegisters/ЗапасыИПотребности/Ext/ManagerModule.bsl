
&ИзменениеИКонтроль("ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию")
Процедура РСК_ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры)

	ТипыРегистраторы = РаспределениеЗапасовДвижения.Регистраторы();
	ТипыРегистраторы.Добавить("Документ.КорректировкаРегистров");
	ПолноеИмяРегистра = "РегистрНакопления.ЗапасыИПотребности";

	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаОбъектов = СтрСоединить(ТипыРегистраторы, ",");
	ПараметрыВыборки.ПолныеИменаРегистров = ПолноеИмяРегистра;
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиРегистраторыРегистра();

	ЗначенияПараметров = РаспределениеЗапасовДвижения.ЗначенияПараметровДляТекстовЗапросовПроведенияДокументов();

	// Регистрация документов к первичному заполнению регистра.
	Для Каждого ПолноеИмяДокумента Из ТипыРегистраторы Цикл

		Если ПолноеИмяДокумента = "Документ.КорректировкаРегистров" Тогда
			Продолжить;
		КонецЕсли;
		ТекстыВтИЗапроса = Новый Массив();
		РаспределениеЗапасовДвижения.ТекстыЗапросовВременныхТаблицПроведенияДокументовПакетно(ПолноеИмяДокумента, ТекстыВтИЗапроса);
		ТекстЗапроса = РаспределениеЗапасовДвижения.ТекстыЗапросовПроведенияДокументов(ПолноеИмяДокумента, "ЗапасыИПотребности");
		#Вставка
		//++ РС Консалт: Трофимов Евгений 13.01.2023 Тикет 22980
		//e1cib/data/Документ.Задание?ref=81529cd3f0b97b57465a80b14c432f11
		//Почему-то в релизе 2.5.10.74 у документа «КоммерческоеПредложениеКлиенту» 
		//нет функции ДанныеДокументаДляПроведения() в модуле менеджера
		//Можно в последующих релизах попробовать отключить эту вставку и вставку в
		//общем модуле РаспределениеЗапасовДвижения.ТекстыЗапросовПроведенияДокументов().
		Если ПустаяСтрока(ТекстЗапроса) Тогда
			Продолжить;
		КонецЕсли;
		//-- КонецТикета 22980
		#КонецВставки

		Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Набор.Регистратор КАК Регистратор
		|ИЗ(
		|	ВЫБРАТЬ
		|		ЗаписиРегистра.ВидДвижения КАК ВидДвижения,
		|		ЗаписиРегистра.Период КАК Период,
		|		ЗаписиРегистра.Регистратор КАК Регистратор,
		|		ЗаписиРегистра.Номенклатура КАК Номенклатура,
		|		ЗаписиРегистра.Характеристика КАК Характеристика,
		|		ЗаписиРегистра.Склад КАК Склад,
		|		ЗаписиРегистра.Назначение КАК Назначение,
		|		ЗаписиРегистра.Заказ КАК Заказ,
		|		ЗаписиРегистра.ДатаСобытия КАК ДатаСобытия,
		|		-ЗаписиРегистра.ВНаличии КАК ВНаличии,
		|		-ЗаписиРегистра.Поступит КАК Поступит,
		|		-ЗаписиРегистра.Заказано КАК Заказано,
		|		-ЗаписиРегистра.РезервироватьНаСкладе КАК РезервироватьНаСкладе,
		|		-ЗаписиРегистра.РезервироватьПоМереПоступления КАК РезервироватьПоМереПоступления,
		|		-ЗаписиРегистра.КОбеспечению КАК КОбеспечению,
		|		-ЗаписиРегистра.НеОбеспечивать КАК НеОбеспечивать,
		|		-ЗаписиРегистра.ЗакрытьГрафикПоступления КАК ЗакрытьГрафикПоступления,
		|		-ЗаписиРегистра.ЗакрытьГрафикОтгрузки КАК ЗакрытьГрафикОтгрузки
		|	ИЗ
		|		РегистрНакопления.ЗапасыИПотребности КАК ЗаписиРегистра
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(ЗаписиРегистра.Регистратор) = ТИП(Документ.ПриходныйОрдерНаТовары)
		|		И ЗаписиРегистра.Активность
		|		И ЗаписиРегистра.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТекстыДвижений.ВидДвижения КАК ВидДвижения,
		|		ТекстыДвижений.Период КАК Период,
		|		ТекстыДвижений.Регистратор КАК Регистратор,
		|		ТекстыДвижений.Номенклатура КАК Номенклатура,
		|		ТекстыДвижений.Характеристика КАК Характеристика,
		|		ТекстыДвижений.Склад КАК Склад,
		|		ТекстыДвижений.Назначение КАК Назначение,
		|		ТекстыДвижений.Заказ КАК Заказ,
		|		ТекстыДвижений.ДатаСобытия КАК ДатаСобытия,
		|		ТекстыДвижений.ВНаличии КАК ВНаличии,
		|		ТекстыДвижений.Поступит КАК Поступит,
		|		ТекстыДвижений.Заказано КАК Заказано,
		|		ТекстыДвижений.РезервироватьНаСкладе КАК РезервироватьНаСкладе,
		|		ТекстыДвижений.РезервироватьПоМереПоступления КАК РезервироватьПоМереПоступления,
		|		ТекстыДвижений.КОбеспечению КАК КОбеспечению,
		|		ТекстыДвижений.НеОбеспечивать КАК НеОбеспечивать,
		|		ТекстыДвижений.ЗакрытьГрафикПоступления КАК ЗакрытьГрафикПоступления,
		|		ТекстыДвижений.ЗакрытьГрафикОтгрузки КАК ЗакрытьГрафикОтгрузки
		|	ИЗ
		|		ТекстыДвиженийПереопределяемый КАК ТекстыДвижений
		|	ГДЕ
		|		ТекстыДвижений.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись)) КАК Набор
		|СГРУППИРОВАТЬ ПО
		|		Набор.ВидДвижения,
		|		Набор.Период,
		|		Набор.Регистратор,
		|		Набор.Номенклатура,
		|		Набор.Характеристика,
		|		Набор.Склад,
		|		Набор.Назначение,
		|		Набор.Заказ,
		|		Набор.ДатаСобытия
		|ИМЕЮЩИЕ
		|	СУММА(Набор.ВНаличии) <> 0
		|		ИЛИ СУММА(Набор.Поступит) <> 0
		|		ИЛИ СУММА(Набор.Заказано) <> 0
		|		ИЛИ СУММА(Набор.РезервироватьНаСкладе) <> 0
		|		ИЛИ СУММА(Набор.РезервироватьПоМереПоступления) <> 0
		|		ИЛИ СУММА(Набор.КОбеспечению) <> 0
		|		ИЛИ СУММА(Набор.НеОбеспечивать) <> 0
		|		ИЛИ СУММА(Набор.ЗакрытьГрафикПоступления) <> 0
		|		ИЛИ СУММА(Набор.ЗакрытьГрафикОтгрузки) <> 0";
		Текст = СтрЗаменить(Текст, "Документ.ПриходныйОрдерНаТовары", ПолноеИмяДокумента);

		ТекстыВтИЗапроса.Добавить(Текст);
		Текст = СтрСоединить(ТекстыВтИЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
		Запрос = Новый Запрос();
		Запрос.Текст = СтрЗаменить(Текст, "ТекстыДвиженийПереопределяемый", СтрШаблон("(%1)", ТекстЗапроса));

		Для Каждого Элемент Из ЗначенияПараметров Цикл
			Запрос.УстановитьПараметр(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;
		Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");

		ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);

	КонецЦикла;

	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК ЕстьЗаписи
	|ИЗ
	|	РегистрНакопления.ЗапасыИПотребности КАК Движения";
	Если Запрос.Выполнить().Пустой() Тогда

		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Движения.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.РаспределениеЗапасовДвижения КАК Движения
		|ГДЕ
		|	Движения.Активность
		|		И ТИПЗНАЧЕНИЯ(Движения.Регистратор) = ТИП(Документ.КорректировкаРегистров)";
		Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
		ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);

	Иначе // регистрация данных к закрытию графика поступления/отгрузки.

		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Набор.Регистратор КАК Регистратор,
		|	Набор.Регистратор ССЫЛКА Документ.РегистраторЗапасыИПотребности КАК ЭтоСлужебныйРегистратор
		|ИЗ(
		|	ВЫБРАТЬ
		|		Движения.Номенклатура КАК Номенклатура,
		|		Движения.Характеристика КАК Характеристика,
		|		Движения.Склад КАК Склад,
		|		Движения.Назначение КАК Назначение,
		|		ВЫБОР
		|			КОГДА ТИПЗНАЧЕНИЯ(Движения.Заказ) В(
		|					ТИП(Справочник.ДоговорыКонтрагентов),
		|					ТИП(Справочник.СоглашенияСПоставщиками))
		|				ТОГДА СлужебныйРегистратор.Ссылка
		|			ИНАЧЕ Движения.Заказ
		|		КОНЕЦ КАК Регистратор,
		// По поступлению.
		|		СУММА(
		|			ВЫБОР
		|				КОГДА Движения.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.РасчетГрафика)
		|					ТОГДА -Движения.Поступит
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК РасчетГрафикаПоступит,
		|		СУММА(
		|			ВЫБОР
		|				КОГДА Движения.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.РасчетГрафика)
		|					ТОГДА -Движения.Заказано
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК РасчетГрафикаЗаказано,
		|		СУММА(
		|			ВЫБОР
		|				КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|					ТОГДА Движения.ЗакрытьГрафикПоступления
		|				ИНАЧЕ - Движения.ЗакрытьГрафикПоступления
		|			КОНЕЦ) КАК ЗакрытьГрафикПоступления,
		|		СУММА(
		|			ВЫБОР
		|				КОГДА Движения.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись)
		|					ТОГДА
		|						ВЫБОР
		|							КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|								ТОГДА Движения.Поступит
		|							ИНАЧЕ - Движения.Поступит
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ) ПервичнаяПоступит,
		|		СУММА(
		|			ВЫБОР
		|				КОГДА Движения.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись)
		|					ТОГДА
		|						ВЫБОР
		|							КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|								ТОГДА Движения.Заказано
		|							ИНАЧЕ - Движения.Заказано
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ) ПервичнаяЗаказано,
		// По отгрузке.
		|		СУММА(
		|			ВЫБОР
		|				КОГДА Движения.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.РасчетГрафика)
		|					ТОГДА -Движения.РезервироватьНаСкладе
		|							- Движения.РезервироватьПоМереПоступления
		|							- Движения.ОтложитьРезервирование
		|							- Движения.КОбеспечению
		|							- Движения.НеОбеспечивать
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК РасчетГрафикаПотребность,
		|		СУММА(
		|			ВЫБОР
		|				КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|					ТОГДА Движения.ЗакрытьГрафикОтгрузки
		|				ИНАЧЕ - Движения.ЗакрытьГрафикОтгрузки
		|			КОНЕЦ) КАК ЗакрытьГрафикОтгрузки,
		|		СУММА(
		|			ВЫБОР
		|				КОГДА Движения.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись)
		|					ТОГДА
		|						ВЫБОР
		|							КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|								ТОГДА Движения.РезервироватьНаСкладе
		|							ИНАЧЕ - Движения.РезервироватьНаСкладе
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ) ПервичнаяРезервироватьНаСкладе,
		|		СУММА(
		|			ВЫБОР
		|				КОГДА Движения.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись)
		|					ТОГДА
		|						ВЫБОР
		|							КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|								ТОГДА Движения.РезервироватьПоМереПоступления
		|							ИНАЧЕ - Движения.РезервироватьПоМереПоступления
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ) ПервичнаяРезервироватьПоМереПоступления,
		|		СУММА(
		|			ВЫБОР
		|				КОГДА Движения.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись)
		|					ТОГДА
		|						ВЫБОР
		|							КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|								ТОГДА Движения.ОтложитьРезервирование
		|							ИНАЧЕ - Движения.ОтложитьРезервирование
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ) ПервичнаяОтложитьРезервирование,
		|		СУММА(
		|			ВЫБОР
		|				КОГДА Движения.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись)
		|					ТОГДА
		|						ВЫБОР
		|							КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|								ТОГДА Движения.КОбеспечению
		|							ИНАЧЕ - Движения.КОбеспечению
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ) ПервичнаяКОбеспечению,
		|		СУММА(
		|			ВЫБОР
		|				КОГДА Движения.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейЗапасыИПотребности.ПервичнаяЗапись)
		|					ТОГДА
		|						ВЫБОР
		|							КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|								ТОГДА Движения.НеОбеспечивать
		|							ИНАЧЕ - Движения.НеОбеспечивать
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ) ПервичнаяНеОбеспечивать
		|	ИЗ
		|		РегистрНакопления.ЗапасыИПотребности КАК Движения
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РегистраторЗапасыИПотребности КАК СлужебныйРегистратор
		|			ПО СлужебныйРегистратор.Распоряжение = Движения.Заказ
		|	ГДЕ
		|		Движения.Активность
		|			И Движения.Заказ <> НЕОПРЕДЕЛЕНО
		// Если это повторный запуск прерванного обновления с 2.5.8, то служебные документы могут быть еще не созданы,
		// пропускаем такие данные, так как они уже были зергистрированы в основном блоке регистрации всех документов.
		|			И (НЕ ТИПЗНАЧЕНИЯ(Движения.Заказ) В(
		|					ТИП(Справочник.ДоговорыКонтрагентов),
		|					ТИП(Справочник.СоглашенияСПоставщиками))
		|				ИЛИ НЕ СлужебныйРегистратор.Ссылка ЕСТЬ NULL)
		|	СГРУППИРОВАТЬ ПО
		|		Движения.Номенклатура,
		|		Движения.Характеристика,
		|		Движения.Склад,
		|		Движения.Назначение,
		|		ВЫБОР
		|			КОГДА ТИПЗНАЧЕНИЯ(Движения.Заказ) В(
		|					ТИП(Справочник.ДоговорыКонтрагентов),
		|					ТИП(Справочник.СоглашенияСПоставщиками))
		|				ТОГДА СлужебныйРегистратор.Ссылка
		|			ИНАЧЕ Движения.Заказ
		|		КОНЕЦ) КАК Набор
		|ГДЕ
		|	ВЫБОР
		|		КОГДА Набор.ПервичнаяПоступит < Набор.ЗакрытьГрафикПоступления
		|			ТОГДА Набор.РасчетГрафикаПоступит <> Набор.ПервичнаяПоступит
		|		ИНАЧЕ Набор.РасчетГрафикаПоступит <> Набор.ЗакрытьГрафикПоступления
		|	КОНЕЦ
		|	ИЛИ
		|		ВЫБОР
		|			КОГДА Набор.ПервичнаяЗаказано < Набор.ЗакрытьГрафикПоступления
		|				ТОГДА Набор.РасчетГрафикаЗаказано <> Набор.ПервичнаяЗаказано
		|			ИНАЧЕ Набор.РасчетГрафикаЗаказано <> Набор.ЗакрытьГрафикПоступления
		|		КОНЕЦ
		|	ИЛИ
		|		ВЫБОР
		|			КОГДА
		|					ВЫБОР КОГДА Набор.ПервичнаяРезервироватьНаСкладе > 0
		|							ТОГДА Набор.ПервичнаяРезервироватьНаСкладе
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|					+ ВЫБОР КОГДА Набор.ПервичнаяРезервироватьПоМереПоступления > 0
		|							ТОГДА Набор.ПервичнаяРезервироватьПоМереПоступления
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|					+ ВЫБОР КОГДА Набор.ПервичнаяОтложитьРезервирование > 0
		|							ТОГДА Набор.ПервичнаяОтложитьРезервирование
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|					+ ВЫБОР КОГДА Набор.ПервичнаяКОбеспечению > 0
		|							ТОГДА Набор.ПервичнаяКОбеспечению
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|					+ ВЫБОР КОГДА Набор.ПервичнаяНеОбеспечивать > 0
		|							ТОГДА Набор.ПервичнаяНеОбеспечивать
		|						ИНАЧЕ 0
		|					КОНЕЦ < Набор.ЗакрытьГрафикОтгрузки
		|				ТОГДА
		|					Набор.РасчетГрафикаПотребность
		|						<> ВЫБОР КОГДА Набор.ПервичнаяРезервироватьНаСкладе > 0
		|								ТОГДА Набор.ПервичнаяРезервироватьНаСкладе
		|							ИНАЧЕ 0
		|						КОНЕЦ
		|						+ ВЫБОР КОГДА Набор.ПервичнаяРезервироватьПоМереПоступления > 0
		|								ТОГДА Набор.ПервичнаяРезервироватьПоМереПоступления
		|							ИНАЧЕ 0
		|						КОНЕЦ
		|						+ ВЫБОР КОГДА Набор.ПервичнаяОтложитьРезервирование > 0
		|								ТОГДА Набор.ПервичнаяОтложитьРезервирование
		|							ИНАЧЕ 0
		|						КОНЕЦ
		|						+ ВЫБОР КОГДА Набор.ПервичнаяКОбеспечению > 0
		|								ТОГДА Набор.ПервичнаяКОбеспечению
		|							ИНАЧЕ 0
		|						КОНЕЦ
		|						+ ВЫБОР КОГДА Набор.ПервичнаяНеОбеспечивать > 0
		|								ТОГДА Набор.ПервичнаяНеОбеспечивать
		|							ИНАЧЕ 0
		|						КОНЕЦ
		|				ИНАЧЕ Набор.РасчетГрафикаПотребность <> Набор.ЗакрытьГрафикОтгрузки
		|		КОНЕЦ";

		Таблица = Запрос.Выполнить().Выгрузить();
		ТаблицаРегистраторов = Таблица.Скопировать(Новый Структура("ЭтоСлужебныйРегистратор", Ложь));
		Регистраторы = ТаблицаРегистраторов.ВыгрузитьКолонку("Регистратор");
		ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);

		ТаблицаСлужебныхДокументов = Таблица.Скопировать(Новый Структура("ЭтоСлужебныйРегистратор", Истина));
		СлужебныеДокументы = ТаблицаСлужебныхДокументов.ВыгрузитьКолонку("Регистратор");
		Запрос.УстановитьПараметр("СлужебныеДокументы", СлужебныеДокументы);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Движения.Заказ КАК СлужебныеДокументыЗаказ,
		|	МАКСИМУМ(Движения.Регистратор) КАК Регистратор
		|ИЗ
		|	Документ.РегистраторЗапасыИПотребности КАК ВсеДокументы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыИПотребности КАК Движения
		|		ПО Движения.Заказ = ВсеДокументы.Распоряжение
		|		 И Движения.Активность
		|		 И НЕ Движения.Регистратор ССЫЛКА Документ.РегистраторЗапасыИПотребности
		|		 И НЕ Движения.Регистратор ССЫЛКА Документ.КорректировкаРегистров
		|ГДЕ
		|	ВсеДокументы.Ссылка В(&СлужебныеДокументы)
		|СГРУППИРОВАТЬ ПО
		|	Движения.Заказ";
		Регистраторы = ТаблицаРегистраторов.ВыгрузитьКолонку("Регистратор");
		ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);

	КонецЕсли;

КонецПроцедуры
