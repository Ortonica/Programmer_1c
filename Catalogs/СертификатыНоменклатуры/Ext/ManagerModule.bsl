 #Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	 
&ИзменениеИКонтроль("СформироватьПечатнуюФормуИзображенияСертификатовИзДокументов")
Функция РСК_СформироватьПечатнуюФормуИзображенияСертификатовИзДокументов(МассивОбъектов, ОбъектыПечати)

	УстановитьПривилегированныйРежим(Истина);

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СертификатыНоменклатуры_ИзображенияСертификатовИзДокументов";

	Если ТипЗнч(МассивОбъектов[0]) = Тип("ДокументСсылка.ЗаданиеНаПеревозку") Тогда	
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапросаПолученияСпискаНакладныхИзЗаданийНаПеревозку(); 		
		Запрос.УстановитьПараметр("ЗаданияНаПеревозку",МассивОбъектов);
		МассивОбъектовДляЗапроса = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Распоряжение");
	Иначе
		МассивОбъектовДляЗапроса = МассивОбъектов;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаСертификатовНоменклатурыДокумента() + "
	|//////////////////////////////////////////////////////////////////////////////// 9
	|ВЫБРАТЬ
	|	ДокументТовары.Ссылка      КАК Ссылка,
	|	ДокументТовары.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ДокументТовары.Номенклатура.ВестиУчетСертификатовНоменклатуры
	|			ТОГДА ЕСТЬNULL(ТоварыССертификатами.СертификатНоменклатуры, ЗНАЧЕНИЕ(Справочник.СертификатыНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СертификатыНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                      КАК СертификатНоменклатуры,
	|	ЕСТЬNULL(ТоварыССертификатами.ТипСертификата, """") КАК ТипСертификата,
	#Вставка
	|	ДокументТовары.Номенклатура КАК Номенклатура,
	|	ДокументТовары.Характеристика  КАК Характеристика,
	|	ДокументТовары.Серия        КАК Серия,
	#КонецВставки
	|	ВЫБОР
	|		КОГДА ДокументТовары.Номенклатура.ВестиУчетСертификатовНоменклатуры
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыССертификатами.СертификатНоменклатуры ЕСТЬ NULL
	|						ТОГДА ЛОЖЬ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыССертификатами.ОкончаниеСрокаДействия >= ДокументТовары.Дата
	|									И ТоварыССертификатами.НачалоСрокаДействия <= ДокументТовары.Дата
	|								ТОГДА ИСТИНА
	|							ИНАЧЕ ЛОЖЬ
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                      КАК СертификатДействует,
	|	ЕСТЬNULL(ТоварыССертификатами.ПриоритетСертификата, 4) КАК ПриоритетСертификата
	|ПОМЕСТИТЬ СертификатыНоменклатуры
	|ИЗ
	|	ДокументТовары КАК ДокументТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыССертификатами КАК ТоварыССертификатами
	|		ПО ДокументТовары.Номенклатура = ТоварыССертификатами.Номенклатура
	|			И ДокументТовары.Характеристика = ТоварыССертификатами.Характеристика
	|			И ДокументТовары.Серия = ТоварыССертификатами.Серия
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ДокументТовары.Номенклатура.ВестиУчетСертификатовНоменклатуры
	|				ТОГДА ВЫБОР
	|						КОГДА ТоварыССертификатами.СертификатНоменклатуры ЕСТЬ NULL 
	|							ТОГДА ЛОЖЬ
	|						ИНАЧЕ ВЫБОР
	|								КОГДА ТоварыССертификатами.ОкончаниеСрокаДействия >= ДокументТовары.Дата
	|									И ТоварыССертификатами.НачалоСрокаДействия <= ДокументТовары.Дата
	|									ТОГДА ИСТИНА
	|								ИНАЧЕ ЛОЖЬ
	|							КОНЕЦ
	|					КОНЕЦ
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 10
	|ВЫБРАТЬ
	|	СертификатыНоменклатурыПрисоединенныеФайлы.Ссылка        КАК Ссылка,
	|	СертификатыНоменклатурыПрисоединенныеФайлы.ВладелецФайла КАК ВладелецФайла
	|ПОМЕСТИТЬ СертификатыНоменклатурыПрисоединенныеФайлы
	|ИЗ
	|	СертификатыНоменклатуры КАК СертификатыНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СертификатыНоменклатурыПрисоединенныеФайлы КАК СертификатыНоменклатурыПрисоединенныеФайлы
	|		ПО СертификатыНоменклатуры.СертификатНоменклатуры = СертификатыНоменклатурыПрисоединенныеФайлы.ВладелецФайла
	|ГДЕ
	|	НЕ СертификатыНоменклатурыПрисоединенныеФайлы.ПометкаУдаления
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 11
	|ВЫБРАТЬ
	|	ДокументыУчетСертификатов.Ссылка КАК Ссылка,
	|	ДокументыУчетСертификатов.ВестиУчетСертификатовНоменклатуры КАК ВестиУчетСертификатовНоменклатуры
	|ИЗ
	|	ДокументыУчетСертификатов КАК ДокументыУчетСертификатов
	|ГДЕ
	|	НЕ ДокументыУчетСертификатов.ВестиУчетСертификатовНоменклатуры
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 12
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СертификатыНоменклатуры.Ссылка                    КАК Ссылка,
	|	СертификатыНоменклатуры.НомерСтроки               КАК НомерСтроки,
	|	СертификатыНоменклатуры.СертификатНоменклатуры    КАК СертификатНоменклатуры,
	|	СертификатыНоменклатуры.ТипСертификата            КАК ТипСертификата,
	|	СертификатыНоменклатуры.СертификатДействует       КАК СертификатДействует,
	#Вставка
	|	СертификатыНоменклатуры.Номенклатура КАК Номенклатура,
	|	СертификатыНоменклатуры.Характеристика  КАК Характеристика,
	|	СертификатыНоменклатуры.Серия        КАК Серия,
	#КонецВставки
	|	СертификатыНоменклатуры.ПриоритетСертификата      КАК ПриоритетСертификата,
	|	СертификатыНоменклатурыПрисоединенныеФайлы.Ссылка КАК ПрисоединенныйФайл,
	|	ВЫБОР
	|		КОГДА СертификатыНоменклатурыПрисоединенныеФайлы.Ссылка ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                             КАК НетФайлов
	|ИЗ
	|	СертификатыНоменклатуры КАК СертификатыНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ СертификатыНоменклатурыПрисоединенныеФайлы КАК СертификатыНоменклатурыПрисоединенныеФайлы
	|		ПО СертификатыНоменклатуры.СертификатНоменклатуры = СертификатыНоменклатурыПрисоединенныеФайлы.ВладелецФайла
	|
	|УПОРЯДОЧИТЬ ПО
	|	СертификатыНоменклатуры.Ссылка,
	|	СертификатыНоменклатуры.НомерСтроки,
	|	СертификатыНоменклатуры.ТипСертификата УБЫВ,
	|	СертификатыНоменклатуры.СертификатДействует УБЫВ,
	|	СертификатыНоменклатуры.ПриоритетСертификата
	|
	|ИТОГИ ПО
	|	Ссылка,
	|	НомерСтроки,
	|	ТипСертификата,
	|	СертификатНоменклатуры,
	|	ПриоритетСертификата
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 13
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыССертификатами.Номенклатура                      КАК Номенклатура,
	|	ТоварыССертификатами.Номенклатура.НаименованиеПолное   КАК НаименованиеНоменклатуры,
	|	ТоварыССертификатами.Характеристика                    КАК Характеристика,
	|	ТоварыССертификатами.Характеристика.НаименованиеПолное КАК НаименованиеХарактеристики,
	|	ТоварыССертификатами.Серия                             КАК Серия,
	|	ТоварыССертификатами.ТипСертификата                    КАК ТипСертификата
	|ИЗ
	|	ТоварыССертификатами КАК ТоварыССертификатами
	|		ЛЕВОЕ СОЕДИНЕНИЕ СертификатыНоменклатуры КАК СертификатыНоменклатуры
	|		ПО ТоварыССертификатами.СертификатНоменклатуры = СертификатыНоменклатуры.СертификатНоменклатуры
	|ГДЕ
	|	СертификатыНоменклатуры.СертификатНоменклатуры ЕСТЬ NULL";

	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектовДляЗапроса);

	МассивРезультатов = Запрос.ВыполнитьПакет();
	КоличествоРезультатов = МассивРезультатов.Количество();

	РезультатЗапроса = МассивРезультатов[КоличествоРезультатов - 2]; // РезультатЗапроса
	ВыборкаПоДокументам = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	РезультатЗапроса = МассивРезультатов[КоличествоРезультатов - 3]; // РезультатЗапроса
	ВыборкаПоДокументамБезУчетаСертификатов = РезультатЗапроса.Выбрать();

	РезультатЗапроса = МассивРезультатов[КоличествоРезультатов - 1]; // РезультатЗапроса
	ВыборкаПоТоварамБезДействующихСертификатов = РезультатЗапроса.Выбрать();

	Макет = УправлениеПечатью.МакетПечатнойФормы("Справочник.СертификатыНоменклатуры.ПФ_MXL_ИзображенияСертификатов");

	ПервыйДокумент = Истина;

	Пока ВыборкаПоДокументам.Следующий() Цикл

		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		#Вставка 
		Подразделение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыборкаПоДокументам.Ссылка,"Подразделение");	
		#КонецВставки
		
		ВыборкаПоНомеруСтроки = ВыборкаПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоНомеруСтроки.Следующий() Цикл

			ВыборкаПоТипуСертификата = ВыборкаПоНомеруСтроки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоТипуСертификата.Следующий() Цикл

				ВыборкаПоСертификатам = ВыборкаПоТипуСертификата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаПоСертификатам.Следующий() Цикл

					ВыборкаПоПриоритету = ВыборкаПоСертификатам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаПоПриоритету.Следующий() Цикл

						Выборка = ВыборкаПоПриоритету.Выбрать();
						Пока Выборка.Следующий() Цикл
							
							#Вставка
							ПодразделениеСертификата = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.СертификатНоменклатуры,"Подразделение");
							Если ЗначениеЗаполнено(ПодразделениеСертификата) И ПодразделениеСертификата <> Подразделение Тогда
								Продолжить;
							КонецЕсли;
							Если НЕ НеобходимаПечатьСертификата(Выборка.Ссылка, Выборка.ТипСертификата, Выборка.Номенклатура, Выборка.Характеристика, Выборка.Серия) Тогда
								Продолжить;		
							КонецЕсли;
							#КонецВставки
							Если Выборка.НетФайлов Тогда
								Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								НСтр("ru = 'В сертификате номенклатуры %1 отсутствуют присоединенные изображения. Требуется прикрепить файл изображения.';
								|en = 'There is no attached image in quality certificate %1. Attach the image file.'"),
								Строка(Выборка.СертификатНоменклатуры));
								ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
								Текст,
								Выборка.СертификатНоменклатуры);
								Прервать;

							КонецЕсли;	

							ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
							
							#Вставка
							Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.ПрисоединенныйФайл,"Расширение") = "pdf" Тогда  
								РСК_Сервер.ПрисоединитьPDFКТабличномуДокументу(ТабличныйДокумент, Макет, Выборка.ПрисоединенныйФайл);
							Иначе
							#КонецВставки
							Область = Макет.ПолучитьОбласть("Изображение");		 
							Рисунок = Область.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка); 
							Рисунок.Высота = 297;
							Рисунок.Ширина = 210;

							Рисунок.ГраницаСверху = Ложь;
							Рисунок.ГраницаСнизу = Ложь;
							Рисунок.ГраницаСлева = Ложь;
							Рисунок.ГраницаСправа = Ложь;

							Рисунок.РазмерКартинки = РазмерКартинки.АвтоРазмер;
							Рисунок.Картинка = Новый Картинка(РаботаСФайлами.ДвоичныеДанныеФайла(Выборка.ПрисоединенныйФайл));
							Рисунок.Линия = Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии);
							ТабличныйДокумент.Вывести(Область);
							#Вставка
							КонецЕсли;
							#КонецВставки

						КонецЦикла;	

						Прервать;

					КонецЦикла;		
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);

	КонецЦикла;

	Пока ВыборкаПоДокументамБезУчетаСертификатов.Следующий() Цикл
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'В документе %1 отсутствуют товары, для которых ведется учет сертификатов. Печать изображений сертификатов номенклатуры не требуется.';
		|en = 'Goods for which certificate records are kept are missing in document %1. Printing of quality certificate images is not required.'"),
		Строка(ВыборкаПоДокументамБезУчетаСертификатов.Ссылка));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		Текст,
		ВыборкаПоДокументамБезУчетаСертификатов.Ссылка);
	КонецЦикла;

	ДопПараметрыПредставлениеНоменклатуры = НоменклатураКлиентСервер.ДополнительныеПараметрыПредставлениеНоменклатурыДляПечати();
	ДопПараметрыПредставлениеНоменклатуры.КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();

	Пока ВыборкаПоТоварамБезДействующихСертификатов.Следующий() Цикл

		ПредставлениеТовара = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
		ВыборкаПоТоварамБезДействующихСертификатов.НаименованиеНоменклатуры,
		ВыборкаПоТоварамБезДействующихСертификатов.НаименованиеХарактеристики,
		,
		ВыборкаПоТоварамБезДействующихСертификатов.Серия,
		ДопПараметрыПредставлениеНоменклатуры);

		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Для товара %1 нет действующих сертификатов (%2). Требуется зарегистрировать действующий сертификат.';
		|en = 'There are no valid certificates (%2) for goods %1. It is required to register a valid certificate.'"),
		ПредставлениеТовара,
		ВыборкаПоТоварамБезДействующихСертификатов.ТипСертификата);	

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		Текст,
		ВыборкаПоТоварамБезДействующихСертификатов.Номенклатура);
	КонецЦикла;

	ТабличныйДокумент.АвтоМасштаб = Истина;

	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;

	Возврат ТабличныйДокумент;

КонецФункции

&ИзменениеИКонтроль("СформироватьПечатнуюФормуИзображенияСертификатовИзДокументовБезДублей")
Функция РСК_СформироватьПечатнуюФормуИзображенияСертификатовИзДокументовБезДублей(МассивОбъектов, ОбъектыПечати)

	УстановитьПривилегированныйРежим(Истина);

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СертификатыНоменклатуры_ИзображенияСертификатовИзДокументовБезДублей";

	Если ТипЗнч(МассивОбъектов[0]) = Тип("ДокументСсылка.ЗаданиеНаПеревозку") Тогда	
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапросаПолученияСпискаНакладныхИзЗаданийНаПеревозку(); 		
		Запрос.УстановитьПараметр("ЗаданияНаПеревозку",МассивОбъектов);
		МассивОбъектовДляЗапроса = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Распоряжение");
	Иначе
		МассивОбъектовДляЗапроса = МассивОбъектов;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаСертификатовНоменклатурыДокумента() + "
	|//////////////////////////////////////////////////////////////////////////////// 9
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ДокументТовары.Ссылка ССЫЛКА Документ.ПеремещениеТоваров
	|			ТОГДА ДокументТовары.Ссылка.СкладПолучатель
	|		ИНАЧЕ ДокументТовары.Ссылка.Контрагент
	|	КОНЕЦ                                               КАК ГруппировкаСертификатов,
	|	ВЫБОР
	|		КОГДА ДокументТовары.Номенклатура.ВестиУчетСертификатовНоменклатуры
	|			ТОГДА ЕСТЬNULL(ТоварыССертификатами.СертификатНоменклатуры, ЗНАЧЕНИЕ(Справочник.СертификатыНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СертификатыНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                               КАК СертификатНоменклатуры,
	|	ЕСТЬNULL(ТоварыССертификатами.ТипСертификата, """") КАК ТипСертификата,
	|	ВЫБОР
	|		КОГДА ДокументТовары.Номенклатура.ВестиУчетСертификатовНоменклатуры
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыССертификатами.СертификатНоменклатуры ЕСТЬ NULL
	|						ТОГДА ЛОЖЬ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыССертификатами.ОкончаниеСрокаДействия >= ДокументТовары.Дата
	|									И ТоварыССертификатами.НачалоСрокаДействия <= ДокументТовары.Дата
	|								ТОГДА ИСТИНА
	|							ИНАЧЕ ЛОЖЬ
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                               КАК СертификатДействует,
	#Вставка 
	|	ДокументТовары.Ссылка КАК Ссылка,
	|	ДокументТовары.Номенклатура КАК Номенклатура,
	|	ДокументТовары.Характеристика  КАК Характеристика,
	|	ДокументТовары.Серия        КАК Серия,
	#КонецВставки
	|	ТоварыССертификатами.ПриоритетСертификата           КАК ПриоритетСертификата
	|ПОМЕСТИТЬ СертификатыНоменклатуры
	|ИЗ
	|	ДокументТовары КАК ДокументТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыССертификатами КАК ТоварыССертификатами
	|		ПО ДокументТовары.Номенклатура = ТоварыССертификатами.Номенклатура
	|			И ДокументТовары.Характеристика = ТоварыССертификатами.Характеристика
	|			И ДокументТовары.Серия = ТоварыССертификатами.Серия
	|ГДЕ
	|	ВЫБОР
	|		КОГДА ДокументТовары.Номенклатура.ВестиУчетСертификатовНоменклатуры
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыССертификатами.СертификатНоменклатуры ЕСТЬ NULL 
	|						ТОГДА ЛОЖЬ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыССертификатами.ОкончаниеСрокаДействия >= ДокументТовары.Дата
	|									И ТоварыССертификатами.НачалоСрокаДействия <= ДокументТовары.Дата
	|								ТОГДА ИСТИНА
	|							ИНАЧЕ ЛОЖЬ
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 10
	|ВЫБРАТЬ
	|	СертификатыНоменклатурыПрисоединенныеФайлы.Ссылка        КАК Ссылка,
	|	СертификатыНоменклатурыПрисоединенныеФайлы.ВладелецФайла КАК ВладелецФайла
	|ПОМЕСТИТЬ СертификатыНоменклатурыПрисоединенныеФайлы
	|ИЗ
	|	СертификатыНоменклатуры КАК СертификатыНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СертификатыНоменклатурыПрисоединенныеФайлы КАК СертификатыНоменклатурыПрисоединенныеФайлы
	|		ПО СертификатыНоменклатуры.СертификатНоменклатуры = СертификатыНоменклатурыПрисоединенныеФайлы.ВладелецФайла
	|ГДЕ
	|	НЕ СертификатыНоменклатурыПрисоединенныеФайлы.ПометкаУдаления
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 11
	|ВЫБРАТЬ
	|	ДокументыУчетСертификатов.Ссылка КАК Ссылка,
	|	ДокументыУчетСертификатов.ВестиУчетСертификатовНоменклатуры КАК ВестиУчетСертификатовНоменклатуры
	|ИЗ
	|	ДокументыУчетСертификатов КАК ДокументыУчетСертификатов
	|ГДЕ
	|	НЕ ДокументыУчетСертификатов.ВестиУчетСертификатовНоменклатуры
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 12
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СертификатыНоменклатуры.ГруппировкаСертификатов   КАК Ссылка,
	|	СертификатыНоменклатуры.СертификатНоменклатуры    КАК СертификатНоменклатуры,
	|	СертификатыНоменклатуры.ТипСертификата            КАК ТипСертификата,
	|	СертификатыНоменклатуры.СертификатДействует       КАК СертификатДействует,
	|	СертификатыНоменклатуры.ПриоритетСертификата      КАК ПриоритетСертификата,
	|	СертификатыНоменклатурыПрисоединенныеФайлы.Ссылка КАК ПрисоединенныйФайл, 
	#Вставка
	|	СертификатыНоменклатуры.Ссылка КАК Документ,
	|	СертификатыНоменклатуры.Номенклатура КАК Номенклатура,
	|	СертификатыНоменклатуры.Характеристика  КАК Характеристика,
	|	СертификатыНоменклатуры.Серия        КАК Серия,
	#КонецВставки
	|	ВЫБОР
	|		КОГДА СертификатыНоменклатурыПрисоединенныеФайлы.Ссылка ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НетФайлов
	|ИЗ
	|	СертификатыНоменклатуры КАК СертификатыНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ СертификатыНоменклатурыПрисоединенныеФайлы КАК СертификатыНоменклатурыПрисоединенныеФайлы
	|		ПО СертификатыНоменклатуры.СертификатНоменклатуры = СертификатыНоменклатурыПрисоединенныеФайлы.ВладелецФайла
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	СертификатыНоменклатуры.ТипСертификата УБЫВ,
	|	СертификатыНоменклатуры.СертификатДействует УБЫВ,
	|	СертификатыНоменклатуры.ПриоритетСертификата
	|
	|ИТОГИ ПО
	|	ГруппировкаСертификатов,
	|	ТипСертификата,
	|	СертификатНоменклатуры,
	|	ПриоритетСертификата
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 13
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыССертификатами.Номенклатура                      КАК Номенклатура,
	|	ТоварыССертификатами.Номенклатура.НаименованиеПолное   КАК НаименованиеНоменклатуры,
	|	ТоварыССертификатами.Характеристика                    КАК Характеристика,
	|	ТоварыССертификатами.Характеристика.НаименованиеПолное КАК НаименованиеХарактеристики,
	|	ТоварыССертификатами.Серия                             КАК Серия,
	|	ТоварыССертификатами.ТипСертификата                    КАК ТипСертификата
	|ИЗ
	|	ТоварыССертификатами КАК ТоварыССертификатами
	|		ЛЕВОЕ СОЕДИНЕНИЕ СертификатыНоменклатуры КАК СертификатыНоменклатуры
	|		ПО ТоварыССертификатами.СертификатНоменклатуры = СертификатыНоменклатуры.СертификатНоменклатуры
	|ГДЕ
	|	СертификатыНоменклатуры.СертификатНоменклатуры ЕСТЬ NULL";

	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектовДляЗапроса);

	МассивРезультатов = Запрос.ВыполнитьПакет();
	КоличествоРезультатов = МассивРезультатов.Количество();

	РезультатЗапроса = МассивРезультатов[КоличествоРезультатов - 2]; // РезультатЗапроса
	ВыборкаПоГруппировке = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	РезультатЗапроса = МассивРезультатов[КоличествоРезультатов - 3]; // РезультатЗапроса
	ВыборкаПоДокументамБезУчетаСертификатов = РезультатЗапроса.Выбрать();

	РезультатЗапроса = МассивРезультатов[КоличествоРезультатов - 1]; // РезультатЗапроса
	ВыборкаПоТоварамБезДействующихСертификатов = РезультатЗапроса.Выбрать();

	Макет = УправлениеПечатью.МакетПечатнойФормы("Справочник.СертификатыНоменклатуры.ПФ_MXL_ИзображенияСертификатов");

	ПервыйДокумент = Истина;

	Пока ВыборкаПоГруппировке.Следующий() Цикл

		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		ВыборкаПоТипуСертификата = ВыборкаПоГруппировке.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоТипуСертификата.Следующий() Цикл

			ВыборкаПоСертификатам = ВыборкаПоТипуСертификата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоСертификатам.Следующий() Цикл

				ВыборкаПоПриоритету = ВыборкаПоСертификатам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаПоПриоритету.Следующий() Цикл

					Выборка = ВыборкаПоПриоритету.Выбрать();
					Пока Выборка.Следующий() Цикл
						
						#Вставка 
						Подразделение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.Документ,"Подразделение");
						ПодразделениеСертификата = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.СертификатНоменклатуры,"Подразделение"); 
						Если ЗначениеЗаполнено(ПодразделениеСертификата) И Подразделение <> ПодразделениеСертификата Тогда
							Продолжить;
						КонецЕсли;
						Если НЕ НеобходимаПечатьСертификата(Выборка.Документ, Выборка.ТипСертификата, Выборка.Номенклатура, Выборка.Характеристика, Выборка.Серия) Тогда
							Продолжить;		
						КонецЕсли;
						#КонецВставки
						Если Выборка.НетФайлов Тогда
							Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru = 'В сертификате номенклатуры %1 отсутствуют присоединенные изображения. Требуется прикрепить файл изображения.';
							|en = 'There is no attached image in quality certificate %1. Attach the image file.'"),
							Строка(Выборка.СертификатНоменклатуры));
							ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
							Текст,
							Выборка.СертификатНоменклатуры);
							Прервать;

						КонецЕсли;	

						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
						
						#Вставка
						Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.ПрисоединенныйФайл,"Расширение") = "pdf" Тогда  
							РСК_Сервер.ПрисоединитьPDFКТабличномуДокументу(ТабличныйДокумент, Макет, Выборка.ПрисоединенныйФайл);
						Иначе
						#КонецВставки
						Область = Макет.ПолучитьОбласть("Изображение");		 
						Рисунок = Область.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка); 
						Рисунок.Высота = 297;
						Рисунок.Ширина = 210;

						Рисунок.ГраницаСверху = Ложь;
						Рисунок.ГраницаСнизу = Ложь;
						Рисунок.ГраницаСлева = Ложь;
						Рисунок.ГраницаСправа = Ложь;

						Рисунок.РазмерКартинки = РазмерКартинки.АвтоРазмер;
						Рисунок.Картинка = Новый Картинка(РаботаСФайлами.ДвоичныеДанныеФайла(Выборка.ПрисоединенныйФайл));
						Рисунок.Линия = Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии);
						ТабличныйДокумент.Вывести(Область);
						#Вставка
						КонецЕсли;
						#КонецВставки

					КонецЦикла;	

					Прервать;

				КонецЦикла;		
			КонецЦикла;
		КонецЦикла;

		Если МассивОбъектовДляЗапроса.Количество() = 1 Тогда 
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, МассивОбъектовДляЗапроса[0]);
		Иначе	
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоГруппировке.Ссылка);
		КонецЕсли;

	КонецЦикла;

	Пока ВыборкаПоДокументамБезУчетаСертификатов.Следующий() Цикл
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'В документе %1 отсутствуют товары для которых ведется учет сертификатов.
		| Печать изображений сертификатов номенклатуры не требуется.';
		|en = 'Goods for which certificate records are kept are missing in document %1.
		|Printing of quality certificate images is not required.'"),
		Строка(ВыборкаПоДокументамБезУчетаСертификатов.Ссылка));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		Текст,
		ВыборкаПоДокументамБезУчетаСертификатов.Ссылка);
	КонецЦикла;

	Пока ВыборкаПоТоварамБезДействующихСертификатов.Следующий() Цикл

		ПредставлениеТовара = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(
		ВыборкаПоТоварамБезДействующихСертификатов.НаименованиеНоменклатуры,
		ВыборкаПоТоварамБезДействующихСертификатов.НаименованиеХарактеристики,
		,
		ВыборкаПоТоварамБезДействующихСертификатов.Серия);

		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Для товара %1 нет действующих сертификатов (%2). Требуется зарегистрировать действующий сертификат.';
		|en = 'There are no valid certificates (%2) for goods %1. It is required to register a valid certificate.'"),
		ПредставлениеТовара,
		ВыборкаПоТоварамБезДействующихСертификатов.ТипСертификата);	

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		Текст,
		ВыборкаПоТоварамБезДействующихСертификатов.Номенклатура);
	КонецЦикла;

	ТабличныйДокумент.АвтоМасштаб = Истина;

	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;

	Возврат ТабличныйДокумент;

КонецФункции

&ИзменениеИКонтроль("СформироватьПечатнуюФормуРеестрСертификатовНоменклатуры")
Функция РСК_СформироватьПечатнуюФормуРеестрСертификатовНоменклатуры(МассивОбъектов, ОбъектыПечати)

	УстановитьПривилегированныйРежим(Истина);

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СертификатыНоменклатуры_РеестрСертификатов";

	Если ТипЗнч(МассивОбъектов[0]) = Тип("ДокументСсылка.ЗаданиеНаПеревозку") Тогда	
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапросаПолученияСпискаНакладныхИзЗаданийНаПеревозку(); 		
		Запрос.УстановитьПараметр("ЗаданияНаПеревозку",МассивОбъектов);
		МассивОбъектовДляЗапроса = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Распоряжение");
	Иначе
		МассивОбъектовДляЗапроса = МассивОбъектов;
	КонецЕсли;	

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаСертификатовНоменклатурыДокумента() + "
	|//////////////////////////////////////////////////////////////////////////////// 9
	|ВЫБРАТЬ
	|	ДокументыУчетСертификатов.Ссылка КАК Ссылка,
	|	ДокументыУчетСертификатов.ВестиУчетСертификатовНоменклатуры КАК ВестиУчетСертификатовНоменклатуры
	|ИЗ
	|	ДокументыУчетСертификатов КАК ДокументыУчетСертификатов
	|ГДЕ
	|	НЕ ДокументыУчетСертификатов.ВестиУчетСертификатовНоменклатуры
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 10
	|ВЫБРАТЬ
	|	ДокументТовары.Ссылка         КАК Ссылка,
	|	ДокументТовары.НомерСтроки    КАК НомерСтроки,
	|	ДокументТовары.Номенклатура   КАК Номенклатура,
	|	ДокументТовары.Номенклатура.НаименованиеПолное КАК НаименованиеНоменклатуры,
	|	ДокументТовары.Характеристика КАК Характеристика,
	|	ДокументТовары.Характеристика.НаименованиеПолное КАК НаименованиеХарактеристики,
	|	ДокументТовары.Серия          КАК Серия,
	|	ДокументТовары.Номенклатура.ВестиУчетСертификатовНоменклатуры КАК ВестиУчетСертификатовНоменклатуры,
	|	ВЫБОР
	|		КОГДА ДокументТовары.Номенклатура.ВестиУчетСертификатовНоменклатуры
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ТоварыССертификатами.СертификатНоменклатуры ЕСТЬ NULL
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                         КАК НетДействующихСертификатов,
	|	ВЫБОР
	|		КОГДА ДокументТовары.Номенклатура.ВестиУчетСертификатовНоменклатуры
	|			ТОГДА ЕСТЬNULL(ТоварыССертификатами.СертификатНоменклатуры, ЗНАЧЕНИЕ(Справочник.СертификатыНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СертификатыНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                         КАК СертификатНоменклатуры,
	|	ЕСТЬNULL(ТоварыССертификатами.ТипСертификата, """") КАК ТипСертификата,
	|	ЕСТЬNULL(ТоварыССертификатами.ПриоритетСертификата, 4) КАК ПриоритетСертификата,
	|	ВЫБОР
	|		КОГДА ДокументТовары.Номенклатура.ВестиУчетСертификатовНоменклатуры
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ТоварыССертификатами.СертификатНоменклатуры ЕСТЬ NULL
	|						ТОГДА ЛОЖЬ
	|					ИНАЧЕ
	|						ВЫБОР
	|							КОГДА ТоварыССертификатами.ОкончаниеСрокаДействия >= ДокументТовары.Дата
	|									И ТоварыССертификатами.НачалоСрокаДействия <= ДокументТовары.Дата
	|								ТОГДА ИСТИНА
	|							ИНАЧЕ ЛОЖЬ
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                         КАК СертификатДействует
	|ИЗ
	|	ДокументТовары КАК ДокументТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыССертификатами КАК ТоварыССертификатами
	|		ПО ДокументТовары.Номенклатура = ТоварыССертификатами.Номенклатура
	|			И ДокументТовары.Характеристика = ТоварыССертификатами.Характеристика
	|			И ДокументТовары.Серия = ТоварыССертификатами.Серия
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки,
	|	Номенклатура,
	|	Характеристика,
	|	ТипСертификата УБЫВ,
	|	Серия,
	|	СертификатДействует УБЫВ,
	|	ПриоритетСертификата
	|
	|ИТОГИ ПО
	|	Ссылка,
	|	НомерСтроки,
	|	Номенклатура,
	|	Характеристика,
	|	ТипСертификата,
	|	Серия
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 11
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка        КАК Ссылка,
	|	ДанныеРеализации.Номер         КАК Номер,
	|	ДанныеРеализации.Дата          КАК Дата,
	|	НЕОПРЕДЕЛЕНО                   КАК НомерИсправляемогоДокумента,
	|	НЕОПРЕДЕЛЕНО                   КАК ДатаИсправляемогоДокумента,
	|	ДанныеРеализации.Представление КАК Представление
	|ИЗ
	|	ДокументыПоКоторымВедетсяУчетСертификатов КАК ДанныеДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК ДанныеРеализации
	|		ПО ДанныеДокументов.Ссылка = ДанныеРеализации.Ссылка
	|ГДЕ
	|	ДанныеДокументов.Ссылка ССЫЛКА Документ.РеализацияТоваровУслуг
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка           КАК Ссылка,
	|	ДанныеКорректировки.Номер         КАК Номер,
	|	ДанныеКорректировки.Дата          КАК Дата,
	|	НЕОПРЕДЕЛЕНО                      КАК НомерИсправляемогоДокумента,
	|	НЕОПРЕДЕЛЕНО                      КАК ДатаИсправляемогоДокумента,
	|	ДанныеКорректировки.Представление КАК Представление
	|ИЗ
	|	ДокументыПоКоторымВедетсяУчетСертификатов КАК ДанныеДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК ДанныеКорректировки
	|		ПО ДанныеДокументов.Ссылка = ДанныеКорректировки.Ссылка
	|ГДЕ
	|	ДанныеДокументов.Ссылка ССЫЛКА Документ.КорректировкаРеализации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка         КАК Ссылка,
	|	ДанныеПеремещения.Номер         КАК Номер,
	|	ДанныеПеремещения.Дата          КАК Дата,
	|	ДанныеПеремещения.ИсправляемыйДокумент.Номер КАК НомерИсправляемогоДокумента,
	|	ДанныеПеремещения.ИсправляемыйДокумент.Дата КАК ДатаИсправляемогоДокумента,
	|	ДанныеПеремещения.Представление КАК Представление
	|ИЗ
	|	ДокументыПоКоторымВедетсяУчетСертификатов КАК ДанныеДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ДанныеПеремещения
	|		ПО ДанныеДокументов.Ссылка = ДанныеПеремещения.Ссылка
	|ГДЕ
	|	ДанныеДокументов.Ссылка ССЫЛКА Документ.ПеремещениеТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка      КАК Ссылка,
	|	ДанныеПередачи.Номер         КАК Номер,
	|	ДанныеПередачи.Дата          КАК Дата,
	|	НЕОПРЕДЕЛЕНО                 КАК НомерИсправляемогоДокумента,
	|	НЕОПРЕДЕЛЕНО                 КАК ДатаИсправляемогоДокумента,
	|	ДанныеПередачи.Представление КАК Представление
	|ИЗ
	|	ДокументыПоКоторымВедетсяУчетСертификатов КАК ДанныеДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровХранителю КАК ДанныеПередачи
	|		ПО ДанныеДокументов.Ссылка = ДанныеПередачи.Ссылка
	|ГДЕ
	|	ДанныеДокументов.Ссылка ССЫЛКА Документ.ПередачаТоваровХранителю
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";

	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектовДляЗапроса);

	МассивРезультатов = Запрос.ВыполнитьПакет();
	КоличествоРезультатов = МассивРезультатов.Количество();

	РезультатЗапроса = МассивРезультатов[КоличествоРезультатов - 1]; // РезультатЗапроса
	ДанныеПечати = РезультатЗапроса.Выбрать();

	РезультатЗапроса = МассивРезультатов[КоличествоРезультатов - 2]; // РезультатЗапроса
	ВыборкаПоДокументам = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	РезультатЗапроса = МассивРезультатов[КоличествоРезультатов - 3]; // РезультатЗапроса
	ВыборкаПоДокументамБезУчетаСертификатов = РезультатЗапроса.Выбрать();

	Макет = УправлениеПечатью.МакетПечатнойФормы("Справочник.СертификатыНоменклатуры.ПФ_MXL_РеестрСертификатов");

	ПервыйДокумент = Истина;

	ДопПараметрыПредставлениеНоменклатуры = НоменклатураКлиентСервер.ДополнительныеПараметрыПредставлениеНоменклатурыДляПечати();
	ДопПараметрыПредставлениеНоменклатуры.КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();

	Пока ДанныеПечати.Следующий() Цикл

		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		Область = Макет.ПолучитьОбласть("Шапка");
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, Область, ДанныеПечати.Ссылка);
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ТекстЗаголовка", НСтр("ru = 'Реестр сертификатов номенклатуры';
		|en = 'Quality certificate registry'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Область.Параметры.Заполнить(СтруктураПараметров);

		ТабличныйДокумент.Вывести(Область);

		Область = Макет.ПолучитьОбласть("Документ");
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ПредставлениеДокумента", ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(ДанныеПечати));
		Область.Параметры.Заполнить(СтруктураПараметров);

		ТабличныйДокумент.Вывести(Область);

		// Создаем массивы для проверки вывода
		МассивВыводимыхОбластей = Новый Массив;

		ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("НомерСтраницы", "Страница " + 1);
		ОбластьЗаголовокТаблицы.Параметры.Заполнить(СтруктураПараметров);
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);

		Область = Макет.ПолучитьОбласть("ШапкаТаблицы|НачалоСтроки");
		ТабличныйДокумент.Вывести(Область);
		Область = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаТоваров");
		ТабличныйДокумент.Присоединить(Область);
		Область = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаСертификатов");
		ТабличныйДокумент.Присоединить(Область);

		НомерСтраницы = 2;
		НомерСтроки = 1;
		ОбластьПерваяСтрокаКолонкаТоваров = Неопределено;
		ОбластьПерваяСтрокаНачалоСтроки = Неопределено;

		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		#Вставка 
		Подразделение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеПечати.Ссылка,"Подразделение");
		#КонецВставки
		
		ВыборкаПоНомеруСтроки = ВыборкаПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоНомеруСтроки.Следующий() Цикл

			ВывестиСтрокиДляПозицииТоваров(
			ТабличныйДокумент,
			Макет,
			ОбластьПерваяСтрокаКолонкаТоваров,
			НомерСтраницы,
			НомерСтроки,
			МассивВыводимыхОбластей);

			ВыборкаПоНоменклатуре = ВыборкаПоНомеруСтроки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоНоменклатуре.Следующий() Цикл

				ВыборкаПоХарактеристике = ВыборкаПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаПоХарактеристике.Следующий() Цикл

					ОбластьПерваяСтрокаНачалоСтроки = Макет.ПолучитьОбласть("СтрокаТаблицы|НачалоСтроки");
					СтруктураПараметров = Новый Структура;
					СтруктураПараметров.Вставить("НомерСтроки",НомерСтроки);
					ОбластьПерваяСтрокаНачалоСтроки.Параметры.Заполнить(СтруктураПараметров);

					ОбластьПерваяСтрокаКолонкаТоваров = Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаТоваров");
					ОбластьПерваяСтрокаКолонкаТоваров.Параметры.Заполнить(ВыборкаПоХарактеристике);

					ПредставлениеНоменклатуры = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					ВыборкаПоХарактеристике.НаименованиеНоменклатуры,
					ВыборкаПоХарактеристике.НаименованиеХарактеристики,
					,
					,
					ДопПараметрыПредставлениеНоменклатуры);

					СтруктураПараметров = Новый Структура;
					СтруктураПараметров.Вставить("Товар",ПредставлениеНоменклатуры);
					ОбластьПерваяСтрокаКолонкаТоваров.Параметры.Заполнить(СтруктураПараметров);			

					ВыборкаПоТипуСертификата = ВыборкаПоХарактеристике.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаПоТипуСертификата.Следующий() Цикл

						МассивСертификатов = Новый Массив;
						ПрерватьВыборкуПоСериям = Ложь;
						ВыборкаПоСериям = ВыборкаПоТипуСертификата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

						Пока ВыборкаПоСериям.Следующий() Цикл

							Выборка = ВыборкаПоСериям.Выбрать();
							ПрерватьВыборку = Ложь;
							ДействующийСертификатДляСерииДобавлен = Ложь;
							Пока Выборка.Следующий() Цикл
								
								#Вставка 
								ПодразделениеСертификата = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.СертификатНоменклатуры,"Подразделение");
								Если ЗначениеЗаполнено(ПодразделениеСертификата) И Подразделение <> ПодразделениеСертификата Тогда
									Продолжить;	
								КонецЕсли;
								#КонецВставки
								Если Не Выборка.ВестиУчетСертификатовНоменклатуры Тогда

									ОбластьСертификат = Макет.ПолучитьОбласть("СтрокаТаблицыСертификат|КолонкаСертификатов");
									СтруктураПараметров = Новый Структура;
									СтруктураПараметров.Вставить("Сертификат",НСтр("ru = '<Учет сертификатов не ведется>';
									|en = '<Certificates are not recorded>'", ОбщегоНазначения.КодОсновногоЯзыка()));
									ОбластьСертификат.Параметры.Заполнить(СтруктураПараметров);	

									ПрерватьВыборкуПоСериям = Истина;
									ПрерватьВыборку = Истина;

								ИначеЕсли Выборка.НетДействующихСертификатов Тогда

									ОбластьСертификат = Макет.ПолучитьОбласть("СтрокаТаблицыСертификатЖирный|КолонкаСертификатов");
									СтруктураПараметров = Новый Структура;
									СтруктураПараметров.Вставить("Сертификат",НСтр("ru = '<Нет действующих сертификатов>';
									|en = '<No valid certificates>'", ОбщегоНазначения.КодОсновногоЯзыка()));
									ОбластьСертификат.Параметры.Заполнить(СтруктураПараметров);			

									Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									НСтр("ru = 'Для товара %1 отсутствуют зарегистрированные сертификаты. Требуется указать сертификаты номенклатуры.';
									|en = 'There are no registered certificates for goods %1. It is required to specify the quality certificates.'"),
									ПредставлениеНоменклатуры);
									ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
									Текст,
									Выборка.Номенклатура);

									ПрерватьВыборкуПоСериям = Истина;
									ПрерватьВыборку = Истина;										

								ИначеЕсли Не Выборка.СертификатДействует Тогда

									Если ДействующийСертификатДляСерииДобавлен Тогда
										Прервать;	
									КонецЕсли;

									Если ЗначениеЗаполнено(Выборка.Серия) Тогда
										ТекстОшибки = НСтр("ru = '<%ТипСертификата%: нет действующих сертификатов для серии %Серия%>';
										|en = '<%ТипСертификата%: no valid certificates for batch %Серия%>'");

										ПредставлениеНоменклатурыССерией = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(
										ВыборкаПоХарактеристике.НаименованиеНоменклатуры,
										ВыборкаПоХарактеристике.НаименованиеХарактеристики,
										,
										Выборка.Серия);

										Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										НСтр("ru = 'Для товара %1 нет действующих сертификатов (%2). Требуется зарегистрировать действующий сертификат.';
										|en = 'There are no valid certificates (%2) for goods %1. It is required to register a valid certificate.'"),
										ПредставлениеНоменклатурыССерией,
										Выборка.ТипСертификата);
									Иначе 
										ТекстОшибки = НСтр("ru = '<%ТипСертификата%: нет действующих сертификатов>';
										|en = '<%ТипСертификата%: no valid certificates>'");
										Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										НСтр("ru = 'Для товара %1 нет действующих сертификатов (%2). Требуется зарегистрировать действующий сертификат.';
										|en = 'There are no valid certificates (%2) for goods %1. It is required to register a valid certificate.'"),
										ПредставлениеНоменклатуры,
										Выборка.ТипСертификата);
									КонецЕсли;

									ПрерватьВыборку = Истина;
									ТекстОшибки = СтрЗаменить(ТекстОшибки,"%ТипСертификата%",Выборка.ТипСертификата);
									ТекстОшибки = СтрЗаменить(ТекстОшибки,"%Серия%",Выборка.Серия);
									ОбластьСертификат = Макет.ПолучитьОбласть("СтрокаТаблицыСертификатЖирный|КолонкаСертификатов");
									СтруктураПараметров = Новый Структура;
									СтруктураПараметров.Вставить("Сертификат",ТекстОшибки);
									ОбластьСертификат.Параметры.Заполнить(СтруктураПараметров);															

									ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
									Текст,
									Выборка.Номенклатура);

								Иначе

									Если МассивСертификатов.Найти(Выборка.СертификатНоменклатуры) = Неопределено Тогда 			
										ОбластьСертификат = Макет.ПолучитьОбласть("СтрокаТаблицыСертификат|КолонкаСертификатов");
										СтруктураПараметров = Новый Структура;
										СтруктураПараметров.Вставить("Сертификат", Выборка.СертификатНоменклатуры);
										СтруктураПараметров.Вставить("СертификатНоменклатуры", Выборка.СертификатНоменклатуры);
										ОбластьСертификат.Параметры.Заполнить(СтруктураПараметров);

										МассивСертификатов.Добавить(Выборка.СертификатНоменклатуры);
										ДействующийСертификатДляСерииДобавлен = Истина;
									Иначе
										Продолжить;
									КонецЕсли

								КонецЕсли;

								МассивВыводимыхОбластей.Добавить(ОбластьСертификат);

								Если ПрерватьВыборку Тогда
									Прервать;
								КонецЕсли;	

							КонецЦикла;	

							Если ПрерватьВыборкуПоСериям Тогда
								Прервать;
							КонецЕсли;								

						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;

		ВывестиСтрокиДляПозицииТоваров(
		ТабличныйДокумент,
		Макет,
		ОбластьПерваяСтрокаКолонкаТоваров,
		НомерСтраницы,
		НомерСтроки,
		МассивВыводимыхОбластей);

		Область = Макет.ПолучитьОбласть("ПодвалТаблицы|НачалоСтроки");
		ТабличныйДокумент.Вывести(Область);
		Область = Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаТоваров");
		ТабличныйДокумент.Присоединить(Область);
		Область = Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаСертификатов");
		ТабличныйДокумент.Присоединить(Область);

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);

	КонецЦикла;

	Пока ВыборкаПоДокументамБезУчетаСертификатов.Следующий() Цикл
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'В документе %1 отсутствуют товары, для которых ведется учет сертификатов. Печать реестра сертификатов номенклатуры не требуется.';
		|en = 'Goods for which certificate records are kept are missing in document %1. Printing of quality certificate registry is not required.'"),
		Строка(ВыборкаПоДокументамБезУчетаСертификатов.Ссылка));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		Текст,
		ВыборкаПоДокументамБезУчетаСертификатов.Ссылка);
	КонецЦикла;

	ТабличныйДокумент.АвтоМасштаб = Истина;

	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;

	Возврат ТабличныйДокумент;

КонецФункции

&ИзменениеИКонтроль("СформироватьСписокВыбораТиповСертификатов")
Функция РСК_СформироватьСписокВыбораТиповСертификатов()

	ТаблицаТиповСертификата = Новый ТаблицаЗначений;
	ТаблицаТиповСертификата.Колонки.Добавить("ТипСертификата", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(25)));
	НоваяСтрока = ТаблицаТиповСертификата.Добавить();
	НоваяСтрока.ТипСертификата = НСтр("ru = 'Сертификат соответствия';
	|en = 'Certificate of conformity'");
	НоваяСтрока = ТаблицаТиповСертификата.Добавить();
	НоваяСтрока.ТипСертификата = НСтр("ru = 'Гигиенический сертификат';
	|en = 'Hygienic certificate'");
	НоваяСтрока = ТаблицаТиповСертификата.Добавить();
	НоваяСтрока.ТипСертификата = НСтр("ru = 'Пожарный сертификат';
	|en = 'Fire certificate'");
	НоваяСтрока = ТаблицаТиповСертификата.Добавить();
	НоваяСтрока.ТипСертификата = НСтр("ru = 'Декларация о соответствии';
	|en = 'Declaration of conformity'"); 
	#Вставка
	НоваяСтрока = ТаблицаТиповСертификата.Добавить();
	НоваяСтрока.ТипСертификата = НСтр("ru = 'РУ';
	|en = 'Registration certificate'"); 
	НоваяСтрока = ТаблицаТиповСертификата.Добавить();
	НоваяСтрока.ТипСертификата = НСтр("ru = 'Технический паспорт';
	|en = 'Technical passport'"); 
	НоваяСтрока = ТаблицаТиповСертификата.Добавить();
	НоваяСтрока.ТипСертификата = НСтр("ru = 'Инструкция по применению';
	|en = 'Instructions for use'"); 
	НоваяСтрока = ТаблицаТиповСертификата.Добавить();
	НоваяСтрока.ТипСертификата = НСтр("ru = 'Гарантийный талон';
	|en = 'Warranty card'"); 
	#КонецВставки

	Запрос = Новый Запрос;	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаТиповСертификата.ТипСертификата КАК ТипСертификата
	|ПОМЕСТИТЬ ТаблицаПредопределенныхТипов
	|ИЗ
	|	&ТаблицаТиповСертификата КАК ТаблицаТиповСертификата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.ТипСертификата КАК ТипСертификата
	|ИЗ
	|	(ВЫБРАТЬ
	|		СертификатыНоменклатуры.ТипСертификата КАК ТипСертификата
	|	ИЗ
	|		Справочник.СертификатыНоменклатуры КАК СертификатыНоменклатуры
	|	ГДЕ
	|		СертификатыНоменклатуры.ЭтоГруппа = ЛОЖЬ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаПредопределенныхТипов.ТипСертификата
	|	ИЗ
	|		ТаблицаПредопределенныхТипов КАК ТаблицаПредопределенныхТипов) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТипСертификата";

	Запрос.УстановитьПараметр("ТаблицаТиповСертификата",ТаблицаТиповСертификата);

	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ТипСертификата");

КонецФункции

Функция НеобходимаПечатьСертификата(Документ, ТипСертификата, Номенклатура, Характеристика, Серия)
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		ЗаказОснование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ,"ЗаказКлиента"); 
	КонецЕсли;  
	
	Если ЗначениеЗаполнено(ЗаказОснование) И ТипЗнч(ЗаказОснование) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		XMLПредставлениеТипов   = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗаказОснование,"РСК_СертификатыКПечати");
		Если ЗначениеЗаполнено(XMLПредставлениеТипов) Тогда
			ТипыСертификатовКПечати = РСК_Сервер.ПроизвестиЧтениеТаблицыИзXMLСервер(XMLПредставлениеТипов); 
			Если ТипыСертификатовКПечати.НайтиСтроки(Новый Структура("ТипСертификата,Пометка",ТипСертификата,Истина)).Количество() > 0 Тогда
				Возврат ВОснованииУстановленаПечатьСертификатов(ЗаказОснование,Номенклатура,Характеристика,Серия); 	
			Иначе
				Возврат Ложь;
			КонецЕсли;
		Иначе
			Возврат Ложь;	
		КонецЕсли;
	КонецЕсли;

	Возврат Истина;
	
КонецФункции 

Функция ВОснованииУстановленаПечатьСертификатов(Основание, Номенклатура, Характеристика, Серия) 
	
	Запрос = Новый Запрос; 
	Запрос.УстановитьПараметр("Основание",Основание);
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	Запрос.УстановитьПараметр("Характеристика",Характеристика);
	Запрос.УстановитьПараметр("Серия",Серия);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказКлиентаТовары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|ГДЕ
	|	ЗаказКлиентаТовары.Номенклатура = &Номенклатура
	|	И ЗаказКлиентаТовары.Характеристика = &Характеристика
	|	И ЗаказКлиентаТовары.Серия = &Серия
	|	И ЗаказКлиентаТовары.ПечататьСертификаты
	|	И ЗаказКлиентаТовары.Ссылка = &Основание";
	
	Результат = Запрос.Выполнить();
	
	Возврат НЕ Результат.Пустой();
	
КонецФункции

#КонецЕсли