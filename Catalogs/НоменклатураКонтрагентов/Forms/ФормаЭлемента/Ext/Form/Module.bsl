
&НаКлиенте
Процедура РСК_ПередЗаписьюВместо(Отказ, ПараметрыЗаписи)
	
	Объект.ВладелецНоменклатуры = Объект.Владелец;
	
	Если Не ЗначениеЗаполнено(Объект.НаименованиеПолное) Тогда
		
		Объект.НаименованиеПолное = Объект.НаименованиеНоменклатуры
			+ ?(ЗначениеЗаполнено(Объект.НаименованиеХарактеристики), " (" + Объект.НаименованиеХарактеристики + ")", "")
			+ ?(ЗначениеЗаполнено(Объект.НаименованиеУпаковки), ", " + Объект.НаименованиеУпаковки, "");
			
	КонецЕсли;
	
	//++ РС Консалт: Трофимов Евгений 22.07.2022
	//В типовом обработчике наименование перезаполняется и не даёт пользователю написать своё.
	Если НЕ ЗначениеЗаполнено(Объект.Наименование) Тогда
		Объект.Наименование = Объект.НаименованиеПолное;
	КонецЕсли;
	//--

	ОбработатьЗаполнениеИдентификатора(Отказ);
	
	Если Не Объект.Недействителен И Не Объект.ПометкаУдаления
		И (ПустаяСтрока(Объект.НаименованиеУпаковки) Или ПустаяСтрока(Объект.НаименованиеБазовойЕдиницыИзмерения))
		И ЗначениеЗаполнено(Объект.ИдентификаторУпаковки) Тогда
		Текст =  НСтр("ru = 'Необходимо заполнить наименование единицы измерения и упаковки.';
						|en = 'Fill in unit of measure and package name.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(Текст, , , , Отказ);
		Возврат;
	КонецЕсли;

	Если ЗначениеЗаполнено(Объект.Номенклатура)
		И НЕ ЗначениеЗаполнено(Объект.Упаковка) И ЗначениеЗаполнено(ЕдиницаИзмеренияПоУмолчанию) Тогда
		Объект.Упаковка = ЕдиницаИзмеренияПоУмолчанию;
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
&ИзменениеИКонтроль("ОбработатьЗаполнениеИдентификатора")
Процедура РСК_ОбработатьЗаполнениеИдентификатора(Отказ)

	Идентификатор                     = "";
	НоменклатураКонтрагента           = Неопределено;
	ТребуетсяЗаполнениеИдентификатора = Ложь;

	Если Не ЗначениеЗаполнено(Объект.Идентификатор) Тогда
		Идентификатор = Объект.НаименованиеНоменклатуры + "#" + Объект.НаименованиеХарактеристики + "#" + Объект.НаименованиеУпаковки;
		ТребуетсяЗаполнениеИдентификатора = Истина;
	Иначе
		Идентификатор = Объект.Идентификатор;
	КонецЕсли;

	ТребуетсяПроверкаНаДубль = Не Объект.Недействителен И Не Объект.ПометкаУдаления;

	ПроверитьИдентификаторИРазбитьНаЧасти(Объект.Ссылка, Объект.ВладелецНоменклатуры, НоменклатураКонтрагента,
	Идентификатор, ТребуетсяЗаполнениеИдентификатора, ТребуетсяПроверкаНаДубль);

	Если ТребуетсяЗаполнениеИдентификатора Тогда
		Объект.Идентификатор = Идентификатор;
	КонецЕсли;	

	Идентификаторы = ИдентификаторыРазделенныеНаЧасти(Объект.Идентификатор);
	Объект.ИдентификаторНоменклатуры   = Идентификаторы.ИдентификаторНоменклатуры;
	Объект.ИдентификаторХарактеристики = Идентификаторы.ИдентификаторХарактеристики;
	Объект.ИдентификаторУпаковки       = Идентификаторы.ИдентификаторУпаковки;

	Если ЗначениеЗаполнено(НоменклатураКонтрагента) Тогда
		Текст = СтрШаблон(НСтр("ru = 'Найдена номенклатура ""%1"", для которой задан аналогичный идентификатор %2.';
		|en = 'Found item ""%1"" with the same ID %2.'"),
		НоменклатураКонтрагента, Объект.Идентификатор);
		#Вставка                                                                  
		//++РС Консалт Назаров М.Ю. 2 ноября 2022 г. 15:25:41
		// Выдает ошибку, но не отменяет
		ОбщегоНазначенияКлиент.СообщитьПользователю(Текст, НоменклатураКонтрагента);
		//--РС Консалт Назаров М.Ю. 2 ноября 2022 г. 15:25:41
		#КонецВставки
		#Удаление
		ОбщегоНазначенияКлиент.СообщитьПользователю(Текст, НоменклатураКонтрагента, , , Отказ);
		Объект.Идентификатор               = "";
		Объект.ИдентификаторНоменклатуры   = "";
		Объект.ИдентификаторХарактеристики = "";
		Объект.ИдентификаторУпаковки       = "";
		Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
			Возврат;
		КонецЕсли;
		#КонецУдаления
	КонецЕсли;

КонецПроцедуры