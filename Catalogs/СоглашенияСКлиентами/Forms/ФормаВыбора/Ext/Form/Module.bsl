
&НаСервере
&ИзменениеИКонтроль("ПриСозданииНаСервере")
Процедура РСК_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	#Вставка
	Список.ТекстЗапроса = СтрЗаменить(Список.ТекстЗапроса,"КАК Контрагент,","КАК Контрагент,СправочникСоглашенияСКлиентами.ТипСоглашения КАК ВидСоглашения,"); 
	#КонецВставки

	ОбщегоНазначенияУТ.НастроитьПодключаемоеОборудование(ЭтаФорма);
	
	Список.Параметры.УстановитьЗначениеПараметра("Партнер",                     Параметры.Партнер);
	Список.Параметры.УстановитьЗначениеПараметра("ТолькоИспользуемыеВРаботеТП", Параметры.ТолькоИспользуемыеВРаботеТП);
	Список.Параметры.УстановитьЗначениеПараметра("ДатаДокумента",               ?(ЗначениеЗаполнено(Параметры.ДатаДокумента), НачалоДня(Параметры.ДатаДокумента), НачалоДня(ТекущаяДатаСеанса())));
	
	Если Не Параметры.ТолькоТиповые Тогда
		Партнер = Параметры.Партнер;
	КонецЕсли;

	ИспользоватьОбменБизнесСеть	= Ложь;
	
	ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи	= ПолучитьФункциональнуюОпцию("ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи");
	ИспользоватьКомиссиюПриПродажах								= ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриПродажах");
	ИспользоватьСоглашенияСКлиентами							= ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами");	
	// ЭлектронноеВзаимодействие.ТорговыеПредложения	
	ИспользоватьОбменБизнесСеть									= ПолучитьФункциональнуюОпцию("ИспользоватьОбменБизнесСеть");
	// Конец ЭлектронноеВзаимодействие.ТорговыеПредложения
	
	Если ИспользоватьОбменБизнесСеть И Не ИспользоватьСоглашенияСКлиентами Тогда
		Элементы.ГруппаКомментарийИспользоватьСоглашенияСКлиентами.Видимость = Истина;
	Иначе
		Элементы.ГруппаКомментарийИспользоватьСоглашенияСКлиентами.Видимость = Ложь;		
	КонецЕсли;
	
	Если Параметры.Свойство("ТолькоОперацииПередачи") И ЗначениеЗаполнено(Параметры.ТолькоОперацииПередачи) И Параметры.ТолькоОперацииПередачи Тогда
		
		Если ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи Или ИспользоватьКомиссиюПриПродажах Тогда
			ГруппаОтбора = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(Список.Отбор.Элементы, "ТолькоОперацииПередачи", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
		КонецЕсли;
		
		Если ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи Тогда
			ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ХозяйственнаяОперация");
			ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ОтборЭлемента.ПравоеЗначение = Перечисления.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи;
		КонецЕсли;
		
		Если ИспользоватьКомиссиюПриПродажах Тогда
			ГруппаОтбораКомиссии = ГруппаОтбора.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			ГруппаОтбораКомиссии.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
		
			ОтборЭлемента = ГруппаОтбораКомиссии.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ХозяйственнаяОперация");
			ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ОтборЭлемента.ПравоеЗначение = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию;
			
			ОтборЭлемента = ГруппаОтбораКомиссии.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КомиссионныеПродажи25");
			ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ОтборЭлемента.ПравоеЗначение = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если Не Параметры.ТолькоОперацииПередачи И ЗначениеЗаполнено(Параметры.ХозяйственнаяОперация) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ХозяйственнаяОперация", Параметры.ХозяйственнаяОперация, ВидСравненияКомпоновкиДанных.Равно,, Истина);
		ХозяйственнаяОперация = Параметры.ХозяйственнаяОперация;
	КонецЕсли;
	
	Если Параметры.Свойство("КомиссионныеПродажи25") И ЗначениеЗаполнено(Параметры.КомиссионныеПродажи25)
		И ИспользоватьКомиссиюПриПродажах Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "КомиссионныеПродажи25", Параметры.КомиссионныеПродажи25, ВидСравненияКомпоновкиДанных.Равно,, Истина);
	КонецЕсли;
	
	Если Параметры.Свойство("ИспользуютсяДоговорыКонтрагентов") И Параметры.ИспользуютсяДоговорыКонтрагентов <> Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ИспользуютсяДоговорыКонтрагентов", Параметры.ИспользуютсяДоговорыКонтрагентов, ВидСравненияКомпоновкиДанных.Равно,, Истина);
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("Организация") 
		И ЗначениеЗаполнено(Параметры.Отбор.Организация) Тогда
		
		Организация = Параметры.Отбор.Организация;
		УстановитьОтборПоОрганизации(ЭтотОбъект);
		Параметры.Отбор.Удалить("Организация");
		
	КонецЕсли;
	
	ТекстТиповое = НСтр("ru = 'Типовое';
						|en = 'Standard'");
	ТекстИндивидуальное = НСтр("ru = 'Индивидуальное';
								|en = 'Individual'");
	
	Элементы.ТипСоглашения.СписокВыбора.Добавить("", НСтр("ru = 'Все';
															|en = 'All'"));
	Элементы.ТипСоглашения.СписокВыбора.Добавить(ТекстТиповое, НСтр("ru = 'Типовые';
																	|en = 'Standard'"));
	Элементы.ТипСоглашения.СписокВыбора.Добавить(ТекстИндивидуальное, НСтр("ru = 'Индивидуальные';
																			|en = 'Special'"));
	
	// Переопределение выводимых типов соглашений и установка свойств зависимых элементов.
	ИспользоватьТиповыеСоглашенияСКлиентами			= ПолучитьФункциональнуюОпцию("ИспользоватьТиповыеСоглашенияСКлиентами");
	ИспользоватьИндивидуальныеСоглашенияСКлиентами	= ПолучитьФункциональнуюОпцию("ИспользоватьИндивидуальныеСоглашенияСКлиентами");
	
	ТолькоТиповые = ИспользоватьТиповыеСоглашенияСКлиентами И НЕ ИспользоватьИндивидуальныеСоглашенияСКлиентами;
	ТолькоИндивидуальные = НЕ ИспользоватьТиповыеСоглашенияСКлиентами И ИспользоватьИндивидуальныеСоглашенияСКлиентами;
	
	Если ТолькоТиповые 
		ИЛИ (Параметры.ТолькоТиповые И НЕ ТолькоИндивидуальные) Тогда
		ТипСоглашения = ТекстТиповое;
		Параметры.ТолькоТиповые = Истина;
		ТолькоТиповые = Истина;
		
		Заголовок = НСтр("ru = 'Типовые соглашения с клиентами';
						|en = 'Standard terms of sales'");
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ТипСоглашения", "Видимость", Ложь);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокТипСоглашения", "Видимость", Ложь);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокСоздатьИндивидуальноеСоглашение", "Видимость", Ложь);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокКонтекстноеМенюСоздатьИндивидуальноеСоглашение", "Видимость", Ложь);
		
	ИначеЕсли ТолькоИндивидуальные Тогда
		ТипСоглашения = ТекстИндивидуальное;
		
		Заголовок = НСтр("ru = 'Индивидуальные соглашения с клиентами';
						|en = 'Special terms of sales'");
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ТипСоглашения", "Видимость", Ложь);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокТипСоглашения", "Видимость", Ложь);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокСоздатьТиповоеСоглашение", "Видимость", Ложь);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокКонтекстноеМенюСоздатьТиповоеСоглашение", "Видимость", Ложь);
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список,"ТолькоТиповые", ТолькоТиповые);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список,"ТолькоИндивидуальные", ТолькоИндивидуальные);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список,"Типовое", ТекстТиповое);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список,"Индивидуальное", ТекстИндивидуальное);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список,"Действует", НСтр("ru = 'Действует';
																								|en = 'Valid'"));
	
	Если Параметры.ТолькоТиповые Тогда
		
		Заголовок = НСтр("ru = 'Типовые соглашения с клиентами';
						|en = 'Standard terms of sales'");
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ТипСоглашения", "Видимость", Ложь);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокТипСоглашения", "Видимость", Ложь);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокСоздатьИндивидуальноеСоглашение", "Видимость", Ложь);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокКонтекстноеМенюСоздатьИндивидуальноеСоглашение", "Видимость", Ложь);
	Иначе
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокСоздатьТиповоеСоглашение", "Видимость", Ложь);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокКонтекстноеМенюСоздатьТиповоеСоглашение", "Видимость", Ложь);
	КонецЕсли;
	
	Если НЕ ПравоДоступа("Добавление",Метаданные.Справочники.СоглашенияСКлиентами) Тогда
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокСоздатьТиповоеСоглашение", "Видимость", Ложь);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокСоздатьИндивидуальноеСоглашение", "Видимость", Ложь);
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ПартнерОтбор", Параметры.Партнер, ВидСравненияКомпоновкиДанных.Равно,, Истина);
	
	Элементы.Менеджер.ИсторияВыбораПриВводе = ИсторияВыбораПриВводе.НеИспользовать;
	ОтборыСписковКлиентСервер.СкопироватьСписокВыбораОтбораПоМенеджеру(
		Элементы.Менеджер.СписокВыбора,
		ОбщегоНазначенияУТ.ПолучитьСписокПользователейСПравомДобавления(Метаданные.Справочники.СоглашенияСКлиентами, НСтр("ru = '<Мои соглашения>';
																															|en = '<My agreements>'")));
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если НЕ ПраваПользователяПовтИсп.ИзменениеТиповыхСоглашений() Тогда
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокСоздатьТиповоеСоглашение", "Видимость", Ложь);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокКонтекстноеМенюСоздатьТиповоеСоглашение", "Видимость", Ложь);
	КонецЕсли;
	#Вставка
	//++Конарев Отборы при выборе соглашений из заказа клиента
	Если Параметры.Свойство("Подразделение") Тогда
		
		ГруппаОтбораПодразделение = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(Список.Отбор.Элементы, "ОтборПоПодразделению", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
				
		ОтборЭлемента = ГруппаОтбораПодразделение.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ВидСоглашенияДляОграниченияИзменения");
		ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Перечисления.ВидыСоглашенийСКлиентамиДляОграниченияИзменения.Типовые;
		
		ОтборЭлемента = ГруппаОтбораПодразделение.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Подразделение");
		ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Параметры.Подразделение; 
		
		Если НЕ ТекущийПользовательСогласущийКомерческиеУсловияПродаж() Тогда
			ОтборЭлемента = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ВидСоглашения");
			ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеРавно;
			ОтборЭлемента.ПравоеЗначение = Справочники.ТипыСоглашенийСКлиентами.Выставка(); 
		КонецЕсли;
	КонецЕсли;
	#КонецВставки
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом
	
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ТекущийПользовательСогласущийКомерческиеУсловияПродаж()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Исполнитель", Пользователи.ТекущийПользователь());
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ИсполнителиЗадач.Исполнитель КАК Исполнитель
	|ИЗ
	|	РегистрСведений.ИсполнителиЗадач КАК ИсполнителиЗадач
	|ГДЕ
	|	ИсполнителиЗадач.РольИсполнителя = ЗНАЧЕНИЕ(Справочник.РолиИсполнителей.СогласующийКоммерческиеУсловияПродаж)
	|	И ИсполнителиЗадач.Исполнитель = &Исполнитель"; 
	
	Результат = Запрос.Выполнить();
	
	Возврат НЕ Результат.Пустой(); 
	
КонецФункции
