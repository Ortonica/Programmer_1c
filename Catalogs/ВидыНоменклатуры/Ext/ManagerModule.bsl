
//++ РС Консалт: Минаков А.С.: Неисправность из-за режима совместимости
&ИзменениеИКонтроль("ОтработатьЛогикуСвязиРеквизитов")
Процедура РСК_ОтработатьЛогикуСвязиРеквизитов(ВидНоменклатуры)
	РеквизитыПризнаковОсобенностейУчета = Справочники.Номенклатура.РеквизитыПризнаковОсобенностейУчета(Метаданные.Справочники.ВидыНоменклатуры);

	Для Каждого ИмяРеквизита Из РеквизитыПризнаковОсобенностейУчета Цикл
		#Вставка
		//++ РС Консалт: Минаков А.С.: Неисправность из-за режима совместимости
		Если ИмяРеквизита = "ПродукцияМаркируемаяДляГИСМ" Тогда
			ВидНоменклатуры[ИмяРеквизита] = ВидНоменклатуры.ОсобенностьУчета = Неопределено
		Иначе
			//++ РС Консалт: Минаков А.С.: Неисправность из-за режима совместимости
			#КонецВставки
			ВидНоменклатуры[ИмяРеквизита] = ВидНоменклатуры.ОсобенностьУчета = 
			ПредопределенноеЗначение("Перечисление.ОсобенностиУчетаНоменклатуры." + ИмяРеквизита);
			#Вставка
			//++ РС Консалт: Минаков А.С.: Неисправность из-за режима совместимости
		КонецЕсли
		//++ РС Консалт: Минаков А.С.: Неисправность из-за режима совместимости
		#КонецВставки
	КонецЦикла;

	Если Не ЗначениеЗаполнено(ВидНоменклатуры.ОсобенностьУчета) Тогда
		Если ВидНоменклатуры.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда

			ВидНоменклатуры.ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.ОрганизациейПродавцом;
		Иначе

			ВидНоменклатуры.ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.БезОсобенностейУчета;

		КонецЕсли;
	КонецЕсли;

	ЗначенияРеквизитовСтрогоЗаполняемыеПоОсобенностямУчета = ЗначенияРеквизитовСтрогоЗаполняемыеПоОсобенностямУчета();
	ЗначенияРеквизитов = ЗначенияРеквизитовСтрогоЗаполняемыеПоОсобенностямУчета.Получить(ВидНоменклатуры.ОсобенностьУчета);
	Если ЗначенияРеквизитов <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ВидНоменклатуры, ЗначенияРеквизитов);
	КонецЕсли;

	ПроверитьПоТипуИОсобенностиНоменклатуруОчиститьВладельца(ВидНоменклатуры, "ВладелецХарактеристик");
	ПроверитьПоТипуИОсобенностиНоменклатуруОчиститьВладельца(ВидНоменклатуры, "ВладелецСерий");
	ПроверитьПоТипуИОсобенностиНоменклатуруОчиститьВладельца(ВидНоменклатуры, "ВладелецТоварныхКатегорий");

	ИспользованиеРеквизитов = Справочники.Номенклатура.ИспользованиеЭлементов(ВидНоменклатуры,Ложь,Истина);
	МетаданныеОбъекта = Метаданные.Справочники.ВидыНоменклатуры;

	Для каждого КлючЗначение Из ИспользованиеРеквизитов Цикл
		Если Не КлючЗначение.Значение Тогда
			Если МетаданныеОбъекта.Реквизиты.Найти(КлючЗначение.Ключ) <> Неопределено Тогда
				ВидНоменклатуры[КлючЗначение.Ключ] = Неопределено;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Если Не ВидНоменклатуры.ИспользоватьХарактеристики Тогда

		ВидНоменклатуры.ИспользованиеХарактеристик = ПредопределенноеЗначение("Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать");

		ВидНоменклатуры.ШаблонНаименованияДляПечатиХарактеристики = "";
		ВидНоменклатуры.ШаблонРабочегоНаименованияХарактеристики  = "";

		ВидНоменклатуры.ЗапретРедактированияНаименованияДляПечатиХарактеристики = Ложь;
		ВидНоменклатуры.ЗапретРедактированияРабочегоНаименованияХарактеристики  = Ложь;
		ВидНоменклатуры.ВладелецХарактеристик = Неопределено;

	КонецЕсли;

	Если ВидНоменклатуры.ИспользованиеХарактеристик <> Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры Тогда
		ВидНоменклатуры.ВладелецХарактеристик = Справочники.ВидыНоменклатуры.ПустаяСсылка();
	КонецЕсли;

	Если Не ВидНоменклатуры.ИспользоватьСерии Тогда

		ЗначенияРеквизитовПоУмолчанию = ОбщегоНазначенияУТ.ЗначенияРеквизитовОбъектаПоУмолчанию(Справочники.ВидыНоменклатуры.ПустаяСсылка(),
		РеквизитыНастройкиУказанияСерий());

		ЗаполнитьЗначенияСвойств(ВидНоменклатуры, ЗначенияРеквизитовПоУмолчанию);

		ВидНоменклатуры.ПолитикаУчетаСерий = Справочники.ПолитикиУчетаСерий.СерииНеИспользуются;
		ВидНоменклатуры.НастройкиКлючаЦенПоСерии = Перечисления.ВариантОтбораДляКлючаЦен.НеИспользовать;
		ВидНоменклатуры.ПолитикиУчетаСерий.Очистить();

	Иначе

		Если ВидНоменклатуры.НастройкиСерийБерутсяИзДругогоВидаНоменклатуры
			И (ТипЗнч(ВидНоменклатуры) = Тип("СправочникОбъект.ВидыНоменклатуры")
			И Не ВидНоменклатуры.ДополнительныеСвойства.Свойство("ПропуститьЗаполнениеТЧПолитикиУчетаСерий")) Тогда

			РеквизитыВладельцаСерий = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВидНоменклатуры.ВладелецСерий,
			РеквизитыНастройкиУказанияСерий());

			ЗаполнитьЗначенияСвойств(ВидНоменклатуры, РеквизитыВладельцаСерий,,"ВладелецСерий,НастройкиСерийБерутсяИзДругогоВидаНоменклатуры");

			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ВидыНоменклатурыПолитикиУчетаСерий.Склад,
			|	ВидыНоменклатурыПолитикиУчетаСерий.ПолитикаУчетаСерий
			|ИЗ
			|	Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ВидыНоменклатурыПолитикиУчетаСерий
			|ГДЕ
			|	ВидыНоменклатурыПолитикиУчетаСерий.Ссылка = &ВладелецСерий";

			Запрос.УстановитьПараметр("ВладелецСерий", ВидНоменклатуры.ВладелецСерий);

			ВидНоменклатуры.ПолитикиУчетаСерий.Загрузить(Запрос.Выполнить().Выгрузить());

		Иначе

			НастройкиИспользованияСерий = НастройкиИспользованияСерий(ВидНоменклатуры);

			Для Каждого Описание Из НастройкиИспользованияСерий.ОписанияИспользованияРеквизитовСерии Цикл

				Если Не ПустаяСтрока(Описание.ОсобенностиУчета) Тогда

					ИменаОсобенностей = СтрРазделить(Описание.ОсобенностиУчета, ",");

					НадоОчистить = Истина;

					Для Каждого ИмяОсобенности Из ИменаОсобенностей Цикл

						#Вставка	
						//++ РС Консалт: Трофимов Евгений 14.11.2022 Задача 21888
						//e1cib/data/Документ.Задание?ref=b78cb3350ddceaa74dc2de247cd268fb
						Если РСК_ВызовСервера.ПолучитьЗначениеПеречисления("ОсобенностиУчетаНоменклатуры", ИмяОсобенности) <> Неопределено Тогда
						//-- КонецЗадачи 21888
						#КонецВставки
						Если ВидНоменклатуры.ОсобенностьУчета = ПредопределенноеЗначение("Перечисление.ОсобенностиУчетаНоменклатуры." + ИмяОсобенности) Тогда
							НадоОчистить = Ложь;
							Прервать;
						КонецЕсли;
						#Вставка	
						//++ РС Консалт: Трофимов Евгений 14.11.2022 Задача 21888
						//e1cib/data/Документ.Задание?ref=b78cb3350ddceaa74dc2de247cd268fb
						КонецЕсли;
						//-- КонецЗадачи 21888
						#КонецВставки

					КонецЦикла;

					Если НадоОчистить Тогда
						ВидНоменклатуры[Описание.ИмяНастройки] = Ложь;
					КонецЕсли;

				КонецЕсли;

			КонецЦикла;

			ВидНоменклатуры.ИспользоватьКоличествоСерии = (ВидНоменклатуры.НастройкаИспользованияСерий = Перечисления.НастройкиИспользованияСерийНоменклатуры.ПартияТоваров);

			Если ВидНоменклатуры.НастройкаИспользованияСерий <> Перечисления.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара Тогда
				ВидНоменклатуры.ИспользоватьRFIDМеткиСерии = Ложь;
			КонецЕсли;

			Если Не ВидНоменклатуры.ИспользоватьСрокГодностиСерии
				И Не ВидНоменклатуры.ИспользоватьДатуПроизводстваСерии Тогда
				ВидНоменклатуры.ЕдиницаИзмеренияСрокаГодности = Перечисления.ЕдиницыИзмеренияВремени.ПустаяСсылка();
				ВидНоменклатуры.ТочностьУказанияСрокаГодностиСерии = Перечисления.ТочностиУказанияСрокаГодности.ПустаяСсылка();
			Иначе
				Если Не ЗначениеЗаполнено(ВидНоменклатуры.ТочностьУказанияСрокаГодностиСерии) Тогда
					ВидНоменклатуры.ТочностьУказанияСрокаГодностиСерии = Перечисления.ТочностиУказанияСрокаГодности.СТочностьюДоДней;
				КонецЕсли;
				ВидНоменклатуры.ЕдиницаИзмеренияСрокаГодности = Справочники.ВидыНоменклатуры.ЕдиницаИзмеренияСрокаГодности(
				ВидНоменклатуры.ТочностьУказанияСрокаГодностиСерии);
			КонецЕсли;

			Если Не ВидНоменклатуры.НастройкиСерийБерутсяИзДругогоВидаНоменклатуры Тогда
				ВидНоменклатуры.ВладелецСерий = Справочники.ВидыНоменклатуры.ПустаяСсылка();
			КонецЕсли;

			Если Не ПредусмотренаАвтоматическаяГенерацияСерий(НастройкиИспользованияСерий) Тогда
				ВидНоменклатуры.АвтоматическиГенерироватьСерии = Ложь;
			КонецЕсли;

			Если ВидНоменклатуры.АвтоматическиГенерироватьСерии Тогда
				ВидНоменклатуры.ИспользоватьНомерСерии = Ложь;
			КонецЕсли;

			ПараметрыОтбораПолитики = НоменклатураКлиентСервер.ПараметрыОтбораПолитикУчетаСерий();
			ЗаполнитьЗначенияСвойств(ПараметрыОтбораПолитики, ВидНоменклатуры);

			Если ЗначениеЗаполнено(ВидНоменклатуры.ПолитикаУчетаСерий)
				И ВидНоменклатуры.ПолитикаУчетаСерий <> Справочники.ПолитикиУчетаСерий.СерииНеИспользуются Тогда

				ОтборПолитик = НоменклатураСервер.ОтборПолитикУчетаСерийПоПараметрам(ПараметрыОтбораПолитики);

				Если Не ОбщегоНазначенияУТ.СсылкаСоответствуетОтбору(ВидНоменклатуры.ПолитикаУчетаСерий, ОтборПолитик) Тогда
					ВидНоменклатуры.ПолитикаУчетаСерий = Справочники.ПолитикиУчетаСерий.СерииНеИспользуются;
				КонецЕсли;

			КонецЕсли;

			Для Каждого СтрТабл Из ВидНоменклатуры.ПолитикиУчетаСерий Цикл

				Если СтрТабл.ПолитикаУчетаСерий <> Справочники.ПолитикиУчетаСерий.СерииНеИспользуются Тогда

					ПараметрыОтбораПолитики.Склад = СтрТабл.Склад;

					ОтборПолитик = НоменклатураСервер.ОтборПолитикУчетаСерийПоПараметрам(ПараметрыОтбораПолитики);

					Если Не ОбщегоНазначенияУТ.СсылкаСоответствуетОтбору(СтрТабл.ПолитикаУчетаСерий, ОтборПолитик) Тогда
						СтрТабл.ПолитикаУчетаСерий = ВидНоменклатуры.ПолитикаУчетаСерий;
					КонецЕсли;

				КонецЕсли;

			КонецЦикла;

		КонецЕсли;

	КонецЕсли;

	Если Не ВидНоменклатуры.ТоварныеКатегорииОбщиеСДругимВидомНоменклатуры Тогда
		ВидНоменклатуры.ВладелецТоварныхКатегорий = Справочники.ВидыНоменклатуры.ПустаяСсылка();
	КонецЕсли;

	ЗаполнитьРеквизитыДляКонтроля(ВидНоменклатуры, "Номенклатура");
	ЗаполнитьДопРеквизитыДляКонтроляИОтбора(ВидНоменклатуры, "Номенклатура");

	ЗаполнитьРеквизитыДляКонтроля(ВидНоменклатуры, "ХарактеристикиНоменклатуры");
	ЗаполнитьДопРеквизитыДляКонтроляИОтбора(ВидНоменклатуры, "ХарактеристикиНоменклатуры");

	ЗаполнитьДопРеквизитыДляКонтроляИОтбора(ВидНоменклатуры, "СерииНоменклатуры");

	КонтролироватьДублиНоменклатуры = ВидНоменклатуры.РеквизитыДляКонтроляНоменклатуры.НайтиСтроки(Новый Структура("Уникален", Истина)).Количество() > 0;

КонецПроцедуры