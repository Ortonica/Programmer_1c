 
//++ РС Консалт: Минаков А.С.: Неисправность из-за режима совместимости
&НаСервере
&ИзменениеИКонтроль("НастроитьФорму")
Процедура РСК_НастроитьФорму()
	ЭтаФорма.ТолькоПросмотр = Не ЕстьПравоРедактирования;

	ВидимостьЭлементов = Справочники.Номенклатура.ИспользованиеЭлементов(Объект, Ложь, Ложь);

	Для Каждого ЭлементВидимость Из ВидимостьЭлементов Цикл

		Если Элементы.Найти(ЭлементВидимость.Ключ) <> Неопределено Тогда
			Элементы[ЭлементВидимость.Ключ].Видимость = ЭлементВидимость.Значение;
		КонецЕсли;

	КонецЦикла;

	ЗначенияРеквизитовСтрогоЗаполняемыеПоОсобенностямУчета = Справочники.ВидыНоменклатуры.ЗначенияРеквизитовСтрогоЗаполняемыеПоОсобенностямУчета();

	ЗначенияРеквизитов = ЗначенияРеквизитовСтрогоЗаполняемыеПоОсобенностямУчета.Получить(ОсобенностьУчетаДоИзменения); 
	Если ЗначенияРеквизитов <> Неопределено Тогда
		Для Каждого КлючЗначение Из ЗначенияРеквизитов Цикл
			Если Элементы.Найти(КлючЗначение.Ключ) <> Неопределено Тогда
				Элементы[КлючЗначение.Ключ].Доступность = Истина;
			КонецЕсли;
		КонецЦикла
	КонецЕсли;

	#Область ЗначенияФО

	Если Не ИспользоватьНесколькоСкладов Тогда

		Для каждого ДанныеСтроки Из Объект.ПолитикиУчетаСерий Цикл
			Если ТипЗнч(ДанныеСтроки.Склад) = Тип("СправочникСсылка.Склады") Тогда
				Склад = ДанныеСтроки.Склад;
				ПолитикаУчетаСерий = ДанныеСтроки.ПолитикаУчетаСерий;
				Прервать;
			КонецЕсли; 
		КонецЦикла;

		Склад = ЗначениеНастроекПовтИсп.ПолучитьСкладПоУмолчанию(Склад);
	КонецЕсли;

	ИспользоватьДополнительныеРеквизитыИСведения = ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеРеквизитыИСведения");
	ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач = ПолучитьФункциональнуюОпцию(
	"ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач", Новый Структура("Склад", Склад));
	ИспользоватьПродажуАгентскихУслуг            = ПолучитьФункциональнуюОпцию("ИспользоватьПродажуАгентскихУслуг");
	ИспользоватьТоварныеКатегории                = ПолучитьФункциональнуюОпцию("ИспользоватьТоварныеКатегории"); 

	ИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры");
	ИспользоватьСерииНоменклатуры          = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	КонтролироватьУникальность             = ПолучитьФункциональнуюОпцию("КонтролироватьУникальностьНоменклатурыПоСочетаниюЗначенийРеквизитов");
	ИспользоватьОрдерныеСклады             = ПолучитьФункциональнуюОпцию("ИспользоватьОрдерныеСклады");
	БазоваяВерсия                          = ПолучитьФункциональнуюОпцию("БазоваяВерсия");

	#КонецОбласти

	#Область ТипНоменклатуры
	ЭтоТовар = (Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар);
	ЭтоМногооборотнаяТара = (Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.МногооборотнаяТара);
	ЭтоРабота = (Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Работа);
	ЭтоУслуга = (Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга);
	ЭтоНабор = (Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Набор);

	#Область ПредставлениеИПодсказкаТипа

	МассивТекстов = Новый Массив;

	Если ЗначениеЗаполнено(Объект.ТипНоменклатуры) Тогда
		МассивТекстов.Добавить(Новый ФорматированнаяСтрока(Строка(Объект.ТипНоменклатуры),
		Новый Шрифт(,,Истина)));
	Иначе
		МассивТекстов.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = '<не указан>';
		|en = '<not specified>'"),
		Новый Шрифт(,,Истина),
		ЦветаСтиля.ЦветОсобогоТекста));
	КонецЕсли;

	Если Объект.ОсобенностьУчета <> Перечисления.ОсобенностиУчетаНоменклатуры.БезОсобенностейУчета
		И ЗначениеЗаполнено(Объект.ОсобенностьУчета) Тогда

		Если Не (ЭтоУслуга
			И Не ИспользоватьПродажуАгентскихУслуг) Тогда

			МассивТекстов.Добавить(": ");
			МассивТекстов.Добавить(Строка(Объект.ОсобенностьУчета));

		КонецЕсли;

	КонецЕсли;

	Если Элементы.ТипНоменклатуры.Доступность Тогда
		МассивТекстов.Добавить(" (");
		Если ЗначениеЗаполнено(Объект.ТипНоменклатуры) Тогда
			МассивТекстов.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'изменить';
			|en = 'change'"),,,,"ИзменитьТипНоменклатуры"));
		Иначе
			МассивТекстов.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'указать';
			|en = 'specify'"),,,,"ИзменитьТипНоменклатуры"));
		КонецЕсли;
		МассивТекстов.Добавить(")");
	КонецЕсли;

	ТипНоменклатурыСтрокой = Новый ФорматированнаяСтрока(МассивТекстов);

	МассивТекстов = Новый Массив;
	МассивТекстов.Добавить(Перечисления.ТипыНоменклатуры.ПодсказкаПоТипуНоменклатуры(Объект.ТипНоменклатуры));
	МассивТекстов.Добавить(Перечисления.ОсобенностиУчетаНоменклатуры.ПодсказкаПоОсобенностиУчетаНоменклатуры(Объект.ОсобенностьУчета));

	Элементы.ТипНоменклатуры.Подсказка = СтрСоединить(МассивТекстов, Символы.ПС);
	#КонецОбласти

	ИспользоватьОбщиеХарактеристики = (Объект.ИспользованиеХарактеристик
	= ПредопределенноеЗначение("Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры"));

	ИспользоватьХарактеристикиИзДругогоВида = (Объект.ИспользованиеХарактеристик
	= ПредопределенноеЗначение("Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры"));

	#КонецОбласти

	#Область НесколькоВидов
	НесколькоВидовНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВидовНоменклатуры");

	Элементы.СтраницаНастройкиПанелиБыстрогоОтбора.Видимость 	= НесколькоВидовНоменклатуры;
	Элементы.Родитель.Видимость 								= НесколькоВидовНоменклатуры;
	Элементы.Описание.Видимость 								= НесколькоВидовНоменклатуры;
	Элементы.ТипНоменклатуры.Видимость 							= НесколькоВидовНоменклатуры;
	Элементы.ПодменюПерейти.Видимость							= НесколькоВидовНоменклатуры;

	#КонецОбласти

	#Область ОформлениеУслуг
	Элементы.ВариантОформленияПродажи.Видимость = (ЭтоТовар
	И ПолучитьФункциональнуюОпцию("ИспользоватьАктыНаПередачуПрав")
	И (Объект.ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.БезОсобенностейУчета
	Или Не ЗначениеЗаполнено(Объект.ОсобенностьУчета)))
	Или ЭтоУслуга
	Или ЭтоРабота;

	Элементы.ДекорацияПродажаОформляется.Видимость = Элементы.ВариантОформленияПродажи.Видимость;
	Элементы.ДекорацияПродажаОформляетсяЗаглушка.Видимость = Элементы.ВариантОформленияПродажи.Видимость;

	СписокВыбораВариантовОформления = Элементы.ВариантОформленияПродажи.СписокВыбора;
	СписокВыбораВариантовОформления.Очистить();

	СписокВыбораВариантовОформления.Добавить(Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг);
	Если ЭтоУслуга Или ЭтоРабота Тогда
		СписокВыбораВариантовОформления.Добавить(Перечисления.ВариантыОформленияПродажи.АктВыполненныхРабот);
	КонецЕсли;

	Если ПолучитьФункциональнуюОпцию("ИспользоватьАктыНаПередачуПрав")
		И Не ЭтоМногооборотнаяТара Тогда
		СписокВыбораВариантовОформления.Добавить(Перечисления.ВариантыОформленияПродажи.АктНаПередачуПрав);
	КонецЕсли;
	#КонецОбласти

	#Область Набор
	Элементы.ВариантРасчетаЦеныНабора.Видимость = ЭтоНабор;
	Элементы.ВариантПредставленияНабораВПечатныхФормах.Видимость = ЭтоНабор;
	#КонецОбласти

	#Область ТоварныеКатегории
	Элементы.ДекорацияТоварныеКатегории.Видимость = ИспользоватьТоварныеКатегории;
	Элементы.НастройкаТоварныхКатегорий.Видимость = ИспользоватьТоварныеКатегории;
	Элементы.ВладелецТоварныхКатегорий.Видимость = ИспользоватьТоварныеКатегории;
	СформироватьНадписьПоВидуВладельцу("ТоварныхКатегорий");
	#КонецОбласти

	#Область Характеристики
	Элементы.ИспользоватьХарактеристики.Видимость = ИспользоватьХарактеристикиНоменклатуры;
	Элементы.ИспользованиеХарактеристик.Видимость = ИспользоватьХарактеристикиНоменклатуры;

	Элементы.ИспользованиеХарактеристик.Доступность = Объект.ИспользоватьХарактеристики;

	Элементы.РеквизитыБыстрогоОтбораХарактеристик.Видимость = ИспользоватьХарактеристикиНоменклатуры
	И Объект.ИспользоватьХарактеристики
	И Не ИспользоватьХарактеристикиИзДругогоВида;
	Элементы.ТаблицаДопРеквизитовХарактеристик.Видимость = ИспользоватьХарактеристикиНоменклатуры
	И Объект.ИспользоватьХарактеристики
	И Не ИспользоватьХарактеристикиИзДругогоВида;
	Элементы.ТаблицаДопСведенийХарактеристик.Видимость = ИспользоватьХарактеристикиНоменклатуры
	И Объект.ИспользоватьХарактеристики
	И Не ИспользоватьХарактеристикиИзДругогоВида;
	Элементы.ТаблицаДопСведенийХарактеристик.Видимость = ИспользоватьХарактеристикиНоменклатуры
	И Объект.ИспользоватьХарактеристики
	И Не ИспользоватьХарактеристикиИзДругогоВида;
	Элементы.ГруппаРеквизитыДляКонтроляХарактеристик.Видимость = ИспользоватьХарактеристикиНоменклатуры
	И Объект.ИспользоватьХарактеристики
	И Не ИспользоватьХарактеристикиИзДругогоВида;
	Элементы.ГруппаШаблоныНаименованийХарактеристик.Видимость = ИспользоватьХарактеристикиНоменклатуры
	И Объект.ИспользоватьХарактеристики
	И Не ИспользоватьХарактеристикиИзДругогоВида;

	Элементы.ДекорацияОтступШаблоныНаименованийХарактеристик.Видимость = Элементы.ГруппаШаблоныНаименованийХарактеристик.Видимость;												
	Элементы.ВладелецХарактеристик.Видимость = ИспользоватьХарактеристикиНоменклатуры;

	Элементы.ПоказатьРеквизитыДляКонтроляХарактеристик.Видимость = ИспользоватьХарактеристикиНоменклатуры
	И Объект.ИспользоватьХарактеристики
	И Не ИспользоватьХарактеристикиИзДругогоВида;
	СформироватьНадписьПоВидуВладельцу("Характеристик");
	#КонецОбласти

	#Область Серии


	ПараметрыОтбораПолитикУчетаСерий = НоменклатураКлиентСервер.ПараметрыОтбораПолитикУчетаСерий();
	ЗаполнитьЗначенияСвойств(ПараметрыОтбораПолитикУчетаСерий, Объект);
	ОтборПолитикУчетаСерий = НоменклатураСервер.ОтборПолитикУчетаСерийПоПараметрам(ПараметрыОтбораПолитикУчетаСерий);
	ОбязателенУчетОстатковПоСериям = ОтборПолитикУчетаСерий.Свойство("УчитыватьОстаткиСерий")
	И ОтборПолитикУчетаСерий.УчитыватьОстаткиСерий;

	ВозможныеПолитикиУчетаСерий = Неопределено;
	ОтборПоПолитике = Неопределено;
	Если ОтборПолитикУчетаСерий.Свойство("ТипПолитики", ВозможныеПолитикиУчетаСерий) Тогда

		Если ТипЗнч(ВозможныеПолитикиУчетаСерий) = Тип("Массив")
			Или ТипЗнч(ВозможныеПолитикиУчетаСерий) = Тип("ФиксированныйМассив") Тогда

			Если ВозможныеПолитикиУчетаСерий.Количество() = 1 Тогда
				Если ЗначениеЗаполнено(ВозможныеПолитикиУчетаСерий[0]) Тогда
					ОтборПоПолитике = ВозможныеПолитикиУчетаСерий[0];
				КонецЕсли;
			ИначеЕсли ВозможныеПолитикиУчетаСерий.Количество() = 2 Тогда
				Если ЗначениеЗаполнено(ВозможныеПолитикиУчетаСерий[0])
					И ЗначениеЗаполнено(ВозможныеПолитикиУчетаСерий[1]) Тогда
					ОтборПоПолитике = Неопределено;
				ИначеЕсли ЗначениеЗаполнено(ВозможныеПолитикиУчетаСерий[0]) Тогда
					ОтборПоПолитике = ВозможныеПолитикиУчетаСерий[0];
				ИначеЕсли ЗначениеЗаполнено(ВозможныеПолитикиУчетаСерий[1]) Тогда
					ОтборПоПолитике = ВозможныеПолитикиУчетаСерий[1];
				КонецЕсли;
			КонецЕсли;

		ИначеЕсли ТипЗнч(ВозможныеПолитикиУчетаСерий) = Тип("ПеречислениеСсылка.ТипыПолитикУказанияСерий") Тогда
			ОтборПоПолитике = ВозможныеПолитикиУчетаСерий;
		КонецЕсли;

	КонецЕсли;

	РазрешеноИспользоватьСерии = (ЭтоТовар Или ЭтоМногооборотнаяТара)
	И ИспользоватьСерииНоменклатуры
	И (ОбязателенУчетОстатковПоСериям
	И (ИспользоватьОрдерныеСклады
	И ИспользоватьНесколькоСкладов
	Или ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач)
	Или Не ОбязателенУчетОстатковПоСериям);

	Элементы.ИспользоватьСерии.Видимость = РазрешеноИспользоватьСерии;

	Элементы.ВариантЗаданияНастроекСерий.Видимость = РазрешеноИспользоватьСерии;
	Элементы.ВариантЗаданияНастроекСерий.Доступность = Объект.ИспользоватьСерии;

	Элементы.НадписьНастройкаИспользованияСерий.Видимость = РазрешеноИспользоватьСерии
	И Объект.ИспользоватьСерии
	И Не Объект.НастройкиСерийБерутсяИзДругогоВидаНоменклатуры;

	Элементы.ВладелецСерий.Видимость = (ЭтоТовар Или ЭтоМногооборотнаяТара) И ИспользоватьСерииНоменклатуры;

	ВидимостьПолитикиУчетаСерийСкладыПодразделения = Объект.ИспользоватьСерии
	И РазрешеноИспользоватьСерии
	И Не Объект.НастройкиСерийБерутсяИзДругогоВидаНоменклатуры
	И (ИспользоватьНесколькоСкладов
	Или ИспользоватьПроизводство);
	ВидимостьПолитикиУчетаСерийОдинСклад           = Объект.ИспользоватьСерии
	И РазрешеноИспользоватьСерии
	И Не Объект.НастройкиСерийБерутсяИзДругогоВидаНоменклатуры
	И Не (ИспользоватьНесколькоСкладов
	Или ИспользоватьПроизводство);

	Элементы.НадписьПолитикаУчетаСерий2.Видимость          = ВидимостьПолитикиУчетаСерийСкладыПодразделения;
	Элементы.ПолитикаУчетаСерий2.Видимость                 = ВидимостьПолитикиУчетаСерийСкладыПодразделения;
	Элементы.ПолитикаУчетаСерий2.АвтоОтметкаНезаполненного = ВидимостьПолитикиУчетаСерийСкладыПодразделения;

	Элементы.ЕстьИндивидуальныеНастройкиПолитикиУчетаСерий.Видимость = ВидимостьПолитикиУчетаСерийСкладыПодразделения;

	Элементы.ГруппаНадписьПолитикаУчетаСерий.Видимость    = ВидимостьПолитикиУчетаСерийОдинСклад;
	Элементы.ПолитикаУчетаСерий.АвтоОтметкаНезаполненного = ВидимостьПолитикиУчетаСерийОдинСклад;

	ИспользоватьПередачуНаХранение = ПолучитьФункциональнуюОпцию(
	"ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи");
	ИспользоватьНеотфактурованныеПоставки = ПолучитьФункциональнуюОпцию("ИспользоватьНеотфактурованныеПоставки");
	ИспользоватьТоварыВПутиОтПоставщиков  = ПолучитьФункциональнуюОпцию("ИспользоватьТоварыВПутиОтПоставщиков");
	//++ НЕ УТ
	ИспользоватьПроизводствоНаСтороне     = ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоНаСтороне2_5");
	//-- НЕ УТ

	Если ЗначениеЗаполнено(ОтборПоПолитике) Тогда
		// Формирования текста предупреждения по использованию справочных серий
		ЕстьОтборПоТипуПолитикиОписание = Новый Массив;
		Если ЗначениеЗаполнено(Объект.ОсобенностьУчета)
			И Объект.ОсобенностьУчета <> Перечисления.ОсобенностиУчетаНоменклатуры.БезОсобенностейУчета Тогда

			ОтборПоОсобенностиУчетаОписание = Новый ФорматированнаяСтрока(НСтр("ru = 'Для вида номенклатуры с особенностью учета ""%ОсобенностьУчета%"" возможно использование';
			|en = 'For the item kind with the accounting feature ""%ОсобенностьУчета%"", you can use'") + Символы.НПП,
			,
			ЦветаСтиля.ПоясняющийТекст);
			ОтборПоОсобенностиУчетаОписание = СтрЗаменить(ОтборПоОсобенностиУчетаОписание, "%ОсобенностьУчета%", Объект.ОсобенностьУчета);
			ЕстьОтборПоТипуПолитикиОписание.Добавить(ОтборПоОсобенностиУчетаОписание);
		ИначеЕсли Объект.НастройкаИспользованияСерий = Перечисления.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара Тогда
			ЕстьОтборПоТипуПолитикиОписание.Добавить(Новый ФорматированнаяСтрока(
			НСтр("ru = 'Для серий, идентифицирующих экземпляр товара, возможно использование';
			|en = 'For the batch identifying an inventory item, you can use'") + Символы.НПП,
			,
			ЦветаСтиля.ПоясняющийТекст));
		Иначе
			ЕстьОтборПоТипуПолитикиОписание.Добавить(Новый ФорматированнаяСтрока(
			НСтр("ru = 'Для этого вида номенклатуры возможно использование';
			|en = 'For this item kind, you can use'") + Символы.НПП,
			,
			ЦветаСтиля.ПоясняющийТекст));
		КонецЕсли;

		ЕстьОтборПоТипуПолитикиОписание.Добавить(Новый ФорматированнаяСтрока(
		НСтр("ru = 'только';
		|en = 'only'") + Символы.НПП,
		Новый Шрифт(, , Истина),
		ЦветаСтиля.ПоясняющийОшибкуТекст));
		ОтборПоТипуПолитикиОписание     = НСтр("ru = 'политики учета серий с типом ""%ТипПолитикиУчетаСерий%""';
		|en = 'batch accounting policies with type ""%ТипПолитикиУчетаСерий%""'");
		ОтборПоТипуПолитикиОписание     = СтрЗаменить(ОтборПоТипуПолитикиОписание, "%ТипПолитикиУчетаСерий%", Строка(ОтборПоПолитике));
		ЕстьОтборПоТипуПолитикиОписание.Добавить(Новый ФорматированнаяСтрока(
		ОтборПоТипуПолитикиОписание,
		,
		ЦветаСтиля.ПоясняющийТекст));

		ОписанияОпераций = Новый Массив;

		Если ИспользоватьПередачуНаХранение Тогда
			ОписанияОпераций.Добавить(НСтр("ru = '""Учет серий в переданных на хранение товарах""';
			|en = '""Batch accounting in deposited goods""'"));
		КонецЕсли;

		//++ НЕ УТ
		Если ИспользоватьПроизводствоНаСтороне Тогда
			ОписанияОпераций.Добавить(НСтр("ru = '""Учет серий переданных переработчику товаров""';
			|en = '""Accounting of transferred to subcontractor goods batches""'"));
		КонецЕсли;
		//-- НЕ УТ

		Если ИспользоватьТоварыВПутиОтПоставщиков Тогда
			ОписанияОпераций.Добавить(НСтр("ru = '""Учет товаров в пути от поставщика по сериям""';
			|en = '""Batch accounting of goods in transit from vendor""'"));
		КонецЕсли;

		Если ИспользоватьНеотфактурованныеПоставки Тогда
			ОписанияОпераций.Добавить(НСтр("ru = '""Учет серий в неотфактурованных поставках товаров""';
			|en = '""Batch accounting for goods received not invoiced""'"));
		КонецЕсли;

		ТекстВключенныхОпций = ?(ОписанияОпераций.Количество() = 0, "",
		?(ОписанияОпераций.Количество() > 1, НСтр("ru = 'со снятыми флагами';
		|en = 'with cleared check boxes'"),
		НСтр("ru = 'со снятым флагом';
		|en = 'with cleared check box'")));
		ТекстВключенныхОпций = ?(ЗначениеЗаполнено(ТекстВключенныхОпций),
		ТекстВключенныхОпций + Символы.НПП + СтрСоединить(ОписанияОпераций, "," + Символы.НПП) + ".",
		"");

		ЕстьОтборПоТипуПолитикиОписание.Добавить(Новый ФорматированнаяСтрока(
		?(ЗначениеЗаполнено(ТекстВключенныхОпций), Символы.НПП + ТекстВключенныхОпций, "."),
		,
		ЦветаСтиля.ПоясняющийТекст));

		Элементы.НадписьЕстьОтборПоТипуПолитики.Заголовок = Новый ФорматированнаяСтрока(ЕстьОтборПоТипуПолитикиОписание);

		Элементы.НадписьЕстьОтборПоТипуПолитики.Видимость = 
		ЗначениеЗаполнено(ОтборПоПолитике)
		И Объект.ИспользоватьСерии
		И РазрешеноИспользоватьСерии
		И Не Объект.НастройкиСерийБерутсяИзДругогоВидаНоменклатуры;
	Иначе
		Элементы.НадписьЕстьОтборПоТипуПолитики.Видимость = Ложь;
	КонецЕсли;

	ЕстьОтборПолитикиПоУчетуОстатковПоСериям = ИспользоватьСерииНоменклатуры
	И ОбязателенУчетОстатковПоСериям
	И (Объект.ИспользоватьСерии
	Или Не ИспользоватьОрдерныеСклады)
	И Не Объект.НастройкиСерийБерутсяИзДругогоВидаНоменклатуры;

	Элементы.НадписьОтборПолитикиПоУчетуОстатковПоСериямОдинСкладБезОрдерности.Видимость = ЕстьОтборПолитикиПоУчетуОстатковПоСериям
	И Не ИспользоватьНесколькоСкладов
	И Не ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	И Не БазоваяВерсия;
	Элементы.НадписьЕстьОтборПолитикиПоУчетуОстатковПоСериямНетОрдерныхСкладов.Видимость = ЕстьОтборПолитикиПоУчетуОстатковПоСериям
	И ИспользоватьНесколькоСкладов
	И Не ИспользоватьОрдерныеСклады
	И Не БазоваяВерсия;
	Элементы.НадписьЕстьОтборПолитикиПоУчетуОстатковПоСериямЕстьОрдерныеСклады.Видимость = ЕстьОтборПолитикиПоУчетуОстатковПоСериям
	И Не Элементы.НадписьОтборПолитикиПоУчетуОстатковПоСериямОдинСкладБезОрдерности.Видимость
	И Не Элементы.НадписьЕстьОтборПолитикиПоУчетуОстатковПоСериямНетОрдерныхСкладов.Видимость;

	Элементы.НадписьИспользованиеПолитикиУчетаСерийПриВыключенномСрокеГодности.Видимость = 
	НЕ Объект.ИспользоватьСрокГодностиСерии
	И Объект.ИспользоватьСерии
	И РазрешеноИспользоватьСерии
	И Не Объект.НастройкиСерийБерутсяИзДругогоВидаНоменклатуры
	И Объект.НастройкаИспользованияСерий = Перечисления.НастройкиИспользованияСерийНоменклатуры.ПартияТоваров;

	Элементы.НадписьПодсказкаПолитикиУчетаОтключеныОрдерныеСклады.Видимость = РазрешеноИспользоватьСерии
	И Объект.ИспользоватьСерии
	И ИспользоватьНесколькоСкладов
	И Не ИспользоватьОрдерныеСклады
	И Не Объект.НастройкиСерийБерутсяИзДругогоВидаНоменклатуры
	И Не ОбязателенУчетОстатковПоСериям
	И Не БазоваяВерсия;

	Элементы.НадписьПодсказкаПолитикиУчетаСерийОдинСклад.Видимость = РазрешеноИспользоватьСерии
	И Объект.ИспользоватьСерии
	И Не ИспользоватьНесколькоСкладов
	И Не ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	И Не Объект.НастройкиСерийБерутсяИзДругогоВидаНоменклатуры
	И Не ОбязателенУчетОстатковПоСериям
	И Не БазоваяВерсия;

	Элементы.ГруппаПолитикиУчетаСерий.Видимость = РазрешеноИспользоватьСерии
	И Объект.ИспользоватьСерии
	И (ИспользоватьНесколькоСкладов
	Или ИспользоватьПроизводство)
	И Не Объект.НастройкиСерийБерутсяИзДругогоВидаНоменклатуры
	И ЕстьИндивидуальныеНастройкиПолитикиУчетаСерий;

	ВТЧУказываютсяСкладыИПодразделения =  ИспользоватьНесколькоСкладов И ИспользоватьПроизводство;

	Элементы.ПолитикиУчетаСерийДобавитьСкладВПолитикиУчетаСерий.Видимость = ВТЧУказываютсяСкладыИПодразделения;
	Элементы.ПолитикиУчетаСерийДобавитьПодразделениеВПолитикиУчетаСерий.Видимость = ВТЧУказываютсяСкладыИПодразделения;

	Элементы.ПолитикиУчетаСерийДобавить.Видимость = Не ВТЧУказываютсяСкладыИПодразделения;

	Если ВТЧУказываютсяСкладыИПодразделения Тогда
		ПолитикиУчетаСерийСкладЗаголовок       = НСтр("ru = 'Склад или подразделение';
		|en = 'Warehouse or business unit'");
		ПолитикиУчетаСерийСкладПодсказка       = НСтр("ru = 'Склад или подразделение, в котором ведется учет по сериям';
		|en = 'Warehouse or business unit where accounting is performed by batch'");
		ОтборСтрокТЧПолитикаУчетаСерий         = Новый ФиксированнаяСтруктура("СоответствуетПолитикеПоУмолчанию", Ложь);
		ПолитикиУчетаСерийСкладОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Склады,СправочникСсылка.СтруктураПредприятия");
		ПолитикаУчетаСерийПодсказка
		= НСтр("ru = 'Будет использована как общая политика для всех складов и производственных подразделений: будет устанавливаться по умолчанию для новых складов и производственных подразделений.';
		|en = 'It will be set as a common policy for all warehouses and production business units; it will be enabled by default for new warehouses and production business units.'");
	ИначеЕсли ИспользоватьНесколькоСкладов Тогда
		ПолитикиУчетаСерийСкладЗаголовок       = НСтр("ru = 'Склад';
		|en = 'Warehouse'");
		ПолитикиУчетаСерийСкладПодсказка       = НСтр("ru = 'Склад, в котором ведется учет по сериям';
		|en = 'Warehouse where accounting is performed by batch'");
		ПолитикиУчетаСерийСкладОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Склады");
		ОтборСтрокТЧПолитикаУчетаСерий         = Новый ФиксированнаяСтруктура("СоответствуетПолитикеПоУмолчанию, ЭтоПолитикаДляСклада", Ложь, Истина);
		ПолитикаУчетаСерийПодсказка
		= НСтр("ru = 'Будет использована как общая политика для всех складов; будет устанавливаться по умолчанию для новых складов.';
		|en = 'It will be set as a common policy for all warehouses; it will be enabled by default for new warehouses.'");
	Иначе
		ПолитикиУчетаСерийСкладЗаголовок       = НСтр("ru = 'Подразделение';
		|en = 'Business unit'");
		ПолитикиУчетаСерийСкладПодсказка       = НСтр("ru = 'Подразделение, в котором ведется учет по сериям';
		|en = 'Business unit where accounting is performed by batch'");
		ПолитикиУчетаСерийСкладОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия");
		ОтборСтрокТЧПолитикаУчетаСерий         = Новый ФиксированнаяСтруктура("СоответствуетПолитикеПоУмолчанию, ЭтоПолитикаДляСклада", Ложь, Ложь);
		ПолитикаУчетаСерийПодсказка
		= НСтр("ru = 'Будет использована как общая политика для всех производственных подразделений; будет устанавливаться по умолчанию для новых производственных подразделений.';
		|en = 'It will be set as a common policy for all production business units; it will be enabled by default for new production business units.'");
	КонецЕсли;
	Элементы.ПолитикиУчетаСерийСклад.Заголовок       = ПолитикиУчетаСерийСкладЗаголовок;
	Элементы.ПолитикиУчетаСерийСклад.Подсказка       = ПолитикиУчетаСерийСкладПодсказка;
	Элементы.ПолитикиУчетаСерийСклад.ОграничениеТипа = ПолитикиУчетаСерийСкладОграничениеТипа;
	Элементы.ПолитикиУчетаСерий.ОтборСтрок           = ОтборСтрокТЧПолитикаУчетаСерий;
	Элементы.НадписьПолитикаУчетаСерий2.Подсказка    = ПолитикаУчетаСерийПодсказка;

	Элементы.ГруппаРеквизитыДляКонтроляСерий.Видимость = РазрешеноИспользоватьСерии
	И Объект.ИспользоватьСерии
	И Не Объект.НастройкиСерийБерутсяИзДругогоВидаНоменклатуры;

	Элементы.ГруппаШаблоныНаименованийСерий.Видимость = РазрешеноИспользоватьСерии
	И Объект.ИспользоватьСерии
	И Не Объект.НастройкиСерийБерутсяИзДругогоВидаНоменклатуры;

	Элементы.ДекорацияОтступШаблоныНаименованийСерий.Видимость = Элементы.ГруппаШаблоныНаименованийСерий.Видимость;

	Элементы.ТаблицаДопРеквизитовСерий.Видимость = РазрешеноИспользоватьСерии
	И Объект.ИспользоватьСерии
	И Не Объект.НастройкиСерийБерутсяИзДругогоВидаНоменклатуры;

	Элементы.ТаблицаДопСведенийСерий.Видимость = РазрешеноИспользоватьСерии
	И Объект.ИспользоватьСерии
	И Не Объект.НастройкиСерийБерутсяИзДругогоВидаНоменклатуры;

	Элементы.ШаблонЭтикеткиСерии.Видимость = РазрешеноИспользоватьСерии
	И Объект.ИспользоватьСерии;

	Элементы.ПоказатьРеквизитыДляКонтроляСерий.Видимость = РазрешеноИспользоватьСерии
	И Объект.ИспользоватьСерии
	И Не Объект.НастройкиСерийБерутсяИзДругогоВидаНоменклатуры;

	Элементы.ПоказатьРеквизитыДляКонтроляНоменклатуры.Видимость = (РазрешеноИспользоватьСерии
	И Объект.ИспользоватьСерии
	И Не Объект.НастройкиСерийБерутсяИзДругогоВидаНоменклатуры)
	Или (ИспользоватьХарактеристикиНоменклатуры
	И Объект.ИспользоватьХарактеристики
	И Не ИспользоватьХарактеристикиИзДругогоВида);

	СформироватьНадписьПоВидуВладельцу("Серий");

	#Область НадписьНастройкаИспользованияСерий

	Если Элементы.НадписьНастройкаИспользованияСерий.Видимость Тогда

		НужноНастраиватьРеквизитыСерий = Не Элементы.ИспользоватьСерии.ТолькоПросмотр;

		Элементы.СворачиваемаяГруппаНастройкиСоставаРеквизитовСерий.Видимость = НужноНастраиватьРеквизитыСерий;

		МассивТекстов = Новый Массив;

		МассивТекстов.Добавить(НСтр("ru = 'Серия идентифицирует:';
		|en = 'Batch identifies:'"));
		МассивТекстов.Добавить(Символы.НПП);
		МассивТекстов.Добавить(Новый ФорматированнаяСтрока(Строка(Объект.НастройкаИспользованияСерий),
		Новый Шрифт(,,Истина)));

		МассивТекстов.Добавить(" (");

		МассивОписанияРеквизитов = Новый Массив;

		НастройкиИспользованияСерий = Справочники.ВидыНоменклатуры.НастройкиИспользованияСерий(Объект);
		Для Каждого Описание Из НастройкиИспользованияСерий.ОписанияИспользованияРеквизитовСерии Цикл
			Если Описание.ИмяНастройки = "ИспользоватьRFIDМеткиСерии" Тогда

				Если Описание.ИмяРеквизита = "RFIDTID"
					И Описание.Использование Тогда
					МассивОписанияРеквизитов.Добавить(НСтр("ru = 'RFID-метка';
					|en = 'RFID tag'"));
				КонецЕсли;

			ИначеЕсли Описание.Использование Тогда

				Если Не ПустаяСтрока(Описание.ПредставлениеФорматнойСтрокиВЗаголовке) Тогда

					ПредставлениеРеквизита = НСтр("ru = '%ПредставлениеРеквизита% (%ТочностьУказания%)';
					|en = '%ПредставлениеРеквизита% (%ТочностьУказания%)'");
					ПредставлениеРеквизита = СтрЗаменить(ПредставлениеРеквизита, "%ПредставлениеРеквизита%", Описание.ПредставлениеРеквизита);
					ПредставлениеРеквизита = СтрЗаменить(ПредставлениеРеквизита, "%ТочностьУказания%", Описание.ПредставлениеФорматнойСтрокиВЗаголовке);

				Иначе
					ПредставлениеРеквизита = Описание.ПредставлениеРеквизита;

				КонецЕсли;
				МассивОписанияРеквизитов.Добавить(ПредставлениеРеквизита);

			КонецЕсли;

			Если НужноНастраиватьРеквизитыСерий
				И Не ПустаяСтрока(Описание.ОсобенностиУчета) Тогда

				ИменаОсобенностей = СтрРазделить(Описание.ОсобенностиУчета, ",");

				ВидимостьНастройкиРеквизитаСерии = Ложь;

				Для Каждого ИмяОсобенности Из ИменаОсобенностей Цикл
					
					#Вставка
					//++ РС Консалт: Минаков А.С.: Неисправность из-за режима совместимости
					Если ИмяОсобенности = "ПродукцияМаркируемаяДляГИСМ" Тогда
						Если Объект.ОсобенностьУчета = Неопределено Тогда
							ВидимостьНастройкиРеквизитаСерии = Истина;
							Прервать;
						КонецЕсли;	
					Иначе
						//++ РС Консалт: Минаков А.С.: Неисправность из-за режима совместимости
						#КонецВставки
						Если Объект.ОсобенностьУчета = ПредопределенноеЗначение("Перечисление.ОсобенностиУчетаНоменклатуры." + ИмяОсобенности) Тогда
							ВидимостьНастройкиРеквизитаСерии = Истина;
							Прервать;
						КонецЕсли;
						#Вставка
						//++ РС Консалт: Минаков А.С.: Неисправность из-за режима совместимости
					КонецЕсли;
					//++ РС Консалт: Минаков А.С.: Неисправность из-за режима совместимости
					#КонецВставки

				КонецЦикла;
				Элементы[Описание.ИмяНастройки].Видимость = ВидимостьНастройкиРеквизитаСерии;
			Иначе
				Элементы[Описание.ИмяНастройки].Видимость = Истина;
			КонецЕсли;


		КонецЦикла;

		МассивТекстов.Добавить(СтрСоединить(МассивОписанияРеквизитов, ", "));
		МассивТекстов.Добавить(") ");

		Если НастройкиИспользованияСерий.АвтоматическиГенерироватьСерии Тогда
			МассивТекстов.Добавить(", ");
			МассивТекстов.Добавить(НСтр("ru = 'Возможна автогенерация';
			|en = 'Autogeneration is possible'"));
			МассивТекстов.Добавить(" ");
		КонецЕсли;

		Элементы.НадписьНастройкаИспользованияСерий.Заголовок = Новый ФорматированнаяСтрока(МассивТекстов);

		Если Справочники.ВидыНоменклатуры.ПредусмотренаАвтоматическаяГенерацияСерий(НастройкиИспользованияСерий) Тогда 
			Элементы.АвтоматическиГенерироватьСерии.Видимость = Истина;
			Элементы.ИспользоватьНомерСерии.Доступность       = Не Объект.АвтоматическиГенерироватьСерии;
		Иначе
			Элементы.АвтоматическиГенерироватьСерии.Видимость = Ложь;
			Элементы.ИспользоватьНомерСерии.Доступность       = Истина;
		КонецЕсли;

		Элементы.ТочностьУказанияСрокаГодностиСерии.Доступность = Объект.ИспользоватьСрокГодностиСерии
		Или Объект.ИспользоватьДатуПроизводстваСерии;

		Элементы.ИспользоватьRFIDМеткиСерии.Доступность = Объект.НастройкаИспользованияСерий 
		= Перечисления.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара;
	Иначе

		Элементы.СворачиваемаяГруппаНастройкиСоставаРеквизитовСерий.Видимость = Ложь;

	КонецЕсли;

	#КонецОбласти

	#КонецОбласти

	#Область ЕдиницаИзмерения
	Если ЭтоУслуга
		Или ЭтоРабота
		Или ЭтоНабор Тогда
		ЗаголовокЕдиницыИзмерения = НСтр("ru = 'Ед. измерения';
		|en = 'Unit of measure'");
		ЗаголовокГруппыЕдиницаИзмерения = НСтр("ru = 'Единицы измерения';
		|en = 'Units of measure'");
	Иначе
		ЗаголовокЕдиницыИзмерения = НСтр("ru = 'Ед. хранения';
		|en = 'Stock UOM'");
		ЗаголовокГруппыЕдиницаИзмерения = НСтр("ru = 'Единицы измерения и условия хранения';
		|en = 'Units of measure and storage conditions'");
	КонецЕсли;
	Элементы.ЕдиницаИзмерения.Заголовок                       = ЗаголовокЕдиницыИзмерения;
	Элементы.ГруппаЕдиницыИзмеренияИУсловияХранения.Заголовок = ЗаголовокГруппыЕдиницаИзмерения;

	Элементы.ЕдиницаИзмерения.Доступность = (ИспользованиеУпаковок = "ИндивидуальныйНабор"
	И Объект.ИспользоватьУпаковки)
	Или Не Объект.ИспользоватьУпаковки;

	#КонецОбласти

	#Область ШаблоныНаименованийИНастройкаРеквизитовНоменклатуры
	Элементы.ГруппаНастройкиСозданияПереключатели.Видимость =  (Объект.ИспользоватьСерии
	И Не Объект.НастройкиСерийБерутсяИзДругогоВидаНоменклатуры)
	Или (Объект.ИспользоватьХарактеристики
	И Не ИспользоватьХарактеристикиИзДругогоВида);

	Если Элементы.ГруппаНастройкиСозданияСтраницы.ТекущаяСтраница <> Элементы.ГруппаРеквизитыДляКонтроляНоменклатуры
		И (Не Объект.ИспользоватьСерии
		И Элементы.ГруппаНастройкиСозданияСтраницы.ТекущаяСтраница = Элементы.ГруппаРеквизитыДляКонтроляСерий
		Или Не Объект.ИспользоватьХарактеристики
		И Элементы.ГруппаНастройкиСозданияСтраницы.ТекущаяСтраница = Элементы.ГруппаРеквизитыДляКонтроляХарактеристик) Тогда																	

		Элементы.ГруппаНастройкиСозданияСтраницы.ТекущаяСтраница = Элементы.ГруппаРеквизитыДляКонтроляНоменклатуры;
		УстановитьОформлениеНажатойГиперссылки(Элементы.ПоказатьРеквизитыДляКонтроляНоменклатуры, ЦветТекстаФормы);
		УстановитьСтандартноеОформлениеГиперссылки(Элементы.ПоказатьРеквизитыДляКонтроляХарактеристик);	
		УстановитьСтандартноеОформлениеГиперссылки(Элементы.ПоказатьРеквизитыДляКонтроляСерий);	

	КонецЕсли;

	Если Элементы.ГруппаНастройкиСозданияСтраницы.ТекущаяСтраница = Элементы.ГруппаРеквизитыДляКонтроляНоменклатуры Тогда
		УстановитьОформлениеНажатойГиперссылки(Элементы.ПоказатьРеквизитыДляКонтроляНоменклатуры, ЦветТекстаФормы);
		УстановитьСтандартноеОформлениеГиперссылки(Элементы.ПоказатьРеквизитыДляКонтроляХарактеристик);	
		УстановитьСтандартноеОформлениеГиперссылки(Элементы.ПоказатьРеквизитыДляКонтроляСерий);	
	КонецЕсли;

	НастроитьПоШаблонуНаименования("ШаблонРабочегоНаименованияНоменклатуры"); 
	НастроитьПоШаблонуНаименования("ШаблонНаименованияДляПечатиНоменклатуры"); 
	НастроитьПоШаблонуНаименования("ШаблонРабочегоНаименованияХарактеристики"); 
	НастроитьПоШаблонуНаименования("ШаблонНаименованияДляПечатиХарактеристики"); 
	НастроитьПоШаблонуНаименования("ШаблонРабочегоНаименованияСерии"); 

	Элементы.РедактироватьШаблонНаименованияДляПечатиНоменклатуры.Доступность   = Не ЭтаФорма.ТолькоПросмотр;
	Элементы.РедактироватьШаблонНаименованияДляПечатиХарактеристики.Доступность = Не ЭтаФорма.ТолькоПросмотр;
	Элементы.РедактироватьШаблонРабочегоНаименованияНоменклатуры.Доступность    = Не ЭтаФорма.ТолькоПросмотр;
	Элементы.РедактироватьШаблонРабочегоНаименованияХарактеристики.Доступность  = Не ЭтаФорма.ТолькоПросмотр;
	Элементы.РедактироватьШаблонРабочегоНаименованияСерии.Доступность           = Не ЭтаФорма.ТолькоПросмотр;

	Если ИспользоватьИндивидуальноеНаименование = "ИспользоватьИндивидуальноеНаименование" Тогда
		Элементы.НаименованиеДляПечати.Доступность = Истина;
	Иначе
		Элементы.НаименованиеДляПечати.Доступность = Ложь;
	КонецЕсли;
	#КонецОбласти

	#Область ДопРеквизитыИДопСведения
	Элементы.СтраницаДопРеквизиты.Видимость = ИспользоватьДополнительныеРеквизитыИСведения;
	Элементы.СтраницаДопСведения.Видимость = ИспользоватьДополнительныеРеквизитыИСведения;

	ЕстьПравоДобавленияРеквизитов = ПравоДоступа("Добавление", Метаданные.ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения);

	Элементы.НоменклатураГруппаСоздатьРеквизиты.Видимость 	= ЕстьПравоДобавленияРеквизитов;
	Элементы.ХарактеристикиГруппаСоздатьРеквизиты.Видимость = ЕстьПравоДобавленияРеквизитов;
	Элементы.СерииГруппаСоздатьРеквизиты.Видимость 			= ЕстьПравоДобавленияРеквизитов;
	Элементы.НоменклатураГруппаСоздатьСведения.Видимость 	= ЕстьПравоДобавленияРеквизитов;
	Элементы.ХарактеристикиГруппаСоздатьСведения.Видимость  = ЕстьПравоДобавленияРеквизитов;
	Элементы.СерииГруппаСоздатьСведения.Видимость 			= ЕстьПравоДобавленияРеквизитов;
	#КонецОбласти

	#Область КонтролироватьУникальность

	Элементы.РеквизитыДляКонтроляНоменклатурыДляРазмераЯчейкиУникален.Видимость = КонтролироватьУникальность;
	Элементы.РеквизитыДляКонтроляХарактеристикДляРазмераЯчейкиУникален.Видимость = КонтролироватьУникальность;

	#КонецОбласти

	#Область Ценообразование

	НастроитьЗакладкуНастройкиЦенообразования();

	#КонецОбласти


	ЗначенияРеквизитов = ЗначенияРеквизитовСтрогоЗаполняемыеПоОсобенностямУчета.Получить(Объект.ОсобенностьУчета);
	Если ЗначенияРеквизитов <> Неопределено Тогда
		Для Каждого КлючЗначение Из ЗначенияРеквизитов Цикл
			Если Элементы.Найти(КлючЗначение.Ключ) <> Неопределено Тогда
				Элементы[КлючЗначение.Ключ].Доступность = Ложь;
			КонецЕсли;
		КонецЦикла
	КонецЕсли;

	НастроитьФормуЛокализация();

КонецПроцедуры
