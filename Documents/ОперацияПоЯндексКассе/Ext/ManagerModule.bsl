
&Вместо("ДанныеДокументаДляПроведения")
Функция РСК_ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры)
	
	ТаблицыДляДвижений = ПродолжитьВызов(Документ, Регистры, ДопПараметры);
	
	//++ РС Консалт: Минаков А.С. Задача 20226
	Если ЗначениеЗаполнено(Документ) Тогда		
		Эквайер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ, "Эквайер");
		Если ЗначениеЗаполнено(Эквайер) Тогда
			ОсновнойДоговорЭквайера = реа_ОбщийСерверПовтИсп.ПолучитьПредопределенноеЗначение("РС_ОсновнойДоговорЭквайера", Эквайер);
			Если Не ЗначениеЗаполнено(ОсновнойДоговорЭквайера) Тогда
				ОбщегоНазначения.СообщитьПользователю("Необходимо указать основной договор эквайера " + Эквайер + Символы.ПС + " обратитесь к программисту!", Эквайер);
				ОбщегоНазначения.СообщитьПользователю("В движения денежных средств будет установлен первый по списку договор эквайера " + Эквайер, Эквайер);
				
				Запрос = Новый Запрос(
				"ВЫБРАТЬ ПЕРВЫЕ 1
				|	ДоговорыЭквайринга.Ссылка КАК Ссылка
				|ИЗ
				|	Справочник.ДоговорыЭквайринга КАК ДоговорыЭквайринга
				|ГДЕ
				|	ДоговорыЭквайринга.Контрагент = &Эквайер
				|	И НЕ ДоговорыЭквайринга.ПометкаУдаления
				|
				|УПОРЯДОЧИТЬ ПО
				|	Ссылка");
				
				Запрос.УстановитьПараметр("Эквайер", Эквайер);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				Если РезультатЗапроса.Пустой() Тогда
					ОбщегоНазначения.СообщитьПользователю("Не найден договор эквайера " + Эквайер, Эквайер);
					Возврат ТаблицыДляДвижений
				КонецЕсли;	
				
				Выборка = РезультатЗапроса.Выбрать();
				Выборка.Следующий();
				
				ОсновнойДоговорЭквайера = Выборка.Ссылка		
			КонецЕсли;
			
			Если ТаблицыДляДвижений.Свойство("ТаблицаДенежныеСредстваВПути") Тогда
				ТаблицыДляДвижений.ТаблицаДенежныеСредстваВПути.Колонки.Добавить("Договор", Новый ОписаниеТипов("СправочникСсылка.ДоговорыЭквайринга"));
				ТаблицыДляДвижений.ТаблицаДенежныеСредстваВПути.ЗаполнитьЗначения(ОсновнойДоговорЭквайера, "Договор")	
			КонецЕсли
		КонецЕсли
	КонецЕсли;
	//++ РС Консалт: Минаков А.С. Задача 20226
	
	Возврат ТаблицыДляДвижений
		
КонецФункции

&ИзменениеИКонтроль("ОснованиеПлатежаПоУИП")
Функция РСК_ОснованиеПлатежаПоУИП(Организация, УИП)

	ПараметрыОтбора = ВзаиморасчетыСервер.ПараметрыОтбораПриВыбореДокументаРасчетовСКлиентами();
	ПараметрыОтбора.ЭтоУИП = Истина;
    #Вставка
	УИП = Лев(УИП, СтрДлина(УИП) - 4);
	#КонецВставки
	ДанныеВыбора = Новый СписокЗначений;
	ВзаиморасчетыСервер.ЗаполнитьДанныеВыбораУИП(ДанныеВыбора,
	Новый Структура("Организация, Текст, ТипРасчетов",   
	#Удаление
	Организация, УИП, Перечисления.ТипыРасчетовСПартнерами.РасчетыСКлиентом), Ложь);    
	#КонецУдаления
	#Вставка
	Организация, УИП, Перечисления.ТипыРасчетовСПартнерами.РасчетыСКлиентом), Истина);    
	#КонецВставки

	Если ДанныеВыбора.Количество() = 0 Тогда

		ПараметрыОтбора.Вставить("Организация", Организация);
		ПараметрыОтбора.Вставить("Текст", УИП);

		ДенежныеСредстваСервер.ЗаполнитьДанныеВыбораУИП(ДанныеВыбора, ПараметрыОтбора);

	КонецЕсли;

	Если ДанныеВыбора.Количество() > 0 Тогда 

		Результат = ДанныеВыбора[0].Значение;

		Если Не ЭтоОснованиеПлатежаЧерезЯндексКассу(Результат.Значение.ОснованиеПлатежа.Метаданные().ПолноеИмя()) Тогда 
			Возврат Неопределено;
		КонецЕсли;

		ДанныеПоУИП = Новый Структура("ОснованиеПлатежа, ОбъектРасчетов, Партнер, Контрагент");
		ЗаполнитьЗначенияСвойств(ДанныеПоУИП, Результат.Значение);

		ДанныеПоУИП.ОснованиеПлатежа = Результат.Значение.ОснованиеПлатежа;
		ДанныеПоУИП.ОбъектРасчетов   = Результат.Значение.ОбъектРасчетов;

		Возврат ДанныеПоУИП;
	КонецЕсли;

	Возврат Неопределено;

КонецФункции

&ИзменениеИКонтроль("ТекстЗапросаДенежныеСредстваВПути")
Функция РСК_ТекстЗапросаДенежныеСредстваВПути(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ДенежныеСредстваВПути";

	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;

	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаОперации", ТекстыЗапроса) Тогда
		ТекстЗапросаОперации(Запрос, ТекстыЗапроса);
	КонецЕсли;

	ТекстЗапроса = "
	|ВЫБРАТЬ  //Суммы оплат
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                               КАК ВидДвижения,
	|	&Период                                                                              КАК Период,
	|	
	|	&Организация                                                                         КАК Организация,
	|	&БанковскийСчет                                                                      КАК Получатель,
	|	НЕОПРЕДЕЛЕНО                                                                         КАК Отправитель,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПоступлениеОтБанкаПоЭквайрингу)   КАК ВидПереводаДенежныхСредств,
	|	&Эквайер                                                                             КАК Контрагент,
	|	&Валюта                                                                              КАК Валюта,
	|	
	|	ТаблицаОперацииОплаты.СуммаДокумента                                                               КАК Сумма,
	|	ВЫРАЗИТЬ(ТаблицаОперацииОплаты.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр  КАК ЧИСЛО(31,2)) КАК СуммаУпр,
	|	ВЫРАЗИТЬ(ТаблицаОперацииОплаты.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
	|	
	|	&СтатьяДвиженияДенежныхСредств                                                       КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ТаблицаОперацииОплаты.ИдентификаторДокумента                                         КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПоступлениеОплатыОтКлиента)       КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ТаблицаОперации КАК ТаблицаОперацииОплаты
	|	
	|ГДЕ
	| 	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ  //Комиссия с оплат
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                               КАК ВидДвижения,
	|	&Период                                                                              КАК Период,
	|	
	|	&Организация                                                                         КАК Организация,
	|	&БанковскийСчет                                                                      КАК Получатель,
	|	НЕОПРЕДЕЛЕНО                                                                         КАК Отправитель,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПоступлениеОтБанкаПоЭквайрингу)   КАК ВидПереводаДенежныхСредств,
	|	&Эквайер                                                                             КАК Контрагент,
	|	&Валюта                                                                              КАК Валюта,
	|	
	|	ТаблицаОперацииОплаты.СуммаКомиссии                                                               КАК Сумма,
	|	ВЫРАЗИТЬ(ТаблицаОперацииОплаты.СуммаКомиссии * &КоэффициентПересчетаВВалютуУпр  КАК ЧИСЛО(31,2)) КАК СуммаУпр,
	|	ВЫРАЗИТЬ(ТаблицаОперацииОплаты.СуммаКомиссии * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
	|
	#Удаление
	|	НЕОПРЕДЕЛЕНО                                                                         КАК СтатьяДвиженияДенежныхСредств,
	#КонецУдаления
	#Вставка
	//++РС Консалт Петрова Мария 12.12.2022
	//e1cib/data/Документ.Задание?ref=997e8f29fbefd9fa4bfcb8fe7f427cc7
	|	&СтатьяУслугаБанка                                                                   КАК СтатьяДвиженияДенежныхСредств, 
	//--РС Консалт Петрова Мария 12.12.2022 
	#КонецВставки
	|	
	|	ТаблицаОперацииОплаты.ИдентификаторДокумента                                         КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.КомиссияПоЭквайрингу)             КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ТаблицаОперации КАК ТаблицаОперацииОплаты
	|	
	|ГДЕ
	| 	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
	|   И ТаблицаОперацииОплаты.СуммаКомиссии <> 0  
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //Суммы возвратов
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                               КАК ВидДвижения,
	|	&Период                                                                              КАК Период,
	|	
	|	&Организация                                                                         КАК Организация,
	|	&БанковскийСчет                                                                      КАК Получатель,
	|	НЕОПРЕДЕЛЕНО                                                                         КАК Отправитель,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПоступлениеОтБанкаПоЭквайрингу)   КАК ВидПереводаДенежныхСредств,
	|	&Эквайер                                                                             КАК Контрагент,
	|	&Валюта                                                                              КАК Валюта,
	|	
	|	ТаблицаОперацииВозврата.СуммаДокумента                                                               КАК Сумма,
	|	ВЫРАЗИТЬ(ТаблицаОперацииВозврата.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))  КАК СуммаУпр,
	|	ВЫРАЗИТЬ(ТаблицаОперацииВозврата.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
	|	
	|	&СтатьяДвиженияДенежныхСредств                                                      КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ТаблицаОперацииВозврата.ИдентификаторДокумента                                      КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВозвратОплатыКлиенту)            КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ТаблицаОперации КАК ТаблицаОперацииВозврата
	|	
	|ГДЕ
	| 	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ  //Отмененная комиссия
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                               КАК ВидДвижения,
	|	&Период                                                                              КАК Период,
	|	
	|	&Организация                                                                         КАК Организация,
	|	&БанковскийСчет                                                                      КАК Получатель,
	|	НЕОПРЕДЕЛЕНО                                                                         КАК Отправитель,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПоступлениеОтБанкаПоЭквайрингу)   КАК ВидПереводаДенежныхСредств,
	|	&Эквайер                                                                             КАК Контрагент,
	|	&Валюта                                                                              КАК Валюта,
	|	
	|	ТаблицаОперацииВозврата.СуммаКомиссии	                                                            КАК Сумма,
	|	ВЫРАЗИТЬ(ТаблицаОперацииВозврата.СуммаКомиссии * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))  КАК СуммаУпр,
	|	ВЫРАЗИТЬ(ТаблицаОперацииВозврата.СуммаКомиссии * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаРегл,
	|	
	|	НЕОПРЕДЕЛЕНО                                                                         КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ТаблицаОперацииВозврата.ИдентификаторДокумента                                       КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.КомиссияПоЭквайрингу)             КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ТаблицаОперации КАК ТаблицаОперацииВозврата
	|	
	|ГДЕ
	| 	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту)
	|   И ТаблицаОперацииВозврата.СуммаКомиссии <> 0";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);

	Возврат ТекстЗапроса;

КонецФункции

&После("ЗаполнитьПараметрыИнициализации")
Процедура РСК_ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка) 
	//++РС Консалт Петрова Мария 12.12.2022
	//e1cib/data/Документ.Задание?ref=997e8f29fbefd9fa4bfcb8fe7f427cc7
	Эквайер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСсылка, "Эквайер");  
	СтатьяДДСКомиссия = Справочники.СтатьиДвиженияДенежныхСредств.ПустаяСсылка();
	Если ЗначениеЗаполнено(Эквайер) Тогда
		ОсновнойДоговорЭквайера = реа_ОбщийСерверПовтИсп.ПолучитьПредопределенноеЗначение("РС_ОсновнойДоговорЭквайера", Эквайер);
		Если Не ЗначениеЗаполнено(ОсновнойДоговорЭквайера) Тогда
			ОбщегоНазначения.СообщитьПользователю("Необходимо указать основной договор эквайера " + Эквайер + Символы.ПС + " обратитесь к программисту!", Эквайер);
			ОбщегоНазначения.СообщитьПользователю("В движения денежных средств будет установлен первый по списку договор эквайера " + Эквайер, Эквайер);
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ДоговорыЭквайринга.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.ДоговорыЭквайринга КАК ДоговорыЭквайринга
			|ГДЕ
			|	ДоговорыЭквайринга.Контрагент = &Эквайер
			|	И НЕ ДоговорыЭквайринга.ПометкаУдаления
			|
			|УПОРЯДОЧИТЬ ПО
			|	Ссылка");
			
			Запрос.УстановитьПараметр("Эквайер", Эквайер);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			Если РезультатЗапроса.Пустой() Тогда
				ОбщегоНазначения.СообщитьПользователю("Не найден договор эквайера " + Эквайер, Эквайер);
				Возврат;
			КонецЕсли;	
			
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			
			ОсновнойДоговорЭквайера = Выборка.Ссылка		
		КонецЕсли;  
		СтатьяДДСКомиссия = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОсновнойДоговорЭквайера, "СтатьяДвиженияДенежныхСредствКомиссия");	
	КонецЕсли;  
	Запрос.УстановитьПараметр("СтатьяУслугаБанка", СтатьяДДСКомиссия);
	//--РС Консалт Петрова Мария 12.12.2022
КонецПроцедуры
