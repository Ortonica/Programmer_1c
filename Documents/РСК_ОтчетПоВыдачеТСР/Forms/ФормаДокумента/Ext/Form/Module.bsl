&НаСервере 
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17534
//e1cib/data/Документ.Задание?ref=a3eb9b03bd1c14b84aeaf2f6294e0848
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("ДокументОснование") И Объект.Ссылка.Пустая() Тогда
		Если ТипЗнч(Параметры.ДокументОснование) = Тип("ДокументСсылка.ЗаданиеНаПеревозку") ТОгда		
			ОбработкаЗаполненияНаОснованииЗагрузочнойВедомости(Параметры);
		Иначе
			ВызватьИсключение "Пока доступен ввод на основании только из документа Задание на перевозку";
		КонецЕсли
	ИначеЕсли Параметры.Свойство("МассивАктов") И Объект.Ссылка.Пустая() Тогда
		ОбработкаЗаполненияНаОснованииАктов(Параметры);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ДатаНачала) И ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
		ПериодОтчета.ДатаНачала = Объект.ДатаНачала;
		ПериодОтчета.ДатаОкончания = Объект.ДатаОкончания;
	КонецЕсли;
	
	ЗаполнитьАдресРегистрацииИТелефон();
	УстановитьУсловноеОформление();
	
	//Если Параметры.Ключ.Пустая() Тогда
	//	Объект.Владелец = ПараметрыСеанса.ТекущийПользователь.ОрганизацияСоисполнителя;
	//КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры 

&НаСервере
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17534
//e1cib/data/Документ.Задание?ref=a3eb9b03bd1c14b84aeaf2f6294e0848
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17534
//e1cib/data/Документ.Задание?ref=a3eb9b03bd1c14b84aeaf2f6294e0848
Процедура ПриОткрытии(Отказ)
	ПроверитьДубли();
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#Область СлужебныеПроцедурыИФункции
 
// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17534
//e1cib/data/Документ.Задание?ref=a3eb9b03bd1c14b84aeaf2f6294e0848
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
 
&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17534
//e1cib/data/Документ.Задание?ref=a3eb9b03bd1c14b84aeaf2f6294e0848
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
 
&НаСервере
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17534
//e1cib/data/Документ.Задание?ref=a3eb9b03bd1c14b84aeaf2f6294e0848
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры
 
&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17534
//e1cib/data/Документ.Задание?ref=a3eb9b03bd1c14b84aeaf2f6294e0848
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
 
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
 
#КонецОбласти

&НаСервере
Процедура УстановитьУсловноеОформление()

	//++ РС Консалт: Трофимов Евгений 16.11.2022 Задача 21917
	//e1cib/data/Документ.Задание?ref=935231b54aec704540e31835f6e16b3c
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Реестр.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Реестр.ПаллиативнаяПомощь");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Синий);
	//-- КонецЗадачи 21917	

КонецПроцедуры // УстановитьУсловноеОформление()()


&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17534
//e1cib/data/Документ.Задание?ref=a3eb9b03bd1c14b84aeaf2f6294e0848
Процедура ЗагрузитьАкты(Команда)
	Оповещение = Новый ОписаниеОповещения("ЗагрузитьТаблицуАктовЗавершение", ЭтотОбъект);
	ПараметрыПередачи = Новый Структура("Контракт,ДатаНачала,ДатаОкончания",Объект.Контракт,Объект.ДатаНачала,Объект.ДатаОкончания);
	ОткрытьФорму("Документ.РСК_ОтчетПоВыдачеТСР.Форма.ДобавлениеАктов", ПараметрыПередачи, ЭтотОбъект,,,,Оповещение);
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17534
//e1cib/data/Документ.Задание?ref=a3eb9b03bd1c14b84aeaf2f6294e0848
Процедура ЗагрузитьТаблицуАктовЗавершение(Результат, ДополнительныеПараметры) Экспорт 
    Если Результат = Неопределено Тогда
        Возврат;
    КонецЕсли;
    ЗагрузитьТаблицуАктов(Результат);
КонецПроцедуры

&НаСервере
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17534
//e1cib/data/Документ.Задание?ref=a3eb9b03bd1c14b84aeaf2f6294e0848
Процедура ЗагрузитьТаблицуАктов(Результат)
	тзНовыеАкты = ПолучитьИзВременногоХранилища(Результат);
	Для Каждого Стр Из тзНовыеАкты Цикл
		Если Объект.Реестр.НайтиСтроки(Новый Структура("Акт", Стр.Акт)).Количество() Тогда
			Продолжить;
		КонецЕсли;
		НС = Объект.Реестр.Добавить();
		ЗаполнитьЗначенияСвойств(НС, Стр);
	КонецЦикла;
	ЗаполнитьАдресРегистрацииИТелефон();
	ПроверитьДубли();
КонецПроцедуры

&НаСервере 
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17534
//e1cib/data/Документ.Задание?ref=a3eb9b03bd1c14b84aeaf2f6294e0848
Процедура ПроверитьДубли()
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	ОтчетПоВыдаче.Ссылка
	//               |ИЗ
	//               |	Документ.ОтчетПоВыдаче КАК ОтчетПоВыдаче
	//               |ГДЕ
	//               |	НЕ ОтчетПоВыдаче.Ссылка = &Ссылка
	//               |	И ОтчетПоВыдаче.Реестр.Акт = &Акт
	//               |	И ОтчетПоВыдаче.Проведен";
	//
	//Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	//Для каждого стр из Объект.Реестр Цикл
	//	Запрос.УстановитьПараметр("Акт",стр.Акт);
	//	Рез = Запрос.Выполнить().Выгрузить();
	//	Если НЕ Рез.Количество()=0 Тогда
	//		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	//			НСтр("ru = 'В текущем документе строке: %1 документ Акт уже находится в Отчете ФСС: %2!'"),
	//			стр.НомерСтроки, Рез[0].Ссылка);
	//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст, Объект.Ссылка, , , );
	//	КонецЕсли;
	//КонецЦикла;
	
	//Трофимов оптимизировал
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	тзРеестр.Акт КАК Акт
		|ПОМЕСТИТЬ тзРеестр
		|ИЗ
		|	&тзРеестр КАК тзРеестр
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	тзРеестр.Акт КАК Акт,
		|	КОЛИЧЕСТВО(тзРеестр.Акт) КАК КоличествоДублей,
		|	ПРЕДСТАВЛЕНИЕ(тзРеестр.Акт) КАК ПредставлениеАкта
		|ИЗ
		|	тзРеестр КАК тзРеестр
		|
		|СГРУППИРОВАТЬ ПО
		|	тзРеестр.Акт
		|
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(тзРеестр.Акт) > 1";
	
	Запрос.УстановитьПараметр("тзРеестр", Объект.Реестр.Выгрузить());
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Найдены повторяющиеся строки с актами!", Объект.Ссылка);
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекстПеречисленияСтрок = "";
		СтрокиСДублями = Объект.Реестр.НайтиСтроки(Новый Структура("Акт", Выборка.Акт));
		Для Каждого СтрокаДубля Из СтрокиСДублями Цикл
			ТекстПеречисленияСтрок = ТекстПеречисленияСтрок 
			+ ?(ПустаяСтрока(ТекстПеречисленияСтрок),"",", ")
			+ "[" + XMLСтрока(СтрокаДубля.НомерСтроки) + "]";
		КонецЦикла;
		
		ОбщегоНазначения.СообщитьПользователю("" + Выборка.ПредставлениеАкта 
			+ " в строках: " + ТекстПеречисленияСтрок, Объект.Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17534
//e1cib/data/Документ.Задание?ref=a3eb9b03bd1c14b84aeaf2f6294e0848
Процедура РеестрПриИзменении(Элемент)
	ПроверитьДубли();
КонецПроцедуры

&НаСервере
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17534
//e1cib/data/Документ.Задание?ref=a3eb9b03bd1c14b84aeaf2f6294e0848
Процедура ОбработкаЗаполненияНаОснованииЗагрузочнойВедомости(Параметры)
	Объект.Контракт       = Параметры.Контракт;
	ДанныеТабличнойЧасти  = ПолучитьДанныеТЧ(Параметры.ДокументОснование,Параметры.Контракт);
	Объект.Реестр.Загрузить(ДанныеТабличнойЧасти);
КонецПроцедуры

&НаСервере
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17534
//e1cib/data/Документ.Задание?ref=a3eb9b03bd1c14b84aeaf2f6294e0848
Процедура ОбработкаЗаполненияНаОснованииАктов(Параметры)
	МассивДат = Новый Массив;
	
	Объект.ДатаОкончания = Дата(1,1,1);
	Объект.ДатаНачала    =  ТекущаяДата();
	
	тзРеквизитыАктов = ПолучитьРеквизитыАкта(Параметры.МассивАктов);
	
	Для Каждого Стр ИЗ тзРеквизитыАктов Цикл
		Если Стр.СтатусАкта = Перечисления.РСК_СтатусыАктовВыдачи.Выдан Тогда
			
			НоваяСтрока = Объект.Реестр.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Стр);
			
			Объект.ДатаОкончания = Макс(Объект.ДатаОкончания,Стр.ДатаАкта);
			Объект.ДатаНачала = Мин(Объект.ДатаНачала,Стр.ДатаАкта);
			
		Иначе
			ОбщегоНазначения.СообщитьПользователю(
				"" + Стр.Акт + " не включён в отчёт по выдаче так как не имеет статус «Выдан»",
				Стр.Акт
			);
		КонецЕсли;
	КонецЦикла;
	
	Если Объект.Реестр.Количество() И НЕ ЗначениеЗаполнено(Объект.Контракт) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ВЫРАЗИТЬ(ПоручениеЭкспедиторуОснования.Основание КАК Документ.ЗаказКлиента) КАК Контракт
			|ИЗ
			|	Документ.ПоручениеЭкспедитору.Основания КАК ПоручениеЭкспедиторуОснования
			|ГДЕ
			|	ПоручениеЭкспедиторуОснования.Ссылка = &Акт";
		
		Запрос.УстановитьПараметр("Акт", Объект.Реестр[0].Акт);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Объект.Контракт = Выборка.Контракт;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17534
//e1cib/data/Документ.Задание?ref=a3eb9b03bd1c14b84aeaf2f6294e0848
Функция ПолучитьДанныеТЧ(ЗаданиеНаПеревозку, Контракт)
	
	Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	ЗагрузочнаяВедомостьТСРАкты.Акт КАК Акт,
	//|	ЗагрузочнаяВедомостьТСРАкты.Акт.ТСР КАК ТСР,
	//|	ЗагрузочнаяВедомостьТСРАкты.Акт.Номенклатура КАК Номенклатура,
	//|	ЗагрузочнаяВедомостьТСРАкты.Акт.НомерНаправления КАК НомерНаправления,
	//|	ЗагрузочнаяВедомостьТСРАкты.Акт.ДатаНаправления КАК ДатаНаправления,
	//|	ЗагрузочнаяВедомостьТСРАкты.Акт.СрокДействияИПР КАК СрокДействияИПР,
	//|	ЗагрузочнаяВедомостьТСРАкты.Акт.Заявитель КАК Заявитель,
	//|	ЗагрузочнаяВедомостьТСРАкты.Акт.Количество КАК Количество,
	//|	ЗагрузочнаяВедомостьТСРАкты.Акт.Цена КАК Цена,
	//|	ЗагрузочнаяВедомостьТСРАкты.Акт.Сумма КАК Сумма,
	//|	ЗагрузочнаяВедомостьТСРАкты.Акт.НомерЗаявки КАК НомерЗаявки,
	//|	ЗагрузочнаяВедомостьТСРАкты.Акт.ДатаЗаявки КАК ДатаЗаявки
	//|ИЗ
	//|	Документ.ЗагрузочнаяВедомостьТСР.Акты КАК ЗагрузочнаяВедомостьТСРАкты
	//|ГДЕ
	//|   ЗагрузочнаяВедомостьТСРАкты.Ссылка = &Ссылка
	//|	И ЗагрузочнаяВедомостьТСРАкты.Акт.Контракт = &Контракт
	//|	И ЗагрузочнаяВедомостьТСРАкты.Акт.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыВыполненияКонтрактов.Выдан)";

	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоручениеЭкспедитору.Ссылка КАК Акт,
		|	ПоручениеЭкспедитору.РСК_ТСР КАК ТСР,
		|	ПоручениеЭкспедитору.РСК_Номенклатура КАК Номенклатура,
		|	ПоручениеЭкспедитору.РСК_НомерНаправления КАК НомерНаправления,
		|	ПоручениеЭкспедитору.РСК_ДатаНаправления КАК ДатаНаправления,
		|	ПоручениеЭкспедитору.Пункт КАК Заявитель,
		|	ПоручениеЭкспедитору.РСК_Количество КАК Количество,
		|	ПоручениеЭкспедитору.РСК_Цена КАК Цена,
		|	ПоручениеЭкспедитору.РСК_Сумма КАК Сумма,
		|	ПоручениеЭкспедитору.РСК_Характеристика КАК ХарактеристикаНоменклатуры
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоручениеЭкспедитору КАК ПоручениеЭкспедитору
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоручениеЭкспедитору.Основания КАК ПоручениеЭкспедиторуОснования
		|			ПО ПоручениеЭкспедитору.Ссылка = ПоручениеЭкспедиторуОснования.Ссылка
		|				И (ПоручениеЭкспедиторуОснования.НомерСтроки = 1)
		|		ПО ЗаданиеНаПеревозкуРаспоряжения.Распоряжение = ПоручениеЭкспедитору.Ссылка
		|ГДЕ
		|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка = &Ссылка
		|	И ПоручениеЭкспедиторуОснования.Основание = &Заказ
		|	И ПоручениеЭкспедитору.РСК_СтатусАктаВыдачиТСР = ЗНАЧЕНИЕ(Перечисление.РСК_СтатусыАктовВыдачи.Выдан)";
	
	Запрос.УстановитьПараметр("Заказ", Контракт);
	Запрос.УстановитьПараметр("Ссылка", ЗаданиеНаПеревозку);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17534
//e1cib/data/Документ.Задание?ref=a3eb9b03bd1c14b84aeaf2f6294e0848
Процедура РеестрКоличествоПриИзменении(Элемент)
	
	РассчитатьСумму();
	
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17534
//e1cib/data/Документ.Задание?ref=a3eb9b03bd1c14b84aeaf2f6294e0848
Процедура РеестрЦенаПриИзменении(Элемент)
	
	РассчитатьСумму();
	
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17534
//e1cib/data/Документ.Задание?ref=a3eb9b03bd1c14b84aeaf2f6294e0848
Процедура РассчитатьСумму()
	
	ТекДанные = Элементы.Реестр.ТекущиеДанные;
	ТекДанные.Сумма = ТекДанные.Количество * ТекДанные.Цена;	
		
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17534
//e1cib/data/Документ.Задание?ref=a3eb9b03bd1c14b84aeaf2f6294e0848
Процедура РеестрАктОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ДанныеПоСтроке = ПолучитьРеквизитыАкта(ВыбранноеЗначение);
	ЗаполнитьЗначенияСвойств(Элементы.Реестр.ТекущиеДанные,ДанныеПоСтроке);
	ЗаполнитьАдресРегистрацииИТелефон();	
КонецПроцедуры

&НаСервереБезКонтекста
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17534
//e1cib/data/Документ.Задание?ref=a3eb9b03bd1c14b84aeaf2f6294e0848
Функция ПолучитьРеквизитыАкта(СсылкаАкт)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоручениеЭкспедитору.Ссылка КАК Акт,
		|	ПоручениеЭкспедитору.Пункт КАК Заявитель,
		|	ПоручениеЭкспедитору.РСК_Номенклатура КАК Номенклатура,
		|	ПоручениеЭкспедитору.РСК_Характеристика КАК ХарактеристикаНоменклатуры,
		|	ПоручениеЭкспедитору.РСК_ТСР КАК ТСР,
		|	ПоручениеЭкспедитору.РСК_Количество КАК Количество,
		|	ПоручениеЭкспедитору.РСК_Цена КАК Цена,
		|	ПоручениеЭкспедитору.РСК_Сумма КАК Сумма,
		|	ПоручениеЭкспедитору.РСК_НомерНаправления КАК НомерНаправления,
		|	ПоручениеЭкспедитору.РСК_ДатаНаправления КАК ДатаНаправления,
		|	ПоручениеЭкспедитору.РСК_НомерРеестра КАК НомерРеестра,
		|	ПоручениеЭкспедитору.РСК_ДатаРеестра КАК ДатаРеестра,
		|	ПоручениеЭкспедитору.Дата КАК ДатаАкта,
		|	ПоручениеЭкспедитору.РСК_СтатусАктаВыдачиТСР КАК СтатусАкта
		|ИЗ
		|	Документ.ПоручениеЭкспедитору КАК ПоручениеЭкспедитору
		|ГДЕ
		|	ПоручениеЭкспедитору.Ссылка В(&Ссылка)";
	Запрос.УстановитьПараметр("Ссылка", СсылкаАкт);
	Если ТипЗнч(СсылкаАкт) = Тип("Массив") Тогда
		Возврат Запрос.Выполнить().Выгрузить();
	Иначе
		Возврат РСК_ВызовСервера.ЗапросВСтруктуру(Запрос);	
	КонецЕсли;
КонецФункции

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17534
//e1cib/data/Документ.Задание?ref=a3eb9b03bd1c14b84aeaf2f6294e0848
Процедура ЗаполнитьФормуОтчетаEXCEL(Команда)
	Если Модифицированность Тогда
		Сообщить("Перед выполнением данного действия необходимо сохранить документ!");	
		Возврат;
	КонецЕсли;
	ПараметрыПередачи = Новый Структура("Контракт, ДатаВыдачи",Объект.Контракт,Объект.ДатаВыдачи);
	ОткрытьФорму(
		"Обработка.РСК_ЗаполнениеФормыОтчетаExcelДляФСС.Форма.Форма", 
		ПараметрыПередачи, 
		ЭтотОбъект,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17534
//e1cib/data/Документ.Задание?ref=a3eb9b03bd1c14b84aeaf2f6294e0848
Процедура ПериодОтчетаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ДатаНачала", ПериодОтчета.ДатаНачала);
	ПараметрыОткрытия.Вставить("ДатаОкончания", ПериодОтчета.ДатаОкончания);
	
	ОткрытьФорму("ОбщаяФорма.РСК_ВыборПериода", ПараметрыОткрытия, Элемент);
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17534
//e1cib/data/Документ.Задание?ref=a3eb9b03bd1c14b84aeaf2f6294e0848
Процедура ПериодОтчетаПриИзменении(Элемент)
	Объект.ДатаНачала = ПериодОтчета.ДатаНачала;
	Объект.ДатаОкончания = ПериодОтчета.ДатаОкончания;
КонецПроцедуры

&НаСервере
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17534
//e1cib/data/Документ.Задание?ref=a3eb9b03bd1c14b84aeaf2f6294e0848
Процедура ЗаполнитьАдресРегистрацииИТелефон()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Партнеры.Ссылка КАК Заявитель,
		|	ПОДСТРОКА(ЕСТЬNULL(КонтактАдрес.Представление, """"), 1, 150) КАК АдресРегистрации,
		|	ПОДСТРОКА(ЕСТЬNULL(КонтактТелефон.Представление, """"), 1, 50) КАК Телефон,
		|	Партнеры.РСК_ПаллиативнаяПомощь КАК ПаллиативнаяПомощь
		|ИЗ
		|	Справочник.Партнеры КАК Партнеры
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партнеры.КонтактнаяИнформация КАК КонтактАдрес
		|		ПО Партнеры.Ссылка = КонтактАдрес.Ссылка
		|			И (КонтактАдрес.Вид.ИдентификаторДляФормул = ""АдресРегистрации"")
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партнеры.КонтактнаяИнформация КАК КонтактТелефон
		|		ПО Партнеры.Ссылка = КонтактТелефон.Ссылка
		|			И (КонтактТелефон.ВидДляСписка = &ВидТелефон)
		|ГДЕ
		|	Партнеры.Ссылка В(&Партнёры)";
	
	Запрос.УстановитьПараметр("Партнёры", Объект.Реестр.Выгрузить(,"Заявитель").ВыгрузитьКолонку("Заявитель"));
	Запрос.УстановитьПараметр("ВидТелефон", Справочники.ВидыКонтактнойИнформации.ТелефонПартнера);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Для Каждого Стр Из Объект.Реестр Цикл
		Если Выборка.НайтиСледующий(Стр.Заявитель, "Заявитель") Тогда
			ЗаполнитьЗначенияСвойств(Стр, Выборка,,"Заявитель");
		Иначе
			Стр.АдресРегистрации = "";
			Стр.Телефон = "";
		КонецЕсли;
		Выборка.Сбросить();
	КонецЦикла;
	
	тзРеестр = Объект.Реестр.Выгрузить(,"Заявитель");
	тзРеестр.Свернуть("Заявитель");
	ВсегоПолучателей = тзРеестр.Количество();

КонецПроцедуры // ЗаполнитьАдресРегистрацииИТелефон()


&НаСервере
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17534
//e1cib/data/Документ.Задание?ref=a3eb9b03bd1c14b84aeaf2f6294e0848
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗаполнитьАдресРегистрацииИТелефон();
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17534
//e1cib/data/Документ.Задание?ref=a3eb9b03bd1c14b84aeaf2f6294e0848
Процедура СформироватьОтчет(Команда)
	ВПФ = РСК_ВызовСервера.ЗначениеРеквизитаОбъекта(Объект.Контракт, "РСК_ПечатнаяФормаОтчета");
	
	Если НЕ ЗначениеЗаполнено(ВПФ) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"В заказе не указана печатная форма отчёта",
			Объект.Контракт,
			"РСК_ПечатнаяФормаОтчета"
		);
		Возврат;
	КонецЕсли;
	
	ПараметрыВывода = РСК_ВызовСервера.ПодготовитьСтруктуруПараметровВывода();
	ПараметрыВывода.Вставить("ОдинЭкземпляр", Истина);
	
	ОбъектыНазначения = Новый Массив;
	ОбъектыНазначения.Добавить(Объект.Ссылка);
	
	МассивПечатныхФорм = РСК_ВызовСервера.ПечатьЧужойФормыНаСервере(ОбъектыНазначения, ВПФ, ПараметрыВывода);
	ТабДок = МассивПечатныхФорм[0].ТабличныйДокумент;
	
	РСК_Клиент.ВывестиНаПечать(ТабДок, "ПФ_MXL_ОтчетПоВыдаче", НСтр("ru = 'Отчет по выдаче ТСР'"));
	
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17534
//e1cib/data/Документ.Задание?ref=a3eb9b03bd1c14b84aeaf2f6294e0848
Процедура ПечататьГруппуАктов(Команда)
	МассивДокументов = Новый Массив;
	ВПФ = РСК_ВызовСервера.ЗначениеРеквизитаОбъекта(Объект.Контракт, "РСК_ПечатнаяФормаАкта");
	Если НЕ ЗначениеЗаполнено(ВПФ) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Не указана печатная форма акта",
			Объект.Контракт,
			"РСК_ПечатнаяФормаАкта"
		);
		Возврат;
	КонецЕсли;
	
	ПараметрыВывода = РСК_ВызовСервера.ПодготовитьСтруктуруПараметровВывода();
	ПараметрыВывода.Вставить("ОдинЭкземпляр", Истина);
	ПараметрыВывода.Вставить("ЗаголовокФормы", НСтр("ru = 'Пакетная печать. Акты выдачи ТСР'"));
	Если Команда.Имя = "ПечататьГруппуАктовБезПримечания" Тогда
		ПараметрыВывода.Вставить("НеПечататьПримечание");
	КонецЕсли;
	
	Выделенные = Элементы.Реестр.ВыделенныеСтроки;
	ё=0;
	Для каждого ВыделеннаяСтрока из Выделенные Цикл
		ё=ё+1;
		Состояние("" + ё + " из " + Выделенные.Количество(), ё * 100 / Выделенные.Количество(), "Подготовка к печати...");
		ТекДанные = Элементы.Реестр.ДанныеСтроки(ВыделеннаяСтрока);
		Док = ТекДанные.Акт;
		ОбъектыНазначения = Новый Массив;
		ОбъектыНазначения.Добавить(Док);
		МассивПечатныхФорм = РСК_ВызовСервера.ПечатьЧужойФормыНаСервере(ОбъектыНазначения, ВПФ, ПараметрыВывода);
		ТабДок = МассивПечатныхФорм[0].ТабличныйДокумент;
		МассивДокументов.Добавить(ТабДок);
	КонецЦикла;
	
	ТабДок = РСК_ВызовСервера.СлепитьАкты(МассивДокументов);
	ТабДок.ДвусторонняяПечать = ТипДвустороннейПечати.ПереворотВлево;

	РСК_Клиент.ВывестиНаПечать(ТабДок, "ПФ_MXL_ПакетнаяПечатьАктовВыдачиТСР", НСтр("ru = 'Пакетная печать. Акты выдачи ТСР'")); 
	
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 06.11.2022 Задача 21689
//e1cib/data/Документ.Задание?ref=8bffa46d2952292e47600849e9c2f875
Процедура ПеречитатьАкты(Команда)
	ПеречитатьАктыНаСервере();
КонецПроцедуры

&НаСервере
//++ РС Консалт: Трофимов Евгений 06.11.2022 Задача 21689
//e1cib/data/Документ.Задание?ref=8bffa46d2952292e47600849e9c2f875
Процедура ПеречитатьАктыНаСервере()

	тзАкты = ПолучитьРеквизитыАкта(Объект.Реестр.Выгрузить().ВыгрузитьКолонку("Акт"));
	Для Каждого Стр Из Объект.Реестр Цикл
		НовыеДанные = тзАкты.Найти(Стр.Акт, "Акт");
		Если НовыеДанные = Неопределено Тогда
			ОбщегоНазначения.СообщитьПользователю(
				"Не удалось прочитать данные по акту",,
				"Реестр[" + XMLСтрока(Стр.НомерСтроки - 1) + "].Акт",
				"Объект"
			);
		Иначе
			ЗаполнитьЗначенияСвойств(Стр, НовыеДанные);
			Модифицированность = Истина;
		КонецЕсли;
	КонецЦикла;
	
	ЗаполнитьАдресРегистрацииИТелефон();

КонецПроцедуры // ПеречитатьАктыНаСервере()


