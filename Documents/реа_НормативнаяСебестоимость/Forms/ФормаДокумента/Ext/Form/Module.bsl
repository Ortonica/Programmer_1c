
&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	объект.Товары.Очистить();
	запрос=Новый Запрос;
	
	запрос.текст="ВЫБРАТЬ
	             |	ПоступлениеТоваровУслугТовары.Номенклатура,
	             |	ПоступлениеТоваровУслугТовары.Характеристика,
	             |	МАКСИМУМ(ПоступлениеТоваровУслугТовары.Ссылка.Дата) КАК Дата
	             |ПОМЕСТИТЬ МаксДата
	             |ИЗ
	             |	Документ.ПриобретениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	             |ГДЕ
	             |	ПоступлениеТоваровУслугТовары.Ссылка.Дата >= &ДатаНачала И ПоступлениеТоваровУслугТовары.Ссылка.Дата <= &Дата
				 |  И НЕ ПоступлениеТоваровУслугТовары.Ссылка.Контрагент.ГоловнойКонтрагент=&ГоловнойКонтрагент
	             |  И НЕ (ПоступлениеТоваровУслугТовары.Ссылка.ХозяйственнаяОперация=Значение(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)
	             |  ИЛИ ПоступлениеТоваровУслугТовары.Ссылка.ХозяйственнаяОперация=Значение(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов))
				 |  И Не ПоступлениеТоваровУслугТовары.Ссылка.Склад В (&Склады)
				 |  И ПоступлениеТоваровУслугТовары.Ссылка.Контрагент В (&Контрагенты)
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПоступлениеТоваровУслугТовары.Номенклатура,
	             |	ПоступлениеТоваровУслугТовары.Характеристика
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	МаксДата.Номенклатура КАК Номенклатура,
	             |	МаксДата.Характеристика КАК Характеристика,
	             |	ПоступлениеТоваровУслугТовары.Ссылка КАК ссылка,
	             |	ПоступлениеТоваровУслугТовары.Цена,
	             |	ПоступлениеТоваровУслугТовары.Упаковка,
	             |	ПоступлениеТоваровУслугТовары.Ссылка.Валюта
	             |ИЗ
	             |	Документ.ПриобретениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксДата КАК МаксДата
	             |		ПО (МаксДата.Номенклатура = ПоступлениеТоваровУслугТовары.Номенклатура)
	             |			И (МаксДата.Характеристика = ПоступлениеТоваровУслугТовары.Характеристика)
	             |			И (МаксДата.Дата = ПоступлениеТоваровУслугТовары.Ссылка.Дата)
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	Номенклатура,
	             |	Характеристика";
	
	запрос.УстановитьПараметр("Дата",объект.Дата);
	запрос.УстановитьПараметр("ДатаНачала",объект.ДатаНачала);
	
	запрос.УстановитьПараметр("ГоловнойКонтрагент",Справочники.Контрагенты.НайтиПоКоду("УТ-00000001"));
	
	Если СкладыИсключения.Количество()>0 тогда
		запрос.УстановитьПараметр("Склады",СкладыИсключения.ВыгрузитьЗначения());
	иначе	
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"И Не ПоступлениеТоваровУслугТовары.Ссылка.Склад В (&Склады)","")
	КонецЕсли;	

	Если Контрагенты.Количество()>0 тогда
		запрос.УстановитьПараметр("Контрагенты",Контрагенты.ВыгрузитьЗначения());
	иначе	
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"И ПоступлениеТоваровУслугТовары.Ссылка.Контрагент В (&Контрагенты)","")
	КонецЕсли;	

	рез=запрос.Выполнить().Выбрать();
	пока рез.Следующий() цикл
		Если рез.номенклатура<>Справочники.Номенклатура.ПустаяСсылка() тогда
			строка=Объект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(строка,рез);
			строка.договорнаяцена=рез.цена;
			а=строка.договорнаяцена;
			строка.основание=рез.ссылка;
			
			запрос2=Новый Запрос;
			запрос2.текст="ВЫБРАТЬ ПЕРВЫЕ 1
			|	ТаможеннаяДекларацияИмпортТовары.Номенклатура,
			|	ТаможеннаяДекларацияИмпортТовары.Характеристика,
			|	ТаможеннаяДекларацияИмпортТовары.ТаможеннаяСтоимость,
			|	ТаможеннаяДекларацияИмпортТовары.СуммаПошлины,
			|	ТаможеннаяДекларацияИмпортТовары.Ссылка.Дата КАК Дата
			|ИЗ
			|	Документ.ТаможеннаяДекларацияИмпорт.Товары КАК ТаможеннаяДекларацияИмпортТовары
			|ГДЕ
			|	ТаможеннаяДекларацияИмпортТовары.Номенклатура = &Номенклатура
			|	И ТаможеннаяДекларацияИмпортТовары.Характеристика = &Характеристика
			|	И ТаможеннаяДекларацияИмпортТовары.Ссылка.Дата <= &Дата
			|
			|УПОРЯДОЧИТЬ ПО
			|	Дата УБЫВ";
			запрос2.УстановитьПараметр("Номенклатура",строка.Номенклатура);
			запрос2.УстановитьПараметр("Характеристика",строка.Характеристика);
			запрос2.УстановитьПараметр("Дата",объект.Дата);
			рез2=запрос2.Выполнить().Выбрать();
			Если рез2.Следующий() тогда
				Если рез2.ТаможеннаяСтоимость<>0 тогда
					строка.ПроцентПошлина=рез2.СуммаПошлины/рез2.ТаможеннаяСтоимость*100;
				иначе
					строка.ПроцентПошлина=0;
				конецесли;
			иначе
				строка.ПроцентПошлина=0;
			конецесли;
		конецесли;
	конеццикла;	
ПересчитатьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Пересчитать(Команда)
	ПересчитатьНаСервере();
	ОбновитьДанныеВычисляемыхКолонок();
КонецПроцедуры

&НаСервере
Процедура ПересчитатьНаСервере()
валдоллар=Справочники.Валюты.НайтиПоКоду("840");
валевро=Справочники.Валюты.НайтиПоКоду("978");
//+ GEV 160322
валюань=Справочники.Валюты.НайтиПоКоду("156");
//- GEV 
	для каждого строка из объект.Товары Цикл
		а=строка.договорнаяцена;
		строка.ИтогоСебестоимость=а+а*(строка.ПроцентПошлина+объект.ПроцентТаможенныйСбор+объект.ПроцентДопРасходыНаПокупку+объект.ПроцентДопРасходыНаПродажу)/100;
		строка.ИтогоСебестоимостьРуб=строка.ИтогоСебестоимость;
		если строка.валюта=валдоллар тогда
			строка.ИтогоСебестоимостьРуб=строка.ИтогоСебестоимость*объект.КурсДоллар;
		конецесли;	
		если строка.валюта=валевро тогда
			строка.ИтогоСебестоимостьРуб=строка.ИтогоСебестоимость*объект.КурсЕвро;
		конецесли;
		//+ GEV 160322
		если строка.валюта=валюань тогда
        	строка.ИтогоСебестоимостьРуб=строка.ИтогоСебестоимость*объект.КурсЮань;
		конецесли;
       	//- GEV
		
		
		
		
	конеццикла;	
КонецПроцедуры	    


&НаСервере
Процедура ОбновитьДанныеВычисляемыхКолонок()
 Для Каждого Стр Из Объект.Товары Цикл
    Стр.СуммаПошлины = Стр.ИтогоСебестоимость*стр.ПроцентПошлина/100;
    Стр.СуммаТаможенногоСбора = Стр.ИтогоСебестоимость*Объект.ПроцентТаможенныйСбор/100;
    Стр.СуммаДопРасходовНаПокупку = Стр.ИтогоСебестоимость*Объект.ПроцентДопРасходыНаПокупку/100;
    Стр.СуммаДопРасходовНаПродажу = Стр.ИтогоСебестоимость*Объект.ПроцентДопРасходыНаПродажу/100;
	Стр.ВключитьВОтбор=Ложь;
 КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьДанныеВычисляемыхКолонок();	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ОбновитьДанныеВычисляемыхКолонок();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ОбновитьДанныеВычисляемыхКолонок();
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьНаСервере(ПутьКФайлу)
ТабДок = Новый ТабличныйДокумент;
Тз = Новый ТаблицаЗначений;
Построитель = Новый ПостроительОтчета;
Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(Объект.Товары.Выгрузить());
Построитель.Выполнить();
Построитель.Вывести(ТабДок);
ТабДок.Записать(ПутьКФайлу,ТипФайлаТабличногоДокумента.XLS);
КонецПроцедуры

&НаКлиенте
Процедура Выгрузить(Команда)
	Режим = РежимДиалогаВыбораФайла.Сохранение;
    ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
    ДиалогОткрытияФайла.ПолноеИмяФайла = "";
    ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
    Текст = "ru = ""Таблица XLS""; en = ""XLS table""";
    Фильтр = НСтр(Текст)+"(*.xls)|*.xls";
    ДиалогОткрытияФайла.Фильтр = Фильтр;
    ДиалогОткрытияФайла.Заголовок = "Выберите путь для сохранения";
    Если ДиалогОткрытияФайла.Выбрать() Тогда
        ПутьКФайлу = ДиалогОткрытияФайла.ПолноеИмяФайла;
    Иначе
        Текст = "Путь сохранения не выбран!";
        Предупреждение(Текст);
        Возврат;
    КонецЕсли;
	ВыгрузитьНаСервере(ПутьКФайлу);
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоГруппе(Команда)
	ПараметрыВыбора2=новый Структура;
	ПараметрыВыбора2.Вставить("РежимВыбора",Истина);
	ОткрытьФорму("Справочник.Номенклатура.ФормаВыбораГруппы",ПараметрыВыбора2,ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборНаСервере(ВыбранноеЗначение)
	
    Строки=Объект.Товары.НайтиСтроки(Новый Структура("ВключитьВОтбор",Истина));
	Для каждого строка из Строки Цикл
		строка.ВключитьВОтбор=Ложь;
	Конеццикла;

	Запрос = Новый Запрос; 
    Запрос.Текст = "ВЫБРАТЬ
    | Номенклатура.Ссылка
    |ИЗ
    | Справочник.Номенклатура КАК Номенклатура
    |
    |ГДЕ
    | Номенклатура.Ссылка В ИЕРАРХИИ(&Родитель) И
    | (Номенклатура.ЭтоГруппа = ЛОЖЬ)"; 

    Запрос.УстановитьПараметр("Родитель", ВыбранноеЗначение); 

    Результат = Запрос.Выполнить(); 
    Выборка = Результат.Выбрать(); 

    Пока Выборка.Следующий() Цикл 
        Строки=Объект.Товары.НайтиСтроки(Новый Структура("номенклатура",Выборка.Ссылка));
		Для каждого строка из Строки Цикл
			строка.ВключитьВОтбор=Истина;
		Конеццикла	
    КонецЦикла; 
	
Элементы.Товары.ОтборСтрок=Новый ФиксированнаяСтруктура("ВключитьВОтбор", Истина);
	
конецпроцедуры	

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	УстановитьОтборНаСервере(ВыбранноеЗначение);
КонецПроцедуры

&НаСервере
Процедура ОтключитьОтборНаСервере()
    Строки=Объект.Товары.НайтиСтроки(Новый Структура("ВключитьВОтбор",Истина));
	Для каждого строка из Строки Цикл
		строка.ВключитьВОтбор=Ложь;
	Конеццикла;	
	Элементы.Товары.ОтборСтрок=Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьОтбор(Команда)
	ОтключитьОтборНаСервере();
КонецПроцедуры

&НаСервере
Функция ПечатьНаСервере()
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ОтображатьСетку = Истина;
	

	ДокОбъект = РеквизитФормыВЗначение("Объект");
	Макет = ДокОбъект.ПолучитьМакет("Макет");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры, Объект);		
	ОбластьШапка.ТолькоПросмотр = Истина;
	ТабДок.Вывести(ОбластьШапка);
	

	ОбластьСтрока = Макет.ПолучитьОбласть("Детализация");
	Если Элементы.Товары.ОтборСтрок=Неопределено тогда
		Для каждого стр из Объект.Товары Цикл
			ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, стр);		
			ТабДок.Вывести(ОбластьСтрока);
		КонецЦикла;	
	иначе
		Для каждого стр из Объект.Товары Цикл
			Если стр.ВключитьВОтбор тогда
				ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, стр);		
				ТабДок.Вывести(ОбластьСтрока);
			конецесли;	
		КонецЦикла;	
	конецесли;	
	ТабДок.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
	
	Возврат ТабДок;
	
КонецФункции
&НаКлиенте
Процедура Печать(Команда)
	табдок=ПечатьНаСервере();
	табдок.показать();
КонецПроцедуры

&НаКлиенте
Процедура Команда1(Команда)
    
    Сообщить("Запускаю сообщалку");
    Сообщалка();
    
КонецПроцедуры

&НаСервере
Процедура Сообщалка()
    
    ИсключаемаяОрганизация = "У_G";
    
    Запрос = новый Запрос;
    
    Запрос.Текст = "ВЫБРАТЬ
    |    ГруппыДоступа.Ссылка КАК Ссылка
    |ИЗ
    |    Справочник.ГруппыДоступа КАК ГруппыДоступа
    |ГДЕ
    |    НЕ ГруппыДоступа.ПометкаУдаления";
    
    Выборка = Запрос.Выполнить().Выбрать();
    Пока Выборка.Следующий() Цикл 
        
        Сообщить("Смотрим группу доступа - " + Выборка.Ссылка.Наименование);
        
        ОтсутствуетВидДоступа = Истина;
        Для каждого ВидДоступ Из Выборка.Ссылка.ВидыДоступа Цикл
            
            Если Строка(ТипЗнч(ВидДоступ.ВидДоступа))= "Организация" Тогда
                ОтсутствуетВидДоступа = Ложь;  
                ИсключениеНеДобавлено = Истина;
                Для каждого ЗнчДоступ Из Выборка.Ссылка.ЗначенияДоступа Цикл 
                    Если Строка(ЗнчДоступ.ЗначениеДоступа) = ИсключаемаяОрганизация Тогда
                        //Сообщить ("Прописано исключение ------ " + ЗнчДоступ.ЗначениеДоступа);
                        ИсключениеНеДобавлено = Ложь;
                    КонецЕсли;
                КонецЦикла;
                
                
                Если ИсключениеНеДобавлено Тогда
                    ГруппаДоступа = Выборка.Ссылка.ПолучитьОбъект();
                    ТабЧастьЗначений = ГруппаДоступа.ЗначенияДоступа.Добавить();
                    ТабЧастьЗначений.ЗначениеДоступа = Справочники.Организации.НайтиПоНаименованию(ИсключаемаяОрганизация);
                    ТабЧастьЗначений.ВидДоступа = Справочники.Организации.ПустаяСсылка(); 
                    ГруппаДоступа.Записать(); 
                    Сообщить("---ПРОПИСАЛИ исключение в группу " + Выборка.Ссылка.Наименование);
                КонецЕсли;
                
            КонецЕсли;
            
        КонецЦикла;            
        
    КонецЦикла;
    
КонецПроцедуры