
&ИзменениеИКонтроль("ПараметрыВзаиморасчеты")
Функция РСК_ПараметрыВзаиморасчеты(ДанныеЗаполнения)

	Если ОбщегоНазначенияУТКлиентСервер.АвторизованВнешнийПользователь() Тогда 
		Возврат ПараметрыВзаиморасчетыСамообслуживание(ДанныеЗаполнения);
	КонецЕсли;

	Если ОбщегоНазначения.ЗначениеСсылочногоТипа(ДанныеЗаполнения) Тогда
		СтруктураДанныеЗаполнения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ДанныеЗаполнения, 
		"ХозяйственнаяОперация");
		ХозяйственнаяОперация = СтруктураДанныеЗаполнения.ХозяйственнаяОперация;
	ИначеЕсли ДанныеЗаполнения = Неопределено Тогда
		ХозяйственнаяОперация = Неопределено;
	Иначе
		ХозяйственнаяОперация = ДанныеЗаполнения.ХозяйственнаяОперация;
	КонецЕсли;

	СтруктураПараметров = ВзаиморасчетыСервер.ПараметрыМеханизма();

	#Область ОбязательныеПараметры
	
	СтруктураПараметров.ЭтоЗаказ                         = Истина;
	СтруктураПараметров.ТипРасчетов                      = Перечисления.ТипыРасчетовСПартнерами.РасчетыСКлиентом;
	СтруктураПараметров.ИзменяетПланОплаты               = (ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиенту
	ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности
	ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоставкаПодПринципала)
	И Константы.ИспользоватьРасширенныеВозможностиЗаказаКлиента.Получить();
	#Вставка
	//++РС Консалт Назаров М.Ю. 25 июля 2022 г. 6:12:42 
	// Данная вставка позволяет заполнять этапы оплаты заказа                  
	СтруктураПараметров.ИзменяетПланОплаты               = (ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиенту 
	Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияЧерезКомиссионера
	ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности
	ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоставкаПодПринципала)
	И Константы.ИспользоватьРасширенныеВозможностиЗаказаКлиента.Получить();
	//--РС Консалт Назаров М.Ю. 25 июля 2022 г. 6:12:42
	#КонецВставки
	СтруктураПараметров.ИзменяетПланОтгрузкиПоставки     = Истина;
	
	#КонецОбласти
	
	#Область НеобязательныеПараметры
	
	СтруктураПараметров.КурсЧислитель                    = "";
	СтруктураПараметров.КурсЗнаменатель                  = "";
	СтруктураПараметров.ГрафикОплаты                     = "Объект.ГрафикОплаты";
	
	СтруктураПараметров.ПутьКДаннымТЧ                    = "Объект.Товары";
	
	СтруктураПараметров.Менеджер                         = "Объект.Менеджер";
	СтруктураПараметров.БанковскийСчетОрганизации        = "Объект.БанковскийСчет";
	СтруктураПараметров.СуммаДокументаФорма              = "Форма.СуммаЗаказаноСЗалоговойТарой";
	СтруктураПараметров.СуммаЗалогаЗаТаруФорма           = "Форма.СуммаЗалогаЗаТару";
	СтруктураПараметров.ОбъектРасчетов                   = "Объект.ОбъектРасчетов";

	СтруктураПараметров.ЭлементыФормы.ЗачетОплаты        = "ЗачетОплатыФорма";
	СтруктураПараметров.ЭлементыФормы.ГруппаФинансовогоУчета = "ГруппаФинансовогоУчета";
	СтруктураПараметров.ЭлементыФормы.НаправлениеДеятельности = "НаправлениеДеятельности";
	СтруктураПараметров.НомерВходящегоДокумента          = "Объект.НомерПоДаннымКлиента";
	СтруктураПараметров.ДатаВходящегоДокумента           = "Объект.ДатаПоДаннымКлиента";


	#КонецОбласти

	#Область ГрафикПлановойОплатыИДатаПлатежа

	СтруктураПараметров.ПутьКДаннымТЧЭтапыОплаты         = "Объект.ЭтапыГрафикаОплаты";
	СтруктураПараметров.ДатаСогласования                 = "Объект.ДатаСогласования";
	СтруктураПараметров.ДатаОтгрузки                     = "Объект.Товары.ДатаОтгрузки";
	СтруктураПараметров.ЭлементыФормы.НадписьЭтапы       = "ДекорацияЭтапыОплаты";
	СтруктураПараметров.НадписьЭтапыОплаты               = "Форма.НадписьЭтапыОплаты";
	СтруктураПараметров.ЗаказКакСчет                     = НЕ Константы.ИспользоватьРасширенныеВозможностиЗаказаКлиента.Получить();
	СтруктураПараметров.ЕстьДатаПереходаПраваСобственности = ПолучитьФункциональнуюОпцию("ИспользоватьОтгрузкуБезПереходаПраваСобственности");
	СтруктураПараметров.ИсточникСуммТабличнаяЧасть       = Истина;

	#КонецОбласти

	#Область СостояниеВзаиморасчетов

	СтруктураПараметров.ЭлементыФормы.НадписьРасчеты                   = "ДекорацияСостояниеРасчетов";

	#КонецОбласти

	#Область ОграниченияЗадолженностиПоДоговору

	СтруктураПараметров.ЭлементыФормы.ОграничениеЗадолженностиТекст    = "ДекорацияОграничениеЗадолженности";
	СтруктураПараметров.ЭлементыФормы.ОграничениеЗадолженностиКартинка = "КартинкаОтгрузкаЗапрещена";

	#КонецОбласти

	Возврат СтруктураПараметров;

КонецФункции

&ИзменениеИКонтроль("ТекстЗапросаРеквизитыДоставки")
Функция РСК_ТекстЗапросаРеквизитыДоставки()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Шапка.Номер             КАК Номер,
	|	Шапка.Проведен          КАК Проведен,
	|	Шапка.Ссылка            КАК Ссылка,
	|	Шапка.Дата              КАК Дата,
	|	Шапка.Партнер           КАК ПолучательОтправитель,
	|	Шапка.ПеревозчикПартнер КАК Перевозчик,
	#Удаление
	|	ВЫБОР КОГДА (Шапка.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
	|	ВЫБОР КОГДА (Шапка.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика),ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента),ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
	#КонецВставки
	|			И НЕ &ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками)
	|			ИЛИ Шапка.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ДоКлиентаКурьером)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.Самовывоз)
	|		ИНАЧЕ Шапка.СпособДоставки
	|	КОНЕЦ                   КАК СпособДоставки,
	|	Шапка.ЗонаДоставки      КАК Зона,
	|
	|	ВЫБОР КОГДА СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
	|		ТОГДА Шапка.АдресДоставкиПеревозчика
	|		ИНАЧЕ Шапка.АдресДоставки
	|		КОНЕЦ               КАК Адрес,
	|
	|	ВЫБОР КОГДА СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
	|		ТОГДА Шапка.АдресДоставкиПеревозчикаЗначенияПолей
	|		ИНАЧЕ Шапка.АдресДоставкиЗначенияПолей
	|		КОНЕЦ               КАК АдресЗначенияПолей,
	|
	|	Шапка.ВремяДоставкиС    КАК ВремяС,
	|	Шапка.ВремяДоставкиПо   КАК ВремяПо,
	|	Шапка.ДополнительнаяИнформацияПоДоставке
	|		                    КАК ДополнительнаяИнформация,
	|	Т.Склад                 КАК Склад,
	|	Т.ДоставитьПолностью    КАК ДоставитьПолностью,
	|	Шапка.ОсобыеУсловияПеревозки  КАК ОсобыеУсловияПеревозки,
	|	Шапка.ОсобыеУсловияПеревозкиОписание КАК ОсобыеУсловияПеревозкиОписание,
	|	Шапка.Соглашение.РазбиватьРасходныеОрдераПоРаспоряжениям КАК РазбиватьРасходныеОрдераПоРаспоряжениям
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		Т.Ссылка КАК Ссылка,
	|		Т.Склад КАК Склад,
	|		МИНИМУМ(Т.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить))
	|				КАК ДоставитьПолностью
	|	ИЗ
	|		Документ.ЗаказКлиента.Товары КАК Т
	|	ГДЕ
	|		Т.Ссылка В (&Ссылки)
	|		И Т.Номенклатура.ТипНоменклатуры В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Т.Ссылка,
	|		Т.Склад
	|	
	|	ИМЕЮЩИЕ
	|		МАКСИМУМ(Т.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить)) = ИСТИНА
	|	) КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК Шапка
	|		ПО (Шапка.Ссылка = Т.Ссылка)";

	Возврат ТекстЗапроса;

КонецФункции

&ИзменениеИКонтроль("ТекстЗапросаДляРасчетаСостоянийЗаказов")
Функция РСК_ТекстЗапросаДляРасчетаСостоянийЗаказов()

	ТекстЗапроса ="
	|ВЫБРАТЬ 
	|ВЫБОР
	|// НЕ ПРОВЕДЕН /////////////////////////////////////////////////////////////
	|	КОГДА
	|		НЕ ДокументЗаказКлиента.Проведен
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовКлиентов.ПустаяСсылка)
	|// ОЖИДАЕТСЯ СОГЛАСОВАНИЕ //////////////////////////////////////////////////
	|	КОГДА
	|		ДокументЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.НеСогласован)
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовКлиентов.ОжидаетсяСогласование)
	|// ОЖИДАЕТСЯ АВАНС ДО ОБЕСПЕЧЕНИЯ //////////////////////////////////////////
	|	КОГДА
	#Вставка
	//++РС Консалт: Минаков А.С. Задача 23304
	|		ИСТИНА
	//++РС Консалт: Минаков А.С. Задача 23304
	#КонецВставки
	#Удаление
	|		(ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказам)
	|			ИЛИ ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)) 
	#КонецУдаления
	|		И ДокументЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОбеспечению)
	|		И ДокументЗаказКлиента.СуммаАвансаДоОбеспечения > 0
	|		И ЕСТЬNULL(РасчетыСКлиентамиОстатки.КОплатеРасход, 0) < ДокументЗаказКлиента.СуммаАвансаДоОбеспечения
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовКлиентов.ОжидаетсяАвансДоОбеспечения)
	|// ГОТОВ К ОБЕСПЕЧЕНИЮ ///////////////////////////////////////////////////
	|	КОГДА
	|		ВТОбеспечениеЗаказа.ЕстьКОбеспечению
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовКлиентов.ГотовКОбеспечению)
	|// ОЖИДАЕТСЯ ПРЕДОПЛАТА ДО ОТГРУЗКИ ////////////////////////////////////////
	|	КОГДА
	#Вставка
	//++РС Консалт: Минаков А.С. Задача 23304
	|		ИСТИНА
	//++РС Консалт: Минаков А.С. Задача 23304
	#КонецВставки
	#Удаление
	|		(ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказам)
	|			ИЛИ ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным))
	#КонецУдаления
	|		И (ДокументЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОбеспечению) ИЛИ ДокументЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОтгрузке))
	|		И ДокументЗаказКлиента.СуммаПредоплатыДоОтгрузки > 0
	|		И ЕСТЬNULL(РасчетыСКлиентамиОстатки.КОплатеРасход, 0) < ДокументЗаказКлиента.СуммаПредоплатыДоОтгрузки + ДокументЗаказКлиента.СуммаАвансаДоОбеспечения
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовКлиентов.ОжидаетсяПредоплатаДоОтгрузки)
	|// ОЖИДАЕТСЯ ОБЕСПЕЧЕНИЕ ////////////////////////////////////////////////////
	|	КОГДА
	|		НЕ ВтЧастичноВНаличии.Ссылка ЕСТЬ NULL
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовКлиентов.ОжидаетсяОбеспечение)
	|// ГОТОВ К ОТГРУЗКЕ //////////////////////////////////////////////////////////
	|	КОГДА
	|		НЕ ВТОбеспечениеЗаказа.ВсеОтгрузить
	|			И (ДокументЗаказКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоставкаПодПринципала)
	|					И НЕ ДокументЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.Закрыт)
	|				ИЛИ НЕ ДокументЗаказКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоставкаПодПринципала))
	|			ИЛИ ВТРасхожденияОрдерНакладная.ТребуетсяОрдер
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовКлиентов.ГотовКОтгрузке)
	|// В ПРОЦЕССЕ ОТГРУЗКИ //////////////////////////////////////////////////////
	|	КОГДА
	|		(ДокументЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОтгрузке)
	|			ИЛИ ДокументЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОбеспечению))
	|		И (ЕСТЬNULL(РасчетыСКлиентамиОстатки.КОплатеРасход, 0) >= ДокументЗаказКлиента.СуммаПредоплатыДоОтгрузки + ДокументЗаказКлиента.СуммаАвансаДоОбеспечения
	#Удаление
	|		ИЛИ НЕ ДокументЗаказКлиента.ПорядокРасчетов В (ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказам), ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)))
	#КонецУдаления
	#Вставка
	//++РС Консалт: Минаков А.С. Задача 23304
	|		)
	//++РС Консалт: Минаков А.С. Задача 23304
	#КонецВставки
	|		И (ЕСТЬNULL(ЗаказыКлиентовОстатки.КОформлениюКонечныйОстаток, 0) <> 0 
	|			ИЛИ ЕСТЬNULL(ЗаказыКлиентовОстатки.ЗаказаноКонечныйОстаток, 0) <> 0
	|			ИЛИ ЕСТЬNULL(ТоварыКОтгрузкеОстатки.КОтгрузкеОстаток, 0) <> 0)
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовКлиентов.ВПроцессеОтгрузки)
	|// ОЖИДАЕТСЯ ОПЛАТА ПОСЛЕ ОТГРУЗКИ /////////////////////////////////////////
	|	КОГДА
	#Вставка
	//++РС Консалт: Минаков А.С. Задача 23304
	|		ИСТИНА
	//++РС Консалт: Минаков А.С. Задача 23304
	#КонецВставки
	#Удаление
	|		(ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказам)
	|			ИЛИ ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным))
	#КонецУдаления
	|		И (ДокументЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОтгрузке)
	|		ИЛИ ДокументЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОбеспечению))
	|		И ДокументЗаказКлиента.СуммаДокумента - ДокументЗаказКлиента.СуммаАвансаДоОбеспечения - ДокументЗаказКлиента.СуммаПредоплатыДоОтгрузки > 0 
	|		И ЕСТЬNULL(ЗаказыКлиентовОстатки.КОформлениюКонечныйОстаток, 0) = 0
	#Удаление
	|		И ЕСТЬNULL(РасчетыСКлиентамиОстатки.КОплатеКонечныйОстаток, 0) > 0
	#КонецУдаления
	#Вставка
	//++РС Консалт: Минаков А.С. Задача 23304
	|		И (ЕСТЬNULL(РасчетыСКлиентамиОстатки.КОплатеКонечныйОстаток, 0) > 0 ИЛИ НЕ ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказам) И (ЕСТЬNULL(ОплаченоПоЗаказамПрочиеПорядкиРасчетов.КОплатеРасход, 0) * 100 / ДокументЗаказКлиента.СуммаДокумента) < 100)
	//++РС Консалт: Минаков А.С. Задача 23304
	#КонецВставки
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовКлиентов.ОжидаетсяОплатаПослеОтгрузки)
	|// ГОТОВ К ЗАКРЫТИЮ ////////////////////////////////////////////////////////
	|	КОГДА
	|		ДокументЗаказКлиента.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.Закрыт) И &КонтролироватьЗакрытиеЗаказа
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовКлиентов.ГотовКЗакрытию)
	|// ЗАКРЫТ //////////////////////////////////////////////////////////////////
	|	КОГДА
	|		ДокументЗаказКлиента.Статус В
	|				(ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОбеспечению), 
	|				ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОтгрузке),
	|				ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.Закрыт))
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовКлиентов.Закрыт)
	|КОНЕЦ КАК Состояние,
	|// РЕЗЕРВ ПРЕВЫШАЕТ ОСТАТКИ ////////////////////////////////////////////////////
	|	НЕ ВтРезервПревышаетОстатки.Ссылка ЕСТЬ NULL КАК РезервПревышаетОстатки,
	|ВЫБОР
	|// НЕ ПРОВЕДЕН /////////////////////////////////////////////////////////////
	|	КОГДА
	|		НЕ ДокументЗаказКлиента.Проведен
	|	ТОГДА
	|		ДАТАВРЕМЯ(1,1,1)
	|// ДАТА СОГЛАСОВАНИЯ ///////////////////////////////////////////////////////
	|	КОГДА
	|		ДокументЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.НеСогласован)
	|	ТОГДА
	|		ДокументЗаказКлиента.ДатаСогласования
	|// ДАТА АВАНСА /////////////////////////////////////////////////////////////
	|	КОГДА
	#Вставка
	//++РС Консалт: Минаков А.С. Задача 23304
	|		ИСТИНА
	//++РС Консалт: Минаков А.С. Задача 23304
	#КонецВставки
	#Удаление
	|		(ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказам)
	|			ИЛИ ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным))
	#КонецУдаления
	|		И ДокументЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОбеспечению)
	|		И ДокументЗаказКлиента.СуммаАвансаДоОбеспечения > 0
	|		И ЕСТЬNULL(РасчетыСКлиентамиОстатки.КОплатеРасход, 0) < ДокументЗаказКлиента.СуммаАвансаДоОбеспечения
	|	ТОГДА
	|		ДатыАктуальностиРасчетов.ДатаАктуальности
	|// ДАТА ПРЕДОПЛАТЫ /////////////////////////////////////////////////////////
	|	КОГДА
	#Вставка
	//++РС Консалт: Минаков А.С. Задача 23304
	|		ИСТИНА
	//++РС Консалт: Минаков А.С. Задача 23304
	#КонецВставки
	#Удаление
	|		(ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказам)
	|			ИЛИ ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным))
	#КонецУдаления
	|		И ДокументЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОбеспечению)
	|		И ДокументЗаказКлиента.СуммаПредоплатыДоОтгрузки > 0
	|		И ЕСТЬNULL(РасчетыСКлиентамиОстатки.КОплатеРасход, 0) < ДокументЗаказКлиента.СуммаПредоплатыДоОтгрузки + ДокументЗаказКлиента.СуммаАвансаДоОбеспечения
	|	ТОГДА
	|		ДатыАктуальностиРасчетов.ДатаАктуальности
	|// ДАТА ОТГРУЗКИ ///////////////////////////////////////////////////////////
	|	КОГДА
	|		(ДокументЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОбеспечению)
	|			ИЛИ ДокументЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОтгрузке))
	|		И ДокументЗаказКлиента.СуммаДокумента > 0
	|		И (ЕСТЬNULL(РасчетыСКлиентамиОстатки.КОплатеРасход, 0) >= ДокументЗаказКлиента.СуммаПредоплатыДоОтгрузки + ДокументЗаказКлиента.СуммаАвансаДоОбеспечения
	#Удаление
	|			ИЛИ НЕ ДокументЗаказКлиента.ПорядокРасчетов В (ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказам), ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)))
	#КонецУдаления
	#Вставка
	//++РС Консалт: Минаков А.С. Задача 23304
	|		)
	//++РС Консалт: Минаков А.С. Задача 23304
	#КонецВставки
	|		И (ЕСТЬNULL(ЗаказыКлиентовОстатки.СуммаКонечныйОстаток, 0) <> 0 ИЛИ ЕСТЬNULL(ЗаказыКлиентовОстатки.КОформлениюКонечныйОстаток, 0) <> 0)
	|	ТОГДА
	|		ЕСТЬNULL(ДатыОтгрузкиЗаказовКлиентов.МинимальнаяДатаОтгрузки, ДокументЗаказКлиента.ДатаОтгрузки)
	|// ДАТА ОПЛАТЫ ПОСЛЕ ОТГРУЗКИ //////////////////////////////////////////////
	|	КОГДА
	#Вставка
	//++РС Консалт: Минаков А.С. Задача 23304
	|		ИСТИНА
	//++РС Консалт: Минаков А.С. Задача 23304
	#КонецВставки
	#Удаление
	|		(ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказам)
	|			ИЛИ ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным))
	#КонецУдаления
	|		И (ДокументЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОбеспечению)
	|			ИЛИ ДокументЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОтгрузке))
	|		И ДокументЗаказКлиента.СуммаДокумента - ДокументЗаказКлиента.СуммаАвансаДоОбеспечения - ДокументЗаказКлиента.СуммаПредоплатыДоОтгрузки > 0
	|		И ЕСТЬNULL(ЗаказыКлиентовОстатки.КОформлениюКонечныйОстаток, 0) = 0
	|		И ЕСТЬNULL(РасчетыСКлиентамиОстатки.КОплатеКонечныйОстаток, 0) > 0
	|	ТОГДА
	|		ДатыАктуальностиРасчетов.ДатаАктуальности
	|	ИНАЧЕ
	|		ДАТАВРЕМЯ(1,1,1)
	|КОНЕЦ КАК ДатаСобытия,
	|// СУММА ОПЛАТЫ /////////////////////////////////////////////////////////////
	|ВЫБОР
	|	КОГДА
	|		ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказам)
	|		И (ДокументЗаказКлиента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
	|			ИЛИ ДокументЗаказКлиента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи))
	|		И ДокументЗаказКлиента.Проведен
	|		И ДокументЗаказКлиента.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.НеСогласован)
	|		И ДокументЗаказКлиента.СуммаДокумента > 0
	|	ТОГДА
	|		ВЫРАЗИТЬ (ЕСТЬNULL(ОплаченоПоЗаказам.КОплатеРасход, 0) КАК ЧИСЛО(31,2))
	|	КОГДА
	|		ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)
	|		И (ДокументЗаказКлиента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
	|			ИЛИ ДокументЗаказКлиента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи))
	|		И ДокументЗаказКлиента.Проведен
	|		И ДокументЗаказКлиента.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.НеСогласован)
	|		И ДокументЗаказКлиента.СуммаДокумента > 0
	|	ТОГДА
	#Удаление
	|		ВЫРАЗИТЬ (ЕСТЬNULL(ВтДанныеПоРасчетамСКлиентами.ОплатаФакт, 0) КАК ЧИСЛО(31,2))
	#КонецУдаления
	#Вставка
	//++РС Консалт: Минаков А.С. Задача 23304
	|		ВЫРАЗИТЬ (ЕСТЬNULL(ВтДанныеПоРасчетамСКлиентами.ОплатаФакт, 0) + ЕСТЬNULL(ОплаченоПоЗаказамПрочиеПорядкиРасчетов.КОплатеРасход, 0) КАК ЧИСЛО(31,2))
	|	КОГДА
	|		(ДокументЗаказКлиента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
	|			ИЛИ ДокументЗаказКлиента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи))
	|		И ДокументЗаказКлиента.Проведен
	|		И ДокументЗаказКлиента.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.НеСогласован)
	|		И ДокументЗаказКлиента.СуммаДокумента > 0
	|	ТОГДА
	|		ВЫРАЗИТЬ (ЕСТЬNULL(ОплаченоПоЗаказамПрочиеПорядкиРасчетов.КОплатеРасход, 0) КАК ЧИСЛО(31,2))		
	//++РС Консалт: Минаков А.С. Задача 23304
	#КонецВставки
	|	ИНАЧЕ
	|		0
	|КОНЕЦ КАК СуммаОплаты,
	|// ПРОЦЕНТ ОПЛАТЫ ///////////////////////////////////////////////////////////
	|ВЫБОР
	|	КОГДА
	|		ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказам)
	|		И (ДокументЗаказКлиента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
	|			ИЛИ ДокументЗаказКлиента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи))
	|		И ДокументЗаказКлиента.Проведен
	|		И ДокументЗаказКлиента.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.НеСогласован)
	|		И ДокументЗаказКлиента.СуммаДокумента > 0
	|	ТОГДА
	|		ВЫРАЗИТЬ ((ЕСТЬNULL(ОплаченоПоЗаказам.КОплатеРасход, 0)) * 100 / ДокументЗаказКлиента.СуммаДокумента КАК ЧИСЛО(20, 10))
	|	КОГДА
	|		ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)
	|		И (ДокументЗаказКлиента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
	|			ИЛИ ДокументЗаказКлиента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи))
	|		И ДокументЗаказКлиента.Проведен
	|		И ДокументЗаказКлиента.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.НеСогласован)
	|		И ДокументЗаказКлиента.СуммаДокумента > 0
	|	ТОГДА
	#Удаление
	|		ВЫРАЗИТЬ ((ЕСТЬNULL(ВтДанныеПоРасчетамСКлиентами.ОплатаФакт, 0)) * 100 / ДокументЗаказКлиента.СуммаДокумента КАК ЧИСЛО(20, 10))
	#КонецУдаления
	#Вставка
	//++РС Консалт: Минаков А.С. Задача 23304
	|		ВЫРАЗИТЬ ((ЕСТЬNULL(ВтДанныеПоРасчетамСКлиентами.ОплатаФакт, 0) + ЕСТЬNULL(ОплаченоПоЗаказамПрочиеПорядкиРасчетов.КОплатеРасход, 0)) * 100 / ДокументЗаказКлиента.СуммаДокумента КАК ЧИСЛО(20, 10))
	|	КОГДА
	|		(ДокументЗаказКлиента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
	|			ИЛИ ДокументЗаказКлиента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи))
	|		И ДокументЗаказКлиента.Проведен
	|		И ДокументЗаказКлиента.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.НеСогласован)
	|		И ДокументЗаказКлиента.СуммаДокумента > 0
	|	ТОГДА
	|		ВЫРАЗИТЬ ((ЕСТЬNULL(ОплаченоПоЗаказамПрочиеПорядкиРасчетов.КОплатеРасход, 0)) * 100 / ДокументЗаказКлиента.СуммаДокумента КАК ЧИСЛО(20, 10))		
	//++РС Консалт: Минаков А.С. Задача 23304
	#КонецВставки
	|	ИНАЧЕ
	|		0
	|КОНЕЦ КАК ПроцентОплаты,
	|// СУММА ОТГРУЗКИ ///////////////////////////////////////////////////////////
	|ВЫБОР
	|	КОГДА
	|		ДокументЗаказКлиента.Проведен
	|		И ДокументЗаказКлиента.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.НеСогласован)
	#Удаление
	|		И (ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказам)
	|			ИЛИ ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным))
	#КонецУдаления
	|		И ЕСТЬNULL(РасчетыСКлиентамиОстатки.КОтгрузкеПриход, 0) > 0
	|		И ДокументЗаказКлиента.СуммаДокумента > 0
	|	ТОГДА
	|		ЕСТЬNULL(РасчетыСКлиентамиОстатки.КОтгрузкеПриход, 0)
	|	ИНАЧЕ
	|		0
	|КОНЕЦ КАК СуммаОтгрузки,
	|// ПРОЦЕНТ ОТГРУЗКИ /////////////////////////////////////////////////////////
	|ВЫБОР
	|	КОГДА
	|		ДокументЗаказКлиента.Проведен
	|		И ДокументЗаказКлиента.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.НеСогласован)
	#Удаление
	|		И (ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказам)
	|			ИЛИ ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным))
	#КонецУдаления
	|		И ЕСТЬNULL(ЗаказыКлиентовОстатки.СуммаРасход, 0) > 0
	|		И ДокументЗаказКлиента.СуммаДокумента > 0
	|	ТОГДА
	|		ВЫРАЗИТЬ((ЕСТЬNULL(ЗаказыКлиентовОстатки.СуммаРасходСУчетомМерныхТоваров, 0) - ДокументЗаказКлиента.СуммаВозвратнойТары) * 100 / ДокументЗаказКлиента.СуммаДокумента КАК ЧИСЛО(20, 10))
	|	ИНАЧЕ 0
	|КОНЕЦ КАК ПроцентОтгрузки,
	|// ДОЛГ (+ НАМ ДОЛЖНЫ, - МЫ ДОЛЖНЫ)//////////////////////////////////////////
	|ВЫБОР
	|	КОГДА
	|		ДокументЗаказКлиента.Проведен
	|		И ((ДокументЗаказКлиента.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.НеСогласован)
	|		И ДокументЗаказКлиента.СуммаДокумента > 0)
	|		И (ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказам)
	|			ИЛИ ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)))
	|	ТОГДА
	|		ВЫРАЗИТЬ (ЕСТЬNULL(РасчетыСКлиентамиОстатки.СуммаКонечныйОстаток, 0) КАК ЧИСЛО(31,2))
	|	ИНАЧЕ
	|		0
	|КОНЕЦ КАК СуммаДолга,
	|ВЫБОР
	|	КОГДА
	|		(ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказам)
	|			ИЛИ ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным))
	|		И ДокументЗаказКлиента.Проведен
	|		И ДокументЗаказКлиента.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.НеСогласован)
	|		И ДокументЗаказКлиента.СуммаДокумента > 0
	|	ТОГДА
	|		ВЫРАЗИТЬ((ВЫБОР КОГДА ЕСТЬNULL(РасчетыСКлиентамиОстатки.СуммаКонечныйОстаток, 0) > 0 ТОГДА
	|			ЕСТЬNULL(РасчетыСКлиентамиОстатки.СуммаКонечныйОстаток, 0)
	|		ИНАЧЕ
	|			ЕСТЬNULL(-РасчетыСКлиентамиОстатки.СуммаКонечныйОстаток, 0)
	|		КОНЕЦ
	|		* 100
	|		/ ДокументЗаказКлиента.СуммаДокумента) КАК ЧИСЛО(20, 10))
	|	ИНАЧЕ
	|		0
	|КОНЕЦ КАК ПроцентДолга,
	|// РАСХОЖДЕНИЯ ОРДЕР-НАКЛАДНАЯ//////////////////////////////////////////
	|ВЫБОР
	|	КОГДА
	|		ДокументЗаказКлиента.Проведен
	|		И ДокументЗаказКлиента.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.НеСогласован)
	|		И ДокументЗаказКлиента.СуммаДокумента > 0
	|	ТОГДА
	|		ЕСТЬNULL(ВТРасхожденияОрдерНакладная.ЕстьРасхожденияОрдерНакладная, ЛОЖЬ)
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ЕстьРасхожденияОрдерНакладная,
	|//ССЫЛКА НА ЗАКАЗ///////////////////////////////////////////////////////
	|	ДокументЗаказКлиента.Ссылка КАК Заказ
	|ИЗ
	|	Документ.ЗаказКлиента КАК ДокументЗаказКлиента
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.РасчетыСКлиентами.ОстаткиИОбороты(,,,,ОбъектРасчетов В (
	|		ВЫБРАТЬ ОбъектыРасчетов.ОбъектРасчетов ИЗ ОбъектыРасчетов)
	|		И АналитикаУчетаПоПартнерам.Организация = ОбъектРасчетов.Организация) КАК РасчетыСКлиентамиОстатки
	|ПО
	|	ДокументЗаказКлиента.ОбъектРасчетов = РасчетыСКлиентамиОстатки.ОбъектРасчетов 
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ОплаченоПоЗаказам КАК ОплаченоПоЗаказам
	|ПО
	|	ДокументЗаказКлиента.ОбъектРасчетов = ОплаченоПоЗаказам.ОбъектРасчетов
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВТЗаказыКлиентовОстатки КАК ЗаказыКлиентовОстатки
	|ПО
	|	ДокументЗаказКлиента.Ссылка = ЗаказыКлиентовОстатки.ЗаказКлиента
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВТТоварыКОтгрузкеОстатки КАК ТоварыКОтгрузкеОстатки
	|ПО
	|	ДокументЗаказКлиента.Ссылка = ТоварыКОтгрузкеОстатки.ЗаказКлиента
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ДатыАктуальностиЗаказовКлиентов КАК ДатыАктуальностиРасчетов
	|ПО
	|	ДокументЗаказКлиента.ОбъектРасчетов = ДатыАктуальностиРасчетов.ОбъектРасчетов
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ДатыОтгрузкиЗаказовКлиентов КАК ДатыОтгрузкиЗаказовКлиентов
	|ПО
	|	ДокументЗаказКлиента.Ссылка = ДатыОтгрузкиЗаказовКлиентов.ЗаказКлиента
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВТОбеспечениеЗаказа КАК ВТОбеспечениеЗаказа
	|ПО
	|	ВТОбеспечениеЗаказа.Ссылка = ДокументЗаказКлиента.Ссылка
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВтЧастичноВНаличии КАК ВтЧастичноВНаличии
	|ПО
	|	ВтЧастичноВНаличии.Ссылка = ДокументЗаказКлиента.Ссылка
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВтРезервПревышаетОстатки КАК ВтРезервПревышаетОстатки
	|ПО
	|	ВтРезервПревышаетОстатки.Ссылка = ДокументЗаказКлиента.Ссылка
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВТРасхожденияОрдерНакладная КАК ВТРасхожденияОрдерНакладная
	|ПО
	|	ДокументЗаказКлиента.Ссылка = ВТРасхожденияОрдерНакладная.ЗаказКлиента
	|ЛЕВОЕ СОЕДИНЕНИЕ ВтДанныеПоРасчетамСКлиентами КАК ВтДанныеПоРасчетамСКлиентами
	|		ПО ДокументЗаказКлиента.ОбъектРасчетов = ВтДанныеПоРасчетамСКлиентами.ОбъектРасчетов
	#Вставка
	//++РС Консалт: Минаков А.С. Задача 23304
	|ЛЕВОЕ СОЕДИНЕНИЕ ОплаченоПоЗаказамПрочиеПорядкиРасчетов КАК ОплаченоПоЗаказамПрочиеПорядкиРасчетов
	|		ПО ДокументЗаказКлиента.Ссылка = ОплаченоПоЗаказамПрочиеПорядкиРасчетов.ЗаказКлиента 
	//++РС Консалт: Минаков А.С. Задача 23304
	#КонецВставки
	|ГДЕ
	|	ДокументЗаказКлиента.Ссылка В (&МассивЗаказов)
	|	И &ИспользоватьРасширенныеВозможностиЗаказаКлиента
	|
	|";
	Возврат ТекстЗапроса;

КонецФункции

&ИзменениеИКонтроль("ЗаполнитьИменаРеквизитовПоХозяйственнойОперации")
Процедура РСК_ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(ХозяйственнаяОперация, МассивВсехРеквизитов, МассивРеквизитовОперации)

	МассивВсехРеквизитов = Новый Массив;

	МассивВсехРеквизитов.Добавить("ТребуетсяЗалогЗаТару");

	МассивВсехРеквизитов.Добавить("Товары.ПроцентРучнойСкидки");
	МассивВсехРеквизитов.Добавить("Товары.СуммаРучнойСкидки");
	МассивВсехРеквизитов.Добавить("Товары.ПроцентАвтоматическойСкидки");
	МассивВсехРеквизитов.Добавить("Товары.СуммаАвтоматическойСкидки");

	МассивРеквизитовОперации = Новый Массив;

	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиенту
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности
		#Вставка 
		//++ Конарев И.И. задача 257831: расчет скидок для хоз.операции "передача на хранение с правом продажи"
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи
		#КонецВставки
		Или Не ЗначениеЗаполнено(ХозяйственнаяОперация) Тогда

		МассивРеквизитовОперации.Добавить("ТребуетсяЗалогЗаТару");

		МассивРеквизитовОперации.Добавить("Товары.ПроцентРучнойСкидки");
		МассивРеквизитовОперации.Добавить("Товары.СуммаРучнойСкидки");
		МассивРеквизитовОперации.Добавить("Товары.ПроцентАвтоматическойСкидки");
		МассивРеквизитовОперации.Добавить("Товары.СуммаАвтоматическойСкидки");

	КонецЕсли;

КонецПроцедуры

