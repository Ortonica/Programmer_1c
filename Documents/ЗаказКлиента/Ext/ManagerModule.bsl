
&ИзменениеИКонтроль("ПараметрыВзаиморасчеты")
Функция РСК_ПараметрыВзаиморасчеты(ДанныеЗаполнения)

	Если ОбщегоНазначенияУТКлиентСервер.АвторизованВнешнийПользователь() Тогда 
		Возврат ПараметрыВзаиморасчетыСамообслуживание(ДанныеЗаполнения);
	КонецЕсли;

	Если ОбщегоНазначения.ЗначениеСсылочногоТипа(ДанныеЗаполнения) Тогда
		СтруктураДанныеЗаполнения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ДанныеЗаполнения, 
		"ХозяйственнаяОперация");
		ХозяйственнаяОперация = СтруктураДанныеЗаполнения.ХозяйственнаяОперация;
	ИначеЕсли ДанныеЗаполнения = Неопределено Тогда
		ХозяйственнаяОперация = Неопределено;
	Иначе
		ХозяйственнаяОперация = ДанныеЗаполнения.ХозяйственнаяОперация;
	КонецЕсли;

	СтруктураПараметров = ВзаиморасчетыСервер.ПараметрыМеханизма();

	#Область ОбязательныеПараметры
	
	СтруктураПараметров.ЭтоЗаказ                         = Истина;
	СтруктураПараметров.ТипРасчетов                      = Перечисления.ТипыРасчетовСПартнерами.РасчетыСКлиентом;
	СтруктураПараметров.ИзменяетПланОплаты               = (ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиенту
	ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности
	ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоставкаПодПринципала)
	И Константы.ИспользоватьРасширенныеВозможностиЗаказаКлиента.Получить();
	#Вставка
	//++РС Консалт Назаров М.Ю. 25 июля 2022 г. 6:12:42 
	// Данная вставка позволяет заполнять этапы оплаты заказа                  
	СтруктураПараметров.ИзменяетПланОплаты               = (ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиенту 
	Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияЧерезКомиссионера
	ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности
	ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоставкаПодПринципала)
	И Константы.ИспользоватьРасширенныеВозможностиЗаказаКлиента.Получить();
	//--РС Консалт Назаров М.Ю. 25 июля 2022 г. 6:12:42
	#КонецВставки
	СтруктураПараметров.ИзменяетПланОтгрузкиПоставки     = Истина;
	
	#КонецОбласти
	
	#Область НеобязательныеПараметры
	
	СтруктураПараметров.КурсЧислитель                    = "";
	СтруктураПараметров.КурсЗнаменатель                  = "";
	СтруктураПараметров.ГрафикОплаты                     = "Объект.ГрафикОплаты";
	
	СтруктураПараметров.ПутьКДаннымТЧ                    = "Объект.Товары";
	
	СтруктураПараметров.Менеджер                         = "Объект.Менеджер";
	СтруктураПараметров.БанковскийСчетОрганизации        = "Объект.БанковскийСчет";
	СтруктураПараметров.СуммаДокументаФорма              = "Форма.СуммаЗаказаноСЗалоговойТарой";
	СтруктураПараметров.СуммаЗалогаЗаТаруФорма           = "Форма.СуммаЗалогаЗаТару";
	СтруктураПараметров.ОбъектРасчетов                   = "Объект.ОбъектРасчетов";

	СтруктураПараметров.ЭлементыФормы.ЗачетОплаты        = "ЗачетОплатыФорма";
	СтруктураПараметров.ЭлементыФормы.ГруппаФинансовогоУчета = "ГруппаФинансовогоУчета";
	СтруктураПараметров.ЭлементыФормы.НаправлениеДеятельности = "НаправлениеДеятельности";
	СтруктураПараметров.НомерВходящегоДокумента          = "Объект.НомерПоДаннымКлиента";
	СтруктураПараметров.ДатаВходящегоДокумента           = "Объект.ДатаПоДаннымКлиента";


	#КонецОбласти

	#Область ГрафикПлановойОплатыИДатаПлатежа

	СтруктураПараметров.ПутьКДаннымТЧЭтапыОплаты         = "Объект.ЭтапыГрафикаОплаты";
	СтруктураПараметров.ДатаСогласования                 = "Объект.ДатаСогласования";
	СтруктураПараметров.ДатаОтгрузки                     = "Объект.Товары.ДатаОтгрузки";
	СтруктураПараметров.ЭлементыФормы.НадписьЭтапы       = "ДекорацияЭтапыОплаты";
	СтруктураПараметров.НадписьЭтапыОплаты               = "Форма.НадписьЭтапыОплаты";
	СтруктураПараметров.ЗаказКакСчет                     = НЕ Константы.ИспользоватьРасширенныеВозможностиЗаказаКлиента.Получить();
	СтруктураПараметров.ЕстьДатаПереходаПраваСобственности = ПолучитьФункциональнуюОпцию("ИспользоватьОтгрузкуБезПереходаПраваСобственности");
	СтруктураПараметров.ИсточникСуммТабличнаяЧасть       = Истина;

	#КонецОбласти

	#Область СостояниеВзаиморасчетов

	СтруктураПараметров.ЭлементыФормы.НадписьРасчеты                   = "ДекорацияСостояниеРасчетов";

	#КонецОбласти

	#Область ОграниченияЗадолженностиПоДоговору

	СтруктураПараметров.ЭлементыФормы.ОграничениеЗадолженностиТекст    = "ДекорацияОграничениеЗадолженности";
	СтруктураПараметров.ЭлементыФормы.ОграничениеЗадолженностиКартинка = "КартинкаОтгрузкаЗапрещена";

	#КонецОбласти

	Возврат СтруктураПараметров;

КонецФункции

&ИзменениеИКонтроль("ТекстЗапросаРеквизитыДоставки")
Функция РСК_ТекстЗапросаРеквизитыДоставки()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Шапка.Номер             КАК Номер,
	|	Шапка.Проведен          КАК Проведен,
	|	Шапка.Ссылка            КАК Ссылка,
	|	Шапка.Дата              КАК Дата,
	|	Шапка.Партнер           КАК ПолучательОтправитель,
	|	Шапка.ПеревозчикПартнер КАК Перевозчик,
	#Удаление
	|	ВЫБОР КОГДА (Шапка.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 22756
	|	ВЫБОР КОГДА (Шапка.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика),ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоКлиента),ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.РСК_ПеревозчикДоПВЗ))
	#КонецВставки
	|			И НЕ &ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками)
	|			ИЛИ Шапка.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ДоКлиентаКурьером)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.Самовывоз)
	|		ИНАЧЕ Шапка.СпособДоставки
	|	КОНЕЦ                   КАК СпособДоставки,
	|	Шапка.ЗонаДоставки      КАК Зона,
	|
	|	ВЫБОР КОГДА СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
	|		ТОГДА Шапка.АдресДоставкиПеревозчика
	|		ИНАЧЕ Шапка.АдресДоставки
	|		КОНЕЦ               КАК Адрес,
	|
	|	ВЫБОР КОГДА СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу)
	|		ТОГДА Шапка.АдресДоставкиПеревозчикаЗначенияПолей
	|		ИНАЧЕ Шапка.АдресДоставкиЗначенияПолей
	|		КОНЕЦ               КАК АдресЗначенияПолей,
	|
	|	Шапка.ВремяДоставкиС    КАК ВремяС,
	|	Шапка.ВремяДоставкиПо   КАК ВремяПо,
	|	Шапка.ДополнительнаяИнформацияПоДоставке
	|		                    КАК ДополнительнаяИнформация,
	|	Т.Склад                 КАК Склад,
	|	Т.ДоставитьПолностью    КАК ДоставитьПолностью,
	|	Шапка.ОсобыеУсловияПеревозки  КАК ОсобыеУсловияПеревозки,
	|	Шапка.ОсобыеУсловияПеревозкиОписание КАК ОсобыеУсловияПеревозкиОписание,
	|	Шапка.Соглашение.РазбиватьРасходныеОрдераПоРаспоряжениям КАК РазбиватьРасходныеОрдераПоРаспоряжениям
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		Т.Ссылка КАК Ссылка,
	|		Т.Склад КАК Склад,
	|		МИНИМУМ(Т.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить))
	|				КАК ДоставитьПолностью
	|	ИЗ
	|		Документ.ЗаказКлиента.Товары КАК Т
	|	ГДЕ
	|		Т.Ссылка В (&Ссылки)
	|		И Т.Номенклатура.ТипНоменклатуры В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Т.Ссылка,
	|		Т.Склад
	|	
	|	ИМЕЮЩИЕ
	|		МАКСИМУМ(Т.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить)) = ИСТИНА
	|	) КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК Шапка
	|		ПО (Шапка.Ссылка = Т.Ссылка)";

	Возврат ТекстЗапроса;

КонецФункции

