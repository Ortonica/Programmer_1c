
&После("ОбработкаПроведения")
Процедура РСК_ОбработкаПроведения(Отказ, РежимПроведения)
	
	//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17533
	//e1cib/data/Документ.Задание?ref=95dd04ffb85739e943f42a5694c6c285
	ПроведениеПоРегиструСостоянияЗаказовПоВыдачеТСР(Отказ);
	//-- КонецЗадачи 17533
	
	//++ РС Консалт: Минаков А.С. Задача 20226
	УдалениеПроводокПоЛишнимРегистрам(Отказ)	
	//++ РС Консалт: Минаков А.С. Задача 20226
	
КонецПроцедуры

Процедура ПроведениеПоРегиструСостоянияЗаказовПоВыдачеТСР(Отказ)
	//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17533
	//e1cib/data/Документ.Задание?ref=95dd04ffb85739e943f42a5694c6c285

	Движения.РСК_СостояниеЗаказовКлиентовПоВыдаче.Очистить();
	Движения.РСК_СостояниеЗаказовКлиентовПоВыдаче.Записывать = Истина;
	
	Если НЕ реа_ДляВыдачи Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Стр Из Товары Цикл
		Если Стр.Отменено Тогда
			Продолжить;
		КонецЕсли;
		Движение = Движения.РСК_СостояниеЗаказовКлиентовПоВыдаче.ДобавитьПриход();
		Движение.Период = Дата;
		Движение.Заказ = Ссылка;
		Движение.ТСР = Стр.НоменклатураПартнера;
		Движение.Номенклатура = Стр.Номенклатура;
		Движение.Характеристика = Стр.Характеристика;
		Движение.Серия = Стр.Серия;
		Движение.КСозданию = Стр.КоличествоУпаковок;
		Движение.Цена = Стр.Цена;
	КонецЦикла;

	//-- КонецЗадачи 17533
КонецПроцедуры

&ИзменениеИКонтроль("ПередЗаписью")
Процедура РСК_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);

	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);

	Если РежимЗаписи = РежимЗаписиДокумента.Проведение 
		И ПолучитьФункциональнуюОпцию("ИспользоватьАвтоматическиеСкидкиВПродажах")
		И Не СкидкиРассчитаны
		И ПродажиСервер.ОперацииПередачиТоваров().Найти(ХозяйственнаяОперация) = Неопределено Тогда

		Отказ = Истина;

		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'В документе %1 не рассчитаны автоматические скидки (наценки). Проведение невозможно. Для расчёта автоматических скидок (наценок) проведите документ из формы документа.';
		|en = 'Discounts/markups are not calculated in the %1document. Posting is impossible. To calculate discounts/markups, post the document from the document form.'"),
		Ссылка);

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		ТекстОшибки,
		Ссылка,
		,
		,
		Отказ);

	КонецЕсли;

	НоменклатураСервер.ОкруглитьКоличествоШтучныхТоваров(ЭтотОбъект, РежимЗаписи);

	ЗаказыСервер.УстановитьКлючВСтрокахТабличнойЧасти(ЭтотОбъект, "Товары");

	ОперацииПередачи = ПродажиСервер.ОперацииПередачиТоваров();

	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоставкаПодПринципала Тогда
		ВозвращатьМногооборотнуюТару = Ложь;
		ТребуетсяЗалогЗаТару = Ложь;
	КонецЕсли;

	Если (ОперацииПередачи.Найти(ХозяйственнаяОперация) <> Неопределено
		Или Не ВернутьМногооборотнуюТару)
		И ТребуетсяЗалогЗаТару Тогда

		ТребуетсяЗалогЗаТару = Ложь;

	КонецЕсли;

	СуммаДокумента = ПолучитьСуммуЗаказанныхСтрок();
	СуммаВозвратнойТары = ПолучитьСуммуВозвратнойТары();

	Если ЭтоНовый() И НЕ ЗначениеЗаполнено(Номер) Тогда
		УстановитьНовыйНомер();
	КонецЕсли;

	ДокументСогласован = Согласован;

	ОбщегоНазначенияУТ.ИзменитьПризнакСогласованностиДокумента(
	ЭтотОбъект,
	РежимЗаписи,
	Перечисления.СтатусыЗаказовКлиентов.НеСогласован);

	// Установим дату согласования, если документ согласован
	Если Не ДокументСогласован И Согласован Тогда
		ДатаСогласования = ТекущаяДатаСеанса();
		ВзаиморасчетыСервер.ПриИзмененииДатыСогласования(ЭтотОбъект);
	КонецЕсли;
   	#Вставка 
	//++РС Консалт Петрова Мария 12.12.2022  
	//e1cib/data/Документ.Задание?ref=997e8f29fbefd9fa4bfcb8fe7f427cc7
	Если ПорядокРасчетов <> Перечисления.ПорядокРасчетов.ПоНакладным
		И ПорядокРасчетов <> Перечисления.ПорядокРасчетов.ПоЗаказамНакладным Тогда
		ИдентификаторПлатежа = ОбщегоНазначенияУТ.ПолучитьУникальныйИдентификаторПлатежа(ЭтотОбъект);
	Иначе
		ИдентификаторПлатежа = Неопределено;
	КонецЕсли;
	//--РС Консалт Петрова Мария 12.12.2022
   	#КонецВставки

	ВзаиморасчетыСервер.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи);

	ГрафикИсполненияВДоговоре = Ложь;
	Если ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПоДоговорамКонтрагентов
		И ЗначениеЗаполнено(Договор) Тогда
		ГрафикИсполненияВДоговоре = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ЗаданГрафикИсполнения");
	КонецЕсли;

	Если ОперацииПередачи.Найти(ХозяйственнаяОперация) <> Неопределено
		Или ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПоНакладным
		Или ГрафикИсполненияВДоговоре Тогда

		СуммаАвансаДоОбеспечения = 0;
		СуммаПредоплатыДоОтгрузки = 0;

	Иначе

		ПродажиСервер.ЗаполнитьСуммыАвансаПредоплаты(ЭтотОбъект);

	КонецЕсли;

	Если Не НеОтгружатьЧастями Тогда
		НоваяДатаОтгрузки = Дата(1,1,1);

		Если Товары.Количество() > 0 Тогда

			Если Статус = Перечисления.СтатусыЗаказовКлиентов.КОбеспечению
				ИЛИ Статус = Перечисления.СтатусыЗаказовКлиентов.КОтгрузке
				ИЛИ Статус = Перечисления.СтатусыЗаказовКлиентов.Закрыт Тогда

				ПараметрыОтбора = Новый Структура;
				ПараметрыОтбора.Вставить("Отменено", Ложь);
				СтрокиКОбеспечению = Товары.НайтиСтроки(ПараметрыОтбора);

				Если СтрокиКОбеспечению.Количество() > 0 Тогда

					ТаблицаСтрокКОбеспечению = Товары.Выгрузить(СтрокиКОбеспечению, "ДатаОтгрузки");
					ТаблицаСтрокКОбеспечению.Сортировать("ДатаОтгрузки Возр");
					НоваяДатаОтгрузки = ТаблицаСтрокКОбеспечению[0].ДатаОтгрузки;

				КонецЕсли;

			КонецЕсли;

		КонецЕсли;

		ДатаОтгрузки = НоваяДатаОтгрузки;
	Иначе
		ОбеспечениеВДокументахСервер.ЗаполнитьДатыОтгрузкиВТаблице(ДатаОтгрузки, Товары, "ДатаОтгрузки");
	КонецЕсли;

	// Очистим реквизиты документа не используемые для хозяйственной операции.
	МассивВсехРеквизитов = Новый Массив;
	МассивРеквизитовОперации = Новый Массив;
	Документы.ЗаказКлиента.ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(
	ХозяйственнаяОперация,
	МассивВсехРеквизитов,
	МассивРеквизитовОперации);
	ДенежныеСредстваСервер.ОчиститьНеиспользуемыеРеквизиты(
	ЭтотОбъект,
	МассивВсехРеквизитов,
	МассивРеквизитовОперации);

	МассивРеквизитов = Новый Массив;
	Если ЗначениеЗаполнено(ФормаОплаты) И Не (ФормаОплаты = Перечисления.ФормыОплаты.Наличная) Тогда
		МассивРеквизитов.Добавить("Касса");
	КонецЕсли;

	ДенежныеСредстваСервер.ОчиститьНеиспользуемыеРеквизиты(ЭтотОбъект, МассивРеквизитов, Новый Массив);

	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ЭтотОбъект, НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ЗаказКлиента));

	ШаблонНазначения = Документы.ЗаказКлиента.ШаблонНазначения(ЭтотОбъект);

	РеквизитыДляПроверкиНазначения = "НаправлениеДеятельности,Договор,Партнер";
	Справочники.Назначения.ПроверитьЗаполнитьПередЗаписью(Назначение, ШаблонНазначения, ЭтотОбъект, РеквизитыДляПроверкиНазначения, Отказ);
	
	#Вставка
	//++ РС Консалт: Трофимов Евгений 05.07.2022 Тикет 18125
	//e1cib/data/Документ.Задание?ref=be1fbbe55eefcb6e48f7e06fe823144d
	//Заказ не проводится при указании 1 ТСР с двумя разными номенклатурами
	#КонецВставки
	#Удаление
	НоменклатураПартнеровСервер.ЗаполнитьНоменклатуруПартнераПоНоменклатуреВТаблице(Товары, Партнер);
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		НоменклатураПартнеровСервер.ЗаполнитьПустоеСопоставлениеВНоменклатуреПартнераПоНоменклатуреИБ(Товары, Отказ);
	КонецЕсли;
	#КонецУдаления
	#Вставка
	//-- КонецТикета 18125	
	#КонецВставки
    #Удаление
	Если ПорядокРасчетов <> Перечисления.ПорядокРасчетов.ПоНакладным
		И ПорядокРасчетов <> Перечисления.ПорядокРасчетов.ПоЗаказамНакладным Тогда
		ИдентификаторПлатежа = ОбщегоНазначенияУТ.ПолучитьУникальныйИдентификаторПлатежа(ЭтотОбъект);
	Иначе
		ИдентификаторПлатежа = Неопределено;
	КонецЕсли; 
   	#КонецУдаления
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ОбщегоНазначенияУТ.ЗаполнитьИдентификаторыДокумента(ЭтотОбъект, Метаданные.Документы.ЗаказКлиента.ТабличныеЧасти.Товары.Имя);
	КонецЕсли;

	ЗаказКлиентаЛокализация.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);

	Если ЭтоНовый() И Не ЗначениеЗаполнено(Автор) Тогда
		Автор = Пользователи.АвторизованныйПользователь();
	КонецЕсли;

КонецПроцедуры

&ИзменениеИКонтроль("ОбработкаЗаполнения")
Процедура РСК_ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	Автор = Пользователи.АвторизованныйПользователь();

	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);

	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		ЗаполнитьДокументПоОтбору(ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("СправочникСсылка.Партнеры") Тогда
		ЗаполнитьДокументНаОснованииПартнера(ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("СправочникСсылка.СделкиСКлиентами") Тогда
		ЗаполнитьДокументНаОснованииСделкиПоПродаже(ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("СправочникСсылка.СоглашенияСКлиентами") Тогда
		ЗаполнитьДокументНаОснованииИндивидуальногоСоглашенияСКлиентом(ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ЗаданиеТорговомуПредставителю") Тогда
		ЗаполнитьДокументНаОснованииЗаданияТорговомуПредставителю(ДанныеЗаполнения);
	Иначе
		Продажи.ПриОбработкеЗаполненияЗаказаКлиента(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);
	КонецЕсли;

	ИнициализироватьУсловияПродаж();

	ДополнительныеСвойства.Вставить("НеобходимостьЗаполненияКассыПриФОИспользоватьНесколькоКассЛожь", Ложь);
	ДополнительныеСвойства.Вставить("НеобходимостьЗаполненияСчетаПриФОИспользоватьНесколькоСчетовЛожь", Ложь);
	ОтветственныеЛицаСервер.ЗаполнитьМенеджера(ЭтотОбъект, Ложь);
	ЗаполнениеОбъектовПоСтатистике.ЗаполнитьРеквизитыОбъекта(ЭтотОбъект, ДанныеЗаполнения);

	ЗаказКлиентаЛокализация.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);

	ИнициализироватьДокумент(ДанныеЗаполнения);

	ВзаиморасчетыСервер.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения);

	СкладГруппа = Справочники.Склады.ЭтоГруппаИСкладыИспользуютсяВТЧДокументовПродажи(Склад);
	#Вставка
	//++ РС Консалт: Трофимов Евгений 28.06.2022 Задача 18502
	//e1cib/data/Документ.Задание?ref=8091e09e31ca7a44432d28359e3002e6
	СкладГруппа = Истина;
	//-- КонецЗадачи 18502	
	#КонецВставки
	СкладыСервер.ЗаполнитьСкладыВТабличнойЧасти(Склад, СкладГруппа, Товары, Ложь);

	Приоритет = Справочники.Приоритеты.ПолучитьПриоритетПоУмолчанию(Приоритет);

КонецПроцедуры

&После("ПередЗаписью")
Процедура РСК_ПередЗаписью_Перед(Отказ, РежимЗаписи, РежимПроведения)
	
	//++ РС Консалт: Минаков А.С. Задача 20226		
	Запрос = Новый Запрос( 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Проведен
	|	И РеализацияТоваровУслуг.РеализацияПоЗаказам
	|	И РеализацияТоваровУслуг.ЗаказКлиента = &ЗаказКлиента");
	
	Запрос.УстановитьПараметр("ЗаказКлиента", Ссылка);
	
	ЗаказСоисполнителя = Запрос.Выполнить().Пустой() 
	И ЗначениеЗаполнено(Сделка)
	И СтрНайти(ВРег(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Сделка, "Наименование")), "СОИСП");
	
	ПВХ_ЗаказСоисполнителя = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "РС_ЗаказСоисполнителя");
	НайденнаяСтрока = ЭтотОбъект.ДополнительныеРеквизиты.Найти(ПВХ_ЗаказСоисполнителя, "Свойство");
	Если НайденнаяСтрока = Неопределено Тогда
		НоваяСтрока = ЭтотОбъект.ДополнительныеРеквизиты.Добавить();
		НоваяСтрока.Свойство = ПВХ_ЗаказСоисполнителя;
		НоваяСтрока.Значение = ЗаказСоисполнителя
	Иначе
		НайденнаяСтрока.Значение = ЗаказСоисполнителя
	КонецЕсли;
	
	Если ЗаказСоисполнителя Тогда
		Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
			Проведен = Истина;
			РежимЗаписи = РежимЗаписиДокумента.Запись;
			//++ РС Консалт: Трофимов Евгений 09.11.2022 Задача 21795
			//e1cib/data/Документ.Задание?ref=bbd238c413d0bcdd46a6338b58844d1d
			ПроведениеПоРегиструСостоянияЗаказовПоВыдачеТСР(Отказ);
			Движения.РСК_СостояниеЗаказовКлиентовПоВыдаче.Записать();
			//-- КонецЗадачи 21795
		КонецЕсли
	КонецЕсли;
	//++ РС Консалт: Минаков А.С. Задача 20226
	
КонецПроцедуры

Процедура УдалениеПроводокПоЛишнимРегистрам(Отказ)
	
	//++ РС Консалт: Минаков А.С. Задача 20226
	Если Дата >= '2022.01.01' Или Отказ Тогда
		Возврат
	КонецЕсли;
	
	МассивНужныхРегистров = Новый Массив;
	МассивНужныхРегистров.Добавить("РегистрНакопления.ЗаказыКлиентов");
	МассивНужныхРегистров.Добавить("РегистрНакопления.ТоварыКОтгрузке");
	МассивНужныхРегистров.Добавить("РегистрНакопления.РаспределениеЗапасовДвижения");
	МассивНужныхРегистров.Добавить("РегистрНакопления.ЗапасыИПотребности");
	
	Для Каждого НЗ Из Движения Цикл		
		Если МассивНужныхРегистров.Найти(НЗ.Метаданные().ПолноеИмя()) = Неопределено Тогда
			НЗ.ДополнительныеСвойства.Вставить("РассчитыватьИзменения", Ложь);
			Если НЗ.ДополнительныеСвойства.Свойство("ТаблицыКонтроля") Тогда
				НЗ.ДополнительныеСвойства.Удалить("ТаблицыКонтроля")
			КонецЕсли;
			НЗ.ОбменДанными.Загрузка = Истина;
			НЗ.Очистить();
			НЗ.Записать()
		КонецЕсли		
	КонецЦикла
	//++ РС Консалт: Минаков А.С. Задача 20226
	
КонецПроцедуры


&ИзменениеИКонтроль("ЗаполнитьУсловияПродаж")
Процедура РСК_ЗаполнитьУсловияПродаж(Знач УсловияПродаж)

	Если УсловияПродаж = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Валюта = УсловияПродаж.ВалютаВзаиморасчетов;
	ХозяйственнаяОперация = УсловияПродаж.ХозяйственнаяОперация;

	Если ЗначениеЗаполнено(УсловияПродаж.ГрафикОплаты) Тогда
		ГрафикОплаты = УсловияПродаж.ГрафикОплаты;
	КонецЕсли;

	ЦенаВключаетНДС      		   = УсловияПродаж.ЦенаВключаетНДС;
	ВернутьМногооборотнуюТару 	   = УсловияПродаж.ВозвращатьМногооборотнуюТару;
	СрокВозвратаМногооборотнойТары = УсловияПродаж.СрокВозвратаМногооборотнойТары;
	ТребуетсяЗалогЗаТару 		   = УсловияПродаж.ТребуетсяЗалогЗаТару;
	НаправлениеДеятельности 	   = УсловияПродаж.НаправлениеДеятельности;

	ИзмененаОрганизация = ЗначениеЗаполнено(УсловияПродаж.Организация) И УсловияПродаж.Организация <> Организация;
	ИзмененаФормаОплаты = ЗначениеЗаполнено(УсловияПродаж.ФормаОплаты) И УсловияПродаж.ФормаОплаты <> ФормаОплаты;

	ФормаОплаты = УсловияПродаж.ФормаОплаты;

	Если ИзмененаОрганизация Тогда
		Организация = УсловияПродаж.Организация;
	КонецЕсли;

	Если ИзмененаОрганизация Или ИзмененаФормаОплаты Тогда

		СтруктураПараметров = ДенежныеСредстваСервер.ПараметрыЗаполненияБанковскогоСчетаОрганизацииПоУмолчанию();
		СтруктураПараметров.Организация    			= Организация;
		СтруктураПараметров.НаправлениеДеятельности = НаправлениеДеятельности;
		БанковскийСчет = ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(СтруктураПараметров);

		СтруктураПараметров = ДенежныеСредстваСервер.ПараметрыЗаполненияКассыОрганизацииПоУмолчанию();
		СтруктураПараметров.Организация    			= Организация;
		СтруктураПараметров.НаправлениеДеятельности = НаправлениеДеятельности;
		СтруктураПараметров.ФормаОплаты 			= ФормаОплаты;
		СтруктураПараметров.ФизическоеЛицо			= Курьер;

		Касса  = ЗначениеНастроекПовтИсп.ПолучитьКассуОрганизацииПоУмолчанию(СтруктураПараметров);

	КонецЕсли;
    #Удаление
	Если Не УсловияПродаж.Типовое Тогда  
	#КонецУдаления 
	#Вставка
	Если Не УсловияПродаж.Типовое и НЕ Партнер = Справочники.Партнеры.РозничныйПокупатель и НЕ Партнер.ЮрФизЛицо = Перечисления.КомпанияЧастноеЛицо.ЧастноеЛицо Тогда  //++РС Консалт Петрова Мария 30.11.2022
	#КонецВставки
		Если ЗначениеЗаполнено(УсловияПродаж.Контрагент) Тогда
			Контрагент = УсловияПродаж.Контрагент;
		КонецЕсли;
	КонецЕсли;

	ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Партнер, Контрагент);

	Если Не УсловияПродаж.Типовое Тогда
		Если ЗначениеЗаполнено(УсловияПродаж.КонтактноеЛицо) 
			И НЕ ЗначениеЗаполнено(КонтактноеЛицо) Тогда
			КонтактноеЛицо = УсловияПродаж.КонтактноеЛицо;
		КонецЕсли;
	КонецЕсли;

	ПартнерыИКонтрагенты.ЗаполнитьКонтактноеЛицоПартнераПоУмолчанию(Партнер, КонтактноеЛицо);

	Если УсловияПродаж.ИспользуютсяДоговорыКонтрагентов <> Неопределено И УсловияПродаж.ИспользуютсяДоговорыКонтрагентов Тогда

		Договор = ПродажиСервер.ПолучитьДоговорПоУмолчанию(ЭтотОбъект, ХозяйственнаяОперация, Валюта);

		ПродажиСервер.ЗаполнитьБанковскиеСчетаПоДоговору(Договор, БанковскийСчет, БанковскийСчетКонтрагента);

		Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетДоходовПоНаправлениямДеятельности") Тогда
			НаправленияДеятельностиСервер.ЗаполнитьНаправлениеПоУмолчанию(НаправлениеДеятельности, Соглашение, Договор);
		КонецЕсли;

	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(УсловияПродаж.ИспользуютсяДоговорыКонтрагентов) 
		ИЛИ НЕ УсловияПродаж.ИспользуютсяДоговорыКонтрагентов Тогда
		ОплатаВВалюте = УсловияПродаж.ОплатаВВалюте;
	Иначе
		ОплатаВВалюте = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ОплатаВВалюте");
	КонецЕсли;

	Если ЗначениеЗаполнено(УсловияПродаж.Склад) Тогда
		Склад = УсловияПродаж.Склад;
	КонецЕсли;

	Если ЗначениеЗаполнено(УсловияПродаж.ГруппаФинансовогоУчета) Тогда
		ГруппаФинансовогоУчета = УсловияПродаж.ГруппаФинансовогоУчета;
	КонецЕсли;

	Если ЗначениеЗаполнено(УсловияПродаж.СрокПоставки)
		И ПолучитьФункциональнуюОпцию("ИспользоватьРасширенныеВозможностиЗаказаКлиента")
		И ПолучитьФункциональнуюОпцию("ИспользоватьПострочнуюОтгрузкуВЗаказеКлиента") Тогда

		ДатаНачала = ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса());
		ДатаОтгрузкиВСтроке = ОбщегоНазначенияУТКлиентСервер.РассчитатьДатуОкончанияПериода(ДатаНачала,Перечисления.Периодичность.День, УсловияПродаж.СрокПоставки) + 1;
		Если НеОтгружатьЧастями Тогда
			ДатаОтгрузки = ДатаОтгрузкиВСтроке;
		КонецЕсли;

		Для Каждого СтрокаТЧ Из Товары Цикл
			СтрокаТЧ.ДатаОтгрузки = ДатаОтгрузкиВСтроке;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

