#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

&ИзменениеИКонтроль("ОбработкаЗаполнения")
Процедура РСК_ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОбособленныеПодразделенияВыделенныеНаБаланс") Тогда
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеТоваров;
	КонецЕсли;

	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("Основание") Тогда

		Если ТипЗнч(ДанныеЗаполнения.Основание) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
			ЗаполнитьПоЗаказуКлиента(ДанныеЗаполнения);
		ИначеЕсли ТипЗнч(ДанныеЗаполнения.Основание) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента") Тогда
			ЗаполнитьПоЗаявкеНаВозвратТоваровОтКлиента(ДанныеЗаполнения);
		ИначеЕсли ТипЗнч(ДанныеЗаполнения.Основание) = Тип("ДокументСсылка.ЗаказНаВнутреннееПотребление") Тогда
			ЗаполнитьПоЗаказуНаВнутреннееПотребление(ДанныеЗаполнения);
		ИначеЕсли ТипЗнч(ДанныеЗаполнения.Основание) = Тип("ДокументСсылка.ЗаказНаСборку") Тогда
			ЗаполнитьПоЗаказуНаСборку(ДанныеЗаполнения);
			//++ НЕ УТ
		ИначеЕсли ТипЗнч(ДанныеЗаполнения.Основание) = Тип("ДокументСсылка.ЗаказМатериаловВПроизводство") Тогда
			ЗаполнитьПоЗаказуМатериаловВПроизводство(ДанныеЗаполнения);
			//-- НЕ УТ
		ИначеЕсли ТипЗнч(ДанныеЗаполнения.Основание) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг")
			Или ТипЗнч(ДанныеЗаполнения.Основание) = Тип("ДокументСсылка.ПриемкаТоваровНаХранение") Тогда

			ЗаполнитьПоПриобретениюТоваров(ДанныеЗаполнения);

		Иначе
			ВызватьИсключение НСтр("ru = 'Неверные параметры создания документа на основании';
			|en = 'Incorrect document generation parameters'");
		КонецЕсли;

	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьДокументПоОтбору(ДанныеЗаполнения);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваровНаСклад") Тогда
		ЗаполнитьПоПоступлениюТоваров(ДанныеЗаполнения);
	#Вставка
	//РС Консалт: Трофимов Евгений 05.07.2022 Выдача ТСР
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаданиеНаПеревозку") Тогда
		ЗаполнитьДокументНаОснованииЗаданияНаПеревозку(ДанныеЗаполнения);
	//Конец РС Консалт: Трофимов Евгений 05.07.2022 Выдача ТСР  
	//Сторожук на основании Задания ТП
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаданиеТорговомуПредставителю") Тогда
		ЗаполнитьДокументНаОснованииЗаданиеТорговомуПредставителю(ДанныеЗаполнения);
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.КоммерческоеПредложениеКлиенту") Тогда
		ЗаполнитьДокументНаОснованииКоммерческоеПредложениеКлиенту(ДанныеЗаполнения);

	#КонецВставки
	
	КонецЕсли;

	ЕстьВариантОбеспечения = ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг")
	#Вставка
	ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаданиеНаПеревозку")
	#КонецВставки
	Или ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
	И ДанныеЗаполнения.Свойство("Товары")
	И ТипЗнч(ДанныеЗаполнения.Товары) = Тип("ТаблицаЗначений")
	И ДанныеЗаполнения.Товары.Колонки.Найти("ВариантОбеспечения") <> Неопределено;

	ИнициализироватьДокумент(ДанныеЗаполнения, Не ЕстьВариантОбеспечения);

	ЗначениеСклада = СкладПолучатель;
	ЗаполнениеОбъектовПоСтатистике.ЗаполнитьРеквизитыОбъекта(ЭтотОбъект, ДанныеЗаполнения);
	// При создании из ОбщаяФома.СозданиеНаОснованииУточнениеЗаказываемогоКоличества может осознанно быть пустым,
	// если в документ переносят данные по нескольким складам. Заполнение по статистике может заполнить это пустое значение,
	// нужно его очистить
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("Основание") Тогда
		СкладПолучатель = ЗначениеСклада;
	КонецЕсли;

	Документы.ЗаказНаПеремещение.ПроверитьИОчиститьОрганизацию(ЭтотОбъект, ОрганизацияПолучатель);
	Документы.ЗаказНаПеремещение.ПроверитьИОчиститьОрганизацию(ЭтотОбъект, Организация);

	ЗаказНаПеремещениеЛокализация.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);

КонецПроцедуры

Процедура ЗаполнитьДокументНаОснованииЗаданияНаПеревозку(ЗаданиеНаПеревозку)
//Начало РС Консалт: Трофимов Евгений 05.07.2022 Выдача ТСР

	Организация = ДополнительныеСвойства.Организация;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
		|	ПоручениеЭкспедиторуОснования.Основание КАК ДокументОснование,
		|	ЗаказКлиента.Подразделение КАК Подразделение,
		|	ЕСТЬNULL(ЗаказКлиента.реа_ТерриториальнаяГруппа.РСК_СкладВыдачиТСР, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) КАК СкладПолучатель,
		|	ЗаказКлиента.Склад КАК СкладОтправитель,
		|	ЗаказКлиента.НаправлениеДеятельности КАК НаправлениеДеятельности
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоручениеЭкспедитору.Основания КАК ПоручениеЭкспедиторуОснования
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК ЗаказКлиента
		|			ПО ПоручениеЭкспедиторуОснования.Основание = ЗаказКлиента.Ссылка
		|		ПО ЗаданиеНаПеревозкуРаспоряжения.Распоряжение = ПоручениеЭкспедиторуОснования.Ссылка
		|ГДЕ
		|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка = &ЗаданиеНаПеревозку
		|	И ЗаказКлиента.Организация = &Организация";
	Запрос.УстановитьПараметр("ЗаданиеНаПеревозку", ЗаданиеНаПеревозку);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Шапка = Запрос.Выполнить().Выбрать();
	Если Шапка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Шапка);
		Если Шапка.Количество() > 1 Тогда
			ДокументОснование = Неопределено;
		КонецЕсли;
	КонецЕсли;
	Комментарий = "Внесено на основании: " + ЗаданиеНаПеревозку;
	РСК_ЗаданиеНаПеревозку = ЗаданиеНаПеревозку; 
	Ответственный = ПараметрыСеанса.ТекущийПользователь;

	Дата = ТекущаяДата();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоручениеЭкспедитору.РСК_Номенклатура КАК Номенклатура,
		|	СУММА(ПоручениеЭкспедитору.РСК_Количество) КАК Количество,
		|	СУММА(ПоручениеЭкспедитору.РСК_Количество) КАК КоличествоУпаковок,
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить) КАК ВариантОбеспечения,
		|	&ТекущаяДатаНачалоДня КАК НачалоОтгрузки,
		|	&ТекущаяДатаКонецДня КАК ОкончаниеПоступления,
		|	ПоручениеЭкспедитору.РСК_Характеристика КАК Характеристика,
		|	ПоручениеЭкспедитору.РСК_Серия КАК Серия,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(ЗаказКлиентаДополнительныеРеквизиты.Значение, ЛОЖЬ) КАК БУЛЕВО)
		|		ИЛИ ЕСТЬNULL(СделкиСКлиентами.ВидСделки, НЕОПРЕДЕЛЕНО) = &ВидСделкиМыСоисполнители КАК Обособленно,
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ЗаказКлиентаДополнительныеРеквизиты.Значение, ЛОЖЬ) КАК БУЛЕВО)
		|				ИЛИ ЕСТЬNULL(СделкиСКлиентами.ВидСделки, НЕОПРЕДЕЛЕНО) = &ВидСделкиМыСоисполнители
		|			ТОГДА &НазначениеСоисполнительство
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Назначение
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоручениеЭкспедитору КАК ПоручениеЭкспедитору
		|		ПО ЗаданиеНаПеревозкуРаспоряжения.Распоряжение = ПоручениеЭкспедитору.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоручениеЭкспедитору.Основания КАК ПоручениеЭкспедиторуОснования
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК ЗаказКлиента
		|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.ДополнительныеРеквизиты КАК ЗаказКлиентаДополнительныеРеквизиты
		|				ПО ЗаказКлиента.Ссылка = ЗаказКлиентаДополнительныеРеквизиты.Ссылка
		|					И (ЗаказКлиентаДополнительныеРеквизиты.Свойство.Наименование = ""Заказ соисполнителя"")
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СделкиСКлиентами КАК СделкиСКлиентами
		|				ПО ЗаказКлиента.Сделка = СделкиСКлиентами.Ссылка
		|			ПО ПоручениеЭкспедиторуОснования.Основание = ЗаказКлиента.Ссылка
		|		ПО ЗаданиеНаПеревозкуРаспоряжения.Распоряжение = ПоручениеЭкспедиторуОснования.Ссылка
		|ГДЕ
		|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка = &ЗаданиеНаПеревозку
		|	И ЗаказКлиента.Организация = &Организация
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоручениеЭкспедитору.РСК_Номенклатура,
		|	ПоручениеЭкспедитору.РСК_Характеристика,
		|	ПоручениеЭкспедитору.РСК_Серия,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(ЗаказКлиентаДополнительныеРеквизиты.Значение, ЛОЖЬ) КАК БУЛЕВО)
		|		ИЛИ ЕСТЬNULL(СделкиСКлиентами.ВидСделки, НЕОПРЕДЕЛЕНО) = &ВидСделкиМыСоисполнители,
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ЗаказКлиентаДополнительныеРеквизиты.Значение, ЛОЖЬ) КАК БУЛЕВО)
		|				ИЛИ ЕСТЬNULL(СделкиСКлиентами.ВидСделки, НЕОПРЕДЕЛЕНО) = &ВидСделкиМыСоисполнители
		|			ТОГДА &НазначениеСоисполнительство
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ
		|";
	
	Запрос.УстановитьПараметр("ЗаданиеНаПеревозку", ЗаданиеНаПеревозку);
	Запрос.УстановитьПараметр("ТекущаяДатаНачалоДня", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("ТекущаяДатаКонецДня", КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НазначениеСоисполнительство", РегистрыСведений.реа_ПредопределенныеЗначения.Значение("РС_НазначениеСоисполнительство"));
	Запрос.УстановитьПараметр("ВидСделкиМыСоисполнители", РегистрыСведений.реа_ПредопределенныеЗначения.Значение("ВидСделкиМыСоисполнители"));
	
	Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	
	ЕстьОбособленные = Товары.Выгрузить(Новый Структура("Обособленно",Истина)).Количество() > 0;
	Если ЕстьОбособленные Тогда
		НаправлениеДеятельности = РегистрыСведений.реа_ПредопределенныеЗначения.Значение("РС_НаправлениеСоисполнительство");
	КонецЕсли;
	
	ПараметрыУказанияСерий  = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ЗаказНаПеремещение);
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект, ПараметрыУказанияСерий);

//Конец РС Консалт: Трофимов Евгений 05.07.2022 Выдача ТСР
КонецПроцедуры

Процедура ЗаполнитьДокументНаОснованииЗаданиеТорговомуПредставителю(ЗаданиеТорговомуПредставителю)
	Запрос = Новый Запрос(    
		"ВЫБРАТЬ
		|	ЗаданиеТорговомуПредставителю.Организация КАК Организация,
		|	ЗаданиеТорговомуПредставителю.Сделка КАК Сделка
		|ИЗ
		|	Документ.ЗаданиеТорговомуПредставителю КАК ЗаданиеТорговомуПредставителю
		|ГДЕ
		|	ЗаданиеТорговомуПредставителю.Ссылка = &ЗаданиеТорговомуПредставителю");
	
	Запрос.УстановитьПараметр("ЗаданиеТорговомуПредставителю", ЗаданиеТорговомуПредставителю);
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();  
	Дата = ТекущаяДата();
	Организация             = Реквизиты.Организация;
	Сделка                  = Реквизиты.Сделка;
	ДокументОснование       = ЗаданиеТорговомуПредставителю;
	СкладПолучатель = ЗаданиеТорговомуПредставителю.Склад;
	// Заполнение табличной части.
	ТоварыЗапрос= Новый Запрос;
	ТоварыЗапрос.Текст="ВЫБРАТЬ
		|	ЗТП.Номенклатура КАК Номенклатура,
		|  	ЗТП.Характеристика КАК Характеристика,
		|   СУММА(ЗТП.количество) КАК Количество,
		|   СУММА(ЗТП.Количество) КАК КоличествоУпаковок,
		|	&ТекущаяДатаНачалоДня КАК НачалоОтгрузки,
		|	&ТекущаяДатаКонецДня КАК ОкончаниеПоступления
		|ИЗ
		|	Документ.ЗаданиеТорговомуПредставителю.Товары КАК ЗТП
		|ГДЕ
		|	ЗТП.Ссылка = &ЗаданиеТорговомуПредставителю
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗТП.Номенклатура,
		|	ЗТП.Характеристика";
	ТоварыЗапрос.УстановитьПараметр("ЗаданиеТорговомуПредставителю",ЗаданиеТорговомуПредставителю);
	ТоварыЗапрос.УстановитьПараметр("ТекущаяДатаНачалоДня", НачалоДня(ТекущаяДата()));
	ТоварыЗапрос.УстановитьПараметр("ТекущаяДатаКонецДня", КонецДня(ТекущаяДата()));
	Товары.Загрузить(ТоварыЗапрос.Выполнить().Выгрузить());
	ПараметрыУказанияСерий  = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ЗаказНаПеремещение);
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект, ПараметрыУказанияСерий);
	// Для каждого ТекСтрока из ЭтотОбъект.Товары Цикл        
	//    СтруктураДействий = Новый Структура;
	//    СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу", ТекСтрока.Характеристика);  
	//    ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекСтрока, СтруктураДействий, Неопределено); 
	//КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитьДокументНаОснованииКоммерческоеПредложениеКлиенту(КоммерческоеПредложениеКлиенту)
	Запрос = Новый Запрос(    
		"ВЫБРАТЬ
		|	КоммерческоеПредложениеКлиенту.Организация КАК Организация,
		|	КоммерческоеПредложениеКлиенту.Сделка КАК Сделка
		|ИЗ
		|	Документ.КоммерческоеПредложениеКлиенту КАК КоммерческоеПредложениеКлиенту
		|ГДЕ
		|	КоммерческоеПредложениеКлиенту.Ссылка = &КоммерческоеПредложениеКлиенту");
	
	Запрос.УстановитьПараметр("КоммерческоеПредложениеКлиенту", КоммерческоеПредложениеКлиенту);
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();  
	Дата = ТекущаяДата();
	Организация             = Реквизиты.Организация;
	Сделка                  = Реквизиты.Сделка;
	ДокументОснование       = КоммерческоеПредложениеКлиенту;
	СкладПолучатель = КоммерческоеПредложениеКлиенту.Склад;
	// Заполнение табличной части.
	ТоварыЗапрос= Новый Запрос;
	ТоварыЗапрос.Текст="ВЫБРАТЬ
		|	ЗТП.Номенклатура КАК Номенклатура,
		|  	ЗТП.Характеристика КАК Характеристика,
		|   СУММА(ЗТП.количество) КАК Количество,
		|   СУММА(ЗТП.Количество) КАК КоличествоУпаковок,
		|	&ТекущаяДатаНачалоДня КАК НачалоОтгрузки,
		|	&ТекущаяДатаКонецДня КАК ОкончаниеПоступления
		|ИЗ
		|	Документ.КоммерческоеПредложениеКлиенту.Товары КАК ЗТП
		|ГДЕ
		|	ЗТП.Ссылка = &КоммерческоеПредложениеКлиенту
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗТП.Номенклатура,
		|	ЗТП.Характеристика";
	ТоварыЗапрос.УстановитьПараметр("КоммерческоеПредложениеКлиенту",КоммерческоеПредложениеКлиенту);
	ТоварыЗапрос.УстановитьПараметр("ТекущаяДатаНачалоДня", НачалоДня(ТекущаяДата()));
	ТоварыЗапрос.УстановитьПараметр("ТекущаяДатаКонецДня", КонецДня(ТекущаяДата()));
	Товары.Загрузить(ТоварыЗапрос.Выполнить().Выгрузить());
	ПараметрыУказанияСерий  = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ЗаказНаПеремещение);
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект, ПараметрыУказанияСерий);
	// Для каждого ТекСтрока из ЭтотОбъект.Товары Цикл        
	//    СтруктураДействий = Новый Структура;
	//    СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу", ТекСтрока.Характеристика);  
	//    ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекСтрока, СтруктураДействий, Неопределено); 
	//КонецЦикла;
КонецПроцедуры

&Вместо("ВыполнитьКонтрольЗаказаПослеПроведения")
Процедура РСК_ВыполнитьКонтрольЗаказаПослеПроведения(Отказ)
	
	Если ЗначениеЗаполнено(ПараметрыСеанса.ПараметрыОбработчикаОбновления.РежимВыполнения) Тогда
		Возврат;
	КонецЕсли;
	
	КонтролироватьОтгрузку = ПолучитьФункциональнуюОпцию("НеЗакрыватьЗаказыНаПеремещениеБезПолнойОтгрузки");
	
	Если Статус = Перечисления.СтатусыВнутреннихЗаказов.Закрыт
		И КонтролироватьОтгрузку Тогда
		Массив = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Ссылка);
		ДополнительныеПараметры = Новый Структура("КонтрольВыполненияЗаказа", Истина);
		
		Запрос = Документы.ЗаказНаПеремещение.СформироватьЗапросПроверкиПриСменеСтатуса(Массив, "Закрыт", ДополнительныеПараметры);
		
		Результат = Запрос.Выполнить();
		
		ВыборкаОтгрузка = Результат.Выбрать();
		
		Пока ВыборкаОтгрузка.Следующий() Цикл
			
			ПроверкаПройдена = Документы.ЗаказНаПеремещение.ПроверкаПередСменойСтатуса(ВыборкаОтгрузка, Статус, ДополнительныеПараметры);
			Если Не ПроверкаПройдена Тогда
				Отказ = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	
КонецПроцедуры


#КонецЕсли



