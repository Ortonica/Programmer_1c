//++ РС Консалт: Трофимов Евгений 04.02.2023 Задача 23088
//e1cib/data/Документ.Задание?ref=abf6db76aafd7de84ef44e63a771c2e5
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Параметры.Свойство("Контрагент", ВодительКонтрагент);
	Параметры.Свойство("Дата", Период.ДатаНачала);
	Период.ДатаОкончания = ТекущаяДатаСеанса();
	ВодительФизЛицо = ПолучитьФизЛицо(ВодительКонтрагент);
	ЗаполнитьСписокДоступныхВодителей();
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 04.02.2023 Задача 23088
//e1cib/data/Документ.Задание?ref=abf6db76aafd7de84ef44e63a771c2e5
&НаКлиенте
Процедура ВодительФизЛицоПриИзменении(Элемент)
	ВодительКонтрагент = ПолучитьКонтрагента(ВодительФизЛицо);
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 03.02.2023 Задача 23088
//e1cib/data/Документ.Задание?ref=abf6db76aafd7de84ef44e63a771c2e5
&НаСервереБезКонтекста
Функция ПолучитьКонтрагента(ФизЛицо)

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	Контрагенты.Ссылка КАК Контрагент
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|		ПО ФизическиеЛица.ИНН = Контрагенты.ИНН
		|			И (Контрагенты.ИНН <> """")
		|			И (НЕ Контрагенты.ПометкаУдаления)
		|ГДЕ
		|	ФизическиеЛица.Ссылка = &Ссылка
		|";
	Запрос.УстановитьПараметр("Ссылка", ФизЛицо); 
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Контрагент;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции // ПолучитьПартнёра()

//++ РС Консалт: Трофимов Евгений 04.02.2023 Задача 23088
//e1cib/data/Документ.Задание?ref=abf6db76aafd7de84ef44e63a771c2e5
&НаСервереБезКонтекста
Функция ПолучитьФизЛицо(Контрагент)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ФизическиеЛица.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ПО Контрагенты.ИНН = ФизическиеЛица.ИНН
		|			И (ФизическиеЛица.ИНН <> """")
		|ГДЕ
		|	Контрагенты.Ссылка = &Контрагент
		|	И НЕ Контрагенты.ПометкаУдаления
		|";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Неопределено;

КонецФункции // ПолучитьФизЛицо()

//++ РС Консалт: Трофимов Евгений 04.02.2023 Задача 23088
//e1cib/data/Документ.Задание?ref=abf6db76aafd7de84ef44e63a771c2e5
&НаКлиенте
Процедура ВодительПартнерПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ВодительФизЛицо) Тогда
		Возврат;
	КонецЕсли;
	ВодительФизЛицо = ПолучитьФизЛицо(ВодительКонтрагент);
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 04.02.2023 Задача 23088
//e1cib/data/Документ.Задание?ref=abf6db76aafd7de84ef44e63a771c2e5
&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	ЗаполнитьСписокДоступныхВодителей();
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 04.02.2023 Задача 23088
//e1cib/data/Документ.Задание?ref=abf6db76aafd7de84ef44e63a771c2e5
&НаСервере
Процедура ЗаполнитьСписокДоступныхВодителей()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЗаданиеНаПеревозку.Водитель КАК Водитель
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку
		|ГДЕ
		|	ЗаданиеНаПеревозку.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ЗаданиеНаПеревозку.Проведен
		|	И ЗаданиеНаПеревозку.РСК_ВыдачаТСР
		|	И ЗаданиеНаПеревозку.Статус = &Статус";
	
	Запрос.УстановитьПараметр("НачалоПериода", Период.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("Статус", Перечисления.СтатусыЗаданийНаПеревозку.Закрыто);
	
	МассивВодителей = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Водитель");
	СписокВодителей.ЗагрузитьЗначения(МассивВодителей);

КонецПроцедуры // ЗаполнитьСписокДоступныхВодителей()

//++ РС Консалт: Трофимов Евгений 04.02.2023 Задача 23088
//e1cib/data/Документ.Задание?ref=abf6db76aafd7de84ef44e63a771c2e5
&НаКлиенте
Процедура ВодительФизЛицоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	НастройкиКомпоновки = Новый НастройкиКомпоновкиДанных;
	ЭлементОтбора = НастройкиКомпоновки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ЭлементОтбора.ПравоеЗначение = СписокВодителей;
	Парам = Новый Структура;
	Парам.Вставить("ФиксированныеНастройки", НастройкиКомпоновки);
	Парам.Вставить("РежимВыбора", Истина);
	Парам.Вставить("МножественныйВыбор", Ложь);
	ФормаВыбора = ПолучитьФорму("Справочник.ФизическиеЛица.ФормаВыбора", Парам, Элемент);
	ФормаВыбора.Элементы.Список.Отображение = ОтображениеТаблицы.Список;
	ФормаВыбора.Открыть();
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 04.02.2023 Задача 23088
//e1cib/data/Документ.Задание?ref=abf6db76aafd7de84ef44e63a771c2e5
&НаСервере
Функция ФормаЗаполнена()

	Возврат ПроверитьЗаполнение();

КонецФункции // ФормаЗаполнена()

//++ РС Консалт: Трофимов Евгений 04.02.2023 Задача 23088
//e1cib/data/Документ.Задание?ref=abf6db76aafd7de84ef44e63a771c2e5
&НаКлиенте
Процедура ЗаполнитьДокумент(Команда)
	
	Если НЕ ФормаЗаполнена() Тогда
		Возврат;
	КонецЕсли;
	Если ВладелецФормы.Объект.Расходы.Количество() > 0 Тогда
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ПослеВопросаОПерезаполненииРасходов", ЭтаФорма), 
			"Таблица «Расходы и процие активы» будет перезаполнена! Продолжить?", 
			РежимДиалогаВопрос.ДаНет
		);
		Возврат;
	КонецЕсли;
	ЗаполнитьДокументНаКлиенте();
	
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 04.02.2023 Задача 23088
//e1cib/data/Документ.Задание?ref=abf6db76aafd7de84ef44e63a771c2e5
&НаКлиенте
Процедура ПослеВопросаОПерезаполненииРасходов(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьДокументНаКлиенте();

КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 04.02.2023 Задача 23088
//e1cib/data/Документ.Задание?ref=abf6db76aafd7de84ef44e63a771c2e5
&НаКлиенте
Процедура ЗаполнитьДокументНаКлиенте()

	ДанныеФормы = ВладелецФормы.Объект;
	ЗаполнитьДокументНаСервере(ДанныеФормы);
	КопироватьДанныеФормы(ДанныеФормы, ВладелецФормы.Объект);
	Закрыть();

КонецПроцедуры // ЗаполнитьДокументНаКлиенте()

//++ РС Консалт: Трофимов Евгений 04.02.2023 Задача 23088
//e1cib/data/Документ.Задание?ref=abf6db76aafd7de84ef44e63a771c2e5
&НаСервере
Процедура ЗаполнитьДокументНаСервере(ДанныеФормы)
	
	оПУПА = ДанныеФормыВЗначение(ДанныеФормы, Тип("ДокументОбъект.ПриобретениеУслугПрочихАктивов"));
	
	Запрос = Новый Запрос(ТекстЗапроса());
	Запрос.УстановитьПараметр("ВодительКонтрагент", ВодительКонтрагент);
	Запрос.УстановитьПараметр("ВодительФизЛицо", ВодительФизЛицо);
	Запрос.УстановитьПараметр("НачалоПериода", Период.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", Период.ДатаОкончания);
	оПУПА.Расходы.Загрузить(Запрос.Выполнить().Выгрузить());
	оПУПА.Контрагент = ВодительКонтрагент;
	оПУПА.Партнер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВодительКонтрагент, "Партнер");
	оПУПА.Комментарий = "Услуги по доставке ТСР за периорд с "+Формат(Период.ДатаНачала,"ДФ=dd.MM.yyyy") + " по " + Формат(Период.ДатаОкончания,"ДФ=dd.MM.yyyy");
	
	СтруктураЗаполненияЦены = Новый Структура;
	СтруктураЗаполненияЦены.Вставить("ЦенаВключаетНДС", оПУПА.ЦенаВключаетНДС);
	СтруктураЗаполненияЦены.Вставить("НалогообложениеНДС", оПУПА.НалогообложениеНДС);
	СтруктураЗаполненияЦены.Вставить("Дата", оПУПА.Дата);
	СтруктураЗаполненияЦены.Вставить("Организация", оПУПА.Организация);
	 
	СтруктураДействий = Новый Структура();
	СтруктураДействий.Вставить("ПересчитатьСумму", "Количество");
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС", СтруктураЗаполненияЦены);
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураЗаполненияЦены);	
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(оПУПА.Расходы, СтруктураДействий, Неопределено);
		
	ЗначениеВДанныеФормы(оПУПА, ДанныеФормы);

КонецПроцедуры // ЗаполнитьДокументНаСервере()

//++ РС Консалт: Трофимов Евгений 04.02.2023 Задача 23088
//e1cib/data/Документ.Задание?ref=abf6db76aafd7de84ef44e63a771c2e5
&НаКлиентеНаСервереБезКонтекста
Функция ТекстЗапроса()

	Текст = 
		"ВЫБРАТЬ
		|	ЗаданиеНаПеревозку.Дата КАК ДатаДоставки,
		|	СУММА(ПоручениеЭкспедитору.РСК_Количество) КАК Количество,
		|	ЕСТЬNULL(РСК_НоменклатураИТарифыДоставкиТСР.ИмяТарифа, ЕСТЬNULL(спрНоменклатура.ВидНоменклатуры.Наименование, ""ОШИБКА ЗАПОЛНЕНИЯ Акта выдачи ТСР!!!"")) КАК ИмяТарифа
		|ПОМЕСТИТЬ СборУслуг
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоручениеЭкспедитору КАК ПоручениеЭкспедитору
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РСК_НоменклатураИТарифыДоставкиТСР КАК РСК_НоменклатураИТарифыДоставкиТСР
		|				ПО ПоручениеЭкспедитору.РСК_Номенклатура = РСК_НоменклатураИТарифыДоставкиТСР.Номенклатура
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК спрНоменклатура
		|				ПО ПоручениеЭкспедитору.РСК_Номенклатура = спрНоменклатура.Ссылка
		|			ПО ЗаданиеНаПеревозкуРаспоряжения.Распоряжение = ПоручениеЭкспедитору.Ссылка
		|		ПО ЗаданиеНаПеревозку.Ссылка = ЗаданиеНаПеревозкуРаспоряжения.Ссылка
		|ГДЕ
		|	ЗаданиеНаПеревозку.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ЗаданиеНаПеревозку.Проведен
		|	И ЗаданиеНаПеревозку.РСК_ВыдачаТСР
		|	И ЗаданиеНаПеревозку.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданийНаПеревозку.Закрыто)
		|	И ЗаданиеНаПеревозку.Водитель = &ВодительФизЛицо
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаданиеНаПеревозку.Дата,
		|	ЕСТЬNULL(РСК_НоменклатураИТарифыДоставкиТСР.ИмяТарифа, ЕСТЬNULL(спрНоменклатура.ВидНоменклатуры.Наименование, ""ОШИБКА ЗАПОЛНЕНИЯ Акта выдачи ТСР!!!""))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СборУслуг.ДатаДоставки КАК ДатаДоставки,
		|	СборУслуг.Количество КАК Количество,
		|	СборУслуг.ИмяТарифа КАК ИмяТарифа,
		|	МАКСИМУМ(ЕСТЬNULL(спрНоменклатура.Ссылка, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))) КАК Услуга,
		|	Контрагенты.Партнер КАК Партнер,
		|	МАКСИМУМ(ЕСТЬNULL(ВидыЦенПоставщиков.Ссылка, ЗНАЧЕНИЕ(Справочник.ВидыЦенПоставщиков.ПустаяСсылка))) КАК ВидЦен
		|ПОМЕСТИТЬ Доставки
		|ИЗ
		|	СборУслуг КАК СборУслуг
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК спрНоменклатура
		|		ПО (спрНоменклатура.Наименование = ""Выдача: "" + СборУслуг.ИмяТарифа)
		|			И (НЕ спрНоменклатура.ПометкаУдаления)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партнеры КАК Партнеры
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЦенПоставщиков КАК ВидыЦенПоставщиков
		|				ПО Партнеры.Ссылка = ВидыЦенПоставщиков.Владелец
		|					И Партнеры.Наименование = ВидыЦенПоставщиков.Наименование
		|					И (НЕ ВидыЦенПоставщиков.ПометкаУдаления)
		|			ПО Контрагенты.Партнер = Партнеры.Ссылка
		|		ПО (ИСТИНА)
		|ГДЕ
		|	Контрагенты.Ссылка = &ВодительКонтрагент
		|
		|СГРУППИРОВАТЬ ПО
		|	СборУслуг.ДатаДоставки,
		|	СборУслуг.Количество,
		|	СборУслуг.ИмяТарифа,
		|	Контрагенты.Партнер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НАЧАЛОПЕРИОДА(Доставки.ДатаДоставки, ДЕНЬ) КАК Дата
		|ПОМЕСТИТЬ ДатыДоставки
		|ИЗ
		|	Доставки КАК Доставки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ЦеныНоменклатурыПоставщиков.Период) КАК Период,
		|	ЦеныНоменклатурыПоставщиков.Номенклатура КАК Номенклатура,
		|	ЦеныНоменклатурыПоставщиков.Партнер КАК Партнер,
		|	ДатыДоставки.Дата КАК Дата,
		|	ЦеныНоменклатурыПоставщиков.ВидЦеныПоставщика КАК ВидЦеныПоставщика
		|ПОМЕСТИТЬ ДатыАктуальныхЦен
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатурыПоставщиков КАК ЦеныНоменклатурыПоставщиков
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДатыДоставки КАК ДатыДоставки
		|		ПО ЦеныНоменклатурыПоставщиков.Период <= ДатыДоставки.Дата
		|ГДЕ
		|	(ЦеныНоменклатурыПоставщиков.ВидЦеныПоставщика, ЦеныНоменклатурыПоставщиков.Номенклатура, ЦеныНоменклатурыПоставщиков.Партнер) В
		|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				Доставки.ВидЦен КАК ВидЦен,
		|				Доставки.Услуга КАК Услуга,
		|				Доставки.Партнер КАК Партнер
		|			ИЗ
		|				Доставки КАК Доставки)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЦеныНоменклатурыПоставщиков.Номенклатура,
		|	ЦеныНоменклатурыПоставщиков.Партнер,
		|	ДатыДоставки.Дата,
		|	ЦеныНоменклатурыПоставщиков.ВидЦеныПоставщика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Доставки.ИмяТарифа КАК ИмяТарифа,
		|	Доставки.Услуга КАК Услуга,
		|	ПРЕДСТАВЛЕНИЕ(Доставки.Услуга) КАК Содержание,
		|	СУММА(Доставки.Количество) КАК Количество,
		|	ЕСТЬNULL(ЦеныНоменклатурыПоставщиков.Цена, 0) КАК Цена
		|ИЗ
		|	Доставки КАК Доставки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДатыАктуальныхЦен КАК ДатыАктуальныхЦен
		|		ПО Доставки.Партнер = ДатыАктуальныхЦен.Партнер
		|			И Доставки.Услуга = ДатыАктуальныхЦен.Номенклатура
		|			И Доставки.ВидЦен = ДатыАктуальныхЦен.ВидЦеныПоставщика
		|			И (НАЧАЛОПЕРИОДА(Доставки.ДатаДоставки, ДЕНЬ) = ДатыАктуальныхЦен.Дата)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатурыПоставщиков КАК ЦеныНоменклатурыПоставщиков
		|		ПО Доставки.Партнер = ЦеныНоменклатурыПоставщиков.Партнер
		|			И Доставки.Услуга = ЦеныНоменклатурыПоставщиков.Номенклатура
		|			И Доставки.ВидЦен = ЦеныНоменклатурыПоставщиков.ВидЦеныПоставщика
		|			И (ДатыАктуальныхЦен.Период = ЦеныНоменклатурыПоставщиков.Период)
		|
		|СГРУППИРОВАТЬ ПО
		|	Доставки.ИмяТарифа,
		|	Доставки.Услуга,
		|	ЕСТЬNULL(ЦеныНоменклатурыПоставщиков.Цена, 0)
		|";

	Возврат Текст;

КонецФункции // ТекстЗапроса()

