#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
&ИзменениеИКонтроль("ЗаполнитьПоПеремещениюТоваров")
Процедура РСК_ЗаполнитьПоПеремещениюТоваров(Знач ДокументОснование, ДанныеЗаполнения)

	// Заполним данные шапки документа.
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.СкладПолучатель КАК Склад,
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДокумента.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|");
	Запрос.УстановитьПараметр("Ссылка", ДокументОснование);

	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда

		ДанныеЗаполнения = Новый Структура;
		Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
			ДанныеЗаполнения.Вставить(Колонка.Имя);
		КонецЦикла;

		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ДанныеЗаполнения, Выборка);

		Организация = ДанныеЗаполнения.Организация;

	КонецЕсли;
	#Вставка     
	НайденныйВидЦены = Справочники.ВидыЦен.НайтиПоНаименованию("Интеркампани Производство"); 
	Если ЗначениеЗаполнено(НайденныйВидЦены) Тогда 
		ВидЦены = НайденныйВидЦены;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РСК_СкладыПередачИзПеремещений.Организация КАК Организация,
		|	РСК_СкладыПередачИзПеремещений.ОрганизацияПолучатель КАК ОрганизацияПолучатель
		|ИЗ
		|	РегистрСведений.РСК_СкладыПередачИзПеремещений КАК РСК_СкладыПередачИзПеремещений
		|ГДЕ
		|	РСК_СкладыПередачИзПеремещений.СкладОтправитель = &СкладОтправитель
		|	И РСК_СкладыПередачИзПеремещений.СкладПолучатель = &СкладПолучатель";	
	Запрос.УстановитьПараметр("СкладОтправитель", ДокументОснование.СкладОтправитель);
	Запрос.УстановитьПараметр("СкладПолучатель", ДокументОснование.СкладПолучатель);
	ВДЗ = Запрос.Выполнить().Выбрать();
	
	Если ВДЗ.Следующий() Тогда
		
		Если ЗначениеЗаполнено(ВДЗ.Организация) Тогда
			Организация = ВДЗ.Организация;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВДЗ.ОрганизацияПолучатель) Тогда
			ОрганизацияПолучатель = ВДЗ.ОрганизацияПолучатель;
		КонецЕсли;
		
	КонецЕсли;
	УстановитьПривилегированныйРежим(Ложь);
	
	ДополнительныеСвойства.Вставить("ДокументОснование", ДокументОснование);
	#КонецВставки

	// Заполним данные табличной части "Товары" документа.
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ТаблицаТовары.Назначение КАК Назначение,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаТовары.Количество КАК Количество
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|");
	Запрос.УстановитьПараметр("Ссылка", ДокументОснование);

	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда

		Товары.Загрузить(РезультатЗапроса.Выгрузить());
		ЗаполнитьРеквизитыПоУмолчаниюВТабличнойЧасти();

	КонецЕсли;

КонецПроцедуры 

&После("ОбработкаЗаполнения")
Процедура РСК_ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ДополнительныеСвойства.Свойство("ДокументОснование") И ЗначениеЗаполнено(ДополнительныеСвойства.ДокументОснование) Тогда
		
		СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(ЭтотОбъект);
			
		СтруктураДействий = Новый Структура();
		СтруктураДействий.Вставить("ПересчитатьСумму", "КоличествоУпаковок");
		СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
		СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);

		Для Каждого Строка ИЗ Товары Цикл
			
			Если НЕ ЗначениеЗаполнено(Строка.Цена) Тогда 
				Строка.ВидЦены = Справочники.ВидыЦен.ПустаяСсылка();
				Строка.Цена = 1;  
				ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(Строка, СтруктураДействий, Неопределено);
			КонецЕсли;
			
		КонецЦикла; 
		
	КонецЕсли;
	
КонецПроцедуры

#КонецЕсли