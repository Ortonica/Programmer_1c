
&Перед("ОбработкаЗаполнения")
Процедура РСК_ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	//++РС Консалт: Минаков А.С. Задача 24557
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
		И ДанныеЗаполнения.Свойство("ПоляШапки") Тогда
		ПоляШапки = ДанныеЗаполнения.ПоляШапки; 
		
		Дата                  = ПоляШапки.Период;
		Организация           = ПоляШапки.Отправитель;
		ОрганизацияПолучатель = ПоляШапки.Получатель;
		Склад                 = ПоляШапки.МестоХранения;
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями;
		ВидЦены               = ПоляШапки.ВидЦены;
		Договор               = Справочники.ДоговорыМеждуОрганизациями.ПустаяСсылка();
		Валюта                = ПоляШапки.Валюта;
		НалогообложениеНДС    = ПоляШапки.НалогообложениеНДС;
		// Контрагент - не берем из полей шапки, т.к. контрагент нужен только для посредника
		
		Если ДанныеЗаполнения.Свойство("ЗаполнятьПоРезервамТоваровОрганизаций") Тогда
			Запрос = Новый Запрос;
			
			Для Каждого КлючЗначение из ПоляШапки Цикл
				Запрос.УстановитьПараметр(КлючЗначение.Ключ, КлючЗначение.Значение);
			КонецЦикла;
			
			Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПоляШапки.Период));
			Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ПоляШапки.Период));
			Запрос.УстановитьПараметр("ОформлятьПередачи", Истина);
			
			Запрос.Текст = ЗапасыСервер.ТекстЗапросаОформленияПоРезервамТоваровОрганизаций(Запрос,"ВыборкаЗаполненияДокумента");
			ТаблицаРезультата = Запрос.Выполнить().Выгрузить();

			ЗапросОстатки = Новый Запрос(
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Товары.Номенклатура КАК Номенклатура,
			|	Товары.Характеристика КАК Характеристика,
			|	Товары.Серия КАК Серия
			|ПОМЕСТИТЬ Товары
			|ИЗ
			|	&Товары КАК Товары
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПередачаТоваровМеждуОрганизациямиТовары.Ссылка КАК Ссылка,
			|	ПередачаТоваровМеждуОрганизациямиТовары.Цена КАК Цена,
			|	ПередачаТоваровМеждуОрганизациямиТовары.Номенклатура КАК Номенклатура,
			|	ПередачаТоваровМеждуОрганизациямиТовары.Характеристика КАК Характеристика,
			|	ПередачаТоваровМеждуОрганизациямиТовары.Серия КАК Серия,
			|	СУММА(ПередачаТоваровМеждуОрганизациямиТовары.Количество) КАК Количество,
			|	ПередачаТоваровМеждуОрганизациями.Дата КАК Дата
			|ПОМЕСТИТЬ ПТМ
			|ИЗ
			|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ПередачаТоваровМеждуОрганизациямиТовары
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК ПередачаТоваровМеждуОрганизациями
			|		ПО ПередачаТоваровМеждуОрганизациямиТовары.Ссылка = ПередачаТоваровМеждуОрганизациями.Ссылка
			|ГДЕ
			|	ПередачаТоваровМеждуОрганизациями.Организация = &Организация
			|	И ПередачаТоваровМеждуОрганизациями.ОрганизацияПолучатель = &ОрганизацияПолучатель
			|	И ПередачаТоваровМеждуОрганизациями.Дата <= &Дата
			|	И ПередачаТоваровМеждуОрганизациями.Проведен
			|	И (ПередачаТоваровМеждуОрганизациямиТовары.Номенклатура, ПередачаТоваровМеждуОрганизациямиТовары.Характеристика, ПередачаТоваровМеждуОрганизациямиТовары.Серия) В
			|			(ВЫБРАТЬ
			|				Товары.Номенклатура,
			|				Товары.Характеристика,
			|				Товары.Серия
			|			ИЗ
			|				Товары КАК Товары)
			|
			|СГРУППИРОВАТЬ ПО
			|	ПередачаТоваровМеждуОрганизациямиТовары.Ссылка,
			|	ПередачаТоваровМеждуОрганизациямиТовары.Цена,
			|	ПередачаТоваровМеждуОрганизациямиТовары.Номенклатура,
			|	ПередачаТоваровМеждуОрганизациямиТовары.Характеристика,
			|	ПередачаТоваровМеждуОрганизациямиТовары.Серия,
			|	ПередачаТоваровМеждуОрганизациями.Дата
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПТМ.Ссылка КАК Ссылка,
			|	ПТМ.Цена КАК Цена,
			|	ПТМ.Номенклатура КАК Номенклатура,
			|	ПТМ.Характеристика КАК Характеристика,
			|	ПТМ.Серия КАК Серия,
			|	ПТМ.Количество КАК Количество,
			|	СУММА(ЕСТЬNULL(ВТМ.Количество, 0)) КАК КоличествоВозврат,
			|	ПТМ.Дата КАК Дата
			|ПОМЕСТИТЬ ВТ
			|ИЗ
			|	ПТМ КАК ПТМ
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК ВТМ
			|		ПО (ВТМ.ДокументПередачи = ПТМ.Ссылка)
			|			И (ВТМ.Номенклатура = ПТМ.Номенклатура)
			|			И (ВТМ.Характеристика = ПТМ.Характеристика)
			|			И (ВТМ.Серия = ПТМ.Серия)
			|			И (ВТМ.Цена = ПТМ.Цена)
			|			И (ВТМ.Ссылка <> &Ссылка)
			|			И (ВТМ.Ссылка.Проведен)
			|
			|СГРУППИРОВАТЬ ПО
			|	ПТМ.Ссылка,
			|	ПТМ.Цена,
			|	ПТМ.Номенклатура,
			|	ПТМ.Характеристика,
			|	ПТМ.Серия,
			|	ПТМ.Количество,
			|	ПТМ.Дата
			|
			|ИМЕЮЩИЕ
			|	ПТМ.Количество - СУММА(ЕСТЬNULL(ВТМ.Количество, 0)) > 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ.Ссылка КАК Ссылка,
			|	ВТ.Цена КАК Цена,
			|	ВТ.Номенклатура КАК Номенклатура,
			|	ВТ.Характеристика КАК Характеристика,
			|	ВТ.Серия КАК Серия,
			|	ВТ.Количество - ВТ.КоличествоВозврат КАК Количество
			|ИЗ
			|	ВТ КАК ВТ
			|
			|УПОРЯДОЧИТЬ ПО
			|	ВТ.Дата УБЫВ");
			
			ЗапросОстатки.УстановитьПараметр("Организация", ОрганизацияПолучатель);
			ЗапросОстатки.УстановитьПараметр("ОрганизацияПолучатель", Организация);
			ЗапросОстатки.УстановитьПараметр("Дата", КонецДня(Дата));
			ЗапросОстатки.УстановитьПараметр("Ссылка", Ссылка);
			ЗапросОстатки.УстановитьПараметр("Товары", ТаблицаРезультата);
			
			ТаблицаОстатков = ЗапросОстатки.Выполнить().Выгрузить();
			СтруктураПоиска = Новый Структура;
			
			Для Каждого Строка Из ТаблицаРезультата Цикл
				
				Остаток = Строка.Количество;
				
				СтруктураПоиска.Вставить("Номенклатура", Строка.Номенклатура); 
				СтруктураПоиска.Вставить("Характеристика", Строка.Характеристика);
				СтруктураПоиска.Вставить("Серия", Строка.Серия);
				
				СтрокиОстатков = ТаблицаОстатков.НайтиСтроки(СтруктураПоиска);
				
				Пока Остаток > 0 И СтрокиОстатков.Количество() Цикл
					
					НоваяСтрока = Товары.Добавить();
					
					ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);

					НоваяСтрока.СпособОпределенияСебестоимости = Перечисления.СпособыОпределенияСебестоимости.ИзДокументаПередачи;
					
					СтрокаТЧ = СтрокиОстатков[0];
					
					Списать = Мин(Остаток, СтрокаТЧ.Количество); 
					
					НоваяСтрока.Количество = Списать;
					НоваяСтрока.КоличествоУпаковок = Списать;						
					НоваяСтрока.ДокументПередачи = СтрокаТЧ.Ссылка;
					НоваяСтрока.Цена = СтрокаТЧ.Цена;
					
					СтрокаТЧ.Количество = СтрокаТЧ.Количество - НоваяСтрока.Количество;
					Остаток = Остаток - НоваяСтрока.Количество;
					
					Если СтрокаТЧ.Количество <= 0 Тогда
						ТаблицаОстатков.Удалить(СтрокаТЧ);
						СтрокиОстатков.Удалить(0);
					КонецЕсли
					
				КонецЦикла;
				
				Если Остаток > 0 Тогда
					НоваяСтрока = Товары.Добавить();
					
					ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
					
					НоваяСтрока.Количество = Остаток;
					НоваяСтрока.КоличествоУпаковок = Остаток;
					НоваяСтрока.СпособОпределенияСебестоимости = Перечисления.СпособыОпределенияСебестоимости.ИзТекущегоДокумента
				КонецЕсли;
				
			КонецЦикла;	
			
			Для Каждого Строка ИЗ Товары Цикл
				
				Если ЗначениеЗаполнено(Строка.ДокументПередачи) И ЗначениеЗаполнено(Строка.ДокументПередачи.Договор) Тогда
					
					Договор = Строка.ДокументПередачи.Договор;
					Прервать
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли	
	КонецЕсли
	//++РС Консалт: Минаков А.С. Задача 24557
	
КонецПроцедуры

&ИзменениеИКонтроль("ПроверитьКорректностьВозвращаемыхТоваров")
Процедура РСК_ПроверитьКорректностьВозвращаемыхТоваров(Отказ)

	// Для строк ТЧ Товары, проверим, что возвраты не превышают передачи
	// Особенности 
	//	- не допускается, чтобы в возврате было другое назначение, чем в передаче,
	//  т.к. это не имеет никакого практического смысла
	//  - ограничение - если возврат осуществляется на склад, отличный от передачи,
	//  то по товару должна быть одинаковая настройка учета серий по себестоимости -
	//  или на обоих складах включена, или выключена, т.е. нельзя передать с серией, а
	//  вернуть без (и, наоборот). Если так нужно сделать, то как обход - возвращать без 
	//  указания документа передачи.

	Если Товары.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	Запрос = Новый Запрос;

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроверяемыеТовары.Номенклатура КАК Номенклатура,
	|	ПроверяемыеТовары.Характеристика КАК Характеристика,
	|	ПроверяемыеТовары.Серия КАК Серия,
	|	ПроверяемыеТовары.Назначение КАК Назначение,
	|	ПроверяемыеТовары.Количество КАК Количество,
	|	ПроверяемыеТовары.ДокументПередачи КАК ДокументПередачи
	|ПОМЕСТИТЬ ПроверяемыеТовары
	|ИЗ
	|	&ТаблицаПроверяемыеТовары КАК ПроверяемыеТовары
	|ГДЕ
	|	ПроверяемыеТовары.ДокументПередачи <> ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверяемыеТовары.Номенклатура КАК Номенклатура,
	|	ПроверяемыеТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ПроверяемыеТовары.Характеристика КАК Характеристика,
	|	ПроверяемыеТовары.Серия КАК Серия,
	|	ПроверяемыеТовары.Назначение КАК Назначение,
	|	СУММА(ПроверяемыеТовары.Количество) КАК Количество,
	|	ПроверяемыеТовары.ДокументПередачи КАК ДокументПередачи,
	|	ПроверяемыеТовары.ДокументПередачи.Номер КАК НомерРеализации
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПередачаТоваровМеждуОрганизациями.Номенклатура КАК Номенклатура,
	|		ПередачаТоваровМеждуОрганизациями.Характеристика КАК Характеристика,
	|		ПередачаТоваровМеждуОрганизациями.Серия КАК Серия,
	|		ПередачаТоваровМеждуОрганизациями.Назначение КАК Назначение,
	|		ПередачаТоваровМеждуОрганизациями.Количество КАК Количество,
	|		ПередачаТоваровМеждуОрганизациями.Ссылка КАК ДокументПередачи
	|	ИЗ
	|		Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ПередачаТоваровМеждуОрганизациями
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПроверяемыеТовары КАК ПроверяемыеТовары
	|			ПО ПередачаТоваровМеждуОрганизациями.Ссылка = ПроверяемыеТовары.ДокументПередачи
	|				И (ПроверяемыеТовары.Номенклатура = ПередачаТоваровМеждуОрганизациями.Номенклатура)
	|				И (ПроверяемыеТовары.Характеристика = ПередачаТоваровМеждуОрганизациями.Характеристика)
	|				И (ПроверяемыеТовары.Серия = ПередачаТоваровМеждуОрганизациями.Серия)
	|				И (ПроверяемыеТовары.Назначение = ПередачаТоваровМеждуОрганизациями.Назначение)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументовСторно
	|			ПО ПередачаТоваровМеждуОрганизациями.Ссылка = РеестрДокументовСторно.СторнируемыйДокумент
	|				И РеестрДокументовСторно.Проведен
	|				И НЕ РеестрДокументовСторно.ДополнительнаяЗапись
	|	ГДЕ
	|		ПередачаТоваровМеждуОрганизациями.Ссылка.Проведен
	|		И РеестрДокументовСторно.Ссылка ЕСТЬ NULL
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВозвратТоваровМеждуОрганизациями.Номенклатура,
	|		ВозвратТоваровМеждуОрганизациями.Характеристика,
	|		ВозвратТоваровМеждуОрганизациями.Серия,
	|		ВозвратТоваровМеждуОрганизациями.Назначение,
	|		-ВозвратТоваровМеждуОрганизациями.Количество,
	|		ВозвратТоваровМеждуОрганизациями.ДокументПередачи
	|	ИЗ
	|		ПроверяемыеТовары КАК ПроверяемыеТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК ВозвратТоваровМеждуОрганизациями
	|			ПО ПроверяемыеТовары.ДокументПередачи = ВозвратТоваровМеждуОрганизациями.ДокументПередачи
	|				И ПроверяемыеТовары.Номенклатура = ВозвратТоваровМеждуОрганизациями.Номенклатура
	|				И ПроверяемыеТовары.Характеристика = ВозвратТоваровМеждуОрганизациями.Характеристика
	|				И ПроверяемыеТовары.Серия = ВозвратТоваровМеждуОрганизациями.Серия
	|				И ПроверяемыеТовары.Назначение = ВозвратТоваровМеждуОрганизациями.Назначение
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументовСторно
	|			ПО ВозвратТоваровМеждуОрганизациями.Ссылка = РеестрДокументовСторно.СторнируемыйДокумент
	|				И РеестрДокументовСторно.Проведен
	|				И НЕ РеестрДокументовСторно.ДополнительнаяЗапись
	|	ГДЕ
	|		ВозвратТоваровМеждуОрганизациями.Ссылка.Проведен
	|		И РеестрДокументовСторно.Ссылка ЕСТЬ NULL
	|		И ВозвратТоваровМеждуОрганизациями.Ссылка <> &ЭтотВозвратСсылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПроверяемыеТовары.Номенклатура,
	|		ПроверяемыеТовары.Характеристика,
	|		ПроверяемыеТовары.Серия,
	|		ПроверяемыеТовары.Назначение,
	|		-ПроверяемыеТовары.Количество,
	|		ПроверяемыеТовары.ДокументПередачи
	|	ИЗ
	|		ПроверяемыеТовары КАК ПроверяемыеТовары) КАК ПроверяемыеТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроверяемыеТовары.Серия,
	|	ПроверяемыеТовары.ДокументПередачи,
	|	ПроверяемыеТовары.Назначение,
	|	ПроверяемыеТовары.Характеристика,
	|	ПроверяемыеТовары.Номенклатура,
	|	ПроверяемыеТовары.Номенклатура.ЕдиницаИзмерения,
	|	ПроверяемыеТовары.ДокументПередачи.Номер
	|
	|ИМЕЮЩИЕ
	|	СУММА(ПроверяемыеТовары.Количество) < 0";
	
	Запрос.УстановитьПараметр("ТаблицаПроверяемыеТовары", Товары);
	Запрос.УстановитьПараметр("ЭтотВозвратСсылка", Ссылка);
	#Вставка
	//++РС Консалт: Минаков А.С. Задача 24557
	ТаблицаПроверяемыеТовары = Товары.Выгрузить();
	ТаблицаПроверяемыеТовары.Свернуть("Номенклатура, Характеристика, Серия, Назначение, ДокументПередачи", "Количество");
	Запрос.УстановитьПараметр("ТаблицаПроверяемыеТовары", ТаблицаПроверяемыеТовары);
	//++РС Консалт: Минаков А.С. Задача 24557
	#КонецВставки

	УстановитьПривилегированныйРежим(Истина);
	ТаблицаОшибок = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);

	Если ТаблицаОшибок.Количество() > 0 Тогда
		Отказ = Истина;

		Для каждого СтрокаОшибки Из ТаблицаОшибок Цикл
			СообщениеОбОшибке = НСтр("ru = 'Возврат по номенклатуре %ПредставлениеТовара% превышает количество реализованных товаров по документу продажи %НомерРеализации% на %Количество% %ЕдиницаИзмерения%';
			|en = 'Return of products %ПредставлениеТовара% exceeds the quantity of purchased goods against sales document %НомерРеализации% at %Количество% %ЕдиницаИзмерения%'");

			ПредставлениеТовара = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(
			СтрокаОшибки.Номенклатура,
			СтрокаОшибки.Характеристика,
			СтрокаОшибки.Серия,
			,
			СтрокаОшибки.Назначение);


			СообщениеОбОшибке = СтрЗаменить(СообщениеОбОшибке, "%ПредставлениеТовара%",  ПредставлениеТовара);
			СообщениеОбОшибке = СтрЗаменить(СообщениеОбОшибке, "%Количество%",          -СтрокаОшибки.Количество);
			СообщениеОбОшибке = СтрЗаменить(СообщениеОбОшибке, "%ЕдиницаИзмерения%",     СтрокаОшибки.ЕдиницаИзмерения);
			СообщениеОбОшибке = СтрЗаменить(СообщениеОбОшибке, "%НомерРеализации%",      СтрокаОшибки.НомерРеализации);

			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке);
		КонецЦикла; 
	КонецЕсли; 

КонецПроцедуры
