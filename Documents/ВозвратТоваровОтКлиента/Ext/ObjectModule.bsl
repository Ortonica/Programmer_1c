
&ИзменениеИКонтроль("ОбработкаЗаполнения")
Процедура РСК_ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	ЗаполненНаОснованииДокумента = Ложь;

	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);

	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("ЗаполнитьПоПереданнойТаре") Тогда
			ЗаполнитьДокументНаОснованииПереданнойТары(ДанныеЗаполнения);
			ЗаполненНаОснованииДокумента = Истина;
		ИначеЕсли ДанныеЗаполнения.Свойство("АктОРасхождениях") 
			И ДанныеЗаполнения.Свойство("ОснованиеАкта") Тогда

			Если ТипЗнч(ДанныеЗаполнения.ОснованиеАкта) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
				ЗаполнитьДокументНаОснованииАктаПослеОтгрузки(ДанныеЗаполнения);
			ИначеЕсли ТипЗнч(ДанныеЗаполнения.ОснованиеАкта) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") Тогда
				ЗаполнитьДокументНаОснованииАктаПослеПриемки(ДанныеЗаполнения);
			КонецЕсли;
		ИначеЕсли ДанныеЗаполнения.Свойство("МассивЗаказов") Тогда
			ЗаполнитьПоЗаказу(ДанныеЗаполнения);
		ИначеЕсли ДанныеЗаполнения.Свойство("ЗаполнитьПоРеализацииТоваров") Тогда
			ЗаполнитьДокументНаОснованииРеализацииТоваровИУслуг(ДанныеЗаполнения.ДокументОснование, ДанныеЗаполнения.ПараметрыОформления);
			ЗаполненНаОснованииДокумента = Истина;
		Иначе
			ЗаполнитьДокументПоОтбору(ДанныеЗаполнения);
		КонецЕсли;
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		ЗаполнитьДокументНаОснованииРеализацииТоваровИУслуг(ДанныеЗаполнения);
		ЗаполненНаОснованииДокумента = Истина;
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента") Тогда
		ЗаполнитьДокументНаОснованииЗаявкиНаВозвратТоваровОтКлиента(ДанныеЗаполнения);
		ЗаполненНаОснованииДокумента = Истина;

	КонецЕсли;

	ОчиститьСпособОпределенияСебестоимостиИДокументРеализации();

	ВозвратТоваровОтКлиентаЛокализация.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);

	Если Не ЗаполненНаОснованииДокумента Тогда
		ИнициализироватьУсловияПродаж();
	КонецЕсли; 
	#Вставка
	//++РС Консалт Назаров М.Ю. 21 ноября 2022 г. 13:14:37                  
	Попытка
		Если ТипЗнч(ДанныеЗаполнения.ОснованиеАкта) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда 
			ЭтотОбъект.Менеджер = ДанныеЗаполнения.ОснованиеАкта.Менеджер;		
		КонецЕсли;
		
		Если ТипДанныхЗаполнения = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда 
			ЭтотОбъект.Менеджер = ДанныеЗаполнения.Менеджер;		
		КонецЕсли;                                                                                       
	Исключение
	КонецПопытки;
	//--РС Консалт Назаров М.Ю. 21 ноября 2022 г. 13:14:37
	#КонецВставки

	ИнициализироватьДокумент(ДанныеЗаполнения);

	ВзаиморасчетыСервер.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения);

	БонусныеБаллыСервер.ЗаполнитьБонусныеБаллыВозвратТоваровОтКлиента(ЭтотОбъект);

	ПересчитатьКоличествоРНПТ();

КонецПроцедуры

&ИзменениеИКонтроль("ЗаполнитьДокументНаОснованииЗаявкиНаВозвратТоваровОтКлиента")
Процедура РСК_ЗаполнитьДокументНаОснованииЗаявкиНаВозвратТоваровОтКлиента(Знач ДокументОснование)
	УстановитьПривилегированныйРежим(Истина);

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("ПустаяСерия", Справочники.СерииНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("ИспользоватьРасширенныеВозможностиЗаказаКлиента",
	ПолучитьФункциональнуюОпцию("ИспользоватьРасширенныеВозможностиЗаказаКлиента"));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаявкаНаВозвратТоваровОтКлиента.ОбъектРасчетов КАК ОбъектРасчетов
	|
	|ПОМЕСТИТЬ ОбъектыРасчетов
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозвратТоваровОтКлиента
	|ГДЕ
	|	ЗаявкаНаВозвратТоваровОтКлиента.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.ОбъектРасчетов КАК ОбъектРасчетов
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозврат
	|	ПО
	|		ЗаявкаНаВозврат.ДокументРеализации = ТаблицаТовары.Ссылка
	|
	|ГДЕ
	|	ЗаявкаНаВозврат.Ссылка = &ДокументОснование
	|	И ТаблицаТовары.Ссылка.РеализацияПоЗаказам
	|	И ТаблицаТовары.ЗаказКлиента <> НЕОПРЕДЕЛЕНО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаявкаНаВозврат.ОбъектРасчетов КАК ОбъектРасчетов
	|
	|ПОМЕСТИТЬ ОбъектыРасчетовПоЗаявке
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозврат
	|ГДЕ
	|	ЗаявкаНаВозврат.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.ОбъектРасчетов КАК ОбъектРасчетов
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозврат
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
	|	ПО
	|		ТаблицаТовары.ЗаказКлиента = ЗаявкаНаВозврат.Ссылка
	|
	|ГДЕ
	|	ЗаявкаНаВозврат.Ссылка = &ДокументОснование
	|	И ТаблицаТовары.Ссылка.РеализацияПоЗаказам
	|	И ТаблицаТовары.ЗаказКлиента <> НЕОПРЕДЕЛЕНО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаявкаНаВозвратТоваровОтКлиента.Ссылка                КАК ЗаявкаНаВозвратТоваровОтКлиента,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Партнер               КАК Партнер,
	#Вставка
	|	ЗаявкаНаВозвратТоваровОтКлиента.Менеджер              КАК Менеджер,
	#КонецВставки
	|	ЗаявкаНаВозвратТоваровОтКлиента.ДокументРеализации    КАК ДокументРеализации,
	|	ЗаявкаНаВозвратТоваровОтКлиента.ЧекККМ                КАК ЧекККМ,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Контрагент            КАК Контрагент,
	|	ЗаявкаНаВозвратТоваровОтКлиента.КонтактноеЛицо        КАК КонтактноеЛицо,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Организация           КАК Организация,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Соглашение            КАК Соглашение,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Валюта                КАК Валюта,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Склад                 КАК Склад,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Подразделение         КАК Подразделение,
	|	ЗаявкаНаВозвратТоваровОтКлиента.ВозвратПорчи          КАК ВозвратПорчи,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Сделка                КАК Сделка,
	|	ЗаявкаНаВозвратТоваровОтКлиента.ЦенаВключаетНДС       КАК ЦенаВключаетНДС,
	|	ЗаявкаНаВозвратТоваровОтКлиента.НалогообложениеНДС    КАК НалогообложениеНДС,
	|	ЗаявкаНаВозвратТоваровОтКлиента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Статус                КАК СтатусДокумента,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Договор               КАК Договор,
	|	ЗаявкаНаВозвратТоваровОтКлиента.ВариантПриемкиТоваров КАК ВариантПриемкиТоваров,
	|	
	|	ВЫБОР КОГДА ЗаявкаНаВозвратТоваровОтКлиента.СпособКомпенсации = ЗНАЧЕНИЕ(Перечисление.СпособыКомпенсацииВозвратовТоваров.ЗаменитьТовары) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СпособыКомпенсацииВозвратовТоваров.ВернутьДенежныеСредства)
	|	ИНАЧЕ
	|		ЗаявкаНаВозвратТоваровОтКлиента.СпособКомпенсации
	|	КОНЕЦ КАК СпособКомпенсации,
	|	
	|	НЕ ЗаявкаНаВозвратТоваровОтКлиента.Проведен           КАК ЕстьОшибкиПроведен,
	|	ЗаявкаНаВозвратТоваровОтКлиента.ВернутьМногооборотнуюТару КАК ВозвратПереданнойМногооборотнойТары,
	|	ЗаявкаНаВозвратТоваровОтКлиента.ТребуетсяЗалогЗаТару КАК ПредусмотренЗалогЗаТару,
	|	ЗаявкаНаВозвратТоваровОтКлиента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗаявкаНаВозвратТоваровОтКлиента.ОплатаВВалюте КАК ОплатаВВалюте,
	|	ЕСТЬNULL(ЗаявкаНаВозвратТоваровОтКлиента.Договор.КомиссионныеПродажи25, ЛОЖЬ) КАК ДоговорКомиссионныеПродажи25,
	|
	|	ЗаявкаНаВозвратТоваровОтКлиента.ВозвращаемыеСерии.(
	|		Номенклатура                                 КАК Номенклатура,
	|		Характеристика                               КАК Характеристика,
	|		Серия                                        КАК Серия,
	|		Назначение                                   КАК Назначение,
	|		Количество                                   КАК Количество,
	|		ДокументРеализации                           КАК ДокументРеализации
	|	) КАК Серии
	|
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозвратТоваровОтКлиента
	|ГДЕ
	|	ЗаявкаНаВозвратТоваровОтКлиента.Ссылка = &ДокументОснование
	|;
	|ВЫБРАТЬ
	|	РасчетыСКлиентами.ОбъектРасчетов             КАК ОбъектРасчетов,
	|	РасчетыСКлиентами.Валюта                     КАК ВалютаВзаиморасчетов,
	|	РасчетыСКлиентами.КОплатеОстаток             КАК Сумма,
	|	ЕСТЬNULL(РасчетыСКлиентами.КОплатеОстаток, 0) + ЕСТЬNULL(РасчетыСКлиентами.СуммаОстаток, 0) КАК СуммаОстаток
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами.Остатки(,
	|		ОбъектРасчетов В
	|			(ВЫБРАТЬ
	|				ОбъектРасчетов
	|			ИЗ
	|				ОбъектыРасчетовПоЗаявке)) КАК РасчетыСКлиентами
	|;
	|ВЫБРАТЬ
	|	РасчетыСКлиентами.ОбъектРасчетов              КАК ОбъектРасчетов,
	|	РасчетыСКлиентами.Валюта                      КАК ВалютаВзаиморасчетов,
	|	РасчетыСКлиентами.КОплатеОстаток              КАК Сумма,
	|	ЕСТЬNULL(РасчетыСКлиентами.СуммаОстаток, 0)   КАК СуммаОстаток
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами.Остатки(,
	|		ОбъектРасчетов В
	|			(ВЫБРАТЬ
	|				ОбъектРасчетов
	|			ИЗ
	|				ОбъектыРасчетов)) КАК РасчетыСКлиентами
	|";

	МассивРезультатов                 = Запрос.ВыполнитьПакет();

	РезультатШапка                    = МассивРезультатов[2]; // РезультатЗапроса
	РезультатРасчетыПоЗаявке          = МассивРезультатов[3]; // РезультатЗапроса
	РезультатРасчетыПоОснованиюЗаявки = МассивРезультатов[4]; // РезультатЗапроса

	ВыборкаШапка                      = РезультатШапка.Выбрать();
	ВыборкаРасчетыПоЗаявке            = РезультатРасчетыПоЗаявке.Выбрать();
	ВыборкаРасчетыПоОснованиюЗаявки   = РезультатРасчетыПоОснованиюЗаявки.Выбрать();

	ВыборкаШапка.Следующий();

	Если ВыборкаШапка.ДоговорКомиссионныеПродажи25 Тогда
		ТекстОшибки = НСтр("ru = 'Невозможно оформить документ ""%1"" на основании распоряжения %2 с договором комиссии версии %3. Для оформления возврата воспользуйтесь документом ""%4""';
		|en = 'Cannot register the ""%1"" document based on the %2 reference with the commission contract version %3. To register the return, use the ""%4"" document'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки,
		Метаданные.Документы.ВозвратТоваровОтКлиента.Синоним,
		ДокументОснование,
		КомиссионнаяТорговляСервер.ПостфиксСхемыКомиссии25(),
		Метаданные.Документы.ПоступлениеТоваровОтХранителя.Синоним);

		ВызватьИсключение ТекстОшибки;
	КонецЕсли;

	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииПоОперации(ДокументОснование, "ВозвратТоваровОтКлиента",
	ВыборкаШапка.ХозяйственнаяОперация);

	Документы.ЗаявкаНаВозвратТоваровОтКлиента.ПроверитьВозможностьВводаНаОсновании(
	ВыборкаШапка.ЗаявкаНаВозвратТоваровОтКлиента,
	ВыборкаШапка.СтатусДокумента,
	ВыборкаШапка.ЕстьОшибкиПроведен,
	Истина);

	// Заполнение шапки.
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаШапка);

	Серии.Загрузить(ВыборкаШапка.Серии.Выгрузить());

	// Заполнение ТЧ товары.
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗаявкаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗаявкаТовары.НоменклатураНабора КАК НоменклатураНабора,
	|	ЗаявкаТовары.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ЗаявкаТовары.Номенклатура КАК Номенклатура,
	|	ЗаявкаТовары.Характеристика КАК Характеристика,
	|	ЗаявкаТовары.Серия КАК Серия,
	|	ЗаявкаТовары.Назначение КАК Назначение,
	|	ЗаявкаТовары.Количество КАК КоличествоВЗаявке,
	|	ЗаявкаТовары.Порча КАК Порча,
	|	ЗаявкаТовары.НоменклатураОприходование КАК НоменклатураОприходование,
	|	ЗаявкаТовары.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|	ЗаявкаТовары.КодСтроки КАК КодСтроки,
	|	ВЫБОР
	|		КОГДА ЗаявкаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ &ТекстЗапросаКоэффициентУпаковки
	|	КОНЕЦ КАК Коэффициент,
	|	ЗаявкаТовары.Упаковка КАК Упаковка,
	|	ЗаявкаТовары.Цена КАК Цена,
	|	ЗаявкаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ЗаявкиНаВозвратТоваровОтКлиентов.КОформлениюОстаток КАК Количество,
	|	ЗаявкаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ЗаявкаТовары.Сумма КАК Сумма,
	|	ЗаявкаТовары.ДокументРеализации КАК ДокументРеализации
	|ПОМЕСТИТЬ ЗаявкаТовары
	|ИЗ
	|	РегистрНакопления.ЗаявкиНаВозвратТоваровОтКлиентов.Остатки(, ЗаявкаНаВозвратТоваровОтКлиента = &ДокументОснование) КАК ЗаявкиНаВозвратТоваровОтКлиентов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВозвратТоваровОтКлиента.ВозвращаемыеТовары КАК ЗаявкаТовары
	|		ПО (ЗаявкаТовары.Ссылка = &ДокументОснование)
	|			И ЗаявкиНаВозвратТоваровОтКлиентов.КодСтроки = ЗаявкаТовары.КодСтроки
	|			И (ЗаявкиНаВозвратТоваровОтКлиентов.Номенклатура = ВЫБОР
	|				КОГДА ЗаявкаТовары.Порча
	|						И ЗаявкаТовары.Ссылка.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|					ТОГДА ЗаявкаТовары.НоменклатураОприходование
	|				ИНАЧЕ ЗаявкаТовары.Номенклатура
	|			КОНЕЦ)
	|			И (ЗаявкиНаВозвратТоваровОтКлиентов.Характеристика = ВЫБОР
	|				КОГДА ЗаявкаТовары.Порча
	|						И ЗаявкаТовары.Ссылка.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|					ТОГДА ЗаявкаТовары.ХарактеристикаОприходование
	|				ИНАЧЕ ЗаявкаТовары.Характеристика
	|			КОНЕЦ)
	|ГДЕ
	|	ЗаявкиНаВозвратТоваровОтКлиентов.КОформлениюОстаток > 0 И &ИспользоватьРасширенныеВозможностиЗаказаКлиента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаявкаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗаявкаТовары.НоменклатураНабора КАК НоменклатураНабора,
	|	ЗаявкаТовары.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ЗаявкаТовары.Номенклатура КАК Номенклатура,
	|	ЗаявкаТовары.Характеристика КАК Характеристика,
	|	ЗаявкаТовары.Серия КАК Серия,
	|	ЗаявкаТовары.Назначение КАК Назначение,
	|	ЗаявкаТовары.Количество КАК КоличествоВЗаявке,
	|	ЗаявкаТовары.Порча КАК Порча,
	|	ЗаявкаТовары.НоменклатураОприходование КАК НоменклатураОприходование,
	|	ЗаявкаТовары.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|	ЗаявкаТовары.КодСтроки КАК КодСтроки,
	|	ВЫБОР
	|		КОГДА ЗаявкаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ &ТекстЗапросаКоэффициентУпаковки
	|	КОНЕЦ КАК Коэффициент,
	|	ЗаявкаТовары.Упаковка КАК Упаковка,
	|	ЗаявкаТовары.Цена КАК Цена,
	|	ЗаявкаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ЗаявкаТовары.Количество КАК Количество,
	|	ЗаявкаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ЗаявкаТовары.Сумма КАК Сумма,
	|	ЗаявкаТовары.ДокументРеализации КАК ДокументРеализации
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента.ВозвращаемыеТовары КАК ЗаявкаТовары
	|
	|ГДЕ
	|	ЗаявкаТовары.Ссылка = &ДокументОснование И НЕ &ИспользоватьРасширенныеВозможностиЗаказаКлиента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаявкаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗаявкаТовары.НоменклатураНабора КАК НоменклатураНабора,
	|	ЗаявкаТовары.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ЗаявкаТовары.Номенклатура КАК Номенклатура,
	|	ЗаявкаТовары.Характеристика КАК Характеристика,
	|	ЗаявкаТовары.Серия КАК Серия,
	|	ЗаявкаТовары.Назначение КАК Назначение,
	|	ЗаявкаТовары.КоличествоВЗаявке КАК КоличествоВЗаявке,
	|	ЗаявкаТовары.Порча КАК Порча,
	|	ЗаявкаТовары.НоменклатураОприходование КАК НоменклатураОприходование,
	|	ЗаявкаТовары.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|	ЗаявкаТовары.КодСтроки КАК КодСтроки,
	|	ЗаявкаТовары.Коэффициент,
	|	ЗаявкаТовары.Упаковка КАК Упаковка,
	|	ЗаявкаТовары.Цена КАК Цена,
	|	ЗаявкаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ЗаявкаТовары.Количество КАК Количество,
	|	ЗаявкаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ЗаявкаТовары.Сумма КАК Сумма,
	|	ЗаявкаТовары.ДокументРеализации КАК ДокументРеализации
	|ИЗ
	|	ЗаявкаТовары КАК ЗаявкаТовары
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаявкаТовары.НомерСтроки
	|";

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
	"&ТекстЗапросаКоэффициентУпаковки",
	Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
	"ЗаявкаТовары.Упаковка",
	"ЗаявкаТовары.Номенклатура"));

	Запрос.Текст = ТекстЗапроса;
	ВыборкаТовары = Запрос.Выполнить().Выбрать();

	Пока ВыборкаТовары.Следующий() Цикл

		СтрокаТаб = Товары.Добавить();

		ЗаполнитьЗначенияСвойств(СтрокаТаб, ВыборкаТовары, "НоменклатураНабора, ХарактеристикаНабора,
		|Номенклатура, Характеристика, Серия, Назначение, Упаковка, КодСтроки, Цена, СтавкаНДС, ДокументРеализации");

		Если НЕ ЗначениеЗаполнено(СтрокаТаб.ДокументРеализации) Тогда
			СтрокаТаб.ДокументРеализации = ДокументРеализации;
		КонецЕсли;

		СтрокаТаб.Количество         = ВыборкаТовары.Количество;
		СтрокаТаб.КоличествоУпаковок = ВыборкаТовары.Количество / ВыборкаТовары.Коэффициент;
		Если ВыборкаТовары.КоличествоВЗаявке = СтрокаТаб.Количество Тогда
			СтрокаТаб.Сумма = ВыборкаТовары.Сумма;
		Иначе
			СтрокаТаб.Сумма = СтрокаТаб.КоличествоУпаковок * СтрокаТаб.Цена;
		КонецЕсли; 
		СтрокаТаб.СуммаНДС           = ЦенообразованиеКлиентСервер.РассчитатьСуммуНДС(СтрокаТаб.Сумма, СтрокаТаб.СтавкаНДС, ЦенаВключаетНДС);
		СтрокаТаб.СуммаСНДС          = ?(ЦенаВключаетНДС, СтрокаТаб.Сумма, СтрокаТаб.Сумма+СтрокаТаб.СуммаНДС);

		Если ВыборкаТовары.Порча
			И ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера Тогда

			ЗаполнитьЗначенияСвойств(СтрокаТаб, ВыборкаТовары, "Порча, НоменклатураОприходование, ХарактеристикаОприходование")

		КонецЕсли;

		СтрокаТаб.СпособОпределенияСебестоимости = ?(ЗначениеЗаполнено(СтрокаТаб.ДокументРеализации),
		Перечисления.СпособыОпределенияСебестоимости.ИзДокументаПродажи,
		Перечисления.СпособыОпределенияСебестоимости.ИзТекущегоДокумента);

	КонецЦикла;

	ЗаполнитьНомераГТДПоРаспоряжениям();

	Если Товары.Количество() = 0 Тогда

		ТекстСообщения = НСтр("ru = 'Нет данных для заполнения по документу ""%Заявка%"" .';
		|en = 'No data for population by document ""%Заявка%"".'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Заявка%", ВыборкаШапка.ЗаявкаНаВозвратТоваровОтКлиента);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ЗаявкаНаВозвратТоваровОтКлиента");

	Иначе

		Если ВыборкаШапка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента Или
			ВыборкаШапка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя Тогда

			СуммаКРаспределению = ПолучитьСуммуДокумента();

			Пока СуммаКРаспределению > 0 И ВыборкаРасчетыПоОснованиюЗаявки.Следующий() Цикл

				Если ВыборкаРасчетыПоОснованиюЗаявки.СуммаОстаток > 0 Тогда

					НоваяСтрока                      = РасшифровкаПлатежа.Добавить();
					НоваяСтрока.ВалютаВзаиморасчетов = ВыборкаРасчетыПоОснованиюЗаявки.ВалютаВзаиморасчетов;
					НоваяСтрока.ОбъектРасчетов       = ВыборкаРасчетыПоОснованиюЗаявки.ОбъектРасчетов;

					Коэффициенты  = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
					Валюта, ВыборкаРасчетыПоОснованиюЗаявки.ВалютаВзаиморасчетов, ТекущаяДатаСеанса(), Организация);
					СуммаПоСтроке = ?(Коэффициенты.КоэффициентПересчетаВВалютуВзаиморасчетов <> 0, ВыборкаРасчетыПоОснованиюЗаявки.СуммаОстаток / Коэффициенты.КоэффициентПересчетаВВалютуВзаиморасчетов, 0);

					Если СуммаКРаспределению > СуммаПоСтроке Тогда

						НоваяСтрока.Сумма = СуммаПоСтроке;

					Иначе

						НоваяСтрока.Сумма = СуммаКРаспределению;

					КонецЕсли;

					СуммаКРаспределению = СуммаКРаспределению - НоваяСтрока.Сумма;

				КонецЕсли;

			КонецЦикла;

			Если СуммаКРаспределению > 0 И ВыборкаРасчетыПоЗаявке.Следующий() Тогда

				Если ВыборкаРасчетыПоЗаявке.СуммаОстаток > 0 Тогда

					НоваяСтрока                      = РасшифровкаПлатежа.Добавить();
					НоваяСтрока.ВалютаВзаиморасчетов = ВыборкаРасчетыПоЗаявке.ВалютаВзаиморасчетов;
					НоваяСтрока.ОбъектРасчетов       = ВыборкаРасчетыПоЗаявке.ОбъектРасчетов;

					Если СуммаКРаспределению > ВыборкаРасчетыПоЗаявке.СуммаОстаток Тогда

						НоваяСтрока.Сумма = ВыборкаРасчетыПоЗаявке.СуммаОстаток;

					Иначе

						НоваяСтрока.Сумма = СуммаКРаспределению;

					КонецЕсли;

					СуммаКРаспределению = СуммаКРаспределению - НоваяСтрока.Сумма;

				КонецЕсли;

			КонецЕсли;

			Если СуммаКРаспределению > 0 Тогда

				НоваяСтрока = РасшифровкаПлатежа.Добавить();

				НоваяСтрока.ВалютаВзаиморасчетов = Валюта;
				НоваяСтрока.ОбъектРасчетов       = Неопределено;
				НоваяСтрока.Сумма                = СуммаКРаспределению;

			КонецЕсли;

			РасшифровкаПлатежа.Свернуть("ОбъектРасчетов, ВалютаВзаиморасчетов", "Сумма"); 

		КонецЕсли;

	КонецЕсли;

	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры
