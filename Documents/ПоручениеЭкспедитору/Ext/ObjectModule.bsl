&После("ОбработкаПроверкиЗаполнения")
Процедура РСК_ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	//Начало РС Консалт: Трофимов Евгений 05.07.2022 Выдача ТСР
	Если РСК_АктВыдачиТСР Тогда
		ПроверяемыеРеквизиты.Добавить("РСК_СтатусАктаВыдачиТСР");
		
		//++ РС Консалт: Трофимов Евгений 07.11.2022 Задача 21692
		//e1cib/data/Документ.Задание?ref=8ca2e0e383512fe34ec070a3a6e4d53a
		//Претензия. Сивак Елена: не даёт ПРОВЕСТИ и ЗАКРЫТЬ акт при добавлении комментария, 
		//требует заполнить поле "СКЛАД" - такого не должно быть и не было еще полчаса назад
		Если ПроверяемыеРеквизиты.Найти("Склад") <> Неопределено Тогда
			ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Склад"));
		КонецЕсли;
		Если ПроверяемыеРеквизиты.Найти("АдресДоставки") <> Неопределено Тогда
			ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("АдресДоставки"));
		КонецЕсли;
		Если ПроверяемыеРеквизиты.Найти("ОсобыеУсловияПеревозкиОписание") <> Неопределено Тогда
			ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("ОсобыеУсловияПеревозкиОписание"));
		КонецЕсли;
		Если ПроверяемыеРеквизиты.Найти("СпособДоставки") <> Неопределено Тогда
			ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("СпособДоставки"));
		КонецЕсли;
		//-- КонецЗадачи 21692
		
	КонецЕсли;
	//Конец РС Консалт: Трофимов Евгений 05.07.2022 Выдача ТСР
	
КонецПроцедуры

&После("ОбработкаПроведения")
Процедура РСК_ОбработкаПроведения(Отказ, РежимПроведения)
	//Начало РС Консалт: Трофимов Евгений 05.07.2022 Выдача ТСР
	ПроведениеПоРегиструАктВыдачиТСР(Отказ);
	ПроведениеПоРегиструСостоянияЗаказовПоВыдачеТСР(Отказ);
	ПроведениеПоРегиструСтатусыВыполненияКонтрактов(Отказ);
	//Конец РС Консалт: Трофимов Евгений 05.07.2022 Выдача ТСР
	
КонецПроцедуры


#Область ТрофимовЕВ_05_07_2022_ВыдачаТСР

Процедура ПроведениеПоРегиструАктВыдачиТСР(Отказ)
	
	Движения.РСК_АктВыдачиТСР.Очистить();
	Движения.РСК_АктВыдачиТСР.Записывать = Истина;
	Если НЕ РСК_АктВыдачиТСР Тогда
		Возврат;
	КонецЕсли;
	
	Если РСК_СтатусАктаВыдачиТСР = Перечисления.РСК_СтатусыАктовВыдачи.Подготовлен Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЕСТЬNULL(ЗаказКлиента.Сделка, ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)) КАК Контракт,
			|	ЕСТЬNULL(ПоручениеЭкспедиторуОснования.Ссылка, ЗНАЧЕНИЕ(Документ.ЗаказКлиента.ПустаяСсылка)) КАК Заказ,
			|	ПоручениеЭкспедитору.РСК_ТСР КАК ТСР,
			|	ПоручениеЭкспедитору.РСК_Характеристика КАК Характеристика,
			|	ПоручениеЭкспедитору.Пункт КАК ПолучательТСР,
			|	ПоручениеЭкспедитору.РСК_НомерНаправления КАК НомерНаправления,
			|	ПоручениеЭкспедитору.РСК_Количество КАК Количество,
			|	ПоручениеЭкспедитору.РСК_Номенклатура КАК Номенклатура,
			|	ПоручениеЭкспедитору.РСК_Серия КАК Серия
			|ИЗ
			|	Документ.ПоручениеЭкспедитору КАК ПоручениеЭкспедитору
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоручениеЭкспедитору.Основания КАК ПоручениеЭкспедиторуОснования
			|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК ЗаказКлиента
			|			ПО ПоручениеЭкспедиторуОснования.Ссылка = ЗаказКлиента.Ссылка
			|		ПО ПоручениеЭкспедитору.Ссылка = ПоручениеЭкспедиторуОснования.Ссылка
			|			И (ПоручениеЭкспедиторуОснования.НомерСтроки = 1)
			|ГДЕ
			|	ПоручениеЭкспедитору.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Движение = Движения.РСК_АктВыдачиТСР.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, Выборка);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроведениеПоРегиструСостоянияЗаказовПоВыдачеТСР(Отказ)

	Движения.РСК_СостояниеЗаказовКлиентовПоВыдаче.Очистить();
	Движения.РСК_СостояниеЗаказовКлиентовПоВыдаче.Записывать = Истина;
	
	Если НЕ РСК_АктВыдачиТСР ИЛИ РСК_СтатусАктаВыдачиТСР = Перечисления.РСК_СтатусыАктовВыдачи.Аннулирован Тогда
		Возврат;
	КонецЕсли;
	
	
	Заказ = Неопределено;
	Если Основания.Количество() > 0 Тогда
		Заказ = Основания[0].Основание;
	КонецЕсли;
	
	МассивОтгруженных = Новый Массив;
	МассивОтгруженных.Добавить(Перечисления.РСК_СтатусыАктовВыдачи.Отгружен);
	МассивОтгруженных.Добавить(Перечисления.РСК_СтатусыАктовВыдачи.Выдан);
	МассивОтгруженных.Добавить(Перечисления.РСК_СтатусыАктовВыдачи.ВОтчете);
	
	Если МассивОтгруженных.Найти(РСК_СтатусАктаВыдачиТСР) <> Неопределено Тогда
		
		Движение = Движения.РСК_СостояниеЗаказовКлиентовПоВыдаче.ДобавитьРасход();
		ДатаОтгрузки = РСК_ВызовСервера.ЕстьNULL(ПолучитьДатуОтгрузки(), '0001-01-01');
		Движение.Период = ?(ДатаОтгрузки = '0001-01-01', Дата, ДатаОтгрузки);
		Движение.Заказ = Заказ;
		Движение.ТСР = РСК_ТСР;
		Движение.Номенклатура = РСК_Номенклатура;
		Движение.Характеристика = РСК_Характеристика;
		Движение.Серия = РСК_Серия;
		Движение.КОтгрузке = РСК_Количество;
		Движение.Цена = РСК_Цена;
	КонецЕсли;
	
	Если РСК_СтатусАктаВыдачиТСР = Перечисления.РСК_СтатусыАктовВыдачи.Выдан
		ИЛИ РСК_СтатусАктаВыдачиТСР = Перечисления.РСК_СтатусыАктовВыдачи.ВОтчете Тогда
		//Статус ВОтчете нужен на тот случай, если после включения в отчёт перепроведут Поручение экспедитору. 
	
		Движение = Движения.РСК_СостояниеЗаказовКлиентовПоВыдаче.ДобавитьПриход();
		Движение.Период = ДатаВыполнения;
		Движение.Заказ = Заказ;
		Движение.ТСР = РСК_ТСР;
		Движение.Номенклатура = РСК_Номенклатура;
		Движение.Характеристика = РСК_Характеристика;
		Движение.Серия = РСК_Серия;
		Движение.КВключениюВОтчет = РСК_Количество;
		Движение.Цена = РСК_Цена;
	
	КонецЕсли;

	Движение = Движения.РСК_СостояниеЗаказовКлиентовПоВыдаче.ДобавитьРасход();
	Движение.Период = Дата;
	Движение.Заказ = Заказ;
	Движение.ТСР = РСК_ТСР;
	Движение.Номенклатура = РСК_Номенклатура;
	Движение.Характеристика = РСК_Характеристика;
	Движение.Серия = РСК_Серия;
	Движение.КСозданию = РСК_Количество;
	Движение.Цена = РСК_Цена;
	
	Движение = Движения.РСК_СостояниеЗаказовКлиентовПоВыдаче.ДобавитьПриход();
	Движение.Период = Дата;
	Движение.Заказ = Заказ;
	Движение.ТСР = РСК_ТСР;
	Движение.Номенклатура = РСК_Номенклатура;
	Движение.Характеристика = РСК_Характеристика;
	Движение.Серия = РСК_Серия;
	Движение.КОтгрузке = РСК_Количество;
	Движение.Цена = РСК_Цена;

КонецПроцедуры

Процедура ПроведениеПоРегиструСтатусыВыполненияКонтрактов(Отказ)

	Движения.РСК_СтатусыВыполненияКонтрактов.Очистить();
	Движения.РСК_СтатусыВыполненияКонтрактов.Записывать = Истина;
	
	Если НЕ РСК_АктВыдачиТСР Тогда
		Возврат;
	КонецЕсли;
	
	Заказ = Неопределено;
	Если Основания.Количество() > 0 Тогда
		Заказ = Основания[0].Основание;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	РСК_СтатусыВыполненияКонтрактов.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрСведений.РСК_СтатусыВыполненияКонтрактов КАК РСК_СтатусыВыполненияКонтрактов
		|ГДЕ
		|	РСК_СтатусыВыполненияКонтрактов.Регистратор <> &Ссылка
		|	И РСК_СтатусыВыполненияКонтрактов.Заказ = &Заказ
		|	И РСК_СтатусыВыполненияКонтрактов.ТСР = &ТСР
		|	И РСК_СтатусыВыполненияКонтрактов.ПолучательТСР = &ПолучательТСР
		|	И РСК_СтатусыВыполненияКонтрактов.НомерНаправления = &НомерНаправления
		|	И РСК_СтатусыВыполненияКонтрактов.Серия = &Серия
		|	И РСК_СтатусыВыполненияКонтрактов.Характеристика = &Характеристика
		|	И РСК_СтатусыВыполненияКонтрактов.Номенклатура = &Номенклатура";
	
	Запрос.УстановитьПараметр("Заказ", Заказ);
	Запрос.УстановитьПараметр("Номенклатура", РСК_Номенклатура);
	Запрос.УстановитьПараметр("НомерНаправления", РСК_НомерНаправления);
	Запрос.УстановитьПараметр("ПолучательТСР", Пункт);
	Запрос.УстановитьПараметр("Серия", РСК_Серия);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ТСР", РСК_ТСР);
	Запрос.УстановитьПараметр("Характеристика", РСК_Характеристика);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ОбщегоНазначения.СообщитьПользователю(
			"С такими параметрами (Заказ, Получатель, ТСР, Номенклатура, Номер направления, Характеристика, Серия) уже проведён " + Выборка.Регистратор,
			Выборка.Регистратор,,,
			Отказ
		);
		Возврат;
	КонецЦикла;
	
	Движение = Движения.РСК_СтатусыВыполненияКонтрактов.Добавить();
	Движение.Заказ = Заказ;
	Движение.ТСР = РСК_ТСР;
	Движение.Номенклатура = РСК_Номенклатура;
	Движение.Характеристика = РСК_Характеристика;
	Движение.Серия = РСК_Серия;
	Движение.ПолучательТСР = Пункт;
	Движение.НомерНаправления = РСК_НомерНаправления;
	Движение.Статус = РСК_СтатусАктаВыдачиТСР;
	Если РСК_СтатусАктаВыдачиТСР = Перечисления.РСК_СтатусыАктовВыдачи.Выдан Тогда
		Движение.ДатаЗаписи = ДатаВыполнения;
	Иначе
		Движение.ДатаЗаписи = ТекущаяДата();
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьДатуОтгрузки()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(ЗаданиеНаПеревозкуРаспоряжения.Ссылка.Дата) КАК ДатаОтгрузки
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|ГДЕ
		|	ЗаданиеНаПеревозкуРаспоряжения.Распоряжение = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.ДатаОтгрузки;
	КонецЦикла;
	
	Возврат Дата;


КонецФункции // ПолучитьДатуОтгрузки()

&ИзменениеИКонтроль("ПередЗаписью")
Процедура РСК_ПередЗаписью1(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);

	Если СпособДоставки = Перечисления.СпособыДоставки.ПоручениеЭкспедиторуВПункте Тогда
		Склад = Справочники.Склады.ПустаяСсылка();
	КонецЕсли;

	Если Не ЗначениеЗаполнено(ДатаВыполнения) Тогда
		#Удаление
		ДатаВыполнения = Дата;
		#КонецУдаления
		#Вставка
		//Начало РС Консалт: Трофимов Евгений 05.07.2022 Выдача ТСР
		Если РСК_АктВыдачиТСР Тогда
			МассивОтгруженных = Новый Массив;
			МассивОтгруженных.Добавить(Перечисления.РСК_СтатусыАктовВыдачи.Отгружен);
			МассивОтгруженных.Добавить(Перечисления.РСК_СтатусыАктовВыдачи.Выдан);
			МассивОтгруженных.Добавить(Перечисления.РСК_СтатусыАктовВыдачи.ВОтчете);
			//++ РС Консалт: Трофимов Евгений 16.11.2022 Задача 21918
			//e1cib/data/Документ.Задание?ref=992fdf161216286f41299f0b4668e51a
			//Ольга Полянская: в аннулированные акты добавить дату закрытия, т.е. дата закрытия= дате присвоения статуса Аннулирован
			МассивОтгруженных.Добавить(Перечисления.РСК_СтатусыАктовВыдачи.Аннулирован);
			//-- КонецЗадачи 21918			
			Если НЕ ЗначениеЗаполнено(ДатаВыполнения) 
				И МассивОтгруженных.Найти(РСК_СтатусАктаВыдачиТСР) <> Неопределено Тогда
				ДатаВыполнения = ТекущаяДатаСеанса();
			КонецЕсли;
		Иначе
			ДатаВыполнения = Дата;
		КонецЕсли;
		//Конец РС Консалт: Трофимов Евгений 05.07.2022 Выдача ТСР
		#КонецВставки
	КонецЕсли;

КонецПроцедуры

&После("ПередЗаписью")
Процедура РСК_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	Если РСК_АктВыдачиТСР Тогда
		РСК_Сумма = РСК_Количество * РСК_Цена;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


