&НаКлиенте
Перем КэшированныеЗначения; //используется механизмом обработки изменения реквизитов ТЧ

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    ЭтоНовый = НЕ ЗначениеЗаполнено(Объект.Ссылка);
    ЭтоКопирование = ЗначениеЗаполнено(Параметры.ЗначениеКопирования);
	УстановитьДоступностьСоглашений();
	ОбновитьВидимостьЭлементов();
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	СинхронизацияСЗаказамиПоставщику();
	ЗаполнитьНомерДатуЗаказа();
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗаполнитьНомерДатуЗаказа();
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗаполнитьНомерДатуЗаказа();
КонецПроцедуры

#Область СлужебныеПроцедурыИФункции
 
// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
 
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
 
#КонецОбласти

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура БрокерСоглашениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтруктураДополнительногоОтбора = Новый Структура();
	СтруктураДополнительногоОтбора.Вставить("ИспользуютсяДоговорыКонтрагентов", Истина);
	ЗакупкиКлиент.НачалоВыбораСоглашенияСПоставщиком(
		Элемент,
		СтандартнаяОбработка,
		Объект.Брокер,
		Объект.БрокерСоглашение,
		Объект.Дата,
		СтруктураДополнительногоОтбора);
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ЭкспедиторСоглашениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтруктураДополнительногоОтбора = Новый Структура();
	СтруктураДополнительногоОтбора.Вставить("ИспользуютсяДоговорыКонтрагентов", Истина);
	ЗакупкиКлиент.НачалоВыбораСоглашенияСПоставщиком(
		Элемент,
		СтандартнаяОбработка,
		Объект.Экспедитор,
		Объект.ЭкспедиторСоглашение,
		Объект.Дата,
		СтруктураДополнительногоОтбора);
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаСервере
Процедура УстановитьДоступностьСоглашений()
	Если ЗначениеЗаполнено(Объект.Брокер) Тогда
		КоличествоСоглашенийСПоставшиком = ЗакупкиВызовСервера.ПолучитьКоличествоСоглашенийСПоставщиком(Объект.Брокер);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "БрокерСоглашение", "Видимость", КоличествоСоглашенийСПоставшиком > 0);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Экспедитор) Тогда
		КоличествоСоглашенийСПоставшиком = ЗакупкиВызовСервера.ПолучитьКоличествоСоглашенийСПоставщиком(Объект.Экспедитор);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ЭкспедиторСоглашение", "Видимость", КоличествоСоглашенийСПоставшиком > 0);
	КонецЕсли;	
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура БрокерПриИзменении(Элемент)
	БрокерПриИзмененииНаСервере();
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаСервере
Процедура БрокерПриИзмененииНаСервере()

	ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Объект.Брокер, Объект.БрокерКонтрагент);
	Соглашение = Неопределено;
	
	ХозяйственнаяОперацияДоговора = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
	ХозяйственнаяОперацияДоговора = ЗакупкиСервер.ХозяйственныеОперацииПоОсновной(ХозяйственнаяОперацияДоговора);
	
	ДопПараметры = ЗакупкиСервер.ДополнительныеПараметрыОтбораДоговоров();
	ДопПараметры.ВалютаВзаиморасчетов = Объект.Валюта;
	
	СтруктураОбъекта = Новый Структура;
	СтруктураОбъекта.Вставить("Партнер", Объект.Брокер);
	СтруктураОбъекта.Вставить("Договор", Объект.БрокерДоговор);
	СтруктураОбъекта.Вставить("Контрагент", Объект.БрокерКонтрагент);
	СтруктураОбъекта.Вставить("Организация", Объект.Покупатель);
	
	Объект.БрокерДоговор = ЗакупкиСервер.ПолучитьДоговорПоУмолчанию(СтруктураОбъекта, ХозяйственнаяОперацияДоговора, ДопПараметры);
	УстановитьДоступностьСоглашений();

КонецПроцедуры // БрокерПриИзмененииНаСервере()

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ЭкспедиторПриИзменении(Элемент)
	ЭкспедиторПриИзмененииНаСервере();
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаСервере
Процедура ЭкспедиторПриИзмененииНаСервере()

	ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Объект.Экспедитор, Объект.ЭкспедиторКонтрагент);
	Соглашение = Неопределено;
	
	ХозяйственнаяОперацияДоговора = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
	ХозяйственнаяОперацияДоговора = ЗакупкиСервер.ХозяйственныеОперацииПоОсновной(ХозяйственнаяОперацияДоговора);
	
	ДопПараметры = ЗакупкиСервер.ДополнительныеПараметрыОтбораДоговоров();
	ДопПараметры.ВалютаВзаиморасчетов = Объект.Валюта;
	
	СтруктураОбъекта = Новый Структура;
	СтруктураОбъекта.Вставить("Партнер", Объект.Экспедитор);
	СтруктураОбъекта.Вставить("Договор", Объект.ЭкспедиторДоговор);
	СтруктураОбъекта.Вставить("Контрагент", Объект.ЭкспедиторКонтрагент);
	СтруктураОбъекта.Вставить("Организация", Объект.Покупатель);
	
	Объект.ЭкспедиторДоговор = ЗакупкиСервер.ПолучитьДоговорПоУмолчанию(СтруктураОбъекта, ХозяйственнаяОперацияДоговора, ДопПараметры);
	УстановитьДоступностьСоглашений();

КонецПроцедуры // ЭкспедиторПриИзмененииНаСервере()

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
КонецПроцедуры


//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ТоварыКоличествоУпаковокПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	СтруктураДействий = Новый Структура;	
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	РасчетСтрокиНаСервере(ТекущаяСтрока.НомерСтроки);
	ЗаполнитьНомерДатуЗаказа();

	
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаСервереБезКонтекста
Функция ПолучитьСтрокуЗаказа(ЗаказПоставщику, КодСтроки)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЗаказПоставщикуТовары.Номенклатура КАК Номенклатура,
		|	ЗаказПоставщикуТовары.Характеристика КАК Характеристика,
		|	ЗаказПоставщикуТовары.Серия КАК Серия,
		|	ЗаказПоставщикуТовары.КоличествоУпаковок КАК КоличествоУпаковок,
		|	ЗаказПоставщикуТовары.Количество КАК Количество,
		|	ЗаказПоставщикуТовары.Сумма КАК Сумма,
		|	ЗаказПоставщикуТовары.СуммаСНДС КАК СуммаСНДС,
		|	ЗаказПоставщикуТовары.Упаковка КАК Упаковка
		|ИЗ
		|	Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
		|ГДЕ
		|	ЗаказПоставщикуТовары.Ссылка = &ЗаказПоставщику
		|	И ЗаказПоставщикуТовары.КодСтроки = &КодСтроки";
	
	Запрос.УстановитьПараметр("ЗаказПоставщику", ЗаказПоставщику);
	Запрос.УстановитьПараметр("КодСтроки", КодСтроки);
	
	Возврат РСК_ВызовСервера.ЗапросВСтруктуру(Запрос, Истина);

КонецФункции // ПолучитьСтрокуЗаказа()

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Копирование Тогда
		//см. ПриНачалеРедактирования
	Иначе
		Отказ = Истина;
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ПартияПоставки", Объект.Ссылка);
		ПараметрыФормы.Вставить("Поставщик", Объект.Поставщик);
		ПараметрыФормы.Вставить("АдресХраненияПозиций", ПолучитьАдресХраненияПозиций());
		
		ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ПослеЗакрытияФормыПодборТоваров", ЭтаФорма);
		ОткрытьФорму(
			"Документ.РСК_ПартияПоставки.Форма.ПодборТоваров", 
			ПараметрыФормы, 
			ЭтаФорма,,,,
			ОписаниеОповещенияОЗакрытии,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
		);
	КонецЕсли;
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ТоварыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если Копирование И НоваяСтрока Тогда
		ЭтаФорма.ТекущийЭлемент = Элементы.ТоварыКоличествоУпаковок;
	КонецЕсли;
КонецПроцедуры


//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаСервере
Функция ПолучитьАдресХраненияПозиций()
	
	тзТовары = Объект.Товары.Выгрузить(,"ЗаказПоставщику,КодСтроки,Количество");
	тзТовары.Свернуть("ЗаказПоставщику,КодСтроки", "Количество");

	Возврат ПоместитьВоВременноеХранилище(
		тзТовары,
		УникальныйИдентификатор
	);

КонецФункции // ПолучитьАдресХраненияПозиций()

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ПослеЗакрытияФормыПодборТоваров(РезультатЗакрытия, ДополнительныеПараметры) Экспорт

	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДобавлениеПозиций(РезультатЗакрытия.АдресХраненияДобавляемыхПозиций);

КонецПроцедуры // ПослеЗакрытияФормыПодборТоваров()

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаСервере
Процедура ДобавлениеПозиций(АдресХраненияДобавляемыхПозиций)

	тзДобавляемыеПозиции = ПолучитьИзВременногоХранилища(АдресХраненияДобавляемыхПозиций);
	Для Каждого ДобавляемаяСтрока Из тзДобавляемыеПозиции Цикл
		Модифицированность = Истина;
		НС = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НС, ДобавляемаяСтрока);	
		РасчетСтрокиНаСервере(НС.НомерСтроки);
	КонецЦикла;
	ЗаполнитьНомерДатуЗаказа();

КонецПроцедуры // ДобавлениеПозиций()

// Расчет строки на сервере
//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
//
// Параметры:
//  НомерСтроки	 - Число - Номер строки
//
&НаСервере
Процедура РасчетСтрокиНаСервере(НомерСтроки)
	
	ТекущаяСтрока = Объект.Товары[НомерСтроки - 1];

	СтрокаЗаказа = ПолучитьСтрокуЗаказа(ТекущаяСтрока.ЗаказПоставщику, ТекущаяСтрока.КодСтроки);
	Если СтрокаЗаказа = Неопределено Тогда
		ОбщегоНазначения.СообщитьПользователю(
			"Не найдена строка "+ТекущаяСтрока.КодСтроки+" в заказе поставщику!",,
			"Товары["+XMLСтрока(ТекущаяСтрока.НомерСтроки-1)+"].ЗаказПоставщику",
			"Объект"
		);
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаЗаказа,,"КоличествоУпаковок,Количество,Сумма,СуммаСНДС");
	
	Если СтрокаЗаказа.Количество = 0 Тогда
		ТекущаяСтрока.Сумма = 0;
		ТекущаяСтрока.СуммаСНДС = 0;
	Иначе
		ТекущаяСтрока.Сумма = ТекущаяСтрока.Количество * СтрокаЗаказа.Сумма / СтрокаЗаказа.Количество;
		ТекущаяСтрока.СуммаСНДС = ТекущаяСтрока.Количество * СтрокаЗаказа.СуммаСНДС / СтрокаЗаказа.Количество;
	КонецЕсли;
	
	//ВГХ
	Если ТекущаяСтрока.Вес = 0 ИЛИ ТекущаяСтрока.ВесБрутто = 0 ИЛИ ТекущаяСтрока.Объем = 0 Тогда 
		ВГХ = РСК_ВызовСервера.ПолучитьВГХСтруктуру(ТекущаяСтрока.Номенклатура, ТекущаяСтрока.Характеристика, ТекущаяСтрока.Серия);
		Если ТекущаяСтрока.Вес = 0 Тогда
			ТекущаяСтрока.Вес = ВГХ.ВесНетто;
		КонецЕсли;
		Если ТекущаяСтрока.ВесБрутто = 0 Тогда
			ТекущаяСтрока.ВесБрутто = ВГХ.ВесБрутто;
		КонецЕсли;
		Если ТекущаяСтрока.Объем = 0 Тогда
			ТекущаяСтрока.Объем = ВГХ.ДлинаУпаковки * ВГХ.ВысотаУпаковки * ВГХ.ШиринаУпаковки / 1000000000;
		КонецЕсли;
	КонецЕсли;
	
	//Количество контейнеров
	ТекущаяСтрока.КоличествоКонтейнеров = 0;
	ТекущаяСтрока.ДоляВесаВКонтейнере = 0;
	Если ПустаяСтрока(ТекущаяСтрока.НомерКонтейнера) Тогда
		Возврат;
	КонецЕсли;
	Строки = Объект.Контейнеры.НайтиСтроки(Новый Структура("НомерКонтейнера", ТекущаяСтрока.НомерКонтейнера));
	Если Строки.Количество() = 0 Тогда
		ОбщегоНазначения.СообщитьПользователю(
			"Контейнера с номером " + ТекущаяСтрока.НомерКонтейнера + " не существует! Расчёт не выполнен.",,
			"Товары["+XMLСтрока(ТекущаяСтрока.НомерСтроки-1)+"].НомерКонтейнера",
			"Объект"
		);
		Возврат;
	КонецЕсли;
	СтрокаКонтейнера = Строки[0];
	Если ЗначениеЗаполнено(СтрокаКонтейнера.ТипКонтейнера) Тогда
		ОбъёмКонтейнера = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаКонтейнера.ТипКонтейнера, "Вместимость");
		Если ОбъёмКонтейнера > 0 Тогда
			ТекущаяСтрока.КоличествоКонтейнеров = ТекущаяСтрока.Объем * ТекущаяСтрока.КоличествоУпаковок / ОбъёмКонтейнера;
		КонецЕсли;
	КонецЕсли;
	
	//Доля веса в контейнере
	ОбщийВесПозицийВКонтейнере = 0;
	Строки = Объект.Товары.НайтиСтроки(Новый Структура("НомерКонтейнера", ТекущаяСтрока.НомерКонтейнера));
	Для Каждого СтрокаТоваров Из Строки Цикл
		ОбщийВесПозицийВКонтейнере = ОбщийВесПозицийВКонтейнере + СтрокаТоваров.Вес * СтрокаТоваров.Количество / 1000;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РСК_ПартияПоставкиТовары.Ссылка КАК ПартияПоставки,
		|	РСК_ПартияПоставкиТовары.НомерСтроки КАК НомерСтроки,
		|	РСК_ПартияПоставкиТовары.Вес * РСК_ПартияПоставкиТовары.Количество / 1000 КАК Вес
		|ИЗ
		|	Документ.РСК_ПартияПоставки.Товары КАК РСК_ПартияПоставкиТовары
		|ГДЕ
		|	РСК_ПартияПоставкиТовары.НомерКонтейнера = &НомерКонтейнера
		|	И НЕ РСК_ПартияПоставкиТовары.Ссылка.ПометкаУдаления
		|	И РСК_ПартияПоставкиТовары.Ссылка <> &ТекущийДокумент";
	
	Запрос.УстановитьПараметр("НомерКонтейнера", ТекущаяСтрока.НомерКонтейнера);
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	тзВес = Запрос.Выполнить().Выгрузить();
	ОбщийВесПозицийВКонтейнере = ОбщийВесПозицийВКонтейнере + тзВес.Итог("Вес");
	Если ОбщийВесПозицийВКонтейнере > 0 Тогда
		ДругиеДокументы = тзВес.Скопировать();
		ДругиеДокументы.Свернуть("ПартияПоставки");
		ДругиеДокументы = ДругиеДокументы.ВыгрузитьКолонку("ПартияПоставки");
		
		Для Каждого ПартияПоставки Из ДругиеДокументы Цикл
			оДок = ПартияПоставки.ПолучитьОбъект();
			Строки = тзВес.НайтиСтроки(Новый Структура("ПартияПоставки", ПартияПоставки));
			Для Каждого СтрокаДругойПартии Из Строки Цикл
				Стр = оДок.Товары[СтрокаДругойПартии.НомерСтроки - 1];
				Стр.ДоляВесаВКонтейнере = Стр.Вес * Стр.Количество / 1000 / ОбщийВесПозицийВКонтейнере;
			КонецЦикла;
			оДок.РасчётЗатратНаПеревозку();
			Если оДок.Проведен Тогда
				оДок.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
			Иначе
				оДок.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
		КонецЦикла;
		
		Строки = Объект.Товары.НайтиСтроки(Новый Структура("НомерКонтейнера", ТекущаяСтрока.НомерКонтейнера));
		Для Каждого СтрокаТоваров Из Строки Цикл
			СтрокаТоваров.ДоляВесаВКонтейнере = СтрокаТоваров.Вес * СтрокаТоваров.Количество / 1000 / ОбщийВесПозицийВКонтейнере;
		КонецЦикла;
		МодульОбъекта = РеквизитФормыВЗначение("Объект");
		МодульОбъекта.РасчётЗатратНаПеревозку();
		ЗначениеВРеквизитФормы(МодульОбъекта, "Объект");
	КонецЕсли;	

КонецПроцедуры // РасчетСтрокиНаСервере()

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
    ДанныеСтроки = Элемент.ДанныеСтроки(ВыбраннаяСтрока);
    ИмяПоля = Сред(Поле.Имя, СтрДлина(Элемент.Имя)+1);
	Если Элементы[Поле.Имя].ТолькоПросмотр Тогда
		СтандартнаяОбработка = Ложь;
		
		Если ИмяПоля = "НомерЗаказа" ИЛИ ИмяПоля = "ДатаЗаказа" 
			ИЛИ ИмяПоля = "КодСтроки" ИЛИ ИмяПоля = "ЗаказПоставщику" Тогда
			//ПоказатьЗначение(, ДанныеСтроки.ЗаказПоставщику);	
			ПараметрыОткрытия = Новый Структура;
			ПараметрыОткрытия.Вставить("Ключ", ДанныеСтроки.ЗаказПоставщику);
			ФормаЗаказа = ПолучитьФорму("Документ.ЗаказПоставщику.ФормаОбъекта", ПараметрыОткрытия);
			ФормаЗаказа.Элементы.ГруппаСтраницы.ТекущаяСтраница = ФормаЗаказа.Элементы.ГруппаТовары;
			ФормаЗаказа.Открыть();
			Строки = ФормаЗаказа.Объект.Товары.НайтиСтроки(
				Новый Структура("КодСтроки", ДанныеСтроки.КодСтроки)
			);
			Если Строки.Количество() > 0 Тогда
				ФормаЗаказа.Элементы.Товары.ТекущаяСтрока = Строки[0].ПолучитьИдентификатор();
			КонецЕсли;
		Иначе
    		ПоказатьЗначение(, ДанныеСтроки[ИмяПоля]);	
		КонецЕсли;
		
	КонецЕсли;		
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ТоварыПередНачаломИзменения(Элемент, Отказ)
	Элементы.ТоварыНомерКонтейнера.СписокВыбора.Очистить();
	Для Каждого Стр Из Объект.Контейнеры Цикл
		Элементы.ТоварыНомерКонтейнера.СписокВыбора.Добавить(Стр.НомерКонтейнера);
	КонецЦикла;
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаСервере
Процедура ЗаполнитьНомерДатуЗаказа()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказПоставщику.Ссылка КАК Ссылка,
		|	ЗаказПоставщику.Номер КАК НомерЗаказа,
		|	ЗаказПоставщику.Дата КАК ДатаЗаказа
		|ИЗ
		|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
		|ГДЕ
		|	ЗаказПоставщику.Ссылка В(&МассивСсылок)";
	
	Запрос.УстановитьПараметр(
		"МассивСсылок", 
		Объект.Товары.Выгрузить(,"ЗаказПоставщику").ВыгрузитьКолонку("ЗаказПоставщику")
	);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Для Каждого Стр Из Объект.Товары Цикл
		Выборка.Сбросить();
		Если Выборка.НайтиСледующий(Новый Структура("Ссылка", Стр.ЗаказПоставщику)) Тогда
			ЗаполнитьЗначенияСвойств(Стр, Выборка);
		Иначе
			Стр.НомерЗаказа = "";
			Стр.ДатаЗаказа = '0001-01-01';
		КонецЕсли;
	КонецЦикла;
	
	ЗаполнитьНомерПриобретения();
	ЗаполнитьСтатусПартии();
	
КонецПроцедуры // ЗаполнитьНомерДатуЗаказа()

//++ РС Консалт: Трофимов Евгений 19.07.2022 Задача 19052
//e1cib/data/Документ.Задание?ref=acdd97a4eefa6027436ec29c580e4f90
&НаСервере
Процедура ЗаполнитьНомерПриобретения()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПриобретениеТоваровУслуг.Номер КАК Номер,
		|	ПриобретениеТоваровУслуг.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
		|ГДЕ
		|	ПриобретениеТоваровУслуг.Ссылка В(&МассивПриобретений)";
	
	Запрос.УстановитьПараметр(
		"МассивПриобретений", 
		Объект.Контейнеры.Выгрузить(,"ДокументПриобретения").ВыгрузитьКолонку("ДокументПриобретения")
	);
	
	Выборка = Запрос.Выполнить().Выбрать();
	НомераПриобретений = Новый Соответствие;
	
	Пока Выборка.Следующий() Цикл
		НомераПриобретений.Вставить(Выборка.Ссылка, Выборка.Номер);
	КонецЦикла;
	
	Для Каждого Стр Из Объект.Контейнеры Цикл
		Стр.НомерПриобретения = НомераПриобретений[Стр.ДокументПриобретения];
	КонецЦикла;

КонецПроцедуры // ЗаполнитьНомерПриобретения()

//++ РС Консалт: Трофимов Евгений 09.09.2022 Задача 20233
//e1cib/data/Документ.Задание?ref=b099bce8d3b5c7a646b4366d68c43b34
&НаСервере
Процедура ЗаполнитьСтатусПартии()

	Для Каждого Стр Из Объект.Товары Цикл
		Если ПустаяСтрока(Стр.НомерКонтейнера) Тогда
			Стр.СтатусКонтейнера = Перечисления.РСК_СтатусыПартийПоставки.ПустаяСсылка();
		Иначе
			СтрокиКонтейнеров = Объект.Контейнеры.НайтиСтроки(Новый Структура("НомерКонтейнера", Стр.НомерКонтейнера));
			Если СтрокиКонтейнеров.Количество() = 0 Тогда
				Стр.СтатусКонтейнера = Перечисления.РСК_СтатусыПартийПоставки.ПустаяСсылка();
			Иначе
				Стр.СтатусКонтейнера = СтрокиКонтейнеров[0].СтатусКонтейнера;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры


//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура РазбитьСтроку(Команда)
	
	ТаблицаФормы  = Элементы.Товары;
	ДанныеТаблицы = Объект.Товары;
	
	Оповещение = Новый ОписаниеОповещения("РазбитьСтрокуЗавершение", ЭтотОбъект);
	РаботаСТабличнымиЧастямиКлиент.РазбитьСтроку(ДанныеТаблицы, ТаблицаФормы, Оповещение);
	
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура РазбитьСтрокуЗавершение(НоваяСтрока, ДополнительныеПараметры) Экспорт 
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	
	Если НоваяСтрока <> Неопределено Тогда
		
		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
		
		ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
		ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(НоваяСтрока, СтруктураДействий, КэшированныеЗначения);
		
		РасчетСтрокиНаСервере(ТекущаяСтрока.НомерСтроки);
		РасчетСтрокиНаСервере(НоваяСтрока.НомерСтроки);
		ЗаполнитьНомерДатуЗаказа();
	КонецЕсли;
	
КонецПроцедуры

#Область Мусор_001

//Это устаревшие процедуры.
//После 01.01.2023 г.  можно будет удалить

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура КонтейнерыДатаЗагрузкиКонтейнераПриИзменении(Элемент)
	ОбновитьДатыОтгрузкиПоступленияВЗаказах();
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура КонтейнерыДатаПоступленияНаСкладПриИзменении(Элемент)
	ОбновитьДатыОтгрузкиПоступленияВЗаказах();
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ОбновитьДатыОтгрузкиПоступленияВЗаказах()
	ДанныеСтроки = Элементы.Контейнеры.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ДанныеСтроки.ДатаПоступленияНаСклад = '00010101' ИЛИ ДанныеСтроки.ДатаЗагрузкиКонтейнера = '00010101' Тогда
		Возврат;
	КонецЕсли;
	ДопДанные = Новый Структура();
	ДопДанные.Вставить("НоваяДатаПоступления", ДанныеСтроки.ДатаПоступленияНаСклад);
	ДопДанные.Вставить("НоваяДатаОтгрузки", ДанныеСтроки.ДатаЗагрузкиКонтейнера);
	ДопДанные.Вставить("НомерКонтейнера", ДанныеСтроки.НомерКонтейнера); 
	ПоказатьВопрос(
		Новый ОписаниеОповещения("ПослеВопросаИзменитьДатуПоступления", ЭтаФорма, ДопДанные), 
		"Изменить даты отгрузки и поступления в заказах поставщику?", 
		РежимДиалогаВопрос.ДаНет
	);
КонецПроцедуры // ОбновитьДатыОтгрузкиПоступленияВЗаказах()

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ПослеВопросаИзменитьДатуПоступления(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	МассивЗаказов = ПолучитьМассивЗаказов(ДополнительныеПараметры);
	ё=0;
	Для Каждого ЗаказПоставщику Из МассивЗаказов Цикл
		ё=ё+1;
		Состояние(""+ё+" из "+МассивЗаказов.Количество(),ё*100/МассивЗаказов.Количество());
		
		КорректировкаДатыОтгрузкиВЗаказеПоставщику(ЗаказПоставщику, ДополнительныеПараметры);
		
	КонецЦикла;
	
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаСервере
Функция ПолучитьМассивЗаказов(ДопДанные)
	
	Фильтр = Новый Структура("НомерКонтейнера", ДопДанные.НомерКонтейнера);
	тзТовары = Объект.Товары.Выгрузить(Фильтр, "ЗаказПоставщику");
	тзТовары.Свернуть("ЗаказПоставщику");
	Возврат тзТовары.ВыгрузитьКолонку("ЗаказПоставщику");

КонецФункции // ПолучитьМассивЗаказов()

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаСервере
Процедура КорректировкаДатыОтгрузкиВЗаказеПоставщику(ЗаказПоставщику, ДопДанные)
	
	Фильтр = Новый Структура();
	Фильтр.Вставить("ЗаказПоставщику", ЗаказПоставщику);
	Фильтр.Вставить("НомерКонтейнера", ДопДанные.НомерКонтейнера);
	СтрокиДляКорректировки = Объект.Товары.НайтиСтроки(Фильтр);
	
	оДок = ЗаказПоставщику.ПолучитьОбъект();
	Если оДок.ПоступлениеОднойДатой Тогда
		Для Каждого Стр Из оДок.Товары Цикл
			Стр.ДатаПоступления = оДок.ДатаПоступления;
			Стр.ДатаОтгрузки = оДок.ДатаОтгрузки;
		КонецЦикла;
		оДок.ПоступлениеОднойДатой = Ложь;
	КонецЕсли;
	
	Для Каждого СтрТоварПартии Из СтрокиДляКорректировки Цикл
		СтрокиЗаказа = оДок.Товары.НайтиСтроки(Новый Структура("КодСтроки", СтрТоварПартии.КодСтроки));
		Для Каждого СтрокаЗаказа Из СтрокиЗаказа Цикл
			СтрокаЗаказа.ДатаПоступления = ДопДанные.НоваяДатаПоступления;
			СтрокаЗаказа.ДатаОтгрузки = ДопДанные.НоваяДатаОтгрузки;
		КонецЦикла;
	КонецЦикла;
	
	//При нулевой длительности доставки столбец Дата поступления скрыт
	оДок.ДлительностьДоставки = 0;
	Для Каждого Стр Из оДок.Товары Цикл
		оДок.ДлительностьДоставки = Макс(оДок.ДлительностьДоставки, (Стр.ДатаПоступления - Стр.ДатаОтгрузки) / 86400);
	КонецЦикла;
	
	Если оДок.Проведен Тогда
		оДок.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
	Иначе
		оДок.Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	
КонецПроцедуры // КорректировкаДатыОтгрузкиВЗаказеПоставщику()

#КонецОбласти

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаСервере
Процедура СинхронизацияСЗаказамиПоставщику()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РСК_ПартияПоставкиТовары.ЗаказПоставщику КАК ЗаказПоставщику,
		|	РСК_ПартияПоставкиТовары.КодСтроки КАК КодСтроки,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА РСК_ПартияПоставкиТовары.Количество > 0
		|				ТОГДА РСК_ПартияПоставкиТовары.Сумма / РСК_ПартияПоставкиТовары.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Цена,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА РСК_ПартияПоставкиТовары.Количество > 0
		|				ТОГДА РСК_ПартияПоставкиТовары.СуммаСНДС / РСК_ПартияПоставкиТовары.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ЦенаСНДС
		|ПОМЕСТИТЬ ЦеныПартии
		|ИЗ
		|	Документ.РСК_ПартияПоставки.Товары КАК РСК_ПартияПоставкиТовары
		|ГДЕ
		|	РСК_ПартияПоставкиТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РСК_ПартияПоставкиТовары.ЗаказПоставщику,
		|	РСК_ПартияПоставкиТовары.КодСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЦеныПартии.ЗаказПоставщику КАК ЗаказПоставщику,
		|	ЦеныПартии.КодСтроки КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗаказПоставщикуТовары.Количество, 0) > 0
		|			ТОГДА ЗаказПоставщикуТовары.Сумма / ЗаказПоставщикуТовары.Количество
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК зЦена,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЗаказПоставщикуТовары.Количество, 0) > 0
		|			ТОГДА ЗаказПоставщикуТовары.СуммаСНДС / ЗаказПоставщикуТовары.Количество
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК зЦенаСНДС
		|ПОМЕСТИТЬ ЦеныЗаказов
		|ИЗ
		|	ЦеныПартии КАК ЦеныПартии
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
		|		ПО ЦеныПартии.ЗаказПоставщику = ЗаказПоставщикуТовары.Ссылка
		|			И ЦеныПартии.КодСтроки = ЗаказПоставщикуТовары.КодСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЦеныПартии.ЗаказПоставщику КАК ЗаказПоставщику,
		|	ЦеныПартии.КодСтроки КАК КодСтроки,
		|	ЦеныПартии.Цена КАК Цена,
		|	ЦеныПартии.ЦенаСНДС КАК ЦенаСНДС,
		|	0 КАК зЦена,
		|	0 КАК зЦенаСНДС
		|ПОМЕСТИТЬ Сверка
		|ИЗ
		|	ЦеныПартии КАК ЦеныПартии
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЦеныЗаказов.ЗаказПоставщику,
		|	ЦеныЗаказов.КодСтроки,
		|	0,
		|	0,
		|	ЦеныЗаказов.зЦена,
		|	ЦеныЗаказов.зЦенаСНДС
		|ИЗ
		|	ЦеныЗаказов КАК ЦеныЗаказов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Сверка.ЗаказПоставщику КАК ЗаказПоставщику,
		|	Сверка.КодСтроки КАК КодСтроки,
		|	СУММА(Сверка.Цена) КАК Цена,
		|	СУММА(Сверка.ЦенаСНДС) КАК ЦенаСНДС,
		|	СУММА(Сверка.зЦена) КАК зЦена,
		|	СУММА(Сверка.зЦенаСНДС) КАК зЦенаСНДС
		|ИЗ
		|	Сверка КАК Сверка
		|
		|СГРУППИРОВАТЬ ПО
		|	Сверка.ЗаказПоставщику,
		|	Сверка.КодСтроки
		|
		|ИМЕЮЩИЕ
		|	(СУММА(Сверка.Цена) <> СУММА(Сверка.зЦена)
		|		ИЛИ СУММА(Сверка.ЦенаСНДС) <> СУММА(Сверка.зЦенаСНДС))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РСК_ПартияПоставкиТовары.ЗаказПоставщику КАК ЗаказПоставщику,
		|	РСК_ПартияПоставкиТовары.КодСтроки КАК КодСтроки,
		|	ЕСТЬNULL(ЗаказПоставщикуТовары.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура,
		|	ЕСТЬNULL(ЗаказПоставщикуТовары.Характеристика, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК Характеристика,
		|	ЕСТЬNULL(ЗаказПоставщикуТовары.Серия, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК Серия,
		|	ЕСТЬNULL(ЗаказПоставщикуТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Упаковка
		|ИЗ
		|	Документ.РСК_ПартияПоставки.Товары КАК РСК_ПартияПоставкиТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
		|		ПО РСК_ПартияПоставкиТовары.ЗаказПоставщику = ЗаказПоставщикуТовары.Ссылка
		|			И РСК_ПартияПоставкиТовары.КодСтроки = ЗаказПоставщикуТовары.КодСтроки
		|ГДЕ
		|	РСК_ПартияПоставкиТовары.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Результаты = Запрос.ВыполнитьПакет();
	Выборка = Результаты[Результаты.ВГраница()-1].Выбрать();
	тзДанныеЗаказа = Результаты[Результаты.ВГраница()].Выгрузить();
	Фильтр = Новый Структура("ЗаказПоставщику,КодСтроки"); 
	Пока Выборка.Следующий() Цикл
		Модифицированность = Истина;
		ЗаполнитьЗначенияСвойств(Фильтр, Выборка);
		Строки = Объект.Товары.НайтиСтроки(Фильтр);
		Для Каждого Стр Из Строки Цикл
			Стр.Сумма = Выборка.зЦена * Стр.Количество;
			Стр.СуммаСНДС = Выборка.зЦенаСНДС * Стр.Количество;
		КонецЦикла;
	КонецЦикла;
	Для Каждого СтрТЧ Из Объект.Товары Цикл
		ЗаполнитьЗначенияСвойств(Фильтр, СтрТЧ);
		Строки = тзДанныеЗаказа.НайтиСтроки(Фильтр);
		Для Каждого Стр Из Строки Цикл
			ЗаполнитьЗначенияСвойств(СтрТЧ, Стр);
		КонецЦикла;				
	КонецЦикла;
КонецПроцедуры // СинхронизацияСЗаказамиПоставщику()

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ТоварыНомерКонтейнераПриИзменении(Элемент)
	ДанныеСтроки = Элементы.Товары.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	РасчетСтрокиНаСервере(ДанныеСтроки.НомерСтроки);
	ЗаполнитьНомерДатуЗаказа();
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ТоварыВесПриИзменении(Элемент)
	ДанныеСтроки = Элементы.Товары.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	РасчетСтрокиНаСервере(ДанныеСтроки.НомерСтроки);
	ЗаполнитьНомерДатуЗаказа();
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ТоварыОбъемПриИзменении(Элемент)
	ДанныеСтроки = Элементы.Товары.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	РасчетСтрокиНаСервере(ДанныеСтроки.НомерСтроки);
	ЗаполнитьНомерДатуЗаказа();
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 13.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ПересчитатьДокумент()
	
	Для НомерСтроки = 1 По Объект.Товары.Количество() Цикл
		Состояние("" + НомерСтроки + " из " + Объект.Товары.Количество(),НомерСтроки * 100 / Объект.Товары.Количество()); 
		РасчетСтрокиНаСервере(НомерСтроки);
	КонецЦикла;
	ЗаполнитьНомерДатуЗаказа();
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 13.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ВалютаПриИзменении(Элемент)
	ПересчитатьДокумент();
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 13.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура СтавкаБрокераПриИзменении(Элемент)
	ПересчитатьДокумент();
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 13.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура СтавкаТерминалаПриИзменении(Элемент)
	ПересчитатьДокумент();
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 13.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура СтавкаФрахтаПриИзменении(Элемент)
	ПересчитатьДокумент();
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 13.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура СтавкаАВТОПриИзменении(Элемент)
	ПересчитатьДокумент();
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 13.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ВалютаФрахтаПриИзменении(Элемент)
	ПересчитатьДокумент();
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 13.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура Пересчитать(Команда = Неопределено)
	СинхронизацияСЗаказамиПоставщику();
	ПересчитатьДокумент();
	Модифицированность = Истина;
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 13.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаСервере
Процедура ОбновитьВидимостьЭлементов()
	
	Если Объект.ЕдиныйПунктПолученияДляВсехКонтейнеров Тогда
		Элементы.ПунктПолучения.ПодсказкаВвода = "";
	Иначе
		Элементы.ПунктПолучения.ПодсказкаВвода = "<Указывается во вкладке «Контейнеры»>";
	КонецЕсли;
	Элементы.ПунктПолучения.Доступность = Объект.ЕдиныйПунктПолученияДляВсехКонтейнеров;
	Элементы.КонтейнерыПунктПолучения.Видимость = НЕ Объект.ЕдиныйПунктПолученияДляВсехКонтейнеров;
	Элементы.КонтейнерыЗаполнитьПунктПолучения.Видимость = НЕ Объект.ЕдиныйПунктПолученияДляВсехКонтейнеров;
	
	Если Объект.ЕдинаяТаможеннаяДекларация Тогда
		Элементы.ТаможеннаяДекларация.ПодсказкаВвода = "";
	Иначе
		Элементы.ТаможеннаяДекларация.ПодсказкаВвода = "<Указывается во вкладке «Контейнеры»>";
	КонецЕсли;
	Элементы.ТаможеннаяДекларация.Доступность = Объект.ЕдинаяТаможеннаяДекларация;
	Элементы.КонтейнерыТаможеннаяДекларация.Видимость = НЕ Объект.ЕдинаяТаможеннаяДекларация;
	
	Если Объект.ЕдинаяСтавкаАВТО_ДляВсехКонтейнеров Тогда
		Элементы.ВалютаАВТО.ПодсказкаВвода = "RUB";
	Иначе
		Элементы.ВалютаАВТО.ПодсказкаВвода = "";
	КонецЕсли;
	Элементы.СтавкаАВТО.Доступность = Объект.ЕдинаяСтавкаАВТО_ДляВсехКонтейнеров;
	Элементы.ВалютаАВТО.Доступность = Объект.ЕдинаяСтавкаАВТО_ДляВсехКонтейнеров;
	Элементы.КонтейнерыСтавкаАВТО.Видимость = НЕ Объект.ЕдинаяСтавкаАВТО_ДляВсехКонтейнеров;
	Элементы.КонтейнерыВалютаАВТО.Видимость = НЕ Объект.ЕдинаяСтавкаАВТО_ДляВсехКонтейнеров;
	Элементы.КонтейнерыЗаполнитьСтавкуАВТО.Видимость = НЕ Объект.ЕдинаяСтавкаАВТО_ДляВсехКонтейнеров;

КонецПроцедуры // ОбновитьВидимостьЭлементов()

//++ РС Консалт: Трофимов Евгений 14.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ЕдиныйПунктПолученияДляВсехКонтейнеровПриИзменении(Элемент)
	Если НЕ Объект.ЕдиныйПунктПолученияДляВсехКонтейнеров Тогда
		Если ЗначениеЗаполнено(Объект.ПунктПолучения) Тогда
			Для Каждого Стр Из Объект.Контейнеры Цикл
				Стр.ПунктПолучения = Объект.ПунктПолучения;
			КонецЦикла;
			Объект.ПунктПолучения = Неопределено;
		КонецЕсли;
	КонецЕсли;
	ОбновитьВидимостьЭлементов();
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 14.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ЕдинаяСтавкаАВТО_ДляВсехКонтейнеровПриИзменении(Элемент)
	Если НЕ Объект.ЕдинаяСтавкаАВТО_ДляВсехКонтейнеров Тогда
		Если Объект.СтавкаАВТО > 0 Тогда
			Для Каждого Стр Из Объект.Контейнеры Цикл
				Стр.СтавкаАВТО = Объект.СтавкаАВТО;
				Стр.ВалютаАВТО = Объект.ВалютаАВТО;
			КонецЦикла;
			Объект.СтавкаАВТО = 0;
			Объект.ВалютаАВТО = Неопределено;
		КонецЕсли;
	КонецЕсли;
	Пересчитать();
	ОбновитьВидимостьЭлементов();
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 14.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура КонтейнерыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
    ДанныеСтроки = Элемент.ДанныеСтроки(ВыбраннаяСтрока);
    ИмяПоля = Сред(Поле.Имя, СтрДлина(Элемент.Имя)+1);
	Если ИмяПоля = "ДокументПриобретения" ИЛИ ИмяПоля = "НомерПриобретения" Тогда
		СтандартнаяОбработка = Ложь;
    	ПоказатьЗначение(, ДанныеСтроки.ДокументПриобретения);	
	КонецЕсли;
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 14.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ЗаполнитьТипКонтейнера(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора",Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор", Ложь);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Истина);
	ДанныеСтроки = Элементы.Контейнеры.ТекущиеДанные;
	Если ДанныеСтроки <> Неопределено Тогда
		ПараметрыФормы.Вставить("ТекущаяСтрока", ДанныеСтроки.ТипКонтейнера);
	КонецЕсли;
	
	ОткрытьФорму(
		"Справочник.РСК_ТипыКонтейнеров.ФормаВыбора",
		ПараметрыФормы,
		ЭтаФорма,,,, 
		Новый ОписаниеОповещения("ПослеВыбораТипаКонтейнера", ЭтаФорма), 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
		
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 14.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ПослеВыбораТипаКонтейнера(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ВыделеннаяСтрока Из Элементы.Контейнеры.ВыделенныеСтроки Цикл
		ДанныеСтроки = Элементы.Контейнеры.ДанныеСтроки(ВыделеннаяСтрока);
		ДанныеСтроки.ТипКонтейнера = Результат;
	КонецЦикла;
	Модифицированность = Истина;
	
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 14.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ЗаполнитьДатуЗагрузки(Команда)
	УстановленнаяДата = ТекущаяДата();
	ДанныеСтроки = Элементы.Контейнеры.ТекущиеДанные;
	Если ДанныеСтроки <> Неопределено Тогда
		УстановленнаяДата = ДанныеСтроки.ДатаЗагрузкиКонтейнера;
	КонецЕсли;
	Если УстановленнаяДата = '00010101' Тогда
		УстановленнаяДата = ТекущаяДата();
	КонецЕсли;
	ПоказатьВводДаты(
		Новый ОписаниеОповещения("ПослеВыбораДатыЗагрузкиКонтейнера", ЭтаФорма), 
		УстановленнаяДата,
		"Дата загрузки контейнера",
		ЧастиДаты.Дата
	);
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 14.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ПослеВыбораДатыЗагрузкиКонтейнера(Дата, ДополнительныеПараметры) Экспорт
	
	Если Дата = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ВыделеннаяСтрока Из Элементы.Контейнеры.ВыделенныеСтроки Цикл
		ДанныеСтроки = Элементы.Контейнеры.ДанныеСтроки(ВыделеннаяСтрока);
		ДанныеСтроки.ДатаЗагрузкиКонтейнера = Дата;
		ДопДанные = Новый Структура();
		ДопДанные.Вставить("НоваяДатаПоступления", ДанныеСтроки.ДатаПоступленияНаСклад);
		ДопДанные.Вставить("НоваяДатаОтгрузки", ДанныеСтроки.ДатаЗагрузкиКонтейнера);
		ДопДанные.Вставить("НомерКонтейнера", ДанныеСтроки.НомерКонтейнера); 
		ПослеВопросаИзменитьДатуПоступления(КодВозвратаДиалога.Да, ДопДанные);
	КонецЦикла;
	Модифицированность = Истина;
	
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 14.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ЗаполнитьДатуПоступления(Команда)
	УстановленнаяДата = ТекущаяДата();
	ДанныеСтроки = Элементы.Контейнеры.ТекущиеДанные;
	Если ДанныеСтроки <> Неопределено Тогда
		УстановленнаяДата = ДанныеСтроки.ДатаПоступленияНаСклад;
	КонецЕсли;
	Если УстановленнаяДата = '00010101' Тогда
		УстановленнаяДата = ТекущаяДата();
	КонецЕсли;
	ПоказатьВводДаты(
		Новый ОписаниеОповещения("ПослеВыбораДатыПоступления", ЭтаФорма), 
		УстановленнаяДата,
		"Дата поступления контейнера на склад",
		ЧастиДаты.Дата
	);	
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 14.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ПослеВыбораДатыПоступления(Дата, ДополнительныеПараметры) Экспорт
	
	Если Дата = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ВыделеннаяСтрока Из Элементы.Контейнеры.ВыделенныеСтроки Цикл
		ДанныеСтроки = Элементы.Контейнеры.ДанныеСтроки(ВыделеннаяСтрока);
		ДанныеСтроки.ДатаПоступленияНаСклад = Дата;
		ДопДанные = Новый Структура();
		ДопДанные.Вставить("НоваяДатаПоступления", ДанныеСтроки.ДатаПоступленияНаСклад);
		ДопДанные.Вставить("НоваяДатаОтгрузки", ДанныеСтроки.ДатаЗагрузкиКонтейнера);
		ДопДанные.Вставить("НомерКонтейнера", ДанныеСтроки.НомерКонтейнера); 
		ПослеВопросаИзменитьДатуПоступления(КодВозвратаДиалога.Да, ДопДанные);
	КонецЦикла;
	Модифицированность = Истина;
	
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 14.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ЗаполнитьПунктПолучения(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора",Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор", Ложь);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Истина);
	ДанныеСтроки = Элементы.Контейнеры.ТекущиеДанные;
	Если ДанныеСтроки <> Неопределено Тогда
		ПараметрыФормы.Вставить("ТекущаяСтрока", ДанныеСтроки.ПунктПолучения);
	КонецЕсли;
	
	ОткрытьФорму(
		"Справочник.РСК_ПунктыМаршрутовКонтейнеров.ФормаВыбора",
		ПараметрыФормы,
		ЭтаФорма,,,, 
		Новый ОписаниеОповещения("ПослеВыбораПунктаПолученияКонтейнера", ЭтаФорма), 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);		
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 14.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ПослеВыбораПунктаПолученияКонтейнера(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ВыделеннаяСтрока Из Элементы.Контейнеры.ВыделенныеСтроки Цикл
		ДанныеСтроки = Элементы.Контейнеры.ДанныеСтроки(ВыделеннаяСтрока);
		ДанныеСтроки.ПунктПолучения = Результат;
	КонецЦикла;
	Модифицированность = Истина;
	
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 14.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ЗаполнитьСтавкуАВТО(Команда)
	ПараметрыФормы = Новый Структура;
	ДанныеСтроки = Элементы.Контейнеры.ТекущиеДанные;
	Если ДанныеСтроки <> Неопределено Тогда
		ПараметрыФормы.Вставить("СтавкаАВТО", ДанныеСтроки.СтавкаАВТО);
		ПараметрыФормы.Вставить("ВалютаАВТО", ДанныеСтроки.ВалютаАВТО);
	КонецЕсли;
	ОткрытьФорму("Документ.РСК_ПартияПоставки.Форма.ВыборСтавкиАВТО",
		ПараметрыФормы,
		ЭтаФорма,,,, 
		Новый ОписаниеОповещения("ПослеВыбораСтавкиАВТО", ЭтаФорма), 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 14.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
&НаКлиенте
Процедура ПослеВыбораСтавкиАВТО(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ВыделеннаяСтрока Из Элементы.Контейнеры.ВыделенныеСтроки Цикл
		ДанныеСтроки = Элементы.Контейнеры.ДанныеСтроки(ВыделеннаяСтрока);
		ЗаполнитьЗначенияСвойств(ДанныеСтроки, Результат);
	КонецЦикла;
	Модифицированность = Истина;
	Пересчитать();
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаКолонок(Команда)
	МассивВыделеных = Новый Массив;
	Для Каждого ВыделеннаяСтрока Из Элементы.Товары.ВыделенныеСтроки Цикл
		МассивВыделеных.Добавить(ВыделеннаяСтрока);
	КонецЦикла;
	ПараметрыФормы = ПодготовитьПараметрыФормыДляСуммированияКолонок(МассивВыделеных);
	ОткрытьФорму("Документ.РСК_ПартияПоставки.Форма.СуммированиеКолонок", ПараметрыФормы, ЭтаФорма);
КонецПроцедуры

&НаСервере
Функция ПодготовитьПараметрыФормыДляСуммированияКолонок(ВыделенныеСтроки)
	ПараметрыФормы = Новый Структура;
		
	ВалютаРУ = Константы.ВалютаРегламентированногоУчета.Получить();
	ДатаКурсаВалют = ТекущаяДатаСеанса();
	Если ЗначениеЗаполнено(Объект.ТаможеннаяДекларация) Тогда
		ДатаКурсаВалют = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ТаможеннаяДекларация, "Дата");
	КонецЕсли;
	ПараметрыФормы.Вставить("Валюта", ВалютаРУ);
	ПараметрыФормы.Вставить("ДатаКурсаВалют", ДатаКурсаВалют);

	тз = Новый ТаблицаЗначений;
	тз.Колонки.Добавить("Колонка", ОбщегоНазначения.ОписаниеТипаСтрока(150));
	тз.Колонки.Добавить("Сумма", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	тз.Колонки.Добавить("ИмяКолонки", ОбщегоНазначения.ОписаниеТипаСтрока(150));

	НС = тз.Добавить();
	НС.Колонка = "Количество";
	НС.ИмяКолонки = "КоличествоУпаковок";
	
	НС = тз.Добавить();
	НС.Колонка = "Сумма";
	НС.ИмяКолонки = "Сумма";
	
	НС = тз.Добавить();
	НС.Колонка = "Сумма с НДС";
	НС.ИмяКолонки = "СуммаСНДС";
	
	НС = тз.Добавить();
	НС.Колонка = "Сумма фрахта";
	НС.ИмяКолонки = "СуммаФрахта";
	
	НС = тз.Добавить();
	НС.Колонка = "Таможенная стоимость";
	НС.ИмяКолонки = "ТаможеннаяСтоимость";
	
	НС = тз.Добавить();
	НС.Колонка = "Таможенная НДС";
	НС.ИмяКолонки = "ТаможеннаяНДС";
	
	НС = тз.Добавить();
	НС.Колонка = "Пошлина";
	НС.ИмяКолонки = "ТаможеннаяПошлина";
	
	НС = тз.Добавить();
	НС.Колонка = "Сумма терминальной обработки";
	НС.ИмяКолонки = "СуммаТерминальнойОбработки";
	
	НС = тз.Добавить();
	НС.Колонка = "Сумма АВТО/ЖД";
	НС.ИмяКолонки = "СуммаАВТО";

	НС = тз.Добавить();
	НС.Колонка = "Сумма брокера";
	НС.ИмяКолонки = "СуммаБрокера";
	
	НС = тз.Добавить();
	НС.Колонка = "Сумма таможенного сбора";
	НС.ИмяКолонки = "СуммаТаможенногоСбора";
	
	Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		СтрокаТоваров = Объект.Товары.НайтиПоИдентификатору(ВыделеннаяСтрока);
		Для Каждого Стр Из тз Цикл
			Если Стр.ИмяКолонки = "СуммаФрахта" Тогда 
				Стр.Сумма = Стр.Сумма + РаботаСКурсамиВалют.ПересчитатьВВалюту(
					СтрокаТоваров[Стр.ИмяКолонки],
					Объект.ВалютаФрахта,
					ВалютаРУ,
					ДатаКурсаВалют
				);
			ИначеЕсли Стр.ИмяКолонки = "СуммаТерминальнойОбработки" Тогда
				Стр.Сумма = Стр.Сумма + РаботаСКурсамиВалют.ПересчитатьВВалюту(
					СтрокаТоваров[Стр.ИмяКолонки],
					Объект.ВалютаТерминала,
					ВалютаРУ,
					ДатаКурсаВалют
				);
			ИначеЕсли Стр.ИмяКолонки = "СуммаАВТО" Тогда
				Если Объект.ЕдинаяСтавкаАВТО_ДляВсехКонтейнеров Тогда
					ВалютаАВТО = Объект.ВалютаАВТО;
				Иначе
					СтрокиКонтейнеров = Объект.Контейнеры.НайтиСтроки(
						Новый Структура("НомерКонтейнера", СтрокаТоваров.НомерКонтейнера)
					);
					Если СтрокиКонтейнеров.Количество() > 0 Тогда
						ВалютаАВТО = СтрокиКонтейнеров[0].ВалютаАВТО;
					Иначе
						ВалютаАВТО = Справочники.Валюты.ПустаяСсылка();
					КонецЕсли;
				КонецЕсли;
				Стр.Сумма = Стр.Сумма + РаботаСКурсамиВалют.ПересчитатьВВалюту(
					СтрокаТоваров[Стр.ИмяКолонки],
					ВалютаАВТО,
					ВалютаРУ,
					ДатаКурсаВалют
				);
			ИначеЕсли Стр.ИмяКолонки = "СуммаБрокера" Тогда
				Стр.Сумма = Стр.Сумма + РаботаСКурсамиВалют.ПересчитатьВВалюту(
					СтрокаТоваров[Стр.ИмяКолонки],
					Объект.ВалютаБрокера,
					ВалютаРУ,
					ДатаКурсаВалют
				);
			ИначеЕсли Стр.ИмяКолонки = "Сумма" ИЛИ Стр.ИмяКолонки = "СуммаСНДС" Тогда
				Стр.Сумма = Стр.Сумма + РаботаСКурсамиВалют.ПересчитатьВВалюту(
					СтрокаТоваров[Стр.ИмяКолонки],
					Объект.Валюта,
					ВалютаРУ,
					ДатаКурсаВалют
				);
			Иначе
				Стр.Сумма = Стр.Сумма + СтрокаТоваров[Стр.ИмяКолонки];
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ПараметрыФормы.Вставить("АдресТаблицы", ПоместитьВоВременноеХранилище(тз, УникальныйИдентификатор));
	
	Возврат ПараметрыФормы;
	
КонецФункции // ПолучитьАдресТаблицыСуммированияКолонок()

//++ РС Консалт: Трофимов Евгений 18.07.2022 Задача 19052
//e1cib/data/Документ.Задание?ref=acdd97a4eefa6027436ec29c580e4f90&НаКлиенте
&НаКлиенте
Процедура СоздатьПриобретенияТоваров(Команда)
	
	Если Модифицированность ИЛИ НЕ Объект.Проведен Тогда
		ПоказатьПредупреждение(,"Проведите документ партии!");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаЕТА) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Не указана Дата ETA! Внимание! Дата ETA должна быть у всех партий контейнера одинаковой!",,
			"ДатаЕТА",
			"Объект"
		);
		Возврат;
	КонецЕсли;
	
	ПоказатьВопрос(
		Новый ОписаниеОповещения("ПослеВопросаОСозданииПриобретений", ЭтаФорма), 
		"Выполнить создание/перезаполнение существующих документов «Приобретение товаров и услуг»?", 
		РежимДиалогаВопрос.ДаНет
	);
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 18.07.2022 Задача 19052
//e1cib/data/Документ.Задание?ref=acdd97a4eefa6027436ec29c580e4f90&НаКлиенте
&НаКлиенте
Процедура ПослеВопросаОСозданииПриобретений(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
		
	Для Каждого Стр Из Объект.Контейнеры Цикл
		Состояние(""+Стр.НомерСтроки+" из "+Объект.Контейнеры.Количество(), Стр.НомерСтроки * 100 / Объект.Контейнеры.Количество());
		
		ПараметрыПриобретения = Новый Структура;
		ПараметрыПриобретения.Вставить("НомерКонтейнера", Стр.НомерКонтейнера);
		ПараметрыПриобретения.Вставить("ДатаПриобретения", Объект.ДатаЕТА);
		ПараметрыПриобретения.Вставить("ДатаВходящегоДокумента", Стр.ДатаЗагрузкиКонтейнера);
		ПараметрыПриобретения.Вставить("НомерВходящегоДокумента", Стр.КоммерческийНомер);
		ПараметрыПриобретения.Вставить("ДатаПоступления", Стр.ДатаПоступленияНаСклад);
		
		ПровестиПриобретение(ПараметрыПриобретения);
	КонецЦикла;
	
	Записать();
	ПоказатьПредупреждение(,"Операция выполнена");
	
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 18.07.2022 Задача 19052
//e1cib/data/Документ.Задание?ref=acdd97a4eefa6027436ec29c580e4f90&НаКлиенте
&НаСервере
Процедура ПровестиПриобретение(ПараметрыПриобретения)
	Если ПустаяСтрока(ПараметрыПриобретения.НомерКонтейнера) Тогда
		Возврат;
	КонецЕсли;
	
	//В одном контейнере может находиться несколько партий.
	//Найдём их всех.
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РСК_ПартияПоставкиКонтейнеры.Ссылка КАК ПартияПоставки,
		|	РСК_ПартияПоставкиКонтейнеры.НомерСтроки КАК НомерСтроки,
		|	РСК_ПартияПоставкиКонтейнеры.ДокументПриобретения КАК ДокументПриобретения,
		|	РСК_ПартияПоставкиКонтейнеры.НомерКонтейнера КАК НомерКонтейнера
		|ПОМЕСТИТЬ Партии
		|ИЗ
		|	Документ.РСК_ПартияПоставки.Контейнеры КАК РСК_ПартияПоставкиКонтейнеры
		|ГДЕ
		|	РСК_ПартияПоставкиКонтейнеры.НомерКонтейнера = &НомерКонтейнера
		|	И РСК_ПартияПоставкиКонтейнеры.Ссылка.Проведен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Партии.ПартияПоставки КАК ПартияПоставки,
		|	ЗаказПоставщикуТовары.Номенклатура КАК Номенклатура,
		|	ЗаказПоставщикуТовары.Характеристика КАК Характеристика,
		|	ЗаказПоставщикуТовары.Серия КАК Серия,
		|	РСК_ПартияПоставкиТовары.ЗаказПоставщику КАК ЗаказПоставщику,
		|	РСК_ПартияПоставкиТовары.КодСтроки КАК КодСтроки,
		|	ЗаказПоставщикуТовары.Упаковка КАК Упаковка,
		|	ЗаказПоставщикуТовары.КоличествоУпаковок КАК КоличествоУпаковок,
		|	ЗаказПоставщикуТовары.Сумма КАК Сумма,
		|	ЗаказПоставщикуТовары.СуммаСНДС КАК СуммаСНДС,
		|	ЗаказПоставщикуТовары.Количество КАК Количество,
		|	ЗаказПоставщикуТовары.СтавкаНДС КАК СтавкаНДС,
		|	ЗаказПоставщикуТовары.Склад КАК Склад
		|ПОМЕСТИТЬ ТоварыПоставки
		|ИЗ
		|	Партии КАК Партии
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РСК_ПартияПоставки.Товары КАК РСК_ПартияПоставкиТовары
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
		|			ПО РСК_ПартияПоставкиТовары.ЗаказПоставщику = ЗаказПоставщикуТовары.Ссылка
		|				И РСК_ПартияПоставкиТовары.КодСтроки = ЗаказПоставщикуТовары.КодСтроки
		|		ПО Партии.ПартияПоставки = РСК_ПартияПоставкиТовары.Ссылка
		|			И Партии.НомерКонтейнера = РСК_ПартияПоставкиТовары.НомерКонтейнера
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Партии.ПартияПоставки КАК ПартияПоставки,
		|	Партии.НомерСтроки КАК НомерСтроки,
		|	Партии.ДокументПриобретения КАК ДокументПриобретения,
		|	Партии.НомерКонтейнера КАК НомерКонтейнера,
		|	РСК_ПартияПоставки.ДатаЕТА КАК ДатаЕТА
		|ИЗ
		|	Партии КАК Партии
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РСК_ПартияПоставки КАК РСК_ПартияПоставки
		|		ПО Партии.ПартияПоставки = РСК_ПартияПоставки.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыПоставки.ПартияПоставки КАК ПартияПоставки,
		|	ТоварыПоставки.Номенклатура КАК Номенклатура,
		|	ТоварыПоставки.Характеристика КАК Характеристика,
		|	ТоварыПоставки.Серия КАК Серия,
		|	ТоварыПоставки.ЗаказПоставщику КАК ЗаказПоставщику,
		|	ТоварыПоставки.КодСтроки КАК КодСтроки,
		|	ТоварыПоставки.Упаковка КАК Упаковка,
		|	ТоварыПоставки.КоличествоУпаковок КАК КоличествоУпаковок,
		|	ТоварыПоставки.Сумма КАК Сумма,
		|	ТоварыПоставки.СуммаСНДС КАК СуммаСНДС,
		|	ТоварыПоставки.Количество КАК Количество,
		|	ТоварыПоставки.СтавкаНДС КАК СтавкаНДС,
		|	ТоварыПоставки.Склад КАК Склад
		|ИЗ
		|	ТоварыПоставки КАК ТоварыПоставки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	докЗаказПоставщику.Организация КАК Организация,
		|	докЗаказПоставщику.Партнер КАК Партнер,
		|	докЗаказПоставщику.Контрагент КАК Контрагент,
		|	докЗаказПоставщику.Договор КАК Договор,
		|	докЗаказПоставщику.Соглашение КАК Соглашение,
		|	докЗаказПоставщику.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	докЗаказПоставщику.Валюта КАК Валюта,
		|	докЗаказПоставщику.Склад КАК Склад,
		|	докЗаказПоставщику.НалогообложениеНДС КАК НалогообложениеНДС,
		|	докЗаказПоставщику.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	докЗаказПоставщику.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
		|	ЕСТЬNULL(ЕСТЬNULL(ДоговорыКонтрагентов.ВалютаВзаиморасчетов, СоглашенияСПоставщиками.ВалютаВзаиморасчетов), ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК ВалютаВзаиморасчетов,
		|	ЕСТЬNULL(ЕСТЬNULL(ДоговорыКонтрагентов.ПорядокРасчетов, СоглашенияСПоставщиками.ПорядокРасчетов), ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПустаяСсылка)) КАК ПорядокРасчетов,
		|	докЗаказПоставщику.Ссылка КАК Ссылка,
		|	докЗаказПоставщику.СрокВозвратаМногооборотнойТары КАК СрокВозвратаМногооборотнойТары,
		|	ЛОЖЬ КАК РассчитыватьДатуВозвратаТарыПоКалендарю,
		|	НЕОПРЕДЕЛЕНО КАК КалендарьВозвратаТары,
		|	докЗаказПоставщику.ВариантПриемкиТоваров КАК ВариантПриемкиТоваров,
		|	докЗаказПоставщику.ЗакупкаПодДеятельность КАК ЗакупкаПодДеятельность,
		|	докЗаказПоставщику.СпособДоставки КАК СпособДоставки,
		|	докЗаказПоставщику.СостояниеЗаполненияМногооборотнойТары КАК СостояниеЗаполненияМногооборотнойТары,
		|	ЛОЖЬ КАК ЗапрещеноВыбиратьГруппуСкладов,
		|	докЗаказПоставщику.ОплатаВВалюте КАК ОплатаВВалюте
		|ИЗ
		|	ТоварыПоставки КАК ТоварыПоставки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику КАК докЗаказПоставщику
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|			ПО докЗаказПоставщику.Договор = ДоговорыКонтрагентов.Ссылка
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСПоставщиками КАК СоглашенияСПоставщиками
		|			ПО докЗаказПоставщику.Соглашение = СоглашенияСПоставщиками.Ссылка
		|		ПО ТоварыПоставки.ЗаказПоставщику = докЗаказПоставщику.Ссылка
		|";

	
	Запрос.УстановитьПараметр("НомерКонтейнера", ПараметрыПриобретения.НомерКонтейнера);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	тзПартииКонтейнера = РезультатыЗапроса[2].Выгрузить();
	ВыборкаТовары = РезультатыЗапроса[3].Выбрать();
	ЗаказыПоставщику = ОбщегоНазначения.ВыгрузитьКолонку(РезультатыЗапроса[3].Выгрузить(),"ЗаказПоставщику",Истина);
	ШапкаЗаказа = РезультатыЗапроса[4].Выбрать();
	Если НЕ ШапкаЗаказа.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ДокументОснование", ЗаказыПоставщику);
	ДанныеЗаполнения.Вставить("СкладПоступления", ШапкаЗаказа.Склад);
	ДанныеЗаполнения.Вставить("РеквизитыШапки", ШапкаЗаказа);
	
	//Поиск существующего приобретения
	оДок = ПолучитьПриобретение(тзПартииКонтейнера);
	оДок.Заполнить(ДанныеЗаполнения);
	оДок.ЭтапыГрафикаОплаты.Очистить();
	оДок.ВидыЗапасов.Очистить();
	оДок.Товары.Очистить();
	
	оДок.Комментарий = "Контейнер: " + ПараметрыПриобретения.НомерКонтейнера;
	ЗаполнитьЗначенияСвойств(оДок, ШапкаЗаказа); //Заполнились поля:
	//Организация, Партнер, Контрагент, Договор, Соглашение, ХозяйственнаяОперация, Валюта, Склад
	Если НЕ ЗначениеЗаполнено(оДок.ВалютаВзаиморасчетов) Тогда
		оДок.ВалютаВзаиморасчетов = оДок.Валюта;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(оДок.ПорядокРасчетов) Тогда
		оДок.ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПоЗаказам;
	КонецЕсли;
	//++ РС Консалт: Трофимов Евгений 28.10.2022 Тикет 21361
	//e1cib/data/Документ.Задание?ref=b2990c1b998376d64376d5ea03098753
	//оДок.Дата = ПараметрыПриобретения.ДатаПриобретения;
	Если оДок.Дата = '00010101' Тогда
		оДок.Дата = ТекущаяДатаСеанса();
	КонецЕсли;
	оДок.НомерВходящегоДокумента = ПараметрыПриобретения.НомерВходящегоДокумента;
	оДок.ДатаВходящегоДокумента = ПараметрыПриобретения.ДатаВходящегоДокумента;
	//-- КонецТикета 21361	
	Если ПустаяСтрока(оДок.Номер) Тогда
		оДок.УстановитьНовыйНомер();
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(оДок.Менеджер) Тогда
		оДок.Менеджер = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(оДок.Автор) Тогда
		оДок.Автор = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(оДок.ЗакупкаПодДеятельность) Тогда
		оДок.ЗакупкаПодДеятельность = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
	КонецЕсли;
	оДок.Согласован = Истина;
	оДок.ПоступлениеПоЗаказам = Истина;
	//оДок.ВариантПриемкиТоваров = Перечисления.ВариантыПриемкиТоваров.РазделенаПоЗаказамИНакладным;
	Если НЕ ЗначениеЗаполнено(оДок.СпособДоставки) Тогда
		оДок.СпособДоставки = Перечисления.СпособыДоставки.СиламиПоставщикаДоНашегоСклада;
	КонецЕсли;
	оДок.ДатаПоступления = ПараметрыПриобретения.ДатаПоступления;

	Пока ВыборкаТовары.Следующий() Цикл
		
		НовСтр = оДок.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, ВыборкаТовары);
		//Номенклатура,Характеристика,Серия,ЗаказПоставщику,КодСтроки,Упаковка,КоличествоУпаковок,Сумма,СуммаСНДС
		//Количество,СтавкаНДС,Склад
		Если НовСтр.Количество > 0 Тогда
			НовСтр.Цена = НовСтр.Сумма / НовСтр.Количество;
		КонецЕсли;
		НовСтр.ОбъектРасчетов = ВыборкаТовары.ЗаказПоставщику;
		НовСтр.СуммаВзаиморасчетов = РаботаСКурсамиВалют.ПересчитатьВВалюту(
			НовСтр.СуммаСНДС,
			оДок.Валюта,
			оДок.ВалютаВзаиморасчетов,
			оДок.Дата
		);
		
	КонецЦикла;
	
	ПараметрыУказанияСерий  = НоменклатураСервер.ПараметрыУказанияСерий(оДок, Документы.ПриобретениеТоваровУслуг);
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(оДок, ПараметрыУказанияСерий);
	
	тзТовары = оДок.Товары.Выгрузить();
	оДок.СуммаДокумента = тзТовары.Итог("СуммаСНДС");
	оДок.СуммаВзаиморасчетов = тзТовары.Итог("СуммаВзаиморасчетов");
	ПопытатьсяПровестиДокумент(оДок);
	
	Для Каждого Партия Из тзПартииКонтейнера Цикл
		Если Партия.ПартияПоставки = Объект.Ссылка Тогда
			СтрокиКонтейнера = Объект.Контейнеры.НайтиСтроки(Новый Структура("НомерКонтейнера", ПараметрыПриобретения.НомерКонтейнера));
			СтрокиКонтейнера[0].ДокументПриобретения = оДок.Ссылка; 
		Иначе
			оПартия = Партия.ПартияПоставки.ПолучитьОбъект();
			Если оПартия.ДатаЕТА <> ПараметрыПриобретения.ДатаПриобретения Тогда
				ОбщегоНазначения.СообщитьПользователю("В документе "+Партия.ПартияПоставки+" была указана Дата ЕТА "
				+ Формат(оПартия.ДатаЕТА,"ДЛФ=D")+". Заменена на "+Формат(ПараметрыПриобретения.ДатаПриобретения,"ДЛФ=D"),Партия.ПартияПоставки);
				оПартия.ДатаЕТА = ПараметрыПриобретения.ДатаПриобретения;	
			КонецЕсли;
			СтрокиКонтейнера = оПартия.Контейнеры.НайтиСтроки(Новый Структура("НомерКонтейнера", ПараметрыПриобретения.НомерКонтейнера));
			СтрокиКонтейнера[0].ДокументПриобретения = оДок.Ссылка;
			ПопытатьсяПровестиДокумент(оПартия);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // ПровестиПриобретение()

//++ РС Консалт: Трофимов Евгений 18.07.2022 Задача 19052
//e1cib/data/Документ.Задание?ref=acdd97a4eefa6027436ec29c580e4f90&НаКлиенте
&НаСервереБезКонтекста
Функция ПолучитьПриобретение(тзПартииКонтейнера)

	Для Каждого Стр Из тзПартииКонтейнера Цикл
		Если ЗначениеЗаполнено(Стр.ДокументПриобретения) Тогда
			Возврат Стр.ДокументПриобретения.ПолучитьОбъект();
		КонецЕсли;
	КонецЦикла;
	Возврат Документы.ПриобретениеТоваровУслуг.СоздатьДокумент();

КонецФункции // ПолучитьПриобретение()

//++ РС Консалт: Трофимов Евгений 18.07.2022 Задача 19052
//e1cib/data/Документ.Задание?ref=acdd97a4eefa6027436ec29c580e4f90&НаКлиенте
&НаСервереБезКонтекста
Процедура ПопытатьсяПровестиДокумент(ДокументОбъект)

	Попытка
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
	Исключение
		Если ДокументОбъект.Проведен Тогда
			Попытка
				ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			Исключение
				ОбщегоНазначения.СообщитьПользователю("Не удалось отменить проведение " + ДокументОбъект.Ссылка, ДокументОбъект.Ссылка);
			КонецПопытки;
		Иначе
			ДокументОбъект.ОбменДанными.Загрузка = Истина;
			ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;
		ОбщегоНазначения.СообщитьПользователю("Не удалось провести документ " + ДокументОбъект.Ссылка + ". Попробуйте вручную.", ДокументОбъект.Ссылка);
	КонецПопытки;

КонецПроцедуры // ПопытатьсяПровестиДокумент()

//++ РС Консалт: Трофимов Евгений 09.09.2022 Задача 20233
//e1cib/data/Документ.Задание?ref=b099bce8d3b5c7a646b4366d68c43b34
&НаКлиенте
Процедура ЗаполнитьСтатусКонтейнера(Команда)
	
	ТекущийСтатус = ПредопределенноеЗначение("Перечисление.РСК_СтатусыПартийПоставки.ПустаяСсылка");
	ДанныеСтроки = Элементы.Контейнеры.ТекущиеДанные;
	Если ДанныеСтроки <> Неопределено Тогда
		ТекущийСтатус = ДанныеСтроки.СтатусКонтейнера;
	КонецЕсли;
	
	ПоказатьВводЗначения(
		Новый ОписаниеОповещения("ПослеВыбораСтатусаКонтейнера", ЭтаФорма), 
		ТекущийСтатус,
		"Выбери статус контейнера",
		Новый ОписаниеТипов("ПеречислениеСсылка.РСК_СтатусыПартийПоставки")
	);
	
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 09.09.2022 Задача 20233
//e1cib/data/Документ.Задание?ref=b099bce8d3b5c7a646b4366d68c43b34
&НаКлиенте
Процедура ПослеВыбораСтатусаКонтейнера(Значение, ДополнительныеПараметры) Экспорт
	
	Если Значение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ВыделеннаяСтрока Из Элементы.Контейнеры.ВыделенныеСтроки Цикл
		ДанныеСтроки = Элементы.Контейнеры.ДанныеСтроки(ВыделеннаяСтрока);
		ДанныеСтроки.СтатусКонтейнера = Значение;
	КонецЦикла;
	
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 24.10.2022 Задача 21304
//e1cib/data/Документ.Задание?ref=95ba1fec1efd0de4442f386a0a00044a&НаКлиенте
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ПослеЗаписиПартииПоставки");  //Используется в форме Заказа поставщику для обновления сведений о партиях
КонецПроцедуры

&НаКлиенте
Процедура ЕдинаяТаможеннаяДекларацияПриИзменении(Элемент)
	ОбновитьВидимостьЭлементов();
КонецПроцедуры



