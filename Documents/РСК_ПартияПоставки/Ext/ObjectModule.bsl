#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	ЕдиныйПунктПолученияДляВсехКонтейнеров = Истина;
	ЕдинаяСтавкаАВТО_ДляВсехКонтейнеров = Истина;
	Дата = ТекущаяДатаСеанса();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		СтруктураШапки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Партнер,Валюта");
		Поставщик = СтруктураШапки.Партнер;
		Валюта = СтруктураШапки.Валюта;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЗаказПоставщикуТовары.Номенклатура КАК Номенклатура,
			|	ЗаказПоставщикуТовары.Характеристика КАК Характеристика,
			|	ЗаказПоставщикуТовары.Серия КАК Серия,
			|	ЗаказПоставщикуТовары.Сумма КАК Сумма,
			|	ЗаказПоставщикуТовары.СуммаСНДС КАК СуммаСНДС,
			|	ЗаказПоставщикуТовары.Упаковка КАК Упаковка,
			|	ЗаказПоставщикуТовары.Количество КАК Количество,
			|	ЗаказПоставщикуТовары.КоличествоУпаковок КАК КоличествоУпаковок,
			|	ЗаказПоставщикуТовары.Ссылка КАК ЗаказПоставщику,
			|	ЗаказПоставщикуТовары.КодСтроки КАК КодСтроки
			|ИЗ
			|	Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
			|ГДЕ
			|	ЗаказПоставщикуТовары.Ссылка = &ЗаказПоставщику";
		
		Запрос.УстановитьПараметр("ЗаказПоставщику", ДанныеЗаполнения);
		Товары.Загрузить(Запрос.Выполнить().Выгрузить());

	КонецЕсли;
	
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	ВалютаРУ = Константы.ВалютаРегламентированногоУчета.Получить();
	Если НЕ ЗначениеЗаполнено(Валюта) Тогда
		Валюта = ВалютаРУ;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ВалютаБрокера) Тогда
		ВалютаБрокера = ВалютаРУ;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ВалютаТерминала) Тогда
		ВалютаТерминала = ВалютаРУ;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ВалютаФрахта) Тогда
		ВалютаФрахта = ВалютаРУ;
	КонецЕсли;
	
    УстановкаСтатусаПартииПоЕдиномуСтатусуКонтейнеров();
	ПерезаполнитьНомерЗаказаНаПроизводство();
	
КонецПроцедуры

//Устанавливает статус партии, если у всех контейнеров одинаковый статус
Процедура УстановкаСтатусаПартииПоЕдиномуСтатусуКонтейнеров()
	
	Если Контейнеры.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	КонтейнерыСоСтатусами = Контейнеры.Выгрузить();
	УдаляемыеСтроки = КонтейнерыСоСтатусами.НайтиСтроки(
		Новый Структура("СтатусКонтейнера", Перечисления.РСК_СтатусыПартийПоставки.ПустаяСсылка())
	);
	
	Для Каждого УдаляемаяСтрока Из УдаляемыеСтроки Цикл
		КонтейнерыСоСтатусами.Удалить(УдаляемаяСтрока);
	КонецЦикла;
	
	Если КонтейнерыСоСтатусами.Количество() <> Контейнеры.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	МассивРазличныхСтатусов = ОбщегоНазначения.ВыгрузитьКолонку(КонтейнерыСоСтатусами,"СтатусКонтейнера",Истина);
	Если МассивРазличныхСтатусов.Количество() = 1 Тогда
		СтатусПартии = МассивРазличныхСтатусов[0];
	КонецЕсли;
	
КонецПроцедуры


//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
Процедура ПриКопировании(ОбъектКопирования)
	Ответственный = Неопределено;
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	//ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	//Почему то возникает ошибка: Ошибка при выполнении обработчика - 'ОбработкаУдаленияПроведения' по причине: Поле объекта не обнаружено (ПроведениеДокументов)
	//В итоге включил удаление движений в свойствах объекта.	
	
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	//++ РС Консалт: Трофимов Евгений 07.07.2022 Задача 18725
	//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
	ПроведениеПоРегиструТоварыКПартиямПоставки(Отказ);
	//-- КонецЗадачи 18725
	
	//++ РС Консалт: Трофимов Евгений 11.12.2022 Задача 22454
	//e1cib/data/Документ.Задание?ref=b14c6ffbdbd828834649b3741d796378
	КорректировкаДатыПоступленияВОтчетеДоступности();
	//-- КонецЗадачи 22454	
	
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 07.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
Процедура ПроведениеПоРегиструТоварыКПартиямПоставки(Отказ)

	Движения.РСК_ТоварыКПартиямПоставки.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РСК_ПартияПоставкиТовары.КодСтроки КАК НомерСтрокиЗаказа,
		|	СУММА(РСК_ПартияПоставкиТовары.Количество) КАК Количество,
		|	РСК_ПартияПоставкиТовары.ЗаказПоставщику КАК ЗаказПоставщику,
		|	&Период КАК Период,
		|	&ВидДвижения КАК ВидДвижения
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	Документ.РСК_ПартияПоставки.Товары КАК РСК_ПартияПоставкиТовары
		|ГДЕ
		|	РСК_ПартияПоставкиТовары.Ссылка = &Ссылка
		|	И РСК_ПартияПоставкиТовары.КодСтроки > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	РСК_ПартияПоставкиТовары.КодСтроки,
		|	РСК_ПартияПоставкиТовары.ЗаказПоставщику
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтрокиЗаказа КАК НомерСтрокиЗаказа,
		|	Товары.Количество КАК Количество,
		|	Товары.ЗаказПоставщику КАК ЗаказПоставщику,
		|	Товары.Период КАК Период,
		|	Товары.ВидДвижения КАК ВидДвижения
		|ИЗ
		|	Товары КАК Товары";
	
	Запрос.УстановитьПараметр("ВидДвижения", ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Движения.РСК_ТоварыКПартиямПоставки.Загрузить(Запрос.Выполнить().Выгрузить());
	Движения.РСК_ТоварыКПартиямПоставки.БлокироватьДляИзменения = Истина;
	Движения.РСК_ТоварыКПартиямПоставки.Записать();
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РСК_ТоварыКПартиямПоставкиОстатки.НомерСтрокиЗаказа КАК НомерСтрокиЗаказа,
		|	ПРЕДСТАВЛЕНИЕ(РСК_ПартияПоставкиТовары.Номенклатура) КАК Товар,
		|	ПРЕДСТАВЛЕНИЕ(РСК_ПартияПоставкиТовары.Характеристика) КАК Характеристика,
		|	РСК_ТоварыКПартиямПоставкиОстатки.КоличествоОстаток КАК Остаток,
		|	РСК_ПартияПоставкиТовары.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	РегистрНакопления.РСК_ТоварыКПартиямПоставки.Остатки(
		|			&МоментОстатков,
		|			(ЗаказПоставщику, НомерСтрокиЗаказа) В
		|				(ВЫБРАТЬ
		|					Товары.ЗаказПоставщику КАК ЗаказПоставщику,
		|					Товары.НомерСтрокиЗаказа КАК НомерСтрокиЗаказа
		|				ИЗ
		|					Товары КАК Товары)) КАК РСК_ТоварыКПартиямПоставкиОстатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РСК_ПартияПоставки.Товары КАК РСК_ПартияПоставкиТовары
		|		ПО РСК_ТоварыКПартиямПоставкиОстатки.ЗаказПоставщику = РСК_ПартияПоставкиТовары.ЗаказПоставщику
		|			И РСК_ТоварыКПартиямПоставкиОстатки.НомерСтрокиЗаказа = РСК_ПартияПоставкиТовары.КодСтроки
		|ГДЕ
		|	РСК_ТоварыКПартиямПоставкиОстатки.КоличествоОстаток < 0
		|	И РСК_ПартияПоставкиТовары.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("МоментОстатков", Новый Граница(МоментВремени(), ВидГраницы.Включая));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ОбщегоНазначения.СообщитьПользователю(
			СтрШаблон(
				"Недостаточно заказанного товара %1%2! Не хватает: %3",
				Выборка.Товар,
				?(ПустаяСтрока(Выборка.Характеристика), "", "/"+Выборка.Характеристика),
				-Выборка.Остаток
			),,
			"Товары["+XMLСтрока(Выборка.НомерСтроки - 1)+"].КоличествоУпаковок",
			"Объект",
			Отказ
		);
	КонецЦикла;

КонецПроцедуры

// Расчёт затрат на перевозку
//++ РС Консалт: Трофимов Евгений 12.07.2022 Задача 18725
//e1cib/data/Документ.Задание?ref=82a4670c1ac44f3949c1b038bf806fda
Процедура РасчётЗатратНаПеревозку() Экспорт
	
	ВалютаРУ = Константы.ВалютаРегламентированногоУчета.Получить();
	СтавкиТНВЭД = РСК_ВызовСервера.ПолучитьСтавкиТНВЭД(Товары.Выгрузить(,"Номенклатура"));

	ОбщийВес = 0;
	Для Каждого Стр Из Товары Цикл
		ОбщийВес = ОбщийВес + Стр.Количество * Стр.Вес / 1000;
	КонецЦикла;
	
	ДатаКурсаВалют = ТекущаяДатаСеанса();
	Если ЗначениеЗаполнено(ТаможеннаяДекларация) Тогда
		ДатаКурсаВалют = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТаможеннаяДекларация, "Дата");
	КонецЕсли;
	
	Для Каждого Стр Из Товары Цикл
		Стр.СуммаФрахта = СтавкаФрахта * Стр.ДоляВесаВКонтейнере;
		Стр.ТаможеннаяСтоимость = РаботаСКурсамиВалют.ПересчитатьВВалюту(Стр.СуммаСНДС, Валюта, ВалютаРУ, ДатаКурсаВалют)
								+ РаботаСКурсамиВалют.ПересчитатьВВалюту(Стр.СуммаФрахта, ВалютаФрахта, ВалютаРУ, ДатаКурсаВалют);
								
								
		СтавкаТНВЭД = СтавкиТНВЭД[Стр.Номенклатура];
		Если СтавкаТНВЭД = Неопределено Тогда 
			Стр.ТаможеннаяНДС = 0;
			Стр.ТаможеннаяПошлина = 0;
		Иначе
			Стр.ТаможеннаяПошлина = Стр.ТаможеннаяСтоимость * СтавкаТНВЭД.СтавкаТаможеннойПошлины / 100
				+ РаботаСКурсамиВалют.ПересчитатьВВалюту(
					Стр.Вес * Стр.Количество * СтавкаТНВЭД.СтавкаВесовойПошлиныКГ, 
					СтавкаТНВЭД.ВалютаВесовойПошлины, 
					ВалютаРУ, 
					ДатаКурсаВалют
				);
			Стр.ТаможеннаяНДС = (Стр.ТаможеннаяСтоимость + Стр.ТаможеннаяПошлина)
			    * ЦенообразованиеКлиентСервер.ПолучитьСтавкуНДСЧислом(СтавкаТНВЭД.СтавкаТаможеннойНДС)/100;
		КонецЕсли;
		
		Стр.СуммаТерминальнойОбработки = Стр.ДоляВесаВКонтейнере * СтавкаТерминала;
		Если ЕдинаяСтавкаАВТО_ДляВсехКонтейнеров Тогда
			Стр.СуммаАВТО = Стр.ДоляВесаВКонтейнере * СтавкаАВТО;
		Иначе
			СтрокиКонтейнеров = Контейнеры.НайтиСтроки(Новый Структура("НомерКонтейнера", Стр.НомерКонтейнера));
			СтавкаКонтейнераАВТО = 0;
			Если СтрокиКонтейнеров.Количество() > 0 Тогда
				СтавкаКонтейнераАВТО = СтрокиКонтейнеров[0].СтавкаАВТО;
			КонецЕсли;
			Стр.СуммаАВТО = Стр.ДоляВесаВКонтейнере * СтавкаКонтейнераАВТО;
		КонецЕсли;
		Если ОбщийВес > 0 Тогда
			Стр.СуммаБрокера = Стр.Вес * Стр.Количество / 1000 * СтавкаБрокера / ОбщийВес;
		Иначе
			Стр.СуммаБрокера = 0;
		КонецЕсли;
		
	КонецЦикла;
	
	//Расчёт суммы таможенного сбора
	ТаможеннаяСтоимость = Товары.Итог("ТаможеннаяСтоимость");
	Если ТаможеннаяСтоимость >= 10 И ТаможеннаяСтоимость < 200000 Тогда
		СуммаТаможенногоСбора = 775;
	ИначеЕсли ТаможеннаяСтоимость >= 200000 И ТаможеннаяСтоимость < 450000 Тогда
		СуммаТаможенногоСбора = 1550;
	ИначеЕсли ТаможеннаяСтоимость >= 450000 И ТаможеннаяСтоимость < 1200000 Тогда
		СуммаТаможенногоСбора = 3100;
	ИначеЕсли ТаможеннаяСтоимость >= 1200000 И ТаможеннаяСтоимость < 2700000 Тогда
		СуммаТаможенногоСбора = 8530;
	ИначеЕсли ТаможеннаяСтоимость >= 2700000 И ТаможеннаяСтоимость < 4200000 Тогда
		СуммаТаможенногоСбора = 12000;
	ИначеЕсли ТаможеннаяСтоимость >= 4200000 И ТаможеннаяСтоимость < 5500000 Тогда
		СуммаТаможенногоСбора = 15500;
	ИначеЕсли ТаможеннаяСтоимость >= 5500000 И ТаможеннаяСтоимость < 7000000 Тогда
		СуммаТаможенногоСбора = 20000;
	ИначеЕсли ТаможеннаяСтоимость >= 7000000 И ТаможеннаяСтоимость < 8000000 Тогда
		СуммаТаможенногоСбора = 23000;
	ИначеЕсли ТаможеннаяСтоимость >= 8000000 И ТаможеннаяСтоимость < 9000000 Тогда
		СуммаТаможенногоСбора = 25000;
	ИначеЕсли ТаможеннаяСтоимость >= 9000000 И ТаможеннаяСтоимость < 10000000 Тогда
		СуммаТаможенногоСбора = 27000;
	ИначеЕсли ТаможеннаяСтоимость >= 10000000 Тогда
		СуммаТаможенногоСбора = 30000;
	Иначе
		СуммаТаможенногоСбора = 0;
	КонецЕсли;
	
	Для Каждого Стр Из Товары Цикл
		Если ОбщийВес = 0 Тогда
			Стр.СуммаТаможенногоСбора = 0;
		Иначе
			Стр.СуммаТаможенногоСбора = Стр.Вес * Стр.Количество /1000 * СуммаТаможенногоСбора / ОбщийВес;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Процедура ПерезаполнитьНомерЗаказаНаПроизводство()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказПоставщику.НомерПоДаннымПоставщика КАК Номер,
		|	ЗаказПоставщику.ДатаПоДаннымПоставщика КАК Дата
		|ИЗ
		|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
		|ГДЕ
		|	ЗаказПоставщику.Ссылка В(&МассивЗаказов)
		|	И ЗаказПоставщику.НомерПоДаннымПоставщика <> """"";
	
	Запрос.УстановитьПараметр("МассивЗаказов", Товары.Выгрузить(,"ЗаказПоставщику").ВыгрузитьКолонку("ЗаказПоставщику"));
	Выборка = Запрос.Выполнить().Выбрать();
	НомерЗаказаНаПроизводство = "";
	Пока Выборка.Следующий() Цикл
		НомерЗаказаНаПроизводство = 
			НомерЗаказаНаПроизводство
			+?(ПустаяСтрока(НомерЗаказаНаПроизводство),"",", ")
			+ Выборка.Номер 
			+?(Выборка.Дата = '0001-01-01',""," от " + Формат(Выборка.Дата, "ДФ=dd.MM.yyyy"));
	КонецЦикла;
	
КонецПроцедуры // ПерезаполнитьНомерЗаказаНаПроизводство()

//++ РС Консалт: Трофимов Евгений 11.12.2022 Задача 22454
//e1cib/data/Документ.Задание?ref=b14c6ffbdbd828834649b3741d796378
Процедура КорректировкаДатыПоступленияВОтчетеДоступности() Экспорт

	Для Каждого Стр Из Контейнеры Цикл
		Если НЕ ЗначениеЗаполнено(Стр.ДокументПриобретения) ИЛИ Стр.ДатаПоступленияНаСклад = '00010101' Тогда
			Продолжить;
		КонецЕсли;
		
		БылиИзменения = Ложь;
		оПриобретение = Стр.ДокументПриобретения.ПолучитьОбъект();
		ПроводкиРаспределениеЗапасов = оПриобретение.Движения.РаспределениеЗапасовДвижения;
		ПроводкиРаспределениеЗапасов.Прочитать();
		Для Каждого Запись Из ПроводкиРаспределениеЗапасов Цикл
			Если Запись.ЗаказНаПоступление = Стр.ДокументПриобретения Тогда
				Запись.ДатаПоступления = Стр.ДатаПоступленияНаСклад;
				БылиИзменения = Истина;
			КонецЕсли;
		КонецЦикла;
		Если БылиИзменения Тогда
			ПроводкиРаспределениеЗапасов.Записать();
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	//++ РС Консалт: Трофимов Евгений 21.12.2022 Тикет 22629
	//e1cib/data/Документ.Задание?ref=9e439c07dd47beac4ed73427e39f11fb
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаСинхронизации = РегистрыСведений.реа_ПредопределенныеЗначения.Значение(
		"Обработка синхронизации для партий поставок",
		Справочники.ДополнительныеОтчетыИОбработки.ПустаяСсылка()
	);
	
	Если НЕ ЗначениеЗаполнено(ОбработкаСинхронизации) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыКоманды = Новый Структура;
	ПараметрыКоманды.Вставить("ДополнительнаяОбработкаСсылка", ОбработкаСинхронизации);
	ПараметрыКоманды.Вставить("ИдентификаторКоманды", "СинхронизацияСтатусовПартийПоставокПоРасписанию");
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(Новый УникальныйИдентификатор);
    ПараметрыВыполнения.ОжидатьЗавершение = 0; // запускать сразу
    ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Синхронизация заказов поставщику с партией поставки'");
    ПараметрыВыполнения.ЗапуститьНеВФоне = Ложь;
     
    РезультатВыполнения = ДлительныеОперации.ВыполнитьВФоне(
        "ДополнительныеОтчетыИОбработки.ВыполнитьКоманду",
        ПараметрыКоманды, 
        ПараметрыВыполнения
    );
	//-- КонецТикета 22629	
КонецПроцедуры


#КонецЕсли



