
&Вместо("ОбработкаПроведения")
Процедура САВ_ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат
	КонецЕсли;	
	
	// регистр ЗаказыКлиентов Расход 
//	Движения.КоммерческоеПредложениеКлиенту.Записывать = Истина;
//	Движения.КоммерческоеПредложениеКлиенту.Записать();
//	Если Статус=Перечисления.СтатусыКоммерческихПредложенийКлиентам.Действует Тогда
//    Для Каждого ТекСтрокаТовары Из Товары Цикл
//        Движение = Движения.КоммерческоеПредложениеКлиенту.Добавить();
//        Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
//        Движение.Период = Дата;
//        Движение.Организация = Организация;
//		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
//        Движение.Характеристика = ТекСтрокаТовары.Характеристика; 
//		Движение.Партнер=Клиент;  
//		Движение.Склад=Склад;
//		Движение.Контрагент=Контрагент;
//        Движение.Потребность = ТекСтрокаТовары.Количество;
//	КонецЦикла;	                             
//КонецЕсли;


Движения.РаспределениеЗапасовДвижения.Записывать = Истина;
	Движения.РаспределениеЗапасовДвижения.Записать();
////	Если Статус=Перечисления.СтатусыКоммерческихПредложенийКлиентам.Действует Тогда
////    Для Каждого ТекСтрокаТовары Из Товары Цикл
////        Движение = Движения.РаспределениеЗапасовДвижения.Добавить();
////       // Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
////        Движение.Период = Дата;
////		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
////        Движение.Характеристика = ТекСтрокаТовары.Характеристика; 
////		Движение.ЗаказНаОтгрузку=ЭтотОбъект;  
////		Движение.Склад=Склад; 
////		Движение.ЖелаемаяДатаОтгрузки=ТекСтрокаТовары.СрокПоставки;
////        Движение.КОбеспечениюБезРезерва = ТекСтрокаТовары.Количество;
////	КонецЦикла;	                             
////КонецЕсли;
	
 НаборЗаписей = РегистрыСведений.РаспределениеЗапасов.СоздатьНаборЗаписей(); 
НаборЗаписей.Отбор.ЗаказНаОтгрузку.Установить(ЭтотОбъект.Ссылка); 
Если ЭтотОбъект.Статус=Перечисления.СтатусыКоммерческихПредложенийКлиентам.Действует Тогда

ТЗ=Товары.Выгрузить();
ТЗ.Свернуть("Номенклатура,Характеристика,СрокПоставки","Количество");
Для Каждого ТекСтрокаТовары Из ТЗ Цикл 
НоваяЗапись = НаборЗаписей.Добавить(); 
		НоваяЗапись.Номенклатура = ТекСтрокаТовары.Номенклатура;
        НоваяЗапись.Характеристика = ТекСтрокаТовары.Характеристика; 
		НоваяЗапись.ЗаказНаОтгрузку=ЭтотОбъект.Ссылка;  
		НоваяЗапись.Склад=Склад;
		НоваяЗапись.Состояние=Перечисления.РаспределениеЗапасовСостояния.КП;
		НоваяЗапись.ЖелаемаяДатаОтгрузки=ТекСтрокаТовары.СрокПоставки;
        НоваяЗапись.ТипЗаписиРаспределенияЗапасов = 1;
		НоваяЗапись.ПотребностьПоКП=ТекСтрокаТовары.Количество;
КонецЦикла; 
  
КонецЕсли;
 НаборЗаписей.Записать();
	ПродолжитьВызов(Отказ, РежимПроведения);
КонецПроцедуры

&Вместо("ОбработкаУдаленияПроведения")
Процедура САВ_ОбработкаУдаленияПроведения(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат
	КонецЕсли;
	
	
	//Движения.КоммерческоеПредложениеКлиенту.Записывать = Истина;
	//Движения.КоммерческоеПредложениеКлиенту.Записать();   
	 НаборЗаписей = РегистрыСведений.РаспределениеЗапасов.СоздатьНаборЗаписей(); 
НаборЗаписей.Отбор.ЗаказНаОтгрузку.Установить(ЭтотОбъект.Ссылка); 
НаборЗаписей.Записать();    
	//Движения.РаспределениеЗапасовДвижения.Записывать = Истина;
	//Движения.РаспределениеЗапасовДвижения.Записать();	
КонецПроцедуры

&После("ПередЗаписью")
Процедура РСК_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
		Если Не ЗначениеЗаполнено(СрокДействия) И ЭтоНовый() Тогда
		СрокДействия=ТекущаяДата();
	КонецЕсли;

КонецПроцедуры
