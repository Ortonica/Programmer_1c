
&После("ОбработкаПолученияПолейПредставления")
Процедура РСК_ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17924
	//e1cib/data/Документ.Задание?ref=b6d469d456107fef47bae0d8601fa57f
	
	//Замена представления документов, в которых переключается интерфейс на подсистему «Выдача ТСР»
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("Номер");
	Поля.Добавить("Дата");
	Поля.Добавить("РСК_ВыдачаТСР");
	//-- КонецЗадачи 17924
КонецПроцедуры

&После("ОбработкаПолученияПредставления")
Процедура РСК_ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17924
	//e1cib/data/Документ.Задание?ref=b6d469d456107fef47bae0d8601fa57f
	
	//Замена представления документов, в которых переключается интерфейс на подсистему «Выдача ТСР»
	СтандартнаяОбработка = Ложь;
	Если Данные.РСК_ВыдачаТСР Тогда
		Представление = "Загрузочная ведомость ";
	Иначе
		Представление = "Задание на перевозку ";
	КонецЕсли;
	Представление = Представление + Данные.Номер + " от " + Формат(Данные.Дата, "ДЛФ=DT");
	//-- КонецЗадачи 17924
КонецПроцедуры

&ИзменениеИКонтроль("СформироватьПечатнуюФормуМаршрутныйЛист")
Функция РСК_СформироватьПечатнуюФормуМаршрутныйЛист(МассивОбъектов, ОбъектыПечати)

	УстановитьПривилегированныйРежим(Истина);

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаданиеНаПеревозку_МаршрутныйЛист";
	
	#Удаление
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ЗаданиеНаПеревозку.ПФ_MXL_МаршрутныйЛист");
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ЗаданиеНаПеревозку.РС_ПФ_MXL_МаршрутныйЛист");
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки

	ОбластьЗаголовокДокумента		= Макет.ПолучитьОбласть("ЗаголовокДокумента");
	ОбластьШапкаДокумента 			= Макет.ПолучитьОбласть("ШапкаДокумента");
	ОбластьДополнительнаяИнформация = Макет.ПолучитьОбласть("ДополнительнаяИнформация");

	Запрос = Новый Запрос;
	#Вставка
	#Область Мусор001
	//++ РС Консалт: Трофимов Евгений 23.01.2023 Задача 23089
	//e1cib/data/Документ.Задание?ref=b27e0f26ac763ca6463826ce7ef4806d
	//Здесь сохранён текст запроса, каким он был до меня.
	//Так как запрос притерпел значительные изменения - предлагаю всё это забыть 
	//и создать единую вставку итогового запроса для наилучшего удобства адаптации расширения.
	
	//Запрос.Текст =
	//#Вставка
	////++ РС Консалт: Минаков А.С. Задача 20226
	//"ВЫБРАТЬ РАЗЛИЧНЫЕ 
	//|	РаспоряженияЗаданий.Ссылка 
	//|ПОМЕСТИТЬ ВтТранзит
	//|ИЗ 
	//|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК РаспоряженияЗаданий
	//|ГДЕ
	//|	РаспоряженияЗаданий.Ссылка.Проведен
	//|		И НЕ РаспоряженияЗаданий.РСК_Транзитная
	//|		И РаспоряженияЗаданий.РСК_Накладная В (
	//|			ВЫБРАТЬ РаспоряженияЗаданий.РСК_Накладная 
	//|			ИЗ Документ.ЗаданиеНаПеревозку.Распоряжения КАК РаспоряженияЗаданий 
	//|			ГДЕ РаспоряженияЗаданий.Ссылка В(&МассивОбъектов) И РаспоряженияЗаданий.РСК_Транзитная)
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|" +
	////++ РС Консалт: Минаков А.С. Задача 20226
	//#КонецВставки
	//"ВЫБРАТЬ РАЗЛИЧНЫЕ	
	//|	РасходныйОрдер.Ссылка КАК Ордер,
	//|	РаспоряженияЗаданий.Распоряжение КАК Распоряжение
	//|ПОМЕСТИТЬ РаспоряженияОрдеровПоПолучателям
	//|ИЗ
	//|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК РаспоряженияЗаданий
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары КАК РасходныйОрдер
	//#Удаление
	//|		ПО РаспоряженияЗаданий.Ссылка = РасходныйОрдер.ЗаданиеНаПеревозку
	//|			И РаспоряженияЗаданий.ПолучательОтправитель = РасходныйОрдер.Получатель
	//|			И НЕ РасходныйОрдер.ПометкаУдаления
	//#КонецУдаления	
	//#Вставка
	////++ РС Консалт: Минаков А.С. Задача 20226
	//|		ПО (РаспоряженияЗаданий.Ссылка = РасходныйОрдер.ЗаданиеНаПеревозку ИЛИ РасходныйОрдер.ЗаданиеНаПеревозку В (ВЫБРАТЬ ВтТранзит.Ссылка ИЗ ВтТранзит КАК ВтТранзит))
	//|			И РаспоряженияЗаданий.ПолучательОтправитель = РасходныйОрдер.Получатель
	//|			И НЕ РасходныйОрдер.ПометкаУдаления
	////++ РС Консалт: Минаков А.С. Задача 20226
	//#КонецВставки
	//|ГДЕ
	//|	РаспоряженияЗаданий.Ссылка В(&МассивОбъектов)
	//|
	//|ИНДЕКСИРОВАТЬ ПО
	//|	РасходныйОрдер.Ссылка,
	//|	РаспоряженияЗаданий.Распоряжение
	//|;
	//|
	//|//////////////////////////////////////////////////////////////////////////////// 1
	//|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	РаспоряженияЗаданий.Ссылка       КАК Ссылка,
	//#Удаление
	//|	РаспоряженияЗаданий.ПолучательОтправитель КАК Получатель,
	//#КонецУдаления
	//#Вставка
	////++ РС Консалт: Минаков А.С. Задача 20226
	//|	ЕСТЬNULL(Контрагенты.Ссылка, РаспоряженияЗаданий.ПолучательОтправитель) КАК Получатель,
	//|	ЕСТЬNULL(Контрагенты.ИНН, """") КАК ИНН,
	////++ РС Консалт: Минаков А.С. Задача 20226
	//#КонецВставки
	//|	РаспоряженияЗаданий.Распоряжение КАК Распоряжение,
	//|	РаспоряженияЗаданий.КлючСвязи    КАК КлючСвязи,
	//|	РаспоряженияЗаданий.НомерСтроки  КАК НомерСтроки,
	//|	РаспоряженияОрдеров.Ссылка       КАК Ордер,
	//|	РаспоряженияЗаданий.Вес          КАК Вес,
	//|	РаспоряженияЗаданий.Объем        КАК Объем
	//|ПОМЕСТИТЬ РаспоряженияОрдеров
	//|ИЗ
	//|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК РаспоряженияЗаданий
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК РаспоряженияОрдеров
	//|		ПО РаспоряженияЗаданий.Распоряжение = РаспоряженияОрдеров.Распоряжение
	//|			И НЕ РаспоряженияОрдеров.Ссылка.ПометкаУдаления
	//#Вставка
	////++ РС Консалт: Минаков А.С. Задача 20226
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК дЗаказКлиента
	//|		ПО РаспоряженияЗаданий.Распоряжение = дЗаказКлиента.Ссылка
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК дРеализацияТоваровУслуг
	//|		ПО РаспоряженияЗаданий.Распоряжение = дРеализацияТоваровУслуг.Ссылка
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	//|		ПО ЕСТЬNULL(дЗаказКлиента.Контрагент, дРеализацияТоваровУслуг.Контрагент) = Контрагенты.Ссылка
	////++ РС Консалт: Минаков А.С. Задача 20226
	//#КонецВставки
	//|ГДЕ
	//|	РаспоряженияЗаданий.Ссылка В(&МассивОбъектов)
	//|
	//|ИНДЕКСИРОВАТЬ ПО
	//|	РаспоряженияЗаданий.КлючСвязи,
	//|	РаспоряженияЗаданий.Распоряжение,
	//|	РаспоряженияОрдеров.Ссылка
	//|;
	//|
	//|//////////////////////////////////////////////////////////////////////////////// 2
	//|ВЫБРАТЬ
	//|	ЗаданиеНаПеревозку.Ссылка КАК Ссылка,
	//|	ЗаданиеНаПеревозку.Номер  КАК НомерЗадания,
	//|	ЗаданиеНаПеревозку.Дата   КАК Дата,
	//|	ПРЕДСТАВЛЕНИЕ(ЗаданиеНаПеревозку.Водитель) КАК Водитель,
	//|	ПРЕДСТАВЛЕНИЕ(ЗаданиеНаПеревозку.КурьерЭкспедитор) КАК КурьерЭкспедитор,
	//|	ПРЕДСТАВЛЕНИЕ(ЗаданиеНаПеревозку.ТранспортноеСредство) КАК ТранспортноеСредство,
	//|	ЗаданиеНаПеревозку.Приоритет КАК Приоритет,
	//|	ЗаданиеНаПеревозку.ДатаВремяРейсаПланС  КАК НачалоРейсаПлан,
	//|	ЗаданиеНаПеревозку.ДатаВремяРейсаПланПо КАК ОкончаниеРейсаПлан,
	//|	ЗаданиеНаПеревозку.ДатаВремяРейсаФактС  КАК НачалоРейсаФакт,
	//|	ЗаданиеНаПеревозку.ДатаВремяРейсаФактПо КАК ОкончаниеРейсаФакт,
	//|	ЗаданиеНаПеревозку.ДополнительнаяИнформация КАК ДопИнформация,
	//|	ЗаданиеНаПеревозку.Вес   КАК ИтогоВес,
	//|	ЗаданиеНаПеревозку.Объем КАК ИтогоОбъем
	//|ИЗ
	//|	Документ.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку
	//|ГДЕ
	//|	ЗаданиеНаПеревозку.Ссылка В(&МассивОбъектов)
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	ЗаданиеНаПеревозку.Ссылка
	//|;
	//|
	//|//////////////////////////////////////////////////////////////////////////////// 3
	//|ВЫБРАТЬ
	//|	МаршрутЗадания.Ссылка  КАК Ссылка,
	//|	МаршрутЗадания.Адрес   КАК Адрес,
	//|	МаршрутЗадания.Зона    КАК Зона,
	//|	МаршрутЗадания.ВремяС  КАК ВремяС,
	//|	МаршрутЗадания.ВремяПо КАК ВремяПо,
	//|	ВЫРАЗИТЬ(МаршрутЗадания.ДополнительнаяИнформация КАК СТРОКА(1000)) КАК ДополнительнаяИнформация,
	//|	РаспоряженияОрдеров.Получатель   КАК Получатель,
	//#Вставка
	////++ РС Консалт: Минаков А.С. Задача 20226
	//|	РаспоряженияОрдеров.ИНН КАК ИНН,
	////++ РС Консалт: Минаков А.С. Задача 20226
	//#КонецВставки
	//|	РаспоряженияОрдеров.Распоряжение КАК Распоряжение,
	//|	РаспоряженияОрдеров.Распоряжение.Номер КАК НомерРаспоряжения,
	//|	РаспоряженияОрдеров.Вес   КАК Вес,
	//|	РаспоряженияОрдеров.Объем КАК Объем,
	//|	СУММА(ВЫБОР
	//|			КОГДА ОтгружаемыеТовары.УпаковочныйЛистРодитель = ЗНАЧЕНИЕ(Документ.УпаковочныйЛист.ПустаяСсылка)
	//|				ТОГДА ЕСТЬNULL(ОтгружаемыеТовары.КоличествоУпаковок, 0)
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК КоличествоМест
	//|ИЗ
	//|	Документ.ЗаданиеНаПеревозку.Маршрут КАК МаршрутЗадания
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РаспоряженияОрдеров КАК РаспоряженияОрдеров
	//|		ПО МаршрутЗадания.КлючСвязи = РаспоряженияОрдеров.КлючСвязи
	//|		
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РаспоряженияОрдеровПоПолучателям КАК РаспоряженияОрдеровПоПолучателям
	//|		ПО РаспоряженияОрдеров.Распоряжение = РаспоряженияОрдеровПоПолучателям.Распоряжение
	//|			И РаспоряженияОрдеров.Ордер = РаспоряженияОрдеровПоПолучателям.Ордер
	//|		
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары.ОтгружаемыеТовары КАК ОтгружаемыеТовары
	//|		ПО РаспоряженияОрдеровПоПолучателям.Ордер = ОтгружаемыеТовары.Ссылка
	//|ГДЕ
	//|	МаршрутЗадания.Ссылка В(&МассивОбъектов)
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	МаршрутЗадания.Ссылка,
	//|	МаршрутЗадания.НомерСтроки,
	//|	МаршрутЗадания.КлючСвязи,
	//|	МаршрутЗадания.Адрес,
	//|	МаршрутЗадания.Зона,
	//|	МаршрутЗадания.ВремяС,
	//|	МаршрутЗадания.ВремяПо,
	//|	ВЫРАЗИТЬ(МаршрутЗадания.ДополнительнаяИнформация КАК СТРОКА(1000)),
	//|	РаспоряженияОрдеров.Получатель,
	//#Вставка
	////++ РС Консалт: Минаков А.С. Задача 20226
	//|	РаспоряженияОрдеров.ИНН,
	////++ РС Консалт: Минаков А.С. Задача 20226
	//#КонецВставки
	//|	РаспоряженияОрдеров.Распоряжение,
	//|	РаспоряженияОрдеров.Вес,
	//|	РаспоряженияОрдеров.Объем
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	МаршрутЗадания.Ссылка,
	//|	МаршрутЗадания.НомерСтроки,
	//|	МИНИМУМ(РаспоряженияОрдеров.НомерСтроки)
	//|
	//|ИТОГИ ПО
	//|	МаршрутЗадания.Ссылка,
	//|	МаршрутЗадания.НомерСтроки,
	//|	МаршрутЗадания.КлючСвязи,
	//|	РаспоряженияОрдеров.Получатель
	//|;
	//|
	//|//////////////////////////////////////////////////////////////////////////////// 4
	//|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	Распоряжения.Склад,
	//|	ВЫБОР
	//|		КОГДА Распоряжения.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
	//|				И Распоряжения.Склад.ДатаНачалаОрдернойСхемыПриОтгрузке <= Распоряжения.Распоряжение.Дата
	//|			ТОГДА ИСТИНА
	//|		ИНАЧЕ ЛОЖЬ
	//|	КОНЕЦ КАК ОрдернаяСхемаПриОтгрузке
	//|ИЗ
	//|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК Распоряжения
	//|ГДЕ
	//|	Распоряжения.Ссылка В(&МассивОбъектов)
	//#Удаление
	//|	И НЕ Распоряжения.Склад.ЭтоГруппа";
	//#КонецУдаления
	//#Вставка
	////++ РС Консалт: Минаков А.С. Задача 20226
	//|	И НЕ Распоряжения.Склад.ЭтоГруппа
	//|;
	//|
	//|//////////////////////////////////////////////////////////////////////////////// 5
	//|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	РаспоряженияОрдеровПоПолучателям.Распоряжение  КАК Распоряжение,
	//|	РаспоряженияОрдеровПоПолучателям.Ордер  КАК Ордер,
	//|	РаспоряженияОрдеровПоПолучателям.Ордер.Номер КАК Номер
	//|ИЗ
	//|	Документ.ЗаданиеНаПеревозку.Маршрут КАК МаршрутЗадания
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РаспоряженияОрдеров КАК РаспоряженияОрдеров
	//|		ПО МаршрутЗадания.КлючСвязи = РаспоряженияОрдеров.КлючСвязи		
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РаспоряженияОрдеровПоПолучателям КАК РаспоряженияОрдеровПоПолучателям
	//|		ПО РаспоряженияОрдеров.Распоряжение = РаспоряженияОрдеровПоПолучателям.Распоряжение
	//|			И РаспоряженияОрдеров.Ордер = РаспоряженияОрдеровПоПолучателям.Ордер
	//|ГДЕ
	//|	МаршрутЗадания.Ссылка В(&МассивОбъектов)";
	////++ РС Консалт: Минаков А.С. Задача 20226
	//#КонецВставки	
	
	//-- КонецЗадачи 23089
	#КонецОбласти
	#КонецВставки
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ	
	|	РасходныйОрдер.Ссылка КАК Ордер,
	|	РаспоряженияЗаданий.Распоряжение КАК Распоряжение
	|ПОМЕСТИТЬ РаспоряженияОрдеровПоПолучателям
	|ИЗ
	|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК РаспоряженияЗаданий
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары КАК РасходныйОрдер
	|		ПО РаспоряженияЗаданий.Ссылка = РасходныйОрдер.ЗаданиеНаПеревозку
	|			И РаспоряженияЗаданий.ПолучательОтправитель = РасходныйОрдер.Получатель
	|			И НЕ РасходныйОрдер.ПометкаУдаления
	|ГДЕ
	|	РаспоряженияЗаданий.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасходныйОрдер.Ссылка,
	|	РаспоряженияЗаданий.Распоряжение
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 1
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РаспоряженияЗаданий.Ссылка       КАК Ссылка,
	|	РаспоряженияЗаданий.ПолучательОтправитель КАК Получатель,
	|	РаспоряженияЗаданий.Распоряжение КАК Распоряжение,
	|	РаспоряженияЗаданий.КлючСвязи    КАК КлючСвязи,
	|	РаспоряженияЗаданий.НомерСтроки  КАК НомерСтроки,
	|	РаспоряженияОрдеров.Ссылка       КАК Ордер,
	|	РаспоряженияЗаданий.Вес          КАК Вес,
	|	РаспоряженияЗаданий.Объем        КАК Объем
	|ПОМЕСТИТЬ РаспоряженияОрдеров
	|ИЗ
	|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК РаспоряженияЗаданий
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК РаспоряженияОрдеров
	|		ПО РаспоряженияЗаданий.Распоряжение = РаспоряженияОрдеров.Распоряжение
	|			И НЕ РаспоряженияОрдеров.Ссылка.ПометкаУдаления
	|ГДЕ
	|	РаспоряженияЗаданий.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РаспоряженияЗаданий.КлючСвязи,
	|	РаспоряженияЗаданий.Распоряжение,
	|	РаспоряженияОрдеров.Ссылка
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 2
	|ВЫБРАТЬ
	|	ЗаданиеНаПеревозку.Ссылка КАК Ссылка,
	|	ЗаданиеНаПеревозку.Номер  КАК НомерЗадания,
	|	ЗаданиеНаПеревозку.Дата   КАК Дата,
	|	ПРЕДСТАВЛЕНИЕ(ЗаданиеНаПеревозку.Водитель) КАК Водитель,
	|	ПРЕДСТАВЛЕНИЕ(ЗаданиеНаПеревозку.КурьерЭкспедитор) КАК КурьерЭкспедитор,
	|	ПРЕДСТАВЛЕНИЕ(ЗаданиеНаПеревозку.ТранспортноеСредство) КАК ТранспортноеСредство,
	|	ЗаданиеНаПеревозку.Приоритет КАК Приоритет,
	|	ЗаданиеНаПеревозку.ДатаВремяРейсаПланС  КАК НачалоРейсаПлан,
	|	ЗаданиеНаПеревозку.ДатаВремяРейсаПланПо КАК ОкончаниеРейсаПлан,
	|	ЗаданиеНаПеревозку.ДатаВремяРейсаФактС  КАК НачалоРейсаФакт,
	|	ЗаданиеНаПеревозку.ДатаВремяРейсаФактПо КАК ОкончаниеРейсаФакт,
	|	ЗаданиеНаПеревозку.ДополнительнаяИнформация КАК ДопИнформация,
	|	ЗаданиеНаПеревозку.Вес   КАК ИтогоВес,
	|	ЗаданиеНаПеревозку.Объем КАК ИтогоОбъем
	|ИЗ
	|	Документ.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку
	|ГДЕ
	|	ЗаданиеНаПеревозку.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаданиеНаПеревозку.Ссылка
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 3
	|ВЫБРАТЬ
	|	МаршрутЗадания.Ссылка  КАК Ссылка,
	|	МаршрутЗадания.Адрес   КАК Адрес,
	|	МаршрутЗадания.Зона    КАК Зона,
	|	МаршрутЗадания.ВремяС  КАК ВремяС,
	|	МаршрутЗадания.ВремяПо КАК ВремяПо,
	|	ВЫРАЗИТЬ(МаршрутЗадания.ДополнительнаяИнформация КАК СТРОКА(1000)) КАК ДополнительнаяИнформация,
	|	РаспоряженияОрдеров.Получатель   КАК Получатель,
	|	РаспоряженияОрдеров.Распоряжение КАК Распоряжение,
	|	РаспоряженияОрдеров.Распоряжение.Номер КАК НомерРаспоряжения,
	|	РаспоряженияОрдеров.Вес   КАК Вес,
	|	РаспоряженияОрдеров.Объем КАК Объем,
	|	СУММА(ВЫБОР
	|			КОГДА ОтгружаемыеТовары.УпаковочныйЛистРодитель = ЗНАЧЕНИЕ(Документ.УпаковочныйЛист.ПустаяСсылка)
	|				ТОГДА ЕСТЬNULL(ОтгружаемыеТовары.КоличествоУпаковок, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоМест
	|ИЗ
	|	Документ.ЗаданиеНаПеревозку.Маршрут КАК МаршрутЗадания
	|		ЛЕВОЕ СОЕДИНЕНИЕ РаспоряженияОрдеров КАК РаспоряженияОрдеров
	|		ПО МаршрутЗадания.КлючСвязи = РаспоряженияОрдеров.КлючСвязи
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РаспоряженияОрдеровПоПолучателям КАК РаспоряженияОрдеровПоПолучателям
	|		ПО РаспоряженияОрдеров.Распоряжение = РаспоряженияОрдеровПоПолучателям.Распоряжение
	|			И РаспоряженияОрдеров.Ордер = РаспоряженияОрдеровПоПолучателям.Ордер
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары.ОтгружаемыеТовары КАК ОтгружаемыеТовары
	|		ПО РаспоряженияОрдеровПоПолучателям.Ордер = ОтгружаемыеТовары.Ссылка
	|ГДЕ
	|	МаршрутЗадания.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	МаршрутЗадания.Ссылка,
	|	МаршрутЗадания.НомерСтроки,
	|	МаршрутЗадания.КлючСвязи,
	|	МаршрутЗадания.Адрес,
	|	МаршрутЗадания.Зона,
	|	МаршрутЗадания.ВремяС,
	|	МаршрутЗадания.ВремяПо,
	|	ВЫРАЗИТЬ(МаршрутЗадания.ДополнительнаяИнформация КАК СТРОКА(1000)),
	|	РаспоряженияОрдеров.Получатель,
	|	РаспоряженияОрдеров.Распоряжение,
	|	РаспоряженияОрдеров.Вес,
	|	РаспоряженияОрдеров.Объем
	|
	|УПОРЯДОЧИТЬ ПО
	|	МаршрутЗадания.Ссылка,
	|	МаршрутЗадания.НомерСтроки,
	|	МИНИМУМ(РаспоряженияОрдеров.НомерСтроки)
	|
	|ИТОГИ ПО
	|	МаршрутЗадания.Ссылка,
	|	МаршрутЗадания.НомерСтроки,
	|	МаршрутЗадания.КлючСвязи,
	|	РаспоряженияОрдеров.Получатель
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 4
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Распоряжения.Склад,
	|	ВЫБОР
	|		КОГДА Распоряжения.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
	|				И Распоряжения.Склад.ДатаНачалаОрдернойСхемыПриОтгрузке <= Распоряжения.Распоряжение.Дата
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОрдернаяСхемаПриОтгрузке
	|ИЗ
	|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК Распоряжения
	|ГДЕ
	|	Распоряжения.Ссылка В(&МассивОбъектов)
	|	И НЕ Распоряжения.Склад.ЭтоГруппа";
	#Вставка
	//++ РС Консалт: Трофимов Евгений 23.01.2023 Задача 23089
	//e1cib/data/Документ.Задание?ref=b27e0f26ac763ca6463826ce7ef4806d
	Запрос.Текст = ТекстЗапросаПФ_МаршрутныйЛист();                  
	//-- КонецЗадачи 23089
	#КонецВставки

	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);

	РезультатЗапросаПоДокументу = Запрос.ВыполнитьПакет(); 
	
	#Удаление
	РезультатШапкаДокументов = РезультатЗапросаПоДокументу[2].Выбрать();
	ВыборкаПоСсылкам         = РезультатЗапросаПоДокументу[3].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	СкладыПогрузкиВыборка    = РезультатЗапросаПоДокументу[4].Выбрать();
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	//++ РС Консалт: Трофимов Евгений 23.01.2023 Задача 23089
	//e1cib/data/Документ.Задание?ref=b27e0f26ac763ca6463826ce7ef4806d
	//РезультатШапкаДокументов = РезультатЗапросаПоДокументу[3].Выбрать();
	//ВыборкаПоСсылкам         = РезультатЗапросаПоДокументу[4].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//СкладыПогрузкиВыборка    = РезультатЗапросаПоДокументу[5].Выбрать();
	//ВыборкаПоОрдерам 		 = РезультатЗапросаПоДокументу[6].Выбрать();
	РезультатШапкаДокументов = РезультатЗапросаПоДокументу[9].Выбрать();
	ВыборкаПоСсылкам         = РезультатЗапросаПоДокументу[10].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	СкладыПогрузкиВыборка    = РезультатЗапросаПоДокументу[11].Выбрать();
	ВыборкаПоОрдерам 		 = РезультатЗапросаПоДокументу[12].Выбрать();
	//-- КонецЗадачи 23089	
	
	СтруктураПоискаПоОрдерам = Новый Структура("Распоряжение");
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки

	ПервыйДокумент = Истина;

	Пока РезультатШапкаДокументов.Следующий() Цикл

		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ПервыйДокумент = Ложь;

		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		РеквизитыДокумента = Новый Структура;
		РеквизитыДокумента.Вставить("Номер", РезультатШапкаДокументов.НомерЗадания);
		РеквизитыДокумента.Вставить("Дата",  РезультатШапкаДокументов.Дата);

		НазваниеДокумента = НСтр("ru = 'Маршрутный лист';
		|en = 'Operation sheet'", ОбщегоНазначения.КодОсновногоЯзыка());

		ЗаголовокДокумента = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента,
		НазваниеДокумента);
		ОбластьЗаголовокДокумента.Параметры.ЗаголовокДокумента = ЗаголовокДокумента;

		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент,
		Макет,
		ОбластьЗаголовокДокумента,
		РезультатШапкаДокументов.Ссылка);

		ТабличныйДокумент.Вывести(ОбластьЗаголовокДокумента);

		ОбластьШапкаДокумента.Параметры.Заполнить(РезультатШапкаДокументов);

		СтрокаСкладыПогрузки = "";
		ЕстьОрдерныеСклады   = Ложь;

		Пока СкладыПогрузкиВыборка.Следующий() Цикл
			Если СкладыПогрузкиВыборка.ОрдернаяСхемаПриОтгрузке
				И Не ЕстьОрдерныеСклады Тогда

				ЕстьОрдерныеСклады = Истина;

			КонецЕсли;

			СтрокаСкладыПогрузки = СтрокаСкладыПогрузки + СкладыПогрузкиВыборка.Склад + "," + Символы.НПП;
		КонецЦикла;

		СуффиксОбласти = ?(Не ЕстьОрдерныеСклады, "БезМест", "");

		ОбластьШапкаТаблицы		= Макет.ПолучитьОбласть("ШапкаТаблицы" + СуффиксОбласти);
		ОбластьСтрокаТаблицы	= Макет.ПолучитьОбласть("СтрокаТаблицы" + СуффиксОбласти);
		ОбластьДопСтрокаТаблицы	= Макет.ПолучитьОбласть("ДопСтрокаТаблицы" + СуффиксОбласти);
		ОбластьПодвалТаблицы 	= Макет.ПолучитьОбласть("ПодвалТаблицы" + СуффиксОбласти);
		ОбластьИтоги 			= Макет.ПолучитьОбласть("Итоги" + СуффиксОбласти);

		Если СтрокаСкладыПогрузки <> "" Тогда
			СтрокаСкладыПогрузки = Лев(СтрокаСкладыПогрузки, СтрДлина(СтрокаСкладыПогрузки) - 2);

			ОбластьШапкаДокумента.Параметры.СкладыПогрузки = СтрокаСкладыПогрузки;
		КонецЕсли;

		ТабличныйДокумент.Вывести(ОбластьШапкаДокумента);

		ОтборПоиска = Новый Структура ("Ссылка", РезультатШапкаДокументов.Ссылка);

		Пока ВыборкаПоСсылкам.НайтиСледующий(ОтборПоиска) Цикл

			ИмяСтолбцаВес   = НСтр("ru = 'Вес, %ЕдиницаИзмеренияВес%';
			|en = 'Weight, %ЕдиницаИзмеренияВес%'", ОбщегоНазначения.КодОсновногоЯзыка());
			ИмяСтолбцаОбъем = НСтр("ru = 'Объем, %ЕдиницаИзмеренияОбъем%';
			|en = 'Volume, %ЕдиницаИзмеренияОбъем%'", ОбщегоНазначения.КодОсновногоЯзыка());

			ИмяСтолбцаВес   = СтрЗаменить(ИмяСтолбцаВес,
			"%ЕдиницаИзмеренияВес%",
			Константы.ЕдиницаИзмеренияВеса.Получить());
			ИмяСтолбцаОбъем = СтрЗаменить(ИмяСтолбцаОбъем,
			"%ЕдиницаИзмеренияОбъем%",
			Константы.ЕдиницаИзмеренияОбъема.Получить());

			НаименованияКолонокТаблицы = Новый Структура("ВесШапка, ОбъемШапка", ИмяСтолбцаВес, ИмяСтолбцаОбъем);

			ОбластьШапкаТаблицы.Параметры.Заполнить(НаименованияКолонокТаблицы);

			ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);

			ВыборкаПоНомерамСтрок = ВыборкаПоСсылкам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			НомерСтроки = 0;
			ИтогоКоличествоМест = 0;

			Пока ВыборкаПоНомерамСтрок.Следующий() Цикл

				ВыборкаПоКодамСтрок = ВыборкаПоНомерамСтрок.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

				Пока ВыборкаПоКодамСтрок.Следующий() Цикл

					НомерСтроки = НомерСтроки + 1;

					ОбластьСтрокаТаблицы.Параметры.НомерЗаказа = НомерСтроки;

					ВыборкаПоПолучателям = ВыборкаПоКодамСтрок.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

					ПервыйПолучатель = Истина;

					КоличествоПолучателей = ВыборкаПоПолучателям.Количество() - 1;

					Пока ВыборкаПоПолучателям.Следующий() Цикл

						Если ПервыйПолучатель Тогда
							ПервыйПолучатель = Ложь;

							ЗаполняемаяОбласть = ОбластьСтрокаТаблицы;
						Иначе
							ЗаполняемаяОбласть = ОбластьДопСтрокаТаблицы;
						КонецЕсли;

						ИтогоВес   = 0;
						ИтогоОбъем = 0;

						КоличествоМестПоСтроке = 0;

						Распоряжения = Новый Соответствие;
						#Вставка
						//++ РС Консалт: Трофимов Евгений 24.01.2023 Задача 23290
						//e1cib/data/Документ.Задание?ref=8b132a297516f59144fecc7389c27f18
						//не нужно
						
						//++ РС Консалт: Минаков А.С. Задача 20226
						//Ордера = "";	
						//++ РС Консалт: Минаков А.С. Задача 20226
						
						//-- КонецЗадачи 23290						
						#КонецВставки

						Выборка = ВыборкаПоПолучателям.Выбрать();

						Пока Выборка.Следующий() Цикл
							ИтогоВес   = ИтогоВес + Выборка.Вес;
							ИтогоОбъем = ИтогоОбъем + Выборка.Объем;

							КоличествоМестПоСтроке = КоличествоМестПоСтроке + Выборка.КоличествоМест;

							ЗаполняемаяОбласть.Параметры.Заполнить(Выборка);
							#Вставка
							//++ РС Консалт: Минаков А.С. Задача 20226
							Если ЗначениеЗаполнено(Выборка.ИНН) Тогда
								ЗаполняемаяОбласть.Параметры.Получатель = "" + ЗаполняемаяОбласть.Параметры.Получатель + "(" + Выборка.ИНН + ")"	
							КонецЕсли;
							Телефон = ФормированиеПечатныхФорм.ПолучитьТелефонИзКонтактнойИнформации(Выборка.Получатель);
							Если ЗначениеЗаполнено(Телефон) Тогда
								ЗаполняемаяОбласть.Параметры.Получатель = Строка(ЗаполняемаяОбласть.Параметры.Получатель)
								+ Символы.ПС + "Тел. " + Телефон
							КонецЕсли;
							
							СтруктураПоискаПоОрдерам.Распоряжение = Выборка.Распоряжение;
							ВыборкаПоОрдерам.Сбросить();
							//++ РС Консалт: Трофимов Евгений 24.01.2023 Задача 23290
							//e1cib/data/Документ.Задание?ref=8b132a297516f59144fecc7389c27f18
							//Пока ВыборкаПоОрдерам.НайтиСледующий(СтруктураПоискаПоОрдерам) Цикл
							//	Если Ордера = "" Тогда
							//		Ордера = "Список ордеров: " + ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаПоОрдерам.Номер)
							//	Иначе
							//		Ордера = Ордера + ", " + ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаПоОрдерам.Номер) 	
							//	КонецЕсли 
							//КонецЦикла;	
							Ордера = Новый Массив;
							Пока ВыборкаПоОрдерам.НайтиСледующий(СтруктураПоискаПоОрдерам) Цикл
								Ордера.Добавить(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаПоОрдерам.Номер));
							КонецЦикла;	
							//-- КонецЗадачи 23290							
							//++ РС Консалт: Минаков А.С. Задача 20226
							#КонецВставки
							
							#Удаление
							СтрокаРаспоряжения = Распоряжения.Получить(Выборка.Распоряжение.Метаданные());

							Если СтрокаРаспоряжения = Неопределено Тогда
								СтрокаРаспоряжения = Выборка.Распоряжение.Метаданные().ПредставлениеСписка + ": "
								+ ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.НомерРаспоряжения);
							Иначе
								СтрокаРаспоряжения = СтрокаРаспоряжения + "," + " "
								+ ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.Распоряжение.Номер);
							КонецЕсли;

							Распоряжения.Вставить(Выборка.Распоряжение.Метаданные(), СтрокаРаспоряжения);
							#КонецУдаления
							#Вставка
							//++ РС Консалт: Трофимов Евгений 24.01.2023 Задача 23290
							#Область Мусор002
							//e1cib/data/Документ.Задание?ref=8b132a297516f59144fecc7389c27f18
							//	//++ РС Консалт: Минаков А.С. Задача 20226
							//	ДанныеРаспоряжения = Распоряжения.Получить(Выборка.Распоряжение.Метаданные());
							//	
							//	НомерНаПечать = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.НомерРаспоряжения);	
							//	
							//	Если ДанныеРаспоряжения = Неопределено Тогда
							//		СтрокаРаспоряжения = Выборка.Распоряжение.Метаданные().ПредставлениеСписка + ": " + НомерНаПечать;
							//		
							//		РеквизитыРаспоряжения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Выборка.Распоряжение, 
							//		"ОсобыеУсловияПеревозки, ОсобыеУсловияПеревозкиОписание");
							//		
							//		Если РеквизитыРаспоряжения.ОсобыеУсловияПеревозки 
							//			И ЗначениеЗаполнено(РеквизитыРаспоряжения.ОсобыеУсловияПеревозкиОписание) Тогда
							//			
							//			СтрокаОсобыеУсловия =  Выборка.Распоряжение.Метаданные().ПредставлениеОбъекта + ": " 
							//			+ НомерНаПечать + ": " + РеквизитыРаспоряжения.ОсобыеУсловияПеревозкиОписание	
							//		Иначе
							//			СтрокаОсобыеУсловия = ""
							//		КонецЕсли
							//	Иначе	
							//		СтрокаРаспоряжения = ДанныеРаспоряжения.Распоряжения;
							//		СтрокаОсобыеУсловия = ДанныеРаспоряжения.ОсобыеУсловия;	
							//		
							//		СтрокаРаспоряжения = СтрокаРаспоряжения + ", " + НомерНаПечать;
							//		
							//		РеквизитыРаспоряжения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Выборка.Распоряжение, 
							//		"ОсобыеУсловияПеревозки, ОсобыеУсловияПеревозкиОписание");
							//		
							//		Если РеквизитыРаспоряжения.ОсобыеУсловияПеревозки
							//			И ЗначениеЗаполнено(РеквизитыРаспоряжения.ОсобыеУсловияПеревозкиОписание) Тогда
							//			
							//			Если СтрНайти(СтрокаОсобыеУсловия, ": " + РеквизитыРаспоряжения.ОсобыеУсловияПеревозкиОписание) Тогда
							//				СтрокаОсобыеУсловия = СтрЗаменить(СтрокаОсобыеУсловия, 
							//				": " + РеквизитыРаспоряжения.ОсобыеУсловияПеревозкиОписание,
							//				"," + Символы.ПС + НомерНаПечать + ": " + РеквизитыРаспоряжения.ОсобыеУсловияПеревозкиОписание)
							//			Иначе
							//				СтрокаОсобыеУсловия = СтрокаОсобыеУсловия 
							//				+ ?(СтрокаОсобыеУсловия = "", "", Символы.ПС) 
							//				+ Выборка.Распоряжение.Метаданные().ПредставлениеОбъекта + ": " 
							//				+ НомерНаПечать + ": " + РеквизитыРаспоряжения.ОсобыеУсловияПеревозкиОписание	
							//			КонецЕсли	
							//		Иначе
							//			СтрокаОсобыеУсловия = СтрокаОсобыеУсловия
							//		КонецЕсли								
							//	КонецЕсли;
							//	
							//	ДанныеРаспоряжения = Новый Структура("Распоряжения, ОсобыеУсловия", СтрокаРаспоряжения, СтрокаОсобыеУсловия);
							//	
							//	Распоряжения.Вставить(Выборка.Распоряжение.Метаданные(), ДанныеРаспоряжения)
							////++ РС Консалт: Минаков А.С. Задача 20226
							#КонецОбласти
							ДанныеРаспоряжения = Распоряжения.Получить(Выборка.Распоряжение);
							НомерНаПечать = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.НомерРаспоряжения);
							
							Если ДанныеРаспоряжения = Неопределено Тогда
								ДанныеРаспоряжения = Новый Структура;
								ДанныеРаспоряжения.Вставить("НомерРаспоряжения", НомерНаПечать);
								ДанныеРаспоряжения.Вставить("Ордера", Ордера);
								
								
								СтрокаРаспоряжения = Выборка.Распоряжение.Метаданные().ПредставлениеСписка + ": " + НомерНаПечать;
								
								ПустыеРеквизитыРаспоряжения = Новый Структура;
								ПустыеРеквизитыРаспоряжения.Вставить("ОсобыеУсловияПеревозки", Ложь);
								ПустыеРеквизитыРаспоряжения.Вставить("ОсобыеУсловияПеревозкиОписание", "");
								РеквизитыРаспоряжения = ПолучитьРеквизитыРаспоряжения(Выборка.Распоряжение, ПустыеРеквизитыРаспоряжения);
								
								Если РеквизитыРаспоряжения.ОсобыеУсловияПеревозки 
									И ЗначениеЗаполнено(РеквизитыРаспоряжения.ОсобыеУсловияПеревозкиОписание) Тогда
									
									СтрокаОсобыеУсловия =  Выборка.Распоряжение.Метаданные().ПредставлениеОбъекта + " " 
									+ НомерНаПечать + ": " + РеквизитыРаспоряжения.ОсобыеУсловияПеревозкиОписание	
								Иначе
									СтрокаОсобыеУсловия = ""
								КонецЕсли;
								ДанныеРаспоряжения.Вставить("ОсобыеУсловия", СтрокаОсобыеУсловия);
								Распоряжения.Вставить(Выборка.Распоряжение, ДанныеРаспоряжения);
							Иначе	
								ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДанныеРаспоряжения.Ордера, Ордера, Истина);
							КонецЕсли;
							//-- КонецЗадачи 23290							
							#КонецВставки
						КонецЦикла;

						ИтогоКоличествоМест = ИтогоКоличествоМест + КоличествоМестПоСтроке;

						ИменаРаспоряжений = "";
						#Вставка
						//++ РС Консалт: Минаков А.С. Задача 20226
						ОсобыеУсловия = "";
						//++ РС Консалт: Минаков А.С. Задача 20226
						#КонецВставки
						
						#Удаление
						Для Каждого РаспоряжениеКлючЗначение Из Распоряжения Цикл
							ИменаРаспоряжений = ИменаРаспоряжений + РаспоряжениеКлючЗначение.Значение + Символы.ПС;
						КонецЦикла;
						#КонецУдаления
						#Вставка
						//++ РС Консалт: Трофимов Евгений 24.01.2023 Задача 23290
						//e1cib/data/Документ.Задание?ref=8b132a297516f59144fecc7389c27f18
						////++ РС Консалт: Минаков А.С. Задача 20226
						//Для Каждого РаспоряжениеКлючЗначение Из Распоряжения Цикл
						//	ИменаРаспоряжений = ИменаРаспоряжений + РаспоряжениеКлючЗначение.Значение.Распоряжения + Символы.ПС;
						//	ОсобыеУсловия = ОсобыеУсловия + РаспоряжениеКлючЗначение.Значение.ОсобыеУсловия + Символы.ПС;
						//КонецЦикла; 
						//
						//Если ЗначениеЗаполнено(Ордера) Тогда
						//	ИменаРаспоряжений = ИменаРаспоряжений + Ордера
						//КонецЕсли;	
						////++ РС Консалт: Минаков А.С. Задача 20226
						Для Каждого РаспоряжениеКлючЗначение Из Распоряжения Цикл
							ИменаРаспоряжений = ИменаРаспоряжений + ?(ПустаяСтрока(ИменаРаспоряжений), "", "; ")
							+ СокращенноеИмяДокумента(РаспоряжениеКлючЗначение.Ключ) + " "
							+ РаспоряжениеКлючЗначение.Значение.НомерРаспоряжения
							+ ", РО: " + СтрСоединить(РаспоряжениеКлючЗначение.Значение.Ордера, ", ");
							ОсобыеУсловия = ОсобыеУсловия + РаспоряжениеКлючЗначение.Значение.ОсобыеУсловия + Символы.ПС;
						КонецЦикла;
						//-- КонецЗадачи 23290						
						#КонецВставки

						ПараметрыГрузаПолучателя = Новый Структура;
						ПараметрыГрузаПолучателя.Вставить("Распоряжения",   ИменаРаспоряжений);
						ПараметрыГрузаПолучателя.Вставить("Вес",            ИтогоВес);
						ПараметрыГрузаПолучателя.Вставить("Объем",          ИтогоОбъем);
						ПараметрыГрузаПолучателя.Вставить("КоличествоМест", КоличествоМестПоСтроке);
						#Вставка
						//++ РС Консалт: Минаков А.С. Задача 20226
						ПараметрыГрузаПолучателя.Вставить("ОсобыеУсловия", ОсобыеУсловия);
						//++ РС Консалт: Минаков А.С. Задача 20226
						//++ РС Консалт: Трофимов Евгений 23.01.2023 Задача 23089
						//e1cib/data/Документ.Задание?ref=b27e0f26ac763ca6463826ce7ef4806d
						ПараметрыГрузаПолучателя.Вставить("КоличествоШтук", ВыборкаПоПолучателям.КоличествоШтук);
						//-- КонецЗадачи 23089						
						#КонецВставки

						ЗаполняемаяОбласть.Параметры.Заполнить(ПараметрыГрузаПолучателя);

						ТабличныйДокумент.Вывести(ЗаполняемаяОбласть);

					КонецЦикла;

					ОбъединитьОбластьСоСтрокамиНиже(ТабличныйДокумент,
					"НомерЗаказа" + СуффиксОбласти,
					КоличествоПолучателей);
					ОбъединитьОбластьСоСтрокамиНиже(ТабличныйДокумент,
					"Адрес" + СуффиксОбласти,
					КоличествоПолучателей);
					ОбъединитьОбластьСоСтрокамиНиже(ТабличныйДокумент,
					"Зона" + СуффиксОбласти,
					КоличествоПолучателей);
					#Удаление
					ОбъединитьОбластьСоСтрокамиНиже(ТабличныйДокумент,
					"ВремяС" + СуффиксОбласти,
					КоличествоПолучателей);
					#КонецУдаления
					ОбъединитьОбластьСоСтрокамиНиже(ТабличныйДокумент,
					"ВремяПо" + СуффиксОбласти,
					КоличествоПолучателей);
					ОбъединитьОбластьСоСтрокамиНиже(ТабличныйДокумент,
					"ДополнительнаяИнформацияСтрока" + СуффиксОбласти,
					КоличествоПолучателей);

				КонецЦикла;

			КонецЦикла;

			ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы);

			ВесПоДокументу   = РезультатШапкаДокументов.ИтогоВес
			/ НоменклатураСервер.КоэффициентПересчетаВТонны(Константы.ЕдиницаИзмеренияВеса.Получить());
			ОбъемПоДокументу = РезультатШапкаДокументов.ИтогоОбъем
			/ НоменклатураСервер.КоэффициентПересчетаВКубическиеМетры(Константы.ЕдиницаИзмеренияОбъема.Получить());

			ПараметрыИтогов = Новый Структура;
			ПараметрыИтогов.Вставить("ИтогоВес",   ВесПоДокументу);
			ПараметрыИтогов.Вставить("ИтогоОбъем", ОбъемПоДокументу);

			Если ЕстьОрдерныеСклады Тогда
				ПараметрыИтогов.Вставить("ИтогоКоличествоМест", ИтогоКоличествоМест);
			КонецЕсли;
			#Вставка
			//++ РС Консалт: Трофимов Евгений 23.01.2023 Задача 23089
			//e1cib/data/Документ.Задание?ref=b27e0f26ac763ca6463826ce7ef4806d
			ПараметрыИтогов.Вставить("ИтогоШтук", РезультатШапкаДокументов.ИтогоШтук);
			ПараметрыИтогов.Вставить("ИтогоМест", РезультатШапкаДокументов.ИтогоМест);
			ПараметрыИтогов.Вставить("ИтогоВес", РезультатШапкаДокументов.ИтогоВес);
			//-- КонецЗадачи 23089				
			#КонецВставки

			ОбластьИтоги.Параметры.Заполнить(ПараметрыИтогов);

			ТабличныйДокумент.Вывести(ОбластьИтоги);

			Если ЗначениеЗаполнено(РезультатШапкаДокументов.ДопИнформация) Тогда
				ОбластьДополнительнаяИнформация.Параметры.ДопИнформация = СокрЛП(РезультатШапкаДокументов.ДопИнформация);

				ТабличныйДокумент.Вывести(ОбластьДополнительнаяИнформация);
			КонецЕсли;

		КонецЦикла;

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент,
		НомерСтрокиНачало,
		ОбъектыПечати,
		РезультатШапкаДокументов.Ссылка);

	КонецЦикла;

	ТабличныйДокумент.АвтоМасштаб = Истина;

	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;

	Возврат ТабличныйДокумент;

КонецФункции

//++ РС Консалт: Трофимов Евгений 23.01.2023 Задача 23089
//e1cib/data/Документ.Задание?ref=b27e0f26ac763ca6463826ce7ef4806d
Функция ТекстЗапросаПФ_МаршрутныйЛист()

	Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РаспоряженияЗаданий.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВтТранзит
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК РаспоряженияЗаданий
		|ГДЕ
		|	РаспоряженияЗаданий.Ссылка.Проведен
		|	И НЕ РаспоряженияЗаданий.РСК_Транзитная
		|	И РаспоряженияЗаданий.РСК_Накладная В
		|			(ВЫБРАТЬ
		|				РаспоряженияЗаданий.РСК_Накладная
		|			ИЗ
		|				Документ.ЗаданиеНаПеревозку.Распоряжения КАК РаспоряженияЗаданий
		|			ГДЕ
		|				РаспоряженияЗаданий.Ссылка В (&МассивОбъектов)
		|				И РаспоряженияЗаданий.РСК_Транзитная)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РасходныйОрдер.Ссылка КАК Ордер,
		|	РаспоряженияЗаданий.Распоряжение КАК Распоряжение
		|ПОМЕСТИТЬ РаспоряженияОрдеровПоПолучателям
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК РаспоряженияЗаданий
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары КАК РасходныйОрдер
		|		ПО (РаспоряженияЗаданий.Ссылка = РасходныйОрдер.ЗаданиеНаПеревозку
		|				ИЛИ РасходныйОрдер.ЗаданиеНаПеревозку В
		|					(ВЫБРАТЬ
		|						ВтТранзит.Ссылка
		|					ИЗ
		|						ВтТранзит КАК ВтТранзит))
		|			И РаспоряженияЗаданий.ПолучательОтправитель = РасходныйОрдер.Получатель
		|			И (НЕ РасходныйОрдер.ПометкаУдаления)
		|ГДЕ
		|	РаспоряженияЗаданий.Ссылка В(&МассивОбъектов)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	РасходныйОрдер.Ссылка,
		|	РаспоряженияЗаданий.Распоряжение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка КАК Задание,
		|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка КАК Ордер,
		|	ЗаданиеНаПеревозкуРаспоряжения.Распоряжение КАК Распоряжение,
		|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Номенклатура КАК Номенклатура,
		|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Количество КАК Количество
		|ПОМЕСТИТЬ ТоварыРаспоряжений
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК РасходныйОрдерНаТоварыТоварыПоРаспоряжениям
		|		ПО ЗаданиеНаПеревозкуРаспоряжения.Распоряжение = РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Распоряжение
		|ГДЕ
		|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка В(&МассивОбъектов)
		|	И НЕ РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка.ПометкаУдаления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыРаспоряжений.Номенклатура КАК Номенклатура,
		|	МАКСИМУМ(УпаковкиЕдиницыИзмерения.Числитель / ВЫБОР
		|			КОГДА УпаковкиЕдиницыИзмерения.Знаменатель = 0
		|				ТОГДА 1
		|			ИНАЧЕ УпаковкиЕдиницыИзмерения.Знаменатель
		|		КОНЕЦ) КАК Коэффициент
		|ПОМЕСТИТЬ МаксимальныеКоэффициенты
		|ИЗ
		|	ТоварыРаспоряжений КАК ТоварыРаспоряжений
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
		|		ПО ТоварыРаспоряжений.Номенклатура = УпаковкиЕдиницыИзмерения.Владелец
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыРаспоряжений.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МаксимальныеКоэффициенты.Номенклатура КАК Номенклатура,
		|	МАКСИМУМ(УпаковкиЕдиницыИзмерения.Ссылка) КАК Упаковка
		|ПОМЕСТИТЬ МаксимальныеУпаковки
		|ИЗ
		|	МаксимальныеКоэффициенты КАК МаксимальныеКоэффициенты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
		|		ПО МаксимальныеКоэффициенты.Номенклатура = УпаковкиЕдиницыИзмерения.Владелец
		|			И (МаксимальныеКоэффициенты.Коэффициент = УпаковкиЕдиницыИзмерения.Числитель / ВЫБОР
		|				КОГДА УпаковкиЕдиницыИзмерения.Знаменатель = 0
		|					ТОГДА 1
		|				ИНАЧЕ УпаковкиЕдиницыИзмерения.Знаменатель
		|			КОНЕЦ)
		|ГДЕ
		|	НЕ УпаковкиЕдиницыИзмерения.ПометкаУдаления
		|
		|СГРУППИРОВАТЬ ПО
		|	МаксимальныеКоэффициенты.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыРаспоряжений.Распоряжение КАК Распоряжение,
		|	СУММА(ТоварыРаспоряжений.Количество) КАК КоличествоШтук,
		|	СУММА(ТоварыРаспоряжений.Количество / ВЫБОР
		|			КОГДА МаксВесОбъем.Коэффициент = 0
		|				ТОГДА 1
		|			ИНАЧЕ МаксВесОбъем.Коэффициент
		|		КОНЕЦ) КАК КоличествоМест,
		|	СУММА(ТоварыРаспоряжений.Количество / ВЫБОР
		|			КОГДА МаксВесОбъем.Коэффициент = 0
		|				ТОГДА 1
		|			ИНАЧЕ МаксВесОбъем.Коэффициент
		|		КОНЕЦ * ЕСТЬNULL(МаксВесОбъем.Вес, 0)) КАК Вес,
		|	СУММА(ТоварыРаспоряжений.Количество / ВЫБОР
		|			КОГДА МаксВесОбъем.Коэффициент = 0
		|				ТОГДА 1
		|			ИНАЧЕ МаксВесОбъем.Коэффициент
		|		КОНЕЦ * ЕСТЬNULL(МаксВесОбъем.Объем, 0)) КАК Объем,
		|	ТоварыРаспоряжений.Ордер КАК Ордер,
		|	ТоварыРаспоряжений.Задание КАК Задание
		|ПОМЕСТИТЬ ВГХ
		|ИЗ
		|	ТоварыРаспоряжений КАК ТоварыРаспоряжений
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			МаксимальныеУпаковки.Номенклатура КАК Номенклатура,
		|			МаксимальныеУпаковки.Упаковка КАК Упаковка,
		|			УпаковкиЕдиницыИзмерения.Вес КАК Вес,
		|			УпаковкиЕдиницыИзмерения.Объем КАК Объем,
		|			МаксимальныеКоэффициенты.Коэффициент КАК Коэффициент
		|		ИЗ
		|			МаксимальныеУпаковки КАК МаксимальныеУпаковки
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
		|				ПО МаксимальныеУпаковки.Упаковка = УпаковкиЕдиницыИзмерения.Ссылка
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксимальныеКоэффициенты КАК МаксимальныеКоэффициенты
		|				ПО МаксимальныеУпаковки.Номенклатура = МаксимальныеКоэффициенты.Номенклатура) КАК МаксВесОбъем
		|		ПО ТоварыРаспоряжений.Номенклатура = МаксВесОбъем.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыРаспоряжений.Распоряжение,
		|	ТоварыРаспоряжений.Ордер,
		|	ТоварыРаспоряжений.Задание
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РаспоряженияЗаданий.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(Контрагенты.Ссылка, РаспоряженияЗаданий.ПолучательОтправитель) КАК Получатель,
		|	ЕСТЬNULL(Контрагенты.ИНН, """") КАК ИНН,
		|	РаспоряженияЗаданий.Распоряжение КАК Распоряжение,
		|	РаспоряженияЗаданий.КлючСвязи КАК КлючСвязи,
		|	РаспоряженияЗаданий.НомерСтроки КАК НомерСтроки,
		|	РаспоряженияОрдеров.Ссылка КАК Ордер,
		|	ЕСТЬNULL(ВГХ.Вес, 0) КАК Вес,
		|	ЕСТЬNULL(ВГХ.Объем, 0) КАК Объем,
		|	ЕСТЬNULL(ВГХ.КоличествоШтук, 0) КАК КоличествоШтук,
		|	ЕСТЬNULL(ВГХ.КоличествоМест, 0) КАК КоличествоМест
		|ПОМЕСТИТЬ РаспоряженияОрдеров
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК РаспоряженияЗаданий
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК РаспоряженияОрдеров
		|		ПО РаспоряженияЗаданий.Распоряжение = РаспоряженияОрдеров.Распоряжение
		|			И (НЕ РаспоряженияОрдеров.Ссылка.ПометкаУдаления)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК дЗаказКлиента
		|		ПО РаспоряженияЗаданий.Распоряжение = дЗаказКлиента.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК дРеализацияТоваровУслуг
		|		ПО РаспоряженияЗаданий.Распоряжение = дРеализацияТоваровУслуг.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|		ПО (ЕСТЬNULL(дЗаказКлиента.Контрагент, дРеализацияТоваровУслуг.Контрагент) = Контрагенты.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВГХ КАК ВГХ
		|		ПО РаспоряженияЗаданий.Распоряжение = ВГХ.Распоряжение
		|			И РаспоряженияЗаданий.Ссылка = ВГХ.Задание
		|			И (ВГХ.Ордер = РаспоряженияОрдеров.Ссылка)
		|ГДЕ
		|	РаспоряженияЗаданий.Ссылка В(&МассивОбъектов)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	РаспоряженияЗаданий.КлючСвязи,
		|	РаспоряженияЗаданий.Распоряжение,
		|	РаспоряженияОрдеров.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка КАК Задание,
		|	СУММА(ВГХ.КоличествоШтук) КАК КоличествоШтук,
		|	СУММА(ВГХ.КоличествоМест) КАК КоличествоМест,
		|	СУММА(ВГХ.Вес) КАК Вес,
		|	СУММА(ВГХ.Объем) КАК Объем
		|ПОМЕСТИТЬ ИтогиДокументов
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВГХ КАК ВГХ
		|		ПО ЗаданиеНаПеревозкуРаспоряжения.Распоряжение = ВГХ.Распоряжение
		|ГДЕ
		|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка В(&МассивОбъектов)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	МаршрутЗадания.Ссылка КАК Ссылка,
		|	МаршрутЗадания.Адрес КАК Адрес,
		|	МаршрутЗадания.Зона КАК Зона,
		|	МаршрутЗадания.ВремяС КАК ВремяС,
		|	МаршрутЗадания.ВремяПо КАК ВремяПо,
		|	ВЫРАЗИТЬ(МаршрутЗадания.ДополнительнаяИнформация КАК СТРОКА(1000)) КАК ДополнительнаяИнформация,
		|	РаспоряженияОрдеров.Получатель КАК Получатель,
		|	РаспоряженияОрдеров.ИНН КАК ИНН,
		|	РаспоряженияОрдеров.Распоряжение КАК Распоряжение,
		|	РаспоряженияОрдеров.Распоряжение.Номер КАК НомерРаспоряжения,
		|	РаспоряженияОрдеров.Вес КАК Вес,
		|	РаспоряженияОрдеров.Объем КАК Объем,
		|	РаспоряженияОрдеров.КоличествоМест КАК КоличествоМест,
		|	РаспоряженияОрдеров.КоличествоШтук КАК КоличествоШтук,
		|	МаршрутЗадания.НомерСтроки КАК НомерСтроки,
		|	МаршрутЗадания.КлючСвязи КАК КлючСвязи
		|ПОМЕСТИТЬ СтрокиВывода
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Маршрут КАК МаршрутЗадания
		|		ЛЕВОЕ СОЕДИНЕНИЕ РаспоряженияОрдеров КАК РаспоряженияОрдеров
		|		ПО МаршрутЗадания.КлючСвязи = РаспоряженияОрдеров.КлючСвязи
		|		ЛЕВОЕ СОЕДИНЕНИЕ РаспоряженияОрдеровПоПолучателям КАК РаспоряженияОрдеровПоПолучателям
		|		ПО (РаспоряженияОрдеров.Распоряжение = РаспоряженияОрдеровПоПолучателям.Распоряжение)
		|			И (РаспоряженияОрдеров.Ордер = РаспоряженияОрдеровПоПолучателям.Ордер)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары.ОтгружаемыеТовары КАК ОтгружаемыеТовары
		|		ПО (РаспоряженияОрдеровПоПолучателям.Ордер = ОтгружаемыеТовары.Ссылка)
		|ГДЕ
		|	МаршрутЗадания.Ссылка В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаданиеНаПеревозку.Ссылка КАК Ссылка,
		|	ЗаданиеНаПеревозку.Номер КАК НомерЗадания,
		|	ЗаданиеНаПеревозку.Дата КАК Дата,
		|	ПРЕДСТАВЛЕНИЕ(ЗаданиеНаПеревозку.Водитель) КАК Водитель,
		|	ПРЕДСТАВЛЕНИЕ(ЗаданиеНаПеревозку.КурьерЭкспедитор) КАК КурьерЭкспедитор,
		|	ПРЕДСТАВЛЕНИЕ(ЗаданиеНаПеревозку.ТранспортноеСредство) КАК ТранспортноеСредство,
		|	ЗаданиеНаПеревозку.Приоритет КАК Приоритет,
		|	ЗаданиеНаПеревозку.ДатаВремяРейсаПланС КАК НачалоРейсаПлан,
		|	ЗаданиеНаПеревозку.ДатаВремяРейсаПланПо КАК ОкончаниеРейсаПлан,
		|	ЗаданиеНаПеревозку.ДатаВремяРейсаФактС КАК НачалоРейсаФакт,
		|	ЗаданиеНаПеревозку.ДатаВремяРейсаФактПо КАК ОкончаниеРейсаФакт,
		|	ЗаданиеНаПеревозку.ДополнительнаяИнформация КАК ДопИнформация,
		|	ЕСТЬNULL(ИтогиДокументов.Вес, 0) КАК ИтогоВес,
		|	ЕСТЬNULL(ИтогиДокументов.Объем, 0) КАК ИтогоОбъем,
		|	ЕСТЬNULL(ИтогиДокументов.КоличествоШтук, 0) КАК ИтогоШтук,
		|	ЕСТЬNULL(ИтогиДокументов.КоличествоМест, 0) КАК ИтогоМест
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку
		|		ЛЕВОЕ СОЕДИНЕНИЕ ИтогиДокументов КАК ИтогиДокументов
		|		ПО ЗаданиеНаПеревозку.Ссылка = ИтогиДокументов.Задание
		|ГДЕ
		|	ЗаданиеНаПеревозку.Ссылка В(&МассивОбъектов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗаданиеНаПеревозку.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтрокиВывода.Ссылка КАК Ссылка,
		|	СтрокиВывода.Адрес КАК Адрес,
		|	СтрокиВывода.Зона КАК Зона,
		|	СтрокиВывода.ВремяС КАК ВремяС,
		|	СтрокиВывода.ВремяПо КАК ВремяПо,
		|	СтрокиВывода.ДополнительнаяИнформация КАК ДополнительнаяИнформация,
		|	СтрокиВывода.Получатель КАК Получатель,
		|	СтрокиВывода.ИНН КАК ИНН,
		|	СтрокиВывода.Распоряжение КАК Распоряжение,
		|	СтрокиВывода.НомерРаспоряжения КАК НомерРаспоряжения,
		|	СУММА(СтрокиВывода.Вес) КАК Вес,
		|	СУММА(СтрокиВывода.Объем) КАК Объем,
		|	СУММА(СтрокиВывода.КоличествоМест) КАК КоличествоМест,
		|	СУММА(СтрокиВывода.КоличествоШтук) КАК КоличествоШтук,
		|	СтрокиВывода.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	СтрокиВывода КАК СтрокиВывода
		|
		|СГРУППИРОВАТЬ ПО
		|	СтрокиВывода.Ссылка,
		|	СтрокиВывода.Адрес,
		|	СтрокиВывода.Зона,
		|	СтрокиВывода.ВремяС,
		|	СтрокиВывода.ВремяПо,
		|	СтрокиВывода.ДополнительнаяИнформация,
		|	СтрокиВывода.Получатель,
		|	СтрокиВывода.ИНН,
		|	СтрокиВывода.Распоряжение,
		|	СтрокиВывода.НомерРаспоряжения,
		|	СтрокиВывода.НомерСтроки,
		|	СтрокиВывода.КлючСвязи
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	НомерСтроки
		|ИТОГИ ПО
		|	Ссылка,
		|	НомерСтроки,
		|	СтрокиВывода.КлючСвязи,
		|	Получатель
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Распоряжения.Склад КАК Склад,
		|	ВЫБОР
		|		КОГДА Распоряжения.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
		|				И Распоряжения.Склад.ДатаНачалаОрдернойСхемыПриОтгрузке <= Распоряжения.Распоряжение.Дата
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОрдернаяСхемаПриОтгрузке
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК Распоряжения
		|ГДЕ
		|	Распоряжения.Ссылка В(&МассивОбъектов)
		|	И НЕ Распоряжения.Склад.ЭтоГруппа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РаспоряженияОрдеровПоПолучателям.Распоряжение КАК Распоряжение,
		|	РаспоряженияОрдеровПоПолучателям.Ордер КАК Ордер,
		|	РаспоряженияОрдеровПоПолучателям.Ордер.Номер КАК Номер
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Маршрут КАК МаршрутЗадания
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РаспоряженияОрдеров КАК РаспоряженияОрдеров
		|		ПО МаршрутЗадания.КлючСвязи = РаспоряженияОрдеров.КлючСвязи
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РаспоряженияОрдеровПоПолучателям КАК РаспоряженияОрдеровПоПолучателям
		|		ПО (РаспоряженияОрдеров.Распоряжение = РаспоряженияОрдеровПоПолучателям.Распоряжение)
		|			И (РаспоряженияОрдеров.Ордер = РаспоряженияОрдеровПоПолучателям.Ордер)
		|ГДЕ
		|	МаршрутЗадания.Ссылка В(&МассивОбъектов)
		|";
	
	Возврат Текст;
	
КонецФункции

//++ РС Консалт: Трофимов Евгений 24.01.2023 Задача 23290
//e1cib/data/Документ.Задание?ref=8b132a297516f59144fecc7389c27f18
Функция ПолучитьРеквизитыРаспоряжения(Распоряжение, ПустыеРеквизитыРаспоряжения)

	МетаданныеРаспоряжения = Распоряжение.Метаданные();
	ПолучаемыеПоля = Новый Массив;
	
	Для Каждого Элемент Из ПустыеРеквизитыРаспоряжения Цикл
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта(Элемент.Ключ, МетаданныеРаспоряжения) Тогда
			ПолучаемыеПоля.Добавить(Элемент.Ключ);
		КонецЕсли;
	КонецЦикла;
	
	Если ПолучаемыеПоля.Количество() > 0 Тогда
		РеквизитыРаспоряжения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Распоряжение, СтрСоединить(ПолучаемыеПоля, ","));
	Иначе
		Возврат ПустыеРеквизитыРаспоряжения;
	КонецЕсли;
	
	Для Каждого Элемент Из ПустыеРеквизитыРаспоряжения Цикл
		Если НЕ РеквизитыРаспоряжения.Свойство(Элемент.Ключ) Тогда
			РеквизитыРаспоряжения.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Возврат РеквизитыРаспоряжения;
	
КонецФункции // ПолучитьДанныеРаспоряжения()

//++ РС Консалт: Трофимов Евгений 24.01.2023 Задача 23290
//e1cib/data/Документ.Задание?ref=8b132a297516f59144fecc7389c27f18
Функция СокращенноеИмяДокумента(ДокументСсылка)

	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		Возврат "ЗК";
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ЗаказНаПеремещение") Тогда
		Возврат "ЗП";
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		Возврат "Р";
	Иначе
		Возврат ДокументСсылка.Метаданные().ПредставлениеОбъекта;
	КонецЕсли;
	
КонецФункции // СокращенноеИмяДокумента()

&ИзменениеИКонтроль("ДобавитьКомандыПечати")
Процедура РСК_ДобавитьКомандыПечати(КомандыПечати)

	// Маршрутный лист
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "МаршрутныйЛист";
	КомандаПечати.Представление = НСтр("ru = 'Маршрутный лист';
	|en = 'Operation sheet'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

	// Этикетки доставки
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьЭтикетокДоставки";
	КомандаПечати.МенеджерПечати = "";
	КомандаПечати.Идентификатор = "ЭтикеткаДоставки";
	КомандаПечати.Представление = НСтр("ru = 'Этикетки доставки';
	|en = 'Delivery labels'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	#Удаление
	Если ПравоДоступа("Чтение", Метаданные.Справочники.СертификатыНоменклатуры)
		И ПолучитьФункциональнуюОпцию("ИспользоватьСертификатыНоменклатуры") Тогда
		// Реестр сертификатов номенклатуры
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "СертификатыНоменклатурыРеестр";
		КомандаПечати.Представление = НСтр("ru = 'Сертификаты (реестр)';
		|en = 'Certificates (registry)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

		// Изображения сертификатов номенклатуры
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "СертификатыНоменклатурыИзображенияИзДокументов";
		КомандаПечати.Представление = НСтр("ru = 'Сертификаты (по каждой позиции документа)';
		|en = 'Certificates (by each document item)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

		// Изображения сертификатов номенклатуры
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "СертификатыНоменклатурыИзображенияИзДокументовБезДублей";
		КомандаПечати.Представление = НСтр("ru = 'Сертификаты (по одному на сертификат)';
		|en = 'Certificates (one per certificate)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли; 
	#КонецУдаления

	// Комплект документов на принтер
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьКомплектаДокументов";
	КомандаПечати.МенеджерПечати = "";
	КомандаПечати.Идентификатор = "КомплектДокументов";
	КомандаПечати.СразуНаПринтер = Истина;
	КомандаПечати.Представление = НСтр("ru = 'Комплект документов на принтер';
	|en = 'Printable document set'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

	ЗаданиеНаПеревозкуЛокализация.ДобавитьКомандыПечати(КомандыПечати);

КонецПроцедуры

//Подготовка таблиц для обработки РО в МЛ, на стадии, когда весь товар собрали и приготовились везти.  
//++ РС Консалт: Трофимов Евгений 17.02.2023 Задача 23698
//e1cib/data/Документ.Задание?ref=a1c07de7eccf0a5942be9c5a46bb066d
//
// Параметры:
//	Параметры		- Структура
//		*Ссылка			- ДокументСсылка.ЗаданиеНаПеревозку - 
//		*Задание		- ТаблицаЗначений - (необязательно)
//			*Ссылка			- ДокументСсылка.ЗаданиеНаПеревозку -
//			*Статус			- ПеречислениеСсылка.СтатусыЗаданийНаПеревозку - 
//			*РСК_ВыдачаТСР	- Булево -
//			*Проведен		- Булево -
//		*Маршрут		- ТаблицаЗначений - (необязательно) 
//			*Ссылка			- ДокументСсылка.ЗаданиеНаПеревозку -	
//			*КлючСвязи		- Строка -
//			*Доставлено		- Булево
//		*Распоряжения	- ТаблицаЗначений - (необязательно)
//			*Ссылка			- ДокументСсылка.ЗаданиеНаПеревозку -
//			*Распоряжение	- ДокументСсылка
//			*КлючСвязи		- Строка
// 
// Возвращаемое значение:
//   - Структура 
//
Функция ПолучитьТаблицыСверкиСтатусовРО(Параметры) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаданиеНаПеревозку.Ссылка КАК Ссылка,
		|	ЗаданиеНаПеревозку.Статус КАК Статус,
		|	ЗаданиеНаПеревозку.РСК_ВыдачаТСР КАК РСК_ВыдачаТСР,
		|	ЗаданиеНаПеревозку.Проведен КАК Проведен,
		|	ЗаданиеНаПеревозку.РСК_ОтветственныйЗаОтгрузку КАК РСК_ОтветственныйЗаОтгрузку,
		|	ЗаданиеНаПеревозку.Склад КАК Склад
		|ПОМЕСТИТЬ Задание
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку
		|ГДЕ
		|	ЗаданиеНаПеревозку.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаданиеНаПеревозкуМаршрут.Ссылка КАК Ссылка,
		|	ЗаданиеНаПеревозкуМаршрут.КлючСвязи КАК КлючСвязи,
		|	ЗаданиеНаПеревозкуМаршрут.Доставлено КАК Доставлено
		|ПОМЕСТИТЬ Маршрут
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Маршрут КАК ЗаданиеНаПеревозкуМаршрут
		|ГДЕ
		|	ЗаданиеНаПеревозкуМаршрут.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка КАК Ссылка,
		|	ЗаданиеНаПеревозкуРаспоряжения.Распоряжение КАК Распоряжение,
		|	ЗаданиеНаПеревозкуРаспоряжения.КлючСвязи КАК КлючСвязи,
		|	ЗаданиеНаПеревозкуРаспоряжения.РСК_Транзитная КАК РСК_Транзитная
		|ПОМЕСТИТЬ Распоряжения
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|ГДЕ
		|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Задание.Статус КАК СтатусМЛ,
		|	Маршрут.Доставлено КАК Доставлено,
		|	Распоряжения.Распоряжение КАК Распоряжение,
		|	ВЫБОР
		|		КОГДА Задание.Статус В (&ОтгруженныеСтатусы)
		|				И Маршрут.Доставлено
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отгружен)
		|		КОГДА Задание.Статус В (&ОтгруженныеСтатусы)
		|				И НЕ Маршрут.Доставлено
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КОтгрузке)
		|		КОГДА Задание.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданийНаПеревозку.КПогрузке)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КОтгрузке)
		|	КОНЕЦ КАК ТребуемыйСтатусРО,
		|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка КАК РО,
		|	РасходныйОрдерНаТовары.Статус КАК СтатусРО,
		|	Маршрут.КлючСвязи КАК КлючСвязи,
		|	Задание.РСК_ОтветственныйЗаОтгрузку КАК ОтветственныйЗаОтгрузку,
		|	Распоряжения.РСК_Транзитная КАК РСК_Транзитная
		|ПОМЕСТИТЬ Сбор
		|ИЗ
		|	Задание КАК Задание
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Маршрут КАК Маршрут
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Распоряжения КАК Распоряжения
		|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК РасходныйОрдерНаТоварыТоварыПоРаспоряжениям
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
		|					ПО РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка = РасходныйОрдерНаТовары.Ссылка
		|				ПО Распоряжения.Распоряжение = РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Распоряжение
		|					И (Распоряжения.Ссылка = РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка.ЗаданиеНаПеревозку
		|						ИЛИ РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка.ЗаданиеНаПеревозку = ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка))
		|					И (НЕ РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка.ПометкаУдаления)
		|					И (РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка.Склад В
		|						(ВЫБРАТЬ
		|							Задание.Склад КАК Склад
		|						ИЗ
		|							Задание КАК Задание))
		|			ПО Маршрут.Ссылка = Распоряжения.Ссылка
		|				И Маршрут.КлючСвязи = Распоряжения.КлючСвязи
		|		ПО Задание.Ссылка = Маршрут.Ссылка
		|ГДЕ
		|	НЕ Задание.РСК_ВыдачаТСР
		|	И Задание.Статус В(&ПотготовленныеСтатусы)
		|	И Задание.Проведен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Сбор.Распоряжение КАК Распоряжение,
		|	Сбор.КлючСвязи КАК КлючСвязи,
		|	Сбор.СтатусМЛ КАК СтатусМЛ
		|ИЗ
		|	Сбор КАК Сбор
		|ГДЕ
		|	Сбор.РО ЕСТЬ NULL
		|	И НЕ Сбор.РСК_Транзитная
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Сбор.Распоряжение КАК Распоряжение,
		|	Сбор.РО КАК РО,
		|	Сбор.СтатусРО КАК СтатусРО,
		|	Сбор.СтатусМЛ КАК СтатусМЛ
		|ИЗ
		|	Сбор КАК Сбор
		|ГДЕ
		|	НЕ Сбор.СтатусРО В (&ДопустимыеСтатусыРО)
		|	И Сбор.СтатусМЛ = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданийНаПеревозку.Отправлено)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КСменеСтатуса.РО КАК РО,
		|	КСменеСтатуса.ТребуемыйСтатусРО КАК ТребуемыйСтатусРО,
		|	КСменеСтатуса.СтатусРО КАК СтатусРО,
		|	КСменеСтатуса.СтатусМЛ КАК СтатусМЛ
		|ИЗ
		|	(ВЫБРАТЬ
		|		Сбор.РО КАК РО,
		|		Сбор.ТребуемыйСтатусРО КАК ТребуемыйСтатусРО,
		|		Сбор.СтатусРО КАК СтатусРО,
		|		Сбор.СтатусМЛ КАК СтатусМЛ
		|	ИЗ
		|		Сбор КАК Сбор
		|	ГДЕ
		|		Сбор.ТребуемыйСтатусРО <> Сбор.СтатусРО
		|		И НЕ Сбор.РО ЕСТЬ NULL
		|		И Сбор.СтатусРО В(&ДопустимыеСтатусыРО)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Сбор.РО,
		|		Сбор.ТребуемыйСтатусРО,
		|		Сбор.СтатусРО,
		|		Сбор.СтатусМЛ
		|	ИЗ
		|		Сбор КАК Сбор
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары.Ответственные КАК РасходныйОрдерНаТоварыОтветственные
		|			ПО Сбор.РО = РасходныйОрдерНаТоварыОтветственные.Ссылка
		|				И Сбор.ОтветственныйЗаОтгрузку = РасходныйОрдерНаТоварыОтветственные.Пользователь
		|	ГДЕ
		|		РасходныйОрдерНаТоварыОтветственные.Ссылка ЕСТЬ NULL
		|		И НЕ Сбор.РО ЕСТЬ NULL
		|		И Сбор.СтатусМЛ = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданийНаПеревозку.Отправлено)) КАК КСменеСтатуса
		|";

	Если НЕ Параметры.Свойство("Ссылка") Тогда
		Запрос.Текст = СтрЗаменить(
			Запрос.Текст,
			"	Документ.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку
			|ГДЕ
			|	ЗаданиеНаПеревозку.Ссылка = &Ссылка",
			"	&Задание КАК ЗаданиеНаПеревозку"
		);
		Запрос.Текст = СтрЗаменить(
			Запрос.Текст,
			"	Документ.ЗаданиеНаПеревозку.Маршрут КАК ЗаданиеНаПеревозкуМаршрут
			|ГДЕ
			|	ЗаданиеНаПеревозкуМаршрут.Ссылка = &Ссылка",
			"	&Маршрут КАК ЗаданиеНаПеревозкуМаршрут"
		);
		Запрос.Текст = СтрЗаменить(
			Запрос.Текст,
			"	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
			|ГДЕ
			|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка = &Ссылка",
			"	&Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения"
		);
	КонецЕсли;
	
	Для Каждого Параметр Из Параметры Цикл
		Запрос.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);
	КонецЦикла;
	
	ПотготовленныеСтатусы = Новый Массив;
	ПотготовленныеСтатусы.Добавить(Перечисления.СтатусыЗаданийНаПеревозку.КПогрузке);
	ПотготовленныеСтатусы.Добавить(Перечисления.СтатусыЗаданийНаПеревозку.Отправлено);
	ПотготовленныеСтатусы.Добавить(Перечисления.СтатусыЗаданийНаПеревозку.Закрыто);
	Запрос.УстановитьПараметр("ПотготовленныеСтатусы", ПотготовленныеСтатусы);
	
	ОтгруженныеСтатусы = Новый Массив;
	ОтгруженныеСтатусы.Добавить(Перечисления.СтатусыЗаданийНаПеревозку.Отправлено);
	ОтгруженныеСтатусы.Добавить(Перечисления.СтатусыЗаданийНаПеревозку.Закрыто);
	Запрос.УстановитьПараметр("ОтгруженныеСтатусы", ОтгруженныеСтатусы);
	
	ДопустимыеСтатусыРО = Новый Массив;
	ДопустимыеСтатусыРО.Добавить(Перечисления.СтатусыРасходныхОрдеров.КОтгрузке);
	ДопустимыеСтатусыРО.Добавить(Перечисления.СтатусыРасходныхОрдеров.Отгружен);
	Запрос.УстановитьПараметр("ДопустимыеСтатусыРО", ДопустимыеСтатусыРО);
	
	Результаты = Запрос.ВыполнитьПакет();
	Ответ = Новый Структура;
	Ответ.Вставить("РаспоряженияБезРО", Результаты[4].Выгрузить());
	Ответ.Вставить("НедопустимыеСтатусыРО", Результаты[5].Выгрузить());
	Ответ.Вставить("КСменеСтатуса", Результаты[6].Выгрузить());
	
	Возврат Ответ;

КонецФункции // ПолучитьТаблицыСверкиСтатусов()
