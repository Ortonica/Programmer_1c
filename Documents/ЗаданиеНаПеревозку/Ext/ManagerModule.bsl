
&После("ОбработкаПолученияПолейПредставления")
Процедура РСК_ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17924
	//e1cib/data/Документ.Задание?ref=b6d469d456107fef47bae0d8601fa57f
	
	//Замена представления документов, в которых переключается интерфейс на подсистему «Выдача ТСР»
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("Номер");
	Поля.Добавить("Дата");
	Поля.Добавить("РСК_ВыдачаТСР");
	//-- КонецЗадачи 17924
КонецПроцедуры

&После("ОбработкаПолученияПредставления")
Процедура РСК_ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17924
	//e1cib/data/Документ.Задание?ref=b6d469d456107fef47bae0d8601fa57f
	
	//Замена представления документов, в которых переключается интерфейс на подсистему «Выдача ТСР»
	СтандартнаяОбработка = Ложь;
	Если Данные.РСК_ВыдачаТСР Тогда
		Представление = "Загрузочная ведомость ";
	Иначе
		Представление = "Задание на перевозку ";
	КонецЕсли;
	Представление = Представление + Данные.Номер + " от " + Формат(Данные.Дата, "ДЛФ=DT");
	//-- КонецЗадачи 17924
КонецПроцедуры

&ИзменениеИКонтроль("СформироватьПечатнуюФормуМаршрутныйЛист")
Функция РСК_СформироватьПечатнуюФормуМаршрутныйЛист(МассивОбъектов, ОбъектыПечати)

	УстановитьПривилегированныйРежим(Истина);

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаданиеНаПеревозку_МаршрутныйЛист";
	
	#Удаление
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ЗаданиеНаПеревозку.ПФ_MXL_МаршрутныйЛист");
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ЗаданиеНаПеревозку.РС_ПФ_MXL_МаршрутныйЛист");
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки

	ОбластьЗаголовокДокумента		= Макет.ПолучитьОбласть("ЗаголовокДокумента");
	ОбластьШапкаДокумента 			= Макет.ПолучитьОбласть("ШапкаДокумента");
	ОбластьДополнительнаяИнформация = Макет.ПолучитьОбласть("ДополнительнаяИнформация");

	Запрос = Новый Запрос;
	Запрос.Текст =
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	"ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|	РаспоряженияЗаданий.Ссылка 
	|ПОМЕСТИТЬ ВтТранзит
	|ИЗ 
	|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК РаспоряженияЗаданий
	|ГДЕ
	|	РаспоряженияЗаданий.Ссылка.Проведен
	|		И НЕ РаспоряженияЗаданий.РСК_Транзитная
	|		И РаспоряженияЗаданий.РСК_Накладная В (
	|			ВЫБРАТЬ РаспоряженияЗаданий.РСК_Накладная 
	|			ИЗ Документ.ЗаданиеНаПеревозку.Распоряжения КАК РаспоряженияЗаданий 
	|			ГДЕ РаспоряженияЗаданий.Ссылка В(&МассивОбъектов) И РаспоряженияЗаданий.РСК_Транзитная)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|" +
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	"ВЫБРАТЬ РАЗЛИЧНЫЕ	
	|	РасходныйОрдер.Ссылка КАК Ордер,
	|	РаспоряженияЗаданий.Распоряжение КАК Распоряжение
	|ПОМЕСТИТЬ РаспоряженияОрдеровПоПолучателям
	|ИЗ
	|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК РаспоряженияЗаданий
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары КАК РасходныйОрдер
	#Удаление
	|		ПО РаспоряженияЗаданий.Ссылка = РасходныйОрдер.ЗаданиеНаПеревозку
	|			И РаспоряженияЗаданий.ПолучательОтправитель = РасходныйОрдер.Получатель
	|			И НЕ РасходныйОрдер.ПометкаУдаления
	#КонецУдаления	
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	|		ПО (РаспоряженияЗаданий.Ссылка = РасходныйОрдер.ЗаданиеНаПеревозку ИЛИ РасходныйОрдер.ЗаданиеНаПеревозку В (ВЫБРАТЬ ВтТранзит.Ссылка ИЗ ВтТранзит КАК ВтТранзит))
	|			И РаспоряженияЗаданий.ПолучательОтправитель = РасходныйОрдер.Получатель
	|			И НЕ РасходныйОрдер.ПометкаУдаления
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	|ГДЕ
	|	РаспоряженияЗаданий.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасходныйОрдер.Ссылка,
	|	РаспоряженияЗаданий.Распоряжение
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 1
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РаспоряженияЗаданий.Ссылка       КАК Ссылка,
	#Удаление
	|	РаспоряженияЗаданий.ПолучательОтправитель КАК Получатель,
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	|	ЕСТЬNULL(Контрагенты.Ссылка, РаспоряженияЗаданий.ПолучательОтправитель) КАК Получатель,
	|	ЕСТЬNULL(Контрагенты.ИНН, """") КАК ИНН,
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	|	РаспоряженияЗаданий.Распоряжение КАК Распоряжение,
	|	РаспоряженияЗаданий.КлючСвязи    КАК КлючСвязи,
	|	РаспоряженияЗаданий.НомерСтроки  КАК НомерСтроки,
	|	РаспоряженияОрдеров.Ссылка       КАК Ордер,
	|	РаспоряженияЗаданий.Вес          КАК Вес,
	|	РаспоряженияЗаданий.Объем        КАК Объем
	|ПОМЕСТИТЬ РаспоряженияОрдеров
	|ИЗ
	|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК РаспоряженияЗаданий
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК РаспоряженияОрдеров
	|		ПО РаспоряженияЗаданий.Распоряжение = РаспоряженияОрдеров.Распоряжение
	|			И НЕ РаспоряженияОрдеров.Ссылка.ПометкаУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК дЗаказКлиента
	|		ПО РаспоряженияЗаданий.Распоряжение = дЗаказКлиента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК дРеализацияТоваровУслуг
	|		ПО РаспоряженияЗаданий.Распоряжение = дРеализацияТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО ЕСТЬNULL(дЗаказКлиента.Контрагент, дРеализацияТоваровУслуг.Контрагент) = Контрагенты.Ссылка
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	|ГДЕ
	|	РаспоряженияЗаданий.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РаспоряженияЗаданий.КлючСвязи,
	|	РаспоряженияЗаданий.Распоряжение,
	|	РаспоряженияОрдеров.Ссылка
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 2
	|ВЫБРАТЬ
	|	ЗаданиеНаПеревозку.Ссылка КАК Ссылка,
	|	ЗаданиеНаПеревозку.Номер  КАК НомерЗадания,
	|	ЗаданиеНаПеревозку.Дата   КАК Дата,
	|	ПРЕДСТАВЛЕНИЕ(ЗаданиеНаПеревозку.Водитель) КАК Водитель,
	|	ПРЕДСТАВЛЕНИЕ(ЗаданиеНаПеревозку.КурьерЭкспедитор) КАК КурьерЭкспедитор,
	|	ПРЕДСТАВЛЕНИЕ(ЗаданиеНаПеревозку.ТранспортноеСредство) КАК ТранспортноеСредство,
	|	ЗаданиеНаПеревозку.Приоритет КАК Приоритет,
	|	ЗаданиеНаПеревозку.ДатаВремяРейсаПланС  КАК НачалоРейсаПлан,
	|	ЗаданиеНаПеревозку.ДатаВремяРейсаПланПо КАК ОкончаниеРейсаПлан,
	|	ЗаданиеНаПеревозку.ДатаВремяРейсаФактС  КАК НачалоРейсаФакт,
	|	ЗаданиеНаПеревозку.ДатаВремяРейсаФактПо КАК ОкончаниеРейсаФакт,
	|	ЗаданиеНаПеревозку.ДополнительнаяИнформация КАК ДопИнформация,
	|	ЗаданиеНаПеревозку.Вес   КАК ИтогоВес,
	|	ЗаданиеНаПеревозку.Объем КАК ИтогоОбъем
	|ИЗ
	|	Документ.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку
	|ГДЕ
	|	ЗаданиеНаПеревозку.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаданиеНаПеревозку.Ссылка
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 3
	|ВЫБРАТЬ
	|	МаршрутЗадания.Ссылка  КАК Ссылка,
	|	МаршрутЗадания.Адрес   КАК Адрес,
	|	МаршрутЗадания.Зона    КАК Зона,
	|	МаршрутЗадания.ВремяС  КАК ВремяС,
	|	МаршрутЗадания.ВремяПо КАК ВремяПо,
	|	ВЫРАЗИТЬ(МаршрутЗадания.ДополнительнаяИнформация КАК СТРОКА(1000)) КАК ДополнительнаяИнформация,
	|	РаспоряженияОрдеров.Получатель   КАК Получатель,
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	|	РаспоряженияОрдеров.ИНН КАК ИНН,
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	|	РаспоряженияОрдеров.Распоряжение КАК Распоряжение,
	|	РаспоряженияОрдеров.Распоряжение.Номер КАК НомерРаспоряжения,
	|	РаспоряженияОрдеров.Вес   КАК Вес,
	|	РаспоряженияОрдеров.Объем КАК Объем,
	|	СУММА(ВЫБОР
	|			КОГДА ОтгружаемыеТовары.УпаковочныйЛистРодитель = ЗНАЧЕНИЕ(Документ.УпаковочныйЛист.ПустаяСсылка)
	|				ТОГДА ЕСТЬNULL(ОтгружаемыеТовары.КоличествоУпаковок, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоМест
	|ИЗ
	|	Документ.ЗаданиеНаПеревозку.Маршрут КАК МаршрутЗадания
	|		ЛЕВОЕ СОЕДИНЕНИЕ РаспоряженияОрдеров КАК РаспоряженияОрдеров
	|		ПО МаршрутЗадания.КлючСвязи = РаспоряженияОрдеров.КлючСвязи
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РаспоряженияОрдеровПоПолучателям КАК РаспоряженияОрдеровПоПолучателям
	|		ПО РаспоряженияОрдеров.Распоряжение = РаспоряженияОрдеровПоПолучателям.Распоряжение
	|			И РаспоряженияОрдеров.Ордер = РаспоряженияОрдеровПоПолучателям.Ордер
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары.ОтгружаемыеТовары КАК ОтгружаемыеТовары
	|		ПО РаспоряженияОрдеровПоПолучателям.Ордер = ОтгружаемыеТовары.Ссылка
	|ГДЕ
	|	МаршрутЗадания.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	МаршрутЗадания.Ссылка,
	|	МаршрутЗадания.НомерСтроки,
	|	МаршрутЗадания.КлючСвязи,
	|	МаршрутЗадания.Адрес,
	|	МаршрутЗадания.Зона,
	|	МаршрутЗадания.ВремяС,
	|	МаршрутЗадания.ВремяПо,
	|	ВЫРАЗИТЬ(МаршрутЗадания.ДополнительнаяИнформация КАК СТРОКА(1000)),
	|	РаспоряженияОрдеров.Получатель,
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	|	РаспоряженияОрдеров.ИНН,
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	|	РаспоряженияОрдеров.Распоряжение,
	|	РаспоряженияОрдеров.Вес,
	|	РаспоряженияОрдеров.Объем
	|
	|УПОРЯДОЧИТЬ ПО
	|	МаршрутЗадания.Ссылка,
	|	МаршрутЗадания.НомерСтроки,
	|	МИНИМУМ(РаспоряженияОрдеров.НомерСтроки)
	|
	|ИТОГИ ПО
	|	МаршрутЗадания.Ссылка,
	|	МаршрутЗадания.НомерСтроки,
	|	МаршрутЗадания.КлючСвязи,
	|	РаспоряженияОрдеров.Получатель
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 4
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Распоряжения.Склад,
	|	ВЫБОР
	|		КОГДА Распоряжения.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
	|				И Распоряжения.Склад.ДатаНачалаОрдернойСхемыПриОтгрузке <= Распоряжения.Распоряжение.Дата
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОрдернаяСхемаПриОтгрузке
	|ИЗ
	|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК Распоряжения
	|ГДЕ
	|	Распоряжения.Ссылка В(&МассивОбъектов)
	#Удаление
	|	И НЕ Распоряжения.Склад.ЭтоГруппа";
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	|	И НЕ Распоряжения.Склад.ЭтоГруппа
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 5
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РаспоряженияОрдеровПоПолучателям.Распоряжение  КАК Распоряжение,
	|	РаспоряженияОрдеровПоПолучателям.Ордер  КАК Ордер,
	|	РаспоряженияОрдеровПоПолучателям.Ордер.Номер КАК Номер
	|ИЗ
	|	Документ.ЗаданиеНаПеревозку.Маршрут КАК МаршрутЗадания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РаспоряженияОрдеров КАК РаспоряженияОрдеров
	|		ПО МаршрутЗадания.КлючСвязи = РаспоряженияОрдеров.КлючСвязи		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РаспоряженияОрдеровПоПолучателям КАК РаспоряженияОрдеровПоПолучателям
	|		ПО РаспоряженияОрдеров.Распоряжение = РаспоряженияОрдеровПоПолучателям.Распоряжение
	|			И РаспоряженияОрдеров.Ордер = РаспоряженияОрдеровПоПолучателям.Ордер
	|ГДЕ
	|	МаршрутЗадания.Ссылка В(&МассивОбъектов)";
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки

	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);

	РезультатЗапросаПоДокументу = Запрос.ВыполнитьПакет(); 
	
	#Удаление
	РезультатШапкаДокументов = РезультатЗапросаПоДокументу[2].Выбрать();
	ВыборкаПоСсылкам         = РезультатЗапросаПоДокументу[3].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	СкладыПогрузкиВыборка    = РезультатЗапросаПоДокументу[4].Выбрать();
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	РезультатШапкаДокументов = РезультатЗапросаПоДокументу[3].Выбрать();
	ВыборкаПоСсылкам         = РезультатЗапросаПоДокументу[4].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	СкладыПогрузкиВыборка    = РезультатЗапросаПоДокументу[5].Выбрать();
	ВыборкаПоОрдерам 		 = РезультатЗапросаПоДокументу[6].Выбрать();
	
	СтруктураПоискаПоОрдерам = Новый Структура("Распоряжение");
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки

	ПервыйДокумент = Истина;

	Пока РезультатШапкаДокументов.Следующий() Цикл

		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ПервыйДокумент = Ложь;

		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		РеквизитыДокумента = Новый Структура;
		РеквизитыДокумента.Вставить("Номер", РезультатШапкаДокументов.НомерЗадания);
		РеквизитыДокумента.Вставить("Дата",  РезультатШапкаДокументов.Дата);

		НазваниеДокумента = НСтр("ru = 'Маршрутный лист';
		|en = 'Operation sheet'", ОбщегоНазначения.КодОсновногоЯзыка());

		ЗаголовокДокумента = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента,
		НазваниеДокумента);
		ОбластьЗаголовокДокумента.Параметры.ЗаголовокДокумента = ЗаголовокДокумента;

		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент,
		Макет,
		ОбластьЗаголовокДокумента,
		РезультатШапкаДокументов.Ссылка);

		ТабличныйДокумент.Вывести(ОбластьЗаголовокДокумента);

		ОбластьШапкаДокумента.Параметры.Заполнить(РезультатШапкаДокументов);

		СтрокаСкладыПогрузки = "";
		ЕстьОрдерныеСклады   = Ложь;

		Пока СкладыПогрузкиВыборка.Следующий() Цикл
			Если СкладыПогрузкиВыборка.ОрдернаяСхемаПриОтгрузке
				И Не ЕстьОрдерныеСклады Тогда

				ЕстьОрдерныеСклады = Истина;

			КонецЕсли;

			СтрокаСкладыПогрузки = СтрокаСкладыПогрузки + СкладыПогрузкиВыборка.Склад + "," + Символы.НПП;
		КонецЦикла;

		СуффиксОбласти = ?(Не ЕстьОрдерныеСклады, "БезМест", "");

		ОбластьШапкаТаблицы		= Макет.ПолучитьОбласть("ШапкаТаблицы" + СуффиксОбласти);
		ОбластьСтрокаТаблицы	= Макет.ПолучитьОбласть("СтрокаТаблицы" + СуффиксОбласти);
		ОбластьДопСтрокаТаблицы	= Макет.ПолучитьОбласть("ДопСтрокаТаблицы" + СуффиксОбласти);
		ОбластьПодвалТаблицы 	= Макет.ПолучитьОбласть("ПодвалТаблицы" + СуффиксОбласти);
		ОбластьИтоги 			= Макет.ПолучитьОбласть("Итоги" + СуффиксОбласти);

		Если СтрокаСкладыПогрузки <> "" Тогда
			СтрокаСкладыПогрузки = Лев(СтрокаСкладыПогрузки, СтрДлина(СтрокаСкладыПогрузки) - 2);

			ОбластьШапкаДокумента.Параметры.СкладыПогрузки = СтрокаСкладыПогрузки;
		КонецЕсли;

		ТабличныйДокумент.Вывести(ОбластьШапкаДокумента);

		ОтборПоиска = Новый Структура ("Ссылка", РезультатШапкаДокументов.Ссылка);

		Пока ВыборкаПоСсылкам.НайтиСледующий(ОтборПоиска) Цикл

			ИмяСтолбцаВес   = НСтр("ru = 'Вес, %ЕдиницаИзмеренияВес%';
			|en = 'Weight, %ЕдиницаИзмеренияВес%'", ОбщегоНазначения.КодОсновногоЯзыка());
			ИмяСтолбцаОбъем = НСтр("ru = 'Объем, %ЕдиницаИзмеренияОбъем%';
			|en = 'Volume, %ЕдиницаИзмеренияОбъем%'", ОбщегоНазначения.КодОсновногоЯзыка());

			ИмяСтолбцаВес   = СтрЗаменить(ИмяСтолбцаВес,
			"%ЕдиницаИзмеренияВес%",
			Константы.ЕдиницаИзмеренияВеса.Получить());
			ИмяСтолбцаОбъем = СтрЗаменить(ИмяСтолбцаОбъем,
			"%ЕдиницаИзмеренияОбъем%",
			Константы.ЕдиницаИзмеренияОбъема.Получить());

			НаименованияКолонокТаблицы = Новый Структура("ВесШапка, ОбъемШапка", ИмяСтолбцаВес, ИмяСтолбцаОбъем);

			ОбластьШапкаТаблицы.Параметры.Заполнить(НаименованияКолонокТаблицы);

			ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);

			ВыборкаПоНомерамСтрок = ВыборкаПоСсылкам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			НомерСтроки = 0;
			ИтогоКоличествоМест = 0;

			Пока ВыборкаПоНомерамСтрок.Следующий() Цикл

				ВыборкаПоКодамСтрок = ВыборкаПоНомерамСтрок.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

				Пока ВыборкаПоКодамСтрок.Следующий() Цикл

					НомерСтроки = НомерСтроки + 1;

					ОбластьСтрокаТаблицы.Параметры.НомерЗаказа = НомерСтроки;

					ВыборкаПоПолучателям = ВыборкаПоКодамСтрок.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

					ПервыйПолучатель = Истина;

					КоличествоПолучателей = ВыборкаПоПолучателям.Количество() - 1;

					Пока ВыборкаПоПолучателям.Следующий() Цикл

						Если ПервыйПолучатель Тогда
							ПервыйПолучатель = Ложь;

							ЗаполняемаяОбласть = ОбластьСтрокаТаблицы;
						Иначе
							ЗаполняемаяОбласть = ОбластьДопСтрокаТаблицы;
						КонецЕсли;

						ИтогоВес   = 0;
						ИтогоОбъем = 0;

						КоличествоМестПоСтроке = 0;

						Распоряжения = Новый Соответствие;
						#Вставка
						//++ РС Консалт: Минаков А.С. Задача 20226
						Ордера = "";	
						//++ РС Консалт: Минаков А.С. Задача 20226
						#КонецВставки

						Выборка = ВыборкаПоПолучателям.Выбрать();

						Пока Выборка.Следующий() Цикл
							ИтогоВес   = ИтогоВес + Выборка.Вес;
							ИтогоОбъем = ИтогоОбъем + Выборка.Объем;

							КоличествоМестПоСтроке = КоличествоМестПоСтроке + Выборка.КоличествоМест;

							ЗаполняемаяОбласть.Параметры.Заполнить(Выборка);
							#Вставка
							//++ РС Консалт: Минаков А.С. Задача 20226
							Если ЗначениеЗаполнено(Выборка.ИНН) Тогда
								ЗаполняемаяОбласть.Параметры.Получатель = "" + ЗаполняемаяОбласть.Параметры.Получатель + "(" + Выборка.ИНН + ")"	
							КонецЕсли;
							Телефон = ФормированиеПечатныхФорм.ПолучитьТелефонИзКонтактнойИнформации(Выборка.Получатель);
							Если ЗначениеЗаполнено(Телефон) Тогда
								ЗаполняемаяОбласть.Параметры.Получатель = Строка(ЗаполняемаяОбласть.Параметры.Получатель)
								+ Символы.ПС + "Тел. " + Телефон
							КонецЕсли;
							
							СтруктураПоискаПоОрдерам.Распоряжение = Выборка.Распоряжение;
							ВыборкаПоОрдерам.Сбросить();
							Пока ВыборкаПоОрдерам.НайтиСледующий(СтруктураПоискаПоОрдерам) Цикл
								Если Ордера = "" Тогда
									Ордера = "Список ордеров: " + ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаПоОрдерам.Номер)
								Иначе
									Ордера = Ордера + ", " + ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаПоОрдерам.Номер) 	
								КонецЕсли 
							КонецЦикла;	
							//++ РС Консалт: Минаков А.С. Задача 20226
							#КонецВставки
							
							#Удаление
							СтрокаРаспоряжения = Распоряжения.Получить(Выборка.Распоряжение.Метаданные());

							Если СтрокаРаспоряжения = Неопределено Тогда
								СтрокаРаспоряжения = Выборка.Распоряжение.Метаданные().ПредставлениеСписка + ": "
								+ ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.НомерРаспоряжения);
							Иначе
								СтрокаРаспоряжения = СтрокаРаспоряжения + "," + " "
								+ ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.Распоряжение.Номер);
							КонецЕсли;

							Распоряжения.Вставить(Выборка.Распоряжение.Метаданные(), СтрокаРаспоряжения);
							#КонецУдаления
							#Вставка
							//++ РС Консалт: Минаков А.С. Задача 20226
							ДанныеРаспоряжения = Распоряжения.Получить(Выборка.Распоряжение.Метаданные());
							
							НомерНаПечать = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.НомерРаспоряжения);	
							
							Если ДанныеРаспоряжения = Неопределено Тогда
								СтрокаРаспоряжения = Выборка.Распоряжение.Метаданные().ПредставлениеСписка + ": " + НомерНаПечать;
								
								РеквизитыРаспоряжения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Выборка.Распоряжение, 
								"ОсобыеУсловияПеревозки, ОсобыеУсловияПеревозкиОписание");
								
								Если РеквизитыРаспоряжения.ОсобыеУсловияПеревозки 
									И ЗначениеЗаполнено(РеквизитыРаспоряжения.ОсобыеУсловияПеревозкиОписание) Тогда
									
									СтрокаОсобыеУсловия =  Выборка.Распоряжение.Метаданные().ПредставлениеОбъекта + ": " 
									+ НомерНаПечать + ": " + РеквизитыРаспоряжения.ОсобыеУсловияПеревозкиОписание	
								Иначе
									СтрокаОсобыеУсловия = ""
								КонецЕсли
							Иначе	
								СтрокаРаспоряжения = ДанныеРаспоряжения.Распоряжения;
								СтрокаОсобыеУсловия = ДанныеРаспоряжения.ОсобыеУсловия;	
								
								СтрокаРаспоряжения = СтрокаРаспоряжения + ", " + НомерНаПечать;
								
								РеквизитыРаспоряжения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Выборка.Распоряжение, 
								"ОсобыеУсловияПеревозки, ОсобыеУсловияПеревозкиОписание");
								
								Если РеквизитыРаспоряжения.ОсобыеУсловияПеревозки
									И ЗначениеЗаполнено(РеквизитыРаспоряжения.ОсобыеУсловияПеревозкиОписание) Тогда
									
									Если СтрНайти(СтрокаОсобыеУсловия, ": " + РеквизитыРаспоряжения.ОсобыеУсловияПеревозкиОписание) Тогда
										СтрокаОсобыеУсловия = СтрЗаменить(СтрокаОсобыеУсловия, 
										": " + РеквизитыРаспоряжения.ОсобыеУсловияПеревозкиОписание,
										"," + Символы.ПС + НомерНаПечать + ": " + РеквизитыРаспоряжения.ОсобыеУсловияПеревозкиОписание)
									Иначе
										СтрокаОсобыеУсловия = СтрокаОсобыеУсловия 
										+ ?(СтрокаОсобыеУсловия = "", "", Символы.ПС) 
										+ Выборка.Распоряжение.Метаданные().ПредставлениеОбъекта + ": " 
										+ НомерНаПечать + ": " + РеквизитыРаспоряжения.ОсобыеУсловияПеревозкиОписание	
									КонецЕсли	
								Иначе
									СтрокаОсобыеУсловия = СтрокаОсобыеУсловия
								КонецЕсли								
							КонецЕсли;
							
							ДанныеРаспоряжения = Новый Структура("Распоряжения, ОсобыеУсловия", СтрокаРаспоряжения, СтрокаОсобыеУсловия);
							
							Распоряжения.Вставить(Выборка.Распоряжение.Метаданные(), ДанныеРаспоряжения)
 							//++ РС Консалт: Минаков А.С. Задача 20226
							#КонецВставки
						КонецЦикла;

						ИтогоКоличествоМест = ИтогоКоличествоМест + КоличествоМестПоСтроке;

						ИменаРаспоряжений = "";
						#Вставка
						//++ РС Консалт: Минаков А.С. Задача 20226
						ОсобыеУсловия = "";
						//++ РС Консалт: Минаков А.С. Задача 20226
						#КонецВставки
						
						#Удаление
						Для Каждого РаспоряжениеКлючЗначение Из Распоряжения Цикл
							ИменаРаспоряжений = ИменаРаспоряжений + РаспоряжениеКлючЗначение.Значение + Символы.ПС;
						КонецЦикла;
						#КонецУдаления
						#Вставка
						//++ РС Консалт: Минаков А.С. Задача 20226
						Для Каждого РаспоряжениеКлючЗначение Из Распоряжения Цикл
							ИменаРаспоряжений = ИменаРаспоряжений + РаспоряжениеКлючЗначение.Значение.Распоряжения + Символы.ПС;
							ОсобыеУсловия = ОсобыеУсловия + РаспоряжениеКлючЗначение.Значение.ОсобыеУсловия + Символы.ПС;
						КонецЦикла; 
						
						Если ЗначениеЗаполнено(Ордера) Тогда
							ИменаРаспоряжений = ИменаРаспоряжений + Ордера
						КонецЕсли;	
						//++ РС Консалт: Минаков А.С. Задача 20226
						#КонецВставки

						ПараметрыГрузаПолучателя = Новый Структура;
						ПараметрыГрузаПолучателя.Вставить("Распоряжения",   ИменаРаспоряжений);
						ПараметрыГрузаПолучателя.Вставить("Вес",            ИтогоВес);
						ПараметрыГрузаПолучателя.Вставить("Объем",          ИтогоОбъем);
						ПараметрыГрузаПолучателя.Вставить("КоличествоМест", КоличествоМестПоСтроке);
						#Вставка
						//++ РС Консалт: Минаков А.С. Задача 20226
						ПараметрыГрузаПолучателя.Вставить("ОсобыеУсловия", ОсобыеУсловия);
						//++ РС Консалт: Минаков А.С. Задача 20226
						#КонецВставки

						ЗаполняемаяОбласть.Параметры.Заполнить(ПараметрыГрузаПолучателя);

						ТабличныйДокумент.Вывести(ЗаполняемаяОбласть);

					КонецЦикла;

					ОбъединитьОбластьСоСтрокамиНиже(ТабличныйДокумент,
					"НомерЗаказа" + СуффиксОбласти,
					КоличествоПолучателей);
					ОбъединитьОбластьСоСтрокамиНиже(ТабличныйДокумент,
					"Адрес" + СуффиксОбласти,
					КоличествоПолучателей);
					ОбъединитьОбластьСоСтрокамиНиже(ТабличныйДокумент,
					"Зона" + СуффиксОбласти,
					КоличествоПолучателей);
					#Удаление
					ОбъединитьОбластьСоСтрокамиНиже(ТабличныйДокумент,
					"ВремяС" + СуффиксОбласти,
					КоличествоПолучателей);
					#КонецУдаления
					ОбъединитьОбластьСоСтрокамиНиже(ТабличныйДокумент,
					"ВремяПо" + СуффиксОбласти,
					КоличествоПолучателей);
					ОбъединитьОбластьСоСтрокамиНиже(ТабличныйДокумент,
					"ДополнительнаяИнформацияСтрока" + СуффиксОбласти,
					КоличествоПолучателей);

				КонецЦикла;

			КонецЦикла;

			ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы);

			ВесПоДокументу   = РезультатШапкаДокументов.ИтогоВес
			/ НоменклатураСервер.КоэффициентПересчетаВТонны(Константы.ЕдиницаИзмеренияВеса.Получить());
			ОбъемПоДокументу = РезультатШапкаДокументов.ИтогоОбъем
			/ НоменклатураСервер.КоэффициентПересчетаВКубическиеМетры(Константы.ЕдиницаИзмеренияОбъема.Получить());

			ПараметрыИтогов = Новый Структура;
			ПараметрыИтогов.Вставить("ИтогоВес",   ВесПоДокументу);
			ПараметрыИтогов.Вставить("ИтогоОбъем", ОбъемПоДокументу);

			Если ЕстьОрдерныеСклады Тогда
				ПараметрыИтогов.Вставить("ИтогоКоличествоМест", ИтогоКоличествоМест);
			КонецЕсли;

			ОбластьИтоги.Параметры.Заполнить(ПараметрыИтогов);

			ТабличныйДокумент.Вывести(ОбластьИтоги);

			Если ЗначениеЗаполнено(РезультатШапкаДокументов.ДопИнформация) Тогда
				ОбластьДополнительнаяИнформация.Параметры.ДопИнформация = СокрЛП(РезультатШапкаДокументов.ДопИнформация);

				ТабличныйДокумент.Вывести(ОбластьДополнительнаяИнформация);
			КонецЕсли;

		КонецЦикла;

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент,
		НомерСтрокиНачало,
		ОбъектыПечати,
		РезультатШапкаДокументов.Ссылка);

	КонецЦикла;

	ТабличныйДокумент.АвтоМасштаб = Истина;

	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;

	Возврат ТабличныйДокумент;

КонецФункции

