
//++ РС Консалт: Минаков А.С. Задача 20226
&НаКлиенте
Перем ОтветПередЗаписью;
//++ РС Консалт: Минаков А.С. Задача 20226 

&НаСервере
&После("ПриСозданииНаСервере")
Процедура РСК_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//++РС Консалт Назаров М.Ю. 8 августа 2022 г. 5:59:27                  
	РассчитатПоказателиУтилизации();	
	//--РС Консалт Назаров М.Ю. 8 августа 2022 г. 5:59:27
	
	//++ РС Консалт: Трофимов Евгений 14.10.2022 Тикет 20965
	//e1cib/data/Документ.Задание?ref=bdc83380f664d5bb4898b38b648fea97
	//Доп.требование: Пользователи хотят исправлять адрес вручную
	Элементы.ЗагрузкаАдрес.РедактированиеТекста = Истина;
	Элементы.ВыгрузкаАдрес.РедактированиеТекста = Истина;
	//-- КонецТикета 20965
	
	//++РС Консалт: Минаков А.С. Задача 21223 
	КоллекцияПечатныхФорм = РегистрыСведений.НастройкиПечатиОбъектов.КомплектПечатныхФорм(
	"Документ.РеализацияТоваровУслуг",
	Неопределено,
	0);
	
	Если КоллекцияПечатныхФорм <> Неопределено Тогда
		
		Для Каждого ТекСтрока Из КоллекцияПечатныхФорм Цикл
			
			НоваяСтрока = КомплектПечатныхФорм.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
			НоваяСтрока.ВидДокумента = "РеализацияТоваровУслуг"
			
		КонецЦикла
		
	КонецЕсли;
	
	КоллекцияПечатныхФорм = РегистрыСведений.НастройкиПечатиОбъектов.КомплектПечатныхФорм(
	"Документ.ПеремещениеТоваров",
	Неопределено,
	0);
	
	Если КоллекцияПечатныхФорм <> Неопределено Тогда
		
		Для Каждого ТекСтрока Из КоллекцияПечатныхФорм Цикл
			
			НоваяСтрока = КомплектПечатныхФорм.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
			НоваяСтрока.ВидДокумента = "ПеремещениеТоваров"
			
		КонецЦикла
		
	КонецЕсли
	//++РС Консалт: Минаков А.С. Задача 21223
	
КонецПроцедуры

&НаСервере
&После("ПриЧтенииСозданииНаСервере")
Процедура РСК_ПриЧтенииСозданииНаСервере()
	
	//++ РС Консалт: Минаков А.С. Задача 20226
	Элементы.МаршрутСоздатьНакладные.Доступность = ЗначениеЗаполнено(Объект.Ссылка)
	//++ РС Консалт: Минаков А.С. Задача 20226
	
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура РСК_ПриОткрытииПосле(Отказ)
	
	УстановитьВидимостьЭлементов()
	
КонецПроцедуры

&НаКлиенте
Процедура РСК_ПередЗаписьюВместо(Отказ, ПараметрыЗаписи)
	
	//++ РС Консалт: Минаков А.С. Задача 20226
	Если Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыЗаданийНаПеревозку.Закрыто")  
		И Не ОтветПередЗаписью Тогда
		
		ЗадаватьВопрос = Ложь;
		Для Каждого СтрокаТч Из Объект.Маршрут Цикл
			Если Не СтрокаТч.Доставлено Тогда
				ЗадаватьВопрос = Истина;
				Прервать
			КонецЕсли	
		КонецЦикла;	
	
		Если ЗадаватьВопрос Тогда
			Отказ = Истина;
			ДополнительныеПараметры = Новый Структура("ПараметрыЗаписи", ПараметрыЗаписи); 
			ОписаниеОповещения = Новый ОписаниеОповещения("ВопросПометитьДокументы_Завершение", ЭтаФорма, ДополнительныеПараметры);
			ТекстВопроса = "Пометить не доставленные документы на удаление и создать возвраты?";
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена,, КодВозвратаДиалога.Да)
		КонецЕсли	
		
	КонецЕсли;
	
	ОтветПередЗаписью = Ложь
	//++ РС Консалт: Минаков А.С. Задача 20226
	
КонецПроцедуры 

&НаКлиенте
Процедура ВопросПометитьДокументы_Завершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	//++ РС Консалт: Минаков А.С. Задача 20226
	Если РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		Возврат
	КонецЕсли;
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ДополнительныеПараметры.ПараметрыЗаписи.Вставить("ПометитьНеДоставленные", Истина)
	КонецЕсли;
	
	ОтветПередЗаписью = Истина;
	Записать(ДополнительныеПараметры.ПараметрыЗаписи)
	//++ РС Консалт: Минаков А.С. Задача 20226
	
КонецПроцедуры

&НаСервере
&Перед("ПередЗаписьюНаСервере")
Процедура РСК_ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	//++ РС Консалт: Минаков А.С. Задача 20226
	Перем ПометитьНеДоставленные;
	
	Если ПараметрыЗаписи.Свойство("ПометитьНеДоставленные", ПометитьНеДоставленные) 
		И ПометитьНеДоставленные Тогда
		
		ТекущийОбъект.ДополнительныеСвойства.Вставить("ПометитьНеДоставленные", Истина)
	КонецЕсли
	//++ РС Консалт: Минаков А.С. Задача 20226
	
КонецПроцедуры

&НаСервере
&После("ПослеЗаписиНаСервере")
Процедура РСК_ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	//++ РС Консалт: Минаков А.С. Задача 20226
	Элементы.МаршрутСоздатьНакладные.Доступность = ЗначениеЗаполнено(Объект.Ссылка)
	//++ РС Консалт: Минаков А.С. Задача 20226
	
КонецПроцедуры



&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура УстановитьВидимостьЭлементов()

	Если Объект.РСК_ВыдачаТСР Тогда
		Элементы.СтраницыИнтерфейсов.ТекущаяСтраница = Элементы.РежимВыдачиТСР;
		ОбновитьТаблицыТСР();
	Иначе
		Элементы.СтраницыИнтерфейсов.ТекущаяСтраница = Элементы.ТиповойИнтерфейс;
	КонецЕсли;
	Элементы.ФормаВыдачаТСР.Доступность = НЕ Объект.РСК_ВыдачаТСР;
	Элементы.ФормаВыдачаТСР.Пометка = Объект.РСК_ВыдачаТСР;
	Элементы.ФормаТиповойФункционал.Доступность = Объект.РСК_ВыдачаТСР;
	Элементы.ФормаТиповойФункционал.Пометка = НЕ Объект.РСК_ВыдачаТСР;
	Элементы.РаспоряженияЗаполнитьПоРасходнымОрдерам.Видимость = НЕ Объект.РСК_ВыдачаТСР;
	Элементы.ФормаПечатьТСР.Видимость = Объект.РСК_ВыдачаТСР;
	Элементы.ФормаПечатьКомплекта.Видимость = Не Объект.РСК_ВыдачаТСР;

КонецПроцедуры // УстановитьВидимостьЭлементов()

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура РСК_ВыдачаТСРПосле(Команда)
	Объект.РСК_ВыдачаТСР = Истина;
	Модифицированность = Истина;
	УстановитьВидимостьЭлементов();
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура РСК_ТиповойФункционалПосле(Команда)
	Объект.РСК_ВыдачаТСР = Ложь;
	Модифицированность = Истина;
	УстановитьВидимостьЭлементов();
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
&После("ОбновитьИтоговыйВесОбъемЗаполненность")
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура РСК_ОбновитьИтоговыйВесОбъемЗаполненность(Форма)
	Форма.Элементы.ДекорацияВес1.Картинка = Форма.Элементы.ДекорацияВес.Картинка;
	Форма.Элементы.ДекорацияОбъем1.Картинка = Форма.Элементы.ДекорацияОбъем.Картинка;
    //++РС Консалт: Минаков А.С. Задача 21223
	Для Каждого СтрокаТч Из Форма.Объект.Маршрут Цикл
		НайденныеСтроки = Форма.Объект.Распоряжения.НайтиСтроки(Новый Структура("КлючСвязи", СтрокаТч.КлючСвязи));
		СостояниеНакладных = 0;
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			Если Не ЗначениеЗаполнено(НайденнаяСтрока.РСК_Накладная) Тогда
				СостояниеНакладных = 1;
				Прервать
			КонецЕсли
		КонецЦикла;
		СтрокаТч.СостоянияНакладных = СостояниеНакладных
	КонецЦикла
	//++РС Консалт: Минаков А.С. Задача 21223
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура ОбновитьТаблицыТСР()

	ТС = Новый Соответствие;
	ТС.Вставить(Элементы.тзАкты, РСК_Клиент.ПолучитьТекущуюСтроку(Элементы.тзАкты, "Акт"));
	ТС.Вставить(Элементы.ИтогиТГ, РСК_Клиент.ПолучитьТекущуюСтроку(Элементы.ИтогиТГ, "ТерГруппа"));
	ТС.Вставить(Элементы.ИтогиТСР, РСК_Клиент.ПолучитьТекущуюСтроку(Элементы.ИтогиТСР, "ТСР"));
	ОбновитьТаблицыТСРНаСервере();
	РСК_Клиент.УстановитьТекущуюСтроку(Элементы.тзАкты, тзАкты, ТС[Элементы.тзАкты]);
	РСК_Клиент.УстановитьТекущуюСтроку(Элементы.ИтогиТГ, ИтогиТГ, ТС[Элементы.ИтогиТГ]);
	РСК_Клиент.УстановитьТекущуюСтроку(Элементы.ИтогиТСР, ИтогиТСР, ТС[Элементы.ИтогиТСР]);

КонецПроцедуры // ОбновитьТаблицыТСР()

&НаСервере
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура ОбновитьТаблицыТСРНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст =
"ВЫБРАТЬ
|	ЗаданиеНаПеревозкуМаршрут.КлючСвязи КАК КлючСвязи,
|	ЗаданиеНаПеревозкуМаршрут.Доставлено КАК Доставлено,
|	ЗаданиеНаПеревозкуМаршрут.НомерСтроки КАК НомерСтроки
|ПОМЕСТИТЬ Маршрут
|ИЗ
|	&Маршрут КАК ЗаданиеНаПеревозкуМаршрут
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ЗаданиеНаПеревозкуРаспоряжения.КлючСвязи КАК КлючСвязи,
|	ЗаданиеНаПеревозкуРаспоряжения.Распоряжение КАК Распоряжение,
|	ЗаданиеНаПеревозкуРаспоряжения.НомерСтроки КАК НомерСтроки
|ПОМЕСТИТЬ Распоряжения
|ИЗ
|	&Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ЛОЖЬ КАК Выбран,
|	ПоручениеЭкспедитору.Пункт КАК Заявитель,
|	Партнеры.РСК_СНИЛС КАК СНИЛС,
|	ПОДСТРОКА(ЕСТЬNULL(КонтактыАдрес.Представление, """"), 1, 150) КАК Адрес,
|	ПОДСТРОКА(ЕСТЬNULL(КонтактыАдресРег.Представление, """"), 1, 150) КАК АдресРегистрации,
|	ПОДСТРОКА(ЕСТЬNULL(КонтактыТелефон.Представление, """"), 1, 150) КАК Телефон,
|	ПоручениеЭкспедитору.РСК_ТСР КАК ТСР,
|	ПоручениеЭкспедитору.РСК_Количество КАК Количество,
|	ПоручениеЭкспедитору.РСК_Цена КАК Цена,
|	ПоручениеЭкспедитору.РСК_Сумма КАК Сумма,
|	ПоручениеЭкспедитору.Комментарий КАК Комментарий,
|	ПоручениеЭкспедитору.РСК_НомерНаправления КАК НомерНаправления,
|	Распоряжения.Распоряжение КАК Акт,
|	ПоручениеЭкспедитору.ЗонаДоставки КАК Район,
|	Партнеры.ДатаРождения КАК ДатаРождения,
|	ПоручениеЭкспедитору.РСК_ДатаНаправления КАК ДатаНаправления,
|	ПоручениеЭкспедитору.РСК_НомерРеестра КАК НомерРеестра,
|	ПоручениеЭкспедитору.РСК_ДатаРеестра КАК ДатаРеестра,
|	ПоручениеЭкспедитору.РСК_СтатусАктаВыдачиТСР КАК СтатусАкта,
|	Маршрут.Доставлено КАК Доставлено,
|	ПоручениеЭкспедитору.РСК_Номенклатура КАК Номенклатура,
|	ПоручениеЭкспедитору.РСК_Характеристика КАК ХарактеристикаНоменклатуры,
|	ЕСТЬNULL(ПоручениеЭкспедиторуОснования.Основание, ЗНАЧЕНИЕ(Документ.ЗаказКлиента.ПустаяСсылка)) КАК Заказ,
|	ВЫРАЗИТЬ(ЕСТЬNULL(ДопРеквизитТребуетсяДоставка.Значение, ЛОЖЬ) КАК БУЛЕВО) КАК ТребуетсяДоставка,
|	Распоряжения.НомерСтроки КАК НомерСтроки
|ПОМЕСТИТЬ тзАкты
|ИЗ
|	Распоряжения КАК Распоряжения
|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоручениеЭкспедитору КАК ПоручениеЭкспедитору
|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Партнеры КАК Партнеры
|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партнеры.КонтактнаяИнформация КАК КонтактыАдресРег
|				ПО (КонтактыАдресРег.Вид.ИдентификаторДляФормул = ""АдресРегистрации"")
|					И Партнеры.Ссылка = КонтактыАдресРег.Ссылка
|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партнеры.КонтактнаяИнформация КАК КонтактыТелефон
|				ПО Партнеры.Ссылка = КонтактыТелефон.Ссылка
|					И (КонтактыТелефон.ВидДляСписка = &ВидТелефон)
|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партнеры.ДополнительныеРеквизиты КАК ДопРеквизитТребуетсяДоставка
|				ПО Партнеры.Ссылка = ДопРеквизитТребуетсяДоставка.Ссылка
|					И (ДопРеквизитТребуетсяДоставка.Свойство.Имя = ""ТребуетсяДоставка"")
|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партнеры.КонтактнаяИнформация КАК КонтактыАдрес
|				ПО Партнеры.Ссылка = КонтактыАдрес.Ссылка
|					И (КонтактыАдрес.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресПартнера))
|			ПО ПоручениеЭкспедитору.Пункт = Партнеры.Ссылка
|		ПО Распоряжения.Распоряжение = ПоручениеЭкспедитору.Ссылка
|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Маршрут КАК Маршрут
|		ПО Распоряжения.КлючСвязи = Маршрут.КлючСвязи
|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоручениеЭкспедитору.Основания КАК ПоручениеЭкспедиторуОснования
|		ПО Распоряжения.Распоряжение = ПоручениеЭкспедиторуОснования.Ссылка
|			И (ПоручениеЭкспедиторуОснования.НомерСтроки = 1)
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	тзАкты.ТСР КАК ТСР,
|	СУММА(тзАкты.Количество) КАК ВсегоПоВедомости,
|	СУММА(ВЫБОР
|			КОГДА тзАкты.Доставлено
|				ТОГДА тзАкты.Количество
|			ИНАЧЕ 0
|		КОНЕЦ) КАК ЗакрытоАктов,
|	СУММА(ВЫБОР
|			КОГДА тзАкты.Доставлено
|				ТОГДА 0
|			ИНАЧЕ тзАкты.Количество
|		КОНЕЦ) КАК ОсталосьУВодителя
|ИЗ
|	тзАкты КАК тзАкты
|
|СГРУППИРОВАТЬ ПО
|	тзАкты.ТСР
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	тзАкты.ТСР КАК ТСР,
|	тзАкты.Район КАК Район,
|	СУММА(тзАкты.Количество) КАК Количество
|ИЗ
|	тзАкты КАК тзАкты
|
|СГРУППИРОВАТЬ ПО
|	тзАкты.ТСР,
|	тзАкты.Район
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	тзАкты.Район КАК ТерГруппа,
|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ тзАкты.Акт) КАК КвоАктов,
|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ тзАкты.Заявитель) КАК КвоПолучателей
|ИЗ
|	тзАкты КАК тзАкты
|
|СГРУППИРОВАТЬ ПО
|	тзАкты.Район
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	тзАкты.Выбран КАК Выбран,
|	тзАкты.Заявитель КАК Заявитель,
|	тзАкты.СНИЛС КАК СНИЛС,
|	тзАкты.АдресРегистрации КАК АдресРегистрации,
|	тзАкты.Телефон КАК Телефон,
|	тзАкты.ТСР КАК ТСР,
|	тзАкты.Количество КАК Количество,
|	тзАкты.Цена КАК Цена,
|	тзАкты.Сумма КАК Сумма,
|	тзАкты.Комментарий КАК Комментарий,
|	тзАкты.НомерНаправления КАК НомерНаправления,
|	тзАкты.Акт КАК Акт,
|	тзАкты.Район КАК РайонСтарый,
|	тзАкты.ДатаРождения КАК ДатаРождения,
|	тзАкты.ДатаНаправления КАК ДатаНаправления,
|	тзАкты.НомерРеестра КАК НомерРеестра,
|	тзАкты.ДатаРеестра КАК ДатаРеестра,
|	тзАкты.СтатусАкта КАК СтатусАкта,
|	тзАкты.Номенклатура КАК Номенклатура,
|	тзАкты.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
|	тзАкты.Заказ КАК Заказ,
|	тзАкты.Адрес КАК Адрес,
|	тзАкты.ТребуетсяДоставка КАК ТребуетсяДоставка,
|	тзАкты.НомерСтроки КАК НомерСтроки,
|	Партнеры.ЗонаДоставки КАК Район
|ИЗ
|	тзАкты КАК тзАкты
|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Партнеры КАК Партнеры
|		ПО тзАкты.Заявитель = Партнеры.Ссылка
|
|УПОРЯДОЧИТЬ ПО
|	НомерСтроки
|";
	
	Запрос.УстановитьПараметр("Маршрут", Объект.Маршрут.Выгрузить());
	Запрос.УстановитьПараметр("Распоряжения", Объект.Распоряжения.Выгрузить());
	Запрос.УстановитьПараметр("ВидТелефон", Справочники.ВидыКонтактнойИнформации.ТелефонПартнера);
	Результаты = Запрос.ВыполнитьПакет();
	
	
	//++ РС Консалт: Трофимов Евгений 10.11.2022 Задача 21816
	//e1cib/data/Документ.Задание?ref=9f11a34a1251b6544d61e4eef67f6388
	//тзАкты.Загрузить(Результаты[6].Выгрузить());
	тзАкты.Очистить();
	Выборка = Результаты[6].Выбрать();
	Пока Выборка.Следующий() Цикл
		НС = тзАкты.Добавить();
		ЗаполнитьЗначенияСвойств(НС, Выборка);
		Если Выборка.Район <> Выборка.РайонСтарый Тогда
			оАкт = Выборка.Акт.ПолучитьОбъект();
			оАкт.ЗонаДоставки = Выборка.Район;
			Попытка
				оАкт.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
				//ОбщегоНазначения.СообщитьПользователю(
				//	"В документе "+Выборка.Акт+" изменена зона доставки. Старая зона доставки: "+Выборка.РайонСтарый,
				//	Выборка.Акт,
				//	"ЗонаДоставки1"
				//);
			Исключение
				ОбщегоНазначения.СообщитьПользователю(
					"Не удалось записать "+Выборка.Акт+". У получателя ТСР изменилась зона доставки. Пожалуйста, выполните корректировку Акта вручную.",
					Выборка.Акт,
					"ЗонаДоставки1"
				);
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	//-- КонецЗадачи 21816	
	
	ИтогиТГ.Загрузить(Результаты[5].Выгрузить());	
	ИтогиТСР.Загрузить(Результаты[3].Выгрузить());	
	
	//Дополнительные колонки зон доставки
	МассивНужныхКолонок = ИтогиТГ.Выгрузить().ВыгрузитьКолонку("ТерГруппа");
	Для ИндексНужнойКолонки = 0 По МассивНужныхКолонок.Количество() - 1 Цикл
		МассивНужныхКолонок[ИндексНужнойКолонки] = УбратьНедопустимыеСимволы(МассивНужныхКолонок[ИндексНужнойКолонки]);
	КонецЦикла;
	МассивНужныхКолонок = ОбщегоНазначенияКлиентСервер.СвернутьМассив(МассивНужныхКолонок);
	МассивНужныхКолонок.Добавить("ТСР");
	МассивНужныхКолонок.Добавить("ВсегоПоВедомости");
	МассивНужныхКолонок.Добавить("ОсталосьУВодителя");
	МассивНужныхКолонок.Добавить("ЗакрытоАктов");
	
	МассивСуществующихРеквизитов = ПолучитьРеквизиты("ИтогиТСР");
	ДобавляемыеРквизиты = Новый Массив;
	УдаляемыеРеквизиты = Новый Массив;
	Для Каждого СуществующийРеквизит Из МассивСуществующихРеквизитов Цикл
		ИндексНужнойКолонки = МассивНужныхКолонок.Найти(СуществующийРеквизит.Имя);
		Если ИндексНужнойКолонки = Неопределено Тогда
			Элементы.Удалить(Элементы["ИтогиТСР" + СуществующийРеквизит.Имя]);
			//УдаляемыеРеквизиты.Добавить(СуществующийРеквизит);     //так не работает. Жалуется на путь
			УдаляемыеРеквизиты.Добавить("ИтогиТСР." + СуществующийРеквизит.Имя);
		Иначе
			МассивНужныхКолонок.Удалить(ИндексНужнойКолонки);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ИмяНужнойКолонки Из МассивНужныхКолонок Цикл
		ДобавляемыеРквизиты.Добавить(Новый РеквизитФормы(ИмяНужнойКолонки, ОбщегоНазначения.ОписаниеТипаЧисло(10),"ИтогиТСР",ИмяНужнойКолонки));
	КонецЦикла;
	
	ИзменитьРеквизиты(ДобавляемыеРквизиты, УдаляемыеРеквизиты);
	Для Каждого ДобавляемыйРеквизит Из ДобавляемыеРквизиты Цикл
		НоваяКолонка = Элементы.Добавить("ИтогиТСР"+ДобавляемыйРеквизит.Имя, Тип("ПолеФормы"), Элементы.ИтогиТСР);
		НоваяКолонка.Заголовок = ДобавляемыйРеквизит.Имя; 
		НоваяКолонка.ПутьКДанным = "ИтогиТСР."+ДобавляемыйРеквизит.Имя; 
		НоваяКолонка.Вид = ВидПоляФормы.ПолеВвода;
	КонецЦикла;
	
	//Заполнение добавленных колонок
	тзТСРиРайоны = Результаты[4].Выгрузить();
	Для Каждого СтрокаТСР Из ИтогиТСР Цикл
		НайденныеСтроки = тзТСРиРайоны.НайтиСтроки(Новый Структура("ТСР",СтрокаТСР.ТСР));
		Для Каждого СтрокаРайона Из НайденныеСтроки Цикл
			СтрокаТСР[УбратьНедопустимыеСимволы(СтрокаРайона.Район)] = 
				СтрокаТСР[УбратьНедопустимыеСимволы(СтрокаРайона.Район)] + СтрокаРайона.Количество;
		КонецЦикла;
	КонецЦикла;
	
	ОбновитьИтоговыйВесОбъемЗаполненность(ЭтаФорма);
	ОбновитьСкладыПогрузки();
	
КонецПроцедуры // ОбновитьТаблицыТСР()

&НаКлиентеНаСервереБезКонтекста
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Функция УбратьНедопустимыеСимволы(Знач ИмяКолонки)

	НовоеИмяКолонки = СтрЗаменить(ИмяКолонки,".","");
	НовоеИмяКолонки = СтрЗаменить(НовоеИмяКолонки," ","");
	НовоеИмяКолонки = СтрЗаменить(НовоеИмяКолонки,"-","");
	НовоеИмяКолонки = СтрЗаменить(НовоеИмяКолонки,",","");
	Возврат НовоеИмяКолонки;

КонецФункции // УбратьНедопустимыеСимволы()

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура РСК_ИтогиТГПередНачаломДобавленияПосле(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресХраненияУжеВыбранных", ПолучитьАдресХраненияУжеВыбранных());
	ОткрытьФорму(
		"Документ.ЗаданиеНаПеревозку.Форма.РСК_ДобавлениеПоручений",
		ПараметрыФормы,
		ЭтаФорма,,,, 
		Новый ОписаниеОповещения("ДобавитьМассивПорученийЭкспедитору", ЭтаФорма), 
	);
КонецПроцедуры

&НаСервере
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Функция ПолучитьАдресХраненияУжеВыбранных()

	Возврат ПоместитьВоВременноеХранилище(
		Объект.Распоряжения.Выгрузить(,"Распоряжение").ВыгрузитьКолонку("Распоряжение"), 
		УникальныйИдентификатор
	);	

КонецФункции // ПолучитьАдресХраненияУжеВыбранных()

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура ДобавитьМассивПорученийЭкспедитору(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Массив") Тогда
		Возврат;
	КонецЕсли;
	ДобавитьМассивПорученийЭкспедиторуНаСервере(Результат);
	ОбновитьТаблицыТСР();
	
КонецПроцедуры

&НаСервере
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура ДобавитьМассивПорученийЭкспедиторуНаСервере(МассивПоручений)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПоручениеЭкспедитору.Ссылка КАК Распоряжение,
		|	МАКСИМУМ(ПоручениеЭкспедитору.Пункт) КАК ПолучательОтправитель,
		|	МАКСИМУМ(ПоручениеЭкспедитору.Склад) КАК Склад,
		|	МАКСИМУМ(ПОДСТРОКА(ЕСТЬNULL(ПартнерыКонтактнаяИнформация.Представление, """"), 1, 150)) КАК Адрес,
		|	МАКСИМУМ(ПоручениеЭкспедитору.ЗонаДоставки) КАК Зона,
		|	МАКСИМУМ(ЕСТЬNULL(ПоручениеЭкспедитору.РСК_Количество * ВЫБОР
		|				КОГДА спрНоменклатура.ВесИспользовать
		|					ТОГДА спрНоменклатура.ВесЧислитель / ВЫБОР
		|							КОГДА спрНоменклатура.ВесЗнаменатель = 0
		|								ТОГДА 1
		|							ИНАЧЕ спрНоменклатура.ВесЗнаменатель
		|						КОНЕЦ * спрНоменклатура.ВесЕдиницаИзмерения.Числитель / ВЫБОР
		|							КОГДА спрНоменклатура.ВесЕдиницаИзмерения.Знаменатель = 0
		|								ТОГДА 1
		|							ИНАЧЕ спрНоменклатура.ВесЕдиницаИзмерения.Знаменатель
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ, 0)) КАК ВесКГ,
		|	МАКСИМУМ(ЕСТЬNULL(ПоручениеЭкспедитору.РСК_Количество * ВЫБОР
		|				КОГДА спрНоменклатура.ОбъемИспользовать
		|					ТОГДА спрНоменклатура.ОбъемЧислитель / ВЫБОР
		|							КОГДА спрНоменклатура.ОбъемЗнаменатель = 0
		|								ТОГДА 1
		|							ИНАЧЕ спрНоменклатура.ОбъемЗнаменатель
		|						КОНЕЦ * спрНоменклатура.ОбъемЕдиницаИзмерения.Числитель / ВЫБОР
		|							КОГДА спрНоменклатура.ОбъемЕдиницаИзмерения.Знаменатель = 0
		|								ТОГДА 1
		|							ИНАЧЕ спрНоменклатура.ОбъемЕдиницаИзмерения.Знаменатель
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ, 0)) КАК ОбъемМ3
		|ИЗ
		|	Документ.ПоручениеЭкспедитору КАК ПоручениеЭкспедитору
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партнеры.КонтактнаяИнформация КАК ПартнерыКонтактнаяИнформация
		|		ПО ПоручениеЭкспедитору.Пункт = ПартнерыКонтактнаяИнформация.Ссылка
		|			И (ПартнерыКонтактнаяИнформация.Тип = &ТипАдрес)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК спрНоменклатура
		|		ПО ПоручениеЭкспедитору.РСК_Номенклатура = спрНоменклатура.Ссылка
		|ГДЕ
		|	ПоручениеЭкспедитору.Ссылка В(&МассивПоручений)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоручениеЭкспедитору.Ссылка
		|";
	Запрос.УстановитьПараметр("ТипАдрес", Перечисления.ТипыКонтактнойИнформации.Адрес);
	Запрос.УстановитьПараметр("ВидАдрес", Справочники.ВидыКонтактнойИнформации.АдресПартнера);
	Запрос.УстановитьПараметр("МассивПоручений", МассивПоручений);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		КлючСвязи = Строка(Новый УникальныйИдентификатор());
		
		НовСтр = Объект.Маршрут.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Выборка);
		//НовСтр.Адрес = "397633, 397633, Воронежская обл, Калачеевский р-н, Черноземный п, Мира ул, д. 9";
		//НовСтр.Зона = Справочники.ЗоныДоставки.НайтиПоНаименованию("Калачеевский", Истина);
		НовСтр.ВремяС = Объект.ДатаВремяРейсаПланС;
		НовСтр.ВремяПо = Объект.ДатаВремяРейсаПланПо;
		НовСтр.КлючСвязи = КлючСвязи;

		НовСтр = Объект.Распоряжения.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Выборка);
		НовСтр.КлючСвязи = КлючСвязи;
		//НовСтр.Распоряжение = Документы.ПоручениеЭкспедитору.НайтиПоНомеру("16967343", '20220526');
		//НовСтр.ПолучательОтправитель = Справочники.Партнеры.НайтиПоНаименованию("Александрова Пелагея Петровна", Истина);
		//НовСтр.Склад = Справочники.Склады.НайтиПоНаименованию("Основной склад", Истина);
		НовСтр.ДоставляетсяПолностью = Истина;
		
	КонецЦикла;
	
	Модифицированность = Истина;

КонецПроцедуры // ДобавитьМассивПорученийЭкспедиторуНаСервере()

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура РСК_ИтогиТГПередУдалениемПосле(Элемент, Отказ)
	Отказ = Истина;
	ПоказатьВопрос(
		Новый ОписаниеОповещения("ПослеВопросаОбУдаленииРайона", ЭтаФорма), 
		"Удалить выделенные районы?",
		РежимДиалогаВопрос.ДаНет
	);
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура ПослеВопросаОбУдаленииРайона(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрок = Элементы.ИтогиТГ.ВыделенныеСтроки;
	Если МассивСтрок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МассивЗонДоставки = Новый Массив;
	Для Каждого ИдентификаторСтроки Из МассивСтрок Цикл
		МассивЗонДоставки.Добавить(Элементы.ИтогиТГ.ДанныеСтроки(ИдентификаторСтроки).ТерГруппа);
	КонецЦикла;
	
	УдалитьЗоныДоставкиНаСервере(МассивЗонДоставки);
	
КонецПроцедуры

&НаСервере
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура УдалитьЗоныДоставкиНаСервере(МассивЗонДоставки)

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Маршрут.Адрес КАК Адрес,
		|	Маршрут.Зона КАК Зона,
		|	Маршрут.ВремяС КАК ВремяС,
		|	Маршрут.ВремяПо КАК ВремяПо,
		|	Маршрут.Вес КАК Вес,
		|	Маршрут.Объем КАК Объем,
		|	Маршрут.КлючСвязи КАК КлючСвязи,
		|	Маршрут.Доставлено КАК Доставлено,
		|	Маршрут.ДополнительнаяИнформация КАК ДополнительнаяИнформация,
		|	Маршрут.АдресЗначенияПолей КАК АдресЗначенияПолей,
		|	Маршрут.АдресЗначение КАК АдресЗначение
		|ПОМЕСТИТЬ Маршрут
		|ИЗ
		|	&Маршрут КАК Маршрут
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Распоряжения.КлючСвязи КАК КлючСвязи,
		|	Распоряжения.Распоряжение КАК Распоряжение,
		|	Распоряжения.Вес КАК Вес,
		|	Распоряжения.Объем КАК Объем,
		|	Распоряжения.Перевозчик КАК Перевозчик,
		|	Распоряжения.ПолучательОтправитель КАК ПолучательОтправитель,
		|	Распоряжения.ВремяС КАК ВремяС,
		|	Распоряжения.ВремяПо КАК ВремяПо,
		|	Распоряжения.ДополнительнаяИнформация КАК ДополнительнаяИнформация,
		|	Распоряжения.Доставлено КАК Доставлено,
		|	Распоряжения.Склад КАК Склад,
		|	Распоряжения.ДоставляетсяПолностью КАК ДоставляетсяПолностью
		|ПОМЕСТИТЬ Распоряжения
		|ИЗ
		|	&Распоряжения КАК Распоряжения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Маршрут.Адрес КАК Адрес,
		|	Маршрут.Зона КАК Зона,
		|	Маршрут.ВремяС КАК ВремяС,
		|	Маршрут.ВремяПо КАК ВремяПо,
		|	Маршрут.Вес КАК Вес,
		|	Маршрут.Объем КАК Объем,
		|	Маршрут.КлючСвязи КАК КлючСвязи,
		|	Маршрут.Доставлено КАК Доставлено,
		|	Маршрут.ДополнительнаяИнформация КАК ДополнительнаяИнформация,
		|	Маршрут.АдресЗначенияПолей КАК АдресЗначенияПолей,
		|	Маршрут.АдресЗначение КАК АдресЗначение
		|ПОМЕСТИТЬ НовыйМаршрут
		|ИЗ
		|	Маршрут КАК Маршрут
		|ГДЕ
		|	НЕ Маршрут.Зона В (&МассивЗонДоставки)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Распоряжения.КлючСвязи КАК КлючСвязи,
		|	Распоряжения.Распоряжение КАК Распоряжение,
		|	Распоряжения.Вес КАК Вес,
		|	Распоряжения.Объем КАК Объем,
		|	Распоряжения.Перевозчик КАК Перевозчик,
		|	Распоряжения.ПолучательОтправитель КАК ПолучательОтправитель,
		|	Распоряжения.ВремяС КАК ВремяС,
		|	Распоряжения.ВремяПо КАК ВремяПо,
		|	Распоряжения.ДополнительнаяИнформация КАК ДополнительнаяИнформация,
		|	Распоряжения.Доставлено КАК Доставлено,
		|	Распоряжения.Склад КАК Склад,
		|	Распоряжения.ДоставляетсяПолностью КАК ДоставляетсяПолностью
		|ПОМЕСТИТЬ НовыеРаспоряжения
		|ИЗ
		|	Распоряжения КАК Распоряжения
		|ГДЕ
		|	Распоряжения.КлючСвязи В
		|			(ВЫБРАТЬ
		|				НовыйМаршрут.КлючСвязи КАК КлючСвязи
		|			ИЗ
		|				НовыйМаршрут КАК НовыйМаршрут)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НовыйМаршрут.Адрес КАК Адрес,
		|	НовыйМаршрут.Зона КАК Зона,
		|	НовыйМаршрут.ВремяС КАК ВремяС,
		|	НовыйМаршрут.ВремяПо КАК ВремяПо,
		|	НовыйМаршрут.Вес КАК Вес,
		|	НовыйМаршрут.Объем КАК Объем,
		|	НовыйМаршрут.КлючСвязи КАК КлючСвязи,
		|	НовыйМаршрут.Доставлено КАК Доставлено,
		|	НовыйМаршрут.ДополнительнаяИнформация КАК ДополнительнаяИнформация,
		|	НовыйМаршрут.АдресЗначенияПолей КАК АдресЗначенияПолей,
		|	НовыйМаршрут.АдресЗначение КАК АдресЗначение
		|ИЗ
		|	НовыйМаршрут КАК НовыйМаршрут
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НовыеРаспоряжения.КлючСвязи КАК КлючСвязи,
		|	НовыеРаспоряжения.Распоряжение КАК Распоряжение,
		|	НовыеРаспоряжения.Вес КАК Вес,
		|	НовыеРаспоряжения.Объем КАК Объем,
		|	НовыеРаспоряжения.Перевозчик КАК Перевозчик,
		|	НовыеРаспоряжения.ПолучательОтправитель КАК ПолучательОтправитель,
		|	НовыеРаспоряжения.ВремяС КАК ВремяС,
		|	НовыеРаспоряжения.ВремяПо КАК ВремяПо,
		|	НовыеРаспоряжения.ДополнительнаяИнформация КАК ДополнительнаяИнформация,
		|	НовыеРаспоряжения.Доставлено КАК Доставлено,
		|	НовыеРаспоряжения.Склад КАК Склад,
		|	НовыеРаспоряжения.ДоставляетсяПолностью КАК ДоставляетсяПолностью
		|ИЗ
		|	НовыеРаспоряжения КАК НовыеРаспоряжения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Распоряжения.Распоряжение КАК УдаляемыеРаспоряжения
		|ИЗ
		|	Распоряжения КАК Распоряжения
		|		ЛЕВОЕ СОЕДИНЕНИЕ НовыеРаспоряжения КАК НовыеРаспоряжения
		|		ПО Распоряжения.Распоряжение = НовыеРаспоряжения.Распоряжение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоручениеЭкспедитору КАК ПоручениеЭкспедитору
		|		ПО Распоряжения.Распоряжение = ПоручениеЭкспедитору.Ссылка
		|ГДЕ
		|	НовыеРаспоряжения.Распоряжение ЕСТЬ NULL
		|	И ПоручениеЭкспедитору.РСК_СтатусАктаВыдачиТСР = ЗНАЧЕНИЕ(Перечисление.РСК_СтатусыАктовВыдачи.Отгружен)";
	
	Запрос.УстановитьПараметр("Маршрут", Объект.Маршрут.Выгрузить());
	Запрос.УстановитьПараметр("Распоряжения", Объект.Распоряжения.Выгрузить());
	Запрос.УстановитьПараметр("МассивЗонДоставки", МассивЗонДоставки);
	
	Результаты = Запрос.ВыполнитьПакет();
	Объект.Маршрут.Загрузить(Результаты[4].Выгрузить());
	Объект.Распоряжения.Загрузить(Результаты[5].Выгрузить());
	МассивУдаляемыхПоручений = Результаты[6].Выгрузить().ВыгрузитьКолонку("УдаляемыеРаспоряжения");
	Для Каждого ПоручениеЭкспедитору Из МассивУдаляемыхПоручений Цикл
		оПоручениеЭкспедитору = ПоручениеЭкспедитору.ПолучитьОбъект();
		оПоручениеЭкспедитору.РСК_СтатусАктаВыдачиТСР = Перечисления.РСК_СтатусыАктовВыдачи.Подготовлен;
		оПоручениеЭкспедитору.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
	
	ОбновитьТаблицыТСРНаСервере();
	ОбновитьИтоговыйВесОбъемЗаполненность(ЭтаФорма);
	ОбновитьСкладыПогрузки();
	Модифицированность = Истина;

КонецПроцедуры // УдалитьЗоныДоставкиНаСервере()

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура РСК_ИтогиТСРВыборПосле(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеСтроки = Элемент.ДанныеСтроки(ВыбраннаяСтрока);
	ИмяПоля = Сред(Поле.Имя, СтрДлина(Элемент.Имя)+1);
	ПоказатьЗначение(, ДанныеСтроки[ИмяПоля]);
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура РСК_УдалитьТСРПосле(Команда)
	ПоказатьВопрос(
		Новый ОписаниеОповещения("ПослеВопросаОбУдаленииТСР", ЭтаФорма), 
		"Удалить выделенные ТСР?",
		РежимДиалогаВопрос.ДаНет
	);
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура ПослеВопросаОбУдаленииТСР(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрок = Элементы.ИтогиТСР.ВыделенныеСтроки;
	Если МассивСтрок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МассивТСР = Новый Массив;
	Для Каждого ИдентификаторСтроки Из МассивСтрок Цикл
		МассивТСР.Добавить(Элементы.ИтогиТСР.ДанныеСтроки(ИдентификаторСтроки).ТСР);
	КонецЦикла;
	
	УдалитьТСРНаСервере(МассивТСР);
	
КонецПроцедуры

&НаСервере
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура УдалитьТСРНаСервере(МассивТСР)

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Маршрут.Адрес КАК Адрес,
		|	Маршрут.Зона КАК Зона,
		|	Маршрут.ВремяС КАК ВремяС,
		|	Маршрут.ВремяПо КАК ВремяПо,
		|	Маршрут.Вес КАК Вес,
		|	Маршрут.Объем КАК Объем,
		|	Маршрут.КлючСвязи КАК КлючСвязи,
		|	Маршрут.Доставлено КАК Доставлено,
		|	Маршрут.ДополнительнаяИнформация КАК ДополнительнаяИнформация,
		|	Маршрут.АдресЗначенияПолей КАК АдресЗначенияПолей,
		|	Маршрут.АдресЗначение КАК АдресЗначение
		|ПОМЕСТИТЬ Маршрут
		|ИЗ
		|	&Маршрут КАК Маршрут
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Распоряжения.КлючСвязи КАК КлючСвязи,
		|	Распоряжения.Распоряжение КАК Распоряжение,
		|	Распоряжения.Вес КАК Вес,
		|	Распоряжения.Объем КАК Объем,
		|	Распоряжения.Перевозчик КАК Перевозчик,
		|	Распоряжения.ПолучательОтправитель КАК ПолучательОтправитель,
		|	Распоряжения.ВремяС КАК ВремяС,
		|	Распоряжения.ВремяПо КАК ВремяПо,
		|	Распоряжения.ДополнительнаяИнформация КАК ДополнительнаяИнформация,
		|	Распоряжения.Доставлено КАК Доставлено,
		|	Распоряжения.Склад КАК Склад,
		|	Распоряжения.ДоставляетсяПолностью КАК ДоставляетсяПолностью
		|ПОМЕСТИТЬ Распоряжения
		|ИЗ
		|	&Распоряжения КАК Распоряжения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Распоряжения.КлючСвязи КАК КлючСвязи,
		|	Распоряжения.Распоряжение КАК Распоряжение,
		|	Распоряжения.Вес КАК Вес,
		|	Распоряжения.Объем КАК Объем,
		|	Распоряжения.Перевозчик КАК Перевозчик,
		|	Распоряжения.ПолучательОтправитель КАК ПолучательОтправитель,
		|	Распоряжения.ВремяС КАК ВремяС,
		|	Распоряжения.ВремяПо КАК ВремяПо,
		|	Распоряжения.ДополнительнаяИнформация КАК ДополнительнаяИнформация,
		|	Распоряжения.Доставлено КАК Доставлено,
		|	Распоряжения.Склад КАК Склад,
		|	Распоряжения.ДоставляетсяПолностью КАК ДоставляетсяПолностью
		|ПОМЕСТИТЬ НовыеРаспоряжения
		|ИЗ
		|	Распоряжения КАК Распоряжения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоручениеЭкспедитору КАК ПоручениеЭкспедитору
		|		ПО Распоряжения.Распоряжение = ПоручениеЭкспедитору.Ссылка
		|ГДЕ
		|	НЕ ПоручениеЭкспедитору.РСК_ТСР В (&МассивТСР)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Маршрут.Адрес КАК Адрес,
		|	Маршрут.Зона КАК Зона,
		|	Маршрут.ВремяС КАК ВремяС,
		|	Маршрут.ВремяПо КАК ВремяПо,
		|	Маршрут.Вес КАК Вес,
		|	Маршрут.Объем КАК Объем,
		|	Маршрут.КлючСвязи КАК КлючСвязи,
		|	Маршрут.Доставлено КАК Доставлено,
		|	Маршрут.ДополнительнаяИнформация КАК ДополнительнаяИнформация,
		|	Маршрут.АдресЗначенияПолей КАК АдресЗначенияПолей,
		|	Маршрут.АдресЗначение КАК АдресЗначение
		|ИЗ
		|	Маршрут КАК Маршрут
		|ГДЕ
		|	Маршрут.КлючСвязи В
		|			(ВЫБРАТЬ
		|				НовыеРаспоряжения.КлючСвязи КАК КлючСвязи
		|			ИЗ
		|				НовыеРаспоряжения КАК НовыеРаспоряжения)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НовыеРаспоряжения.КлючСвязи КАК КлючСвязи,
		|	НовыеРаспоряжения.Распоряжение КАК Распоряжение,
		|	НовыеРаспоряжения.Вес КАК Вес,
		|	НовыеРаспоряжения.Объем КАК Объем,
		|	НовыеРаспоряжения.Перевозчик КАК Перевозчик,
		|	НовыеРаспоряжения.ПолучательОтправитель КАК ПолучательОтправитель,
		|	НовыеРаспоряжения.ВремяС КАК ВремяС,
		|	НовыеРаспоряжения.ВремяПо КАК ВремяПо,
		|	НовыеРаспоряжения.ДополнительнаяИнформация КАК ДополнительнаяИнформация,
		|	НовыеРаспоряжения.Доставлено КАК Доставлено,
		|	НовыеРаспоряжения.Склад КАК Склад,
		|	НовыеРаспоряжения.ДоставляетсяПолностью КАК ДоставляетсяПолностью
		|ИЗ
		|	НовыеРаспоряжения КАК НовыеРаспоряжения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Распоряжения.Распоряжение КАК Распоряжение
		|ИЗ
		|	Распоряжения КАК Распоряжения
		|		ЛЕВОЕ СОЕДИНЕНИЕ НовыеРаспоряжения КАК НовыеРаспоряжения
		|		ПО Распоряжения.Распоряжение = НовыеРаспоряжения.Распоряжение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоручениеЭкспедитору КАК ПоручениеЭкспедитору
		|		ПО Распоряжения.Распоряжение = ПоручениеЭкспедитору.Ссылка
		|ГДЕ
		|	НовыеРаспоряжения.Распоряжение ЕСТЬ NULL
		|	И ПоручениеЭкспедитору.РСК_СтатусАктаВыдачиТСР = ЗНАЧЕНИЕ(Перечисление.РСК_СтатусыАктовВыдачи.Отгружен)
		|";
	Запрос.УстановитьПараметр("Маршрут", Объект.Маршрут.Выгрузить());
	Запрос.УстановитьПараметр("Распоряжения", Объект.Распоряжения.Выгрузить());
	Запрос.УстановитьПараметр("МассивТСР", МассивТСР);
	
	Результаты = Запрос.ВыполнитьПакет();
	Объект.Маршрут.Загрузить(Результаты[3].Выгрузить());
	Объект.Распоряжения.Загрузить(Результаты[4].Выгрузить());
	МассивУдаляемыхПоручений = Результаты[5].Выгрузить().ВыгрузитьКолонку("Распоряжение");
	Для Каждого ПоручениеЭкспедитору Из МассивУдаляемыхПоручений Цикл
		оПоручениеЭкспедитору = ПоручениеЭкспедитору.ПолучитьОбъект();
		оПоручениеЭкспедитору.РСК_СтатусАктаВыдачиТСР = Перечисления.РСК_СтатусыАктовВыдачи.Подготовлен;
		оПоручениеЭкспедитору.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
	
	ОбновитьТаблицыТСРНаСервере();
	ОбновитьИтоговыйВесОбъемЗаполненность(ЭтаФорма);
	ОбновитьСкладыПогрузки();
	Модифицированность = Истина;

КонецПроцедуры // УдалитьТСРНаСервере()

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура РСК_тзАктыПередНачаломДобавленияПосле(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
	//ДопПараметры = Новый Структура;
	//ДопПараметры.Вставить("АдресХраненияУжеВыбранных", ПолучитьАдресХраненияУжеВыбранных());
	
	НастройкиКомпоновки = Новый НастройкиКомпоновкиДанных;
	
	ЭлементОтбора = НастройкиКомпоновки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("РСК_ЭтоПолучательТСР");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Истина;
	
	ЭлементОтбора = НастройкиКомпоновки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("РСК_СтатусПолучателяТСР");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке;
	СписокИсключений = Новый СписокЗначений;
	СписокИсключений.Добавить(ПредопределенноеЗначение("Перечисление.РСК_СтатусыПолучателяТСР.Выбыл"));
	СписокИсключений.Добавить(ПредопределенноеЗначение("Перечисление.РСК_СтатусыПолучателяТСР.Умер"));
	ЭлементОтбора.ПравоеЗначение = СписокИсключений;
	
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФиксированныеНастройки", НастройкиКомпоновки);
	ПараметрыФормы.Вставить("МножественныйВыбор", Истина);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	
	
	ФормаВыбора = ПолучитьФорму(
		"Справочник.Партнеры.ФормаВыбора",
		ПараметрыФормы,
		ЭтаФорма		
	);
	ФормаВыбора.Элементы.Список.Отображение = ОтображениеТаблицы.Список; 
	ФормаВыбора.Открыть();
	
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура РСК_ОбработкаВыбораПосле(ВыбранноеЗначение, ИсточникВыбора)
	Если ТипЗнч(ИсточникВыбора) = Тип("ФормаКлиентскогоПриложения") Тогда
		Если ИсточникВыбора.ИмяФормы = "Справочник.Партнеры.Форма.ФормаВыбораБезПолнотекстовогоПоиска" Тогда
			Если ВыбранноеЗначение = Неопределено Тогда
				Возврат;
			КонецЕсли;
			
			ДобавлениеПорученийЭкспедиторуПоЗаявителям(ВыбранноеЗначение);
			ОбновитьТаблицыТСР();
		ИначеЕсли ИсточникВыбора.ИмяФормы = "Документ.ПоручениеЭкспедитору.Форма.РСК_ФормаПодбораАктовВыдачиТСР" Тогда
			РанееДобавленные = Объект.Распоряжения.НайтиСтроки(Новый Структура("Распоряжение",ВыбранноеЗначение));
			Если РанееДобавленные.Количество() > 0 Тогда
				ПоказатьОповещениеПользователя(
					"Ранее уже был добавлен",
					ПолучитьНавигационнуюСсылку(ВыбранноеЗначение),
					"" + ВыбранноеЗначение
				);
				Возврат;
			КонецЕсли;
			ДобавитьМассивПорученийЭкспедиторуНаСервере(ВыбранноеЗначение);
			ПоказатьОповещениеПользователя(
				"Помещён в ведомость",
				ПолучитьНавигационнуюСсылку(ВыбранноеЗначение),
				"" + ВыбранноеЗначение
			);
			ОбновитьТаблицыТСР();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура ДобавлениеПорученийЭкспедиторуПоЗаявителям(МассивЗаявителей)

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	УжеВыбранные.Распоряжение КАК Распоряжение
		|ПОМЕСТИТЬ УжеВыбранные
		|ИЗ
		|	&УжеВыбранные КАК УжеВыбранные
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаданиеНаПеревозкуРаспоряжения.Распоряжение КАК Распоряжение
		|ПОМЕСТИТЬ ИспользованныеРаспоряжения
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|ГДЕ
		|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка.РСК_ВыдачаТСР
		|	И НЕ ЗаданиеНаПеревозкуРаспоряжения.Ссылка.ПометкаУдаления
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УжеВыбранные.Распоряжение
		|ИЗ
		|	УжеВыбранные КАК УжеВыбранные
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПоручениеЭкспедитору.Ссылка КАК ПоручениеЭкспедитору
		|ИЗ
		|	Документ.ПоручениеЭкспедитору КАК ПоручениеЭкспедитору
		|		ЛЕВОЕ СОЕДИНЕНИЕ ИспользованныеРаспоряжения КАК ИспользованныеРаспоряжения
		|		ПО ПоручениеЭкспедитору.Ссылка = ИспользованныеРаспоряжения.Распоряжение
		|ГДЕ
		|	ПоручениеЭкспедитору.РСК_АктВыдачиТСР
		|	И НЕ ПоручениеЭкспедитору.ПометкаУдаления
		|	И ИспользованныеРаспоряжения.Распоряжение ЕСТЬ NULL
		|	И ПоручениеЭкспедитору.РСК_СтатусАктаВыдачиТСР В(&МассивСтатусыАктовВыдачи)
		|	И ПоручениеЭкспедитору.Пункт В(&МассивЗаявителей)
		|";
	
	Запрос.УстановитьПараметр("УжеВыбранные", Объект.Распоряжения.Выгрузить(,"Распоряжение"));
	МассивСтатусыАктовВыдачи = Новый Массив;
	МассивСтатусыАктовВыдачи.Добавить(Перечисления.РСК_СтатусыАктовВыдачи.Создан);
	МассивСтатусыАктовВыдачи.Добавить(Перечисления.РСК_СтатусыАктовВыдачи.Подготовлен);
	МассивСтатусыАктовВыдачи.Добавить(Перечисления.РСК_СтатусыАктовВыдачи.ТребуетсяЗамена);
	Запрос.УстановитьПараметр("МассивСтатусыАктовВыдачи", МассивСтатусыАктовВыдачи);
	Запрос.УстановитьПараметр("МассивЗаявителей", МассивЗаявителей);
	
	МассивПоручений = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ПоручениеЭкспедитору");
	ДобавитьМассивПорученийЭкспедиторуНаСервере(МассивПоручений);

КонецПроцедуры // ДобавлениеПорученийЭкспедиторуПоЗаявителям()

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура РСК_ЗакрытьВыбранныеПорученияПосле(Команда)
	
	Если Объект.Склад = ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка") Тогда	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Укажите склад выдачи!",,"Склад1","Объект.Склад");
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ПослеВопросаОЗакрытииАктов",
      ЭтотОбъект);	
 
    ПоказатьВопрос(Оповещение,
        "Закрыть выбранные акты?",
        РежимДиалогаВопрос.ДаНет,
        0, // таймаут в секундах
        КодВозвратаДиалога.Да, // (необ.) кнопка по умолчанию
        "Закрытие актов" // (необ.) заголовок
    );    
	
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура ПослеВопросаОЗакрытииАктов (Результат, Параметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ДатаЗакрытия = ТекущаяДата();
	Подсказка = "Введите дату которой необходимо закрыть акты";
	
	Если Объект.РСК_ДатаЗакрытияАктов = '00010101000000' Тогда
		
		Оповещение = Новый ОписаниеОповещения("ПослеВводаДаты", ЭтотОбъект);	
		
		ПоказатьВводДаты(
		Оповещение,
		, // пропускаем начальное значение даты
		"Введите дату закрытия", 
		ЧастиДаты.Дата
		);    
	Иначе
		ЗакрытьВыбранныеАктыНаСервере();
		ОбновитьТаблицыТСР();		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура ПослеВводаДаты(Результат,Параметры)Экспорт
	Если Результат = Неопределено Тогда
		ПоказатьПредупреждение(,"Необходимо ввести дату закрытия!");
		Отказ = Истина;
		Возврат;
	Иначе
		Если (Результат > ТекущаяДата()+60*60*24*20) ИЛИ( Результат < ТекущаяДата()-60*60*24*20) Тогда
			Отказ = Истина;
			ПоказатьПредупреждение(,"Вводимая дата должна быть в пределах (+\-) 20 дней от текущей даты!");
			Возврат;
		Иначе
			Объект.РСК_ДатаЗакрытияАктов = Результат;
			ЗакрытьВыбранныеАктыНаСервере();
			ОбновитьТаблицыТСР();
		КонецЕсли
	КонецЕсли;
КонецПроцедуры

&НаСервере
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура ЗакрытьВыбранныеАктыНаСервере()
	НачатьТранзакцию();
	ЗакрываемыеПоручения = тзАкты.НайтиСтроки(Новый Структура("Выбран", Истина));
	Для Каждого Строка ИЗ ЗакрываемыеПоручения Цикл
		АктОбъект = Строка.Акт.ПолучитьОбъект();
		АктОбъект.ДатаВыполнения = Объект.РСК_ДатаЗакрытияАктов;
		АктОбъект.Склад = Объект.Склад;
		АктОбъект.РСК_СтатусАктаВыдачиТСР = Перечисления.РСК_СтатусыАктовВыдачи.Выдан;
		Попытка		
			АктОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			ОтменитьТранзакцию();
			ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки(), Строка.Акт);
			Возврат;
		КонецПопытки;
		Распоряжения = Объект.Распоряжения.НайтиСтроки(Новый Структура("Распоряжение",Строка.Акт));
		Для Каждого Распоряжение Из Распоряжения Цикл
			Распоряжение.Доставлено = Истина;
			Распоряжение.Склад = Объект.Склад;
			Точки = Объект.Маршрут.НайтиСтроки(Новый Структура("КлючСвязи", Распоряжение.КлючСвязи));
			Для Каждого Точка Из Точки Цикл
				Точка.Доставлено = Истина;
				Точка.ВремяПо = Макс(Точка.ВремяС, Объект.РСК_ДатаЗакрытияАктов);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	Записать();
	Модифицированность = Ложь;
	ЗафиксироватьТранзакцию();
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура РСК_УстановитьФлажкиПосле(Команда)
	Для Каждого Стр Из тзАкты Цикл
		Стр.Выбран = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура РСК_СнятьФлажкиПосле(Команда)
	Для Каждого Стр Из тзАкты Цикл
		Стр.Выбран = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура РСК_ВыбратьВсеНеобработанныеПосле(Команда)
	Для Каждого Стр Из тзАкты Цикл
		Если Стр.СтатусАкта = ПредопределенноеЗначение("Перечисление.РСК_СтатусыАктовВыдачи.Аннулирован") 
			ИЛИ Стр.СтатусАкта = ПредопределенноеЗначение("Перечисление.РСК_СтатусыАктовВыдачи.Выдан") 
			ИЛИ Стр.СтатусАкта = ПредопределенноеЗначение("Перечисление.РСК_СтатусыАктовВыдачи.ВОтчете") Тогда
			Стр.Выбран = Ложь;
		Иначе
			Стр.Выбран = Истина;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура РСК_тзАктыПередУдалениемПосле(Элемент, Отказ)
	Отказ = Истина;
	ПоказатьВопрос(
		Новый ОписаниеОповещения("ПослеВопросаОбУдаленииПоручений", ЭтаФорма), 
		СтрШаблон(
			"Вы уверены что хотите удалить все %1 поручения?",
			?(ЕстьВыбранныеСтрочки(),"выбранные","выделенные")
		), 
		РежимДиалогаВопрос.ДаНет
	);
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура ПослеВопросаОбУдаленииПоручений(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	МассивУдаляемыхПоручений = Новый Массив;
	Если ЕстьВыбранныеСтрочки() Тогда
		Выбранные = тзАкты.НайтиСтроки(Новый Структура("Выбран", Истина));
		Для Каждого Стр Из Выбранные Цикл
			МассивУдаляемыхПоручений.Добавить(Стр.Акт);
		КонецЦикла;
	Иначе
		Для Каждого ИдентификаторСтроки Из Элементы.тзАкты.ВыделенныеСтроки Цикл
			МассивУдаляемыхПоручений.Добавить(Элементы.тзАкты.ДанныеСтроки(ИдентификаторСтроки).Акт);
		КонецЦикла;
	КонецЕсли;
	
	ИсключитьПорученияИзЗаказа(МассивУдаляемыхПоручений);
	ОбновитьТаблицыТСР();

КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Функция ЕстьВыбранныеСтрочки()
	СтруктураДляПоиска = Новый Структура("Выбран", Истина);  
	МассивПустыхСтрок =  тзАкты.НайтиСтроки(СтруктураДляПоиска); 
	Возврат МассивПустыхСтрок.Количество() > 0; 
КонецФункции

&НаСервере
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура УстановитьСтатусПорученияВПодготовлен(ПоручениеЭкспедитору)
	
	ТекущийСтатус = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПоручениеЭкспедитору, "РСК_СтатусАктаВыдачиТСР");
    Если ТекущийСтатус = Перечисления.РСК_СтатусыАктовВыдачи.Отгружен Тогда
		оПоручениеЭкспедитору = ПоручениеЭкспедитору.ПолучитьОбъект();
		оПоручениеЭкспедитору.РСК_СтатусАктаВыдачиТСР = Перечисления.РСК_СтатусыАктовВыдачи.Подготовлен;
		оПоручениеЭкспедитору.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;

КонецПроцедуры

&НаСервере
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура ИсключитьПорученияИзЗаказа(МассивУдаляемыхПоручений)
	Модифицированность = Истина;
	Для Каждого ПоручениеЭкспедитору Из МассивУдаляемыхПоручений Цикл
		УстановитьСтатусПорученияВПодготовлен(ПоручениеЭкспедитору);
		Распоряжения = Объект.Распоряжения.НайтиСтроки(Новый Структура("Распоряжение", ПоручениеЭкспедитору));
		Для Каждого Распоряжение Из Распоряжения Цикл
			Точки = Объект.Маршрут.НайтиСтроки(Новый Структура("КлючСвязи", Распоряжение.КлючСвязи)); 
			Для Каждого Точка Из Точки Цикл
				Объект.Маршрут.Удалить(Точка);
			КонецЦикла;
			Объект.Распоряжения.Удалить(Распоряжение);
		КонецЦикла;
	КонецЦикла;	
КонецПроцедуры // ИсключитьПорученияИзЗаказа()

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура РСК_тзАктыВыборПосле(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	РедактируемыеПоля = Новый Массив;
	РедактируемыеПоля.Добавить("Номенклатура");
	РедактируемыеПоля.Добавить("Комментарий");

	ИмяПоля = Сред(Поле.Имя, СтрДлина(Элемент.Имя)+1);
	ДанныеСтроки = Элемент.ДанныеСтроки(ВыбраннаяСтрока);
	
	Если РедактируемыеПоля.Найти(ИмяПоля) <> Неопределено Тогда
		
		//++ РС Консалт: Трофимов Евгений 26.10.2022 Задача 21384
		//e1cib/data/Документ.Задание?ref=b0773e366ad07a244bbad1a0c7a3ebaa
		Если ИмяПоля = "Номенклатура" Тогда
			СтандартнаяОбработка = Ложь;
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("ЗаказКлиента", ДанныеСтроки.Заказ);
			ПараметрыФормы.Вставить("НоменклатураКонтрагента", ДанныеСтроки.ТСР);
			ДопПарам = Новый Структура;
			ДопПарам.Вставить("АктВыдачи", ДанныеСтроки.Акт);
			ОткрытьФорму(
				"Документ.ЗаказКлиента.Форма.РСК_ВыборСтрокиЗаказа",
				ПараметрыФормы, 
				ЭтаФорма,,,, 
				Новый ОписаниеОповещения("РСК_ПослеВыбораСтрокиЗаказа", ЭтаФорма, ДопПарам)
			);
		КонецЕсли;
		//-- КонецЗадачи 21384
		
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ДопПараметры = Новый Структура("ПоручениеЭкспедитору", ДанныеСтроки.Акт);
	
	ОткрытьФорму(
		"Документ.ПоручениеЭкспедитору.ФормаОбъекта",
		Новый Структура("Ключ", ДанныеСтроки.Акт),
		ЭтаФорма,,,,
		Новый ОписаниеОповещения("ПослеЗакрытияПорученияЭкспедитору", ЭтаФорма, ДопПараметры),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
	
КонецПроцедуры

&НаКлиенте
Процедура РСК_ПослеВыбораСтрокиЗаказа(Результат, ДополнительныеПараметры) Экспорт
	//++ РС Консалт: Трофимов Евгений 26.10.2022 Задача 21384
	//e1cib/data/Документ.Задание?ref=b0773e366ad07a244bbad1a0c7a3ebaa
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ЗаписатьНовыеДанныеВАктВыдачи(ДополнительныеПараметры.АктВыдачи, Результат);
	РеквизитыАкта = ПолучитьРеквизитыПоручения(ДополнительныеПараметры.АктВыдачи);
	ЗаполнитьЗначенияСвойств(Элементы.тзАкты.ТекущиеДанные,РеквизитыАкта);
	Модифицированность = Истина;
	//-- КонецЗадачи 21384
	
	//++ РС Консалт: Трофимов Евгений 06.11.2022 Задача 21596
	//e1cib/data/Документ.Задание?ref=b8593808f349977c43e5d857f4b7a6aa
	//Претензия. Петунина Елена: в загрузочной ведомости не устанавливет номенклатуру по всем подобным ТСР
	Фильтр = Новый Структура("ТСР,Заказ");
	ЗаполнитьЗначенияСвойств(Фильтр, Элементы.тзАкты.ТекущиеДанные);
	СтрокиСТакимиЖеТСР = тзАкты.НайтиСтроки(Фильтр);
	Если СтрокиСТакимиЖеТСР.Количество() > 1 Тогда
		Результат.Вставить("СтрокиСТакимиЖеТСР",СтрокиСТакимиЖеТСР);
		ПоказатьВопрос(
			Новый ОписаниеОповещения("РСК_ПослеВопросаОЗаменеНоменклатурыВАктах", ЭтаФорма, Результат), 
			"Заменить в других актах выдачи с таким-же ТСР Номенклатуру, Характеристику, Серию и Цену?", 
			РежимДиалогаВопрос.ДаНет
		);
	КонецЕсли;
	//-- КонецЗадачи 21596	
КонецПроцедуры

&НаКлиенте
Процедура РСК_ПослеВопросаОЗаменеНоменклатурыВАктах(РезультатВопроса, ДополнительныеПараметры) Экспорт
	//++ РС Консалт: Трофимов Евгений 06.11.2022 Задача 21596
	//e1cib/data/Документ.Задание?ref=b8593808f349977c43e5d857f4b7a6aa
	//Претензия. Петунина Елена: в загрузочной ведомости не устанавливет номенклатуру по всем подобным ТСР
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	СтрокиСТакимиЖеТСР = ДополнительныеПараметры.СтрокиСТакимиЖеТСР;
	ДополнительныеПараметры.Удалить("СтрокиСТакимиЖеТСР");
	ё=0;
	Для Каждого Стр Из СтрокиСТакимиЖеТСР Цикл
		ё=ё+1;
		Состояние(
			""+ё+" из "+СтрокиСТакимиЖеТСР.Количество(),
			ё*100/СтрокиСТакимиЖеТСР.Количество(),
			"Заполнение Актов выдачи ТСР..."
		);
		ЗаписатьНовыеДанныеВАктВыдачи(Стр.Акт, ДополнительныеПараметры);
		РеквизитыАкта = ПолучитьРеквизитыПоручения(Стр.Акт);
		ЗаполнитьЗначенияСвойств(Стр, РеквизитыАкта);
	КонецЦикла;
	Модифицированность = Истина;
	//-- КонецЗадачи 21596	
КонецПроцедуры

// Записать новые данные в акт выдачи
//++ РС Консалт: Трофимов Евгений 26.10.2022 Задача 21384
//e1cib/data/Документ.Задание?ref=b0773e366ad07a244bbad1a0c7a3ebaa
//
// Параметры:
//  АктВыдачи		 - ДокументСсылка.ПоручениеЭкспедитору - Акт выдачи ТСР
//  СтруктураДанных	 - Структура - Ключи: Номенклатура, Характеристика, Серия, Цена 
//
&НаСервереБезКонтекста
Процедура ЗаписатьНовыеДанныеВАктВыдачи(АктВыдачи, СтруктураДанных)

	Объект = АктВыдачи.ПолучитьОбъект();
	Объект.РСК_Номенклатура = СтруктураДанных.Номенклатура;
	Объект.РСК_Характеристика = СтруктураДанных.Характеристика;
	Объект.РСК_Серия = СтруктураДанных.Серия;
	Объект.РСК_Цена = СтруктураДанных.Цена;
	Объект.РСК_Сумма = Объект.РСК_Количество * Объект.РСК_Цена;
	Объект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);

КонецПроцедуры // ЗаписатьНовыеДанныеВАктВыдачи()

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура ПослеЗакрытияПорученияЭкспедитору(Результат, ДополнительныеПараметры) Экспорт
	РеквизитыАкта = ПолучитьРеквизитыПоручения(ДополнительныеПараметры.ПоручениеЭкспедитору);
	ЗаполнитьЗначенияСвойств(Элементы.тзАкты.ТекущиеДанные,РеквизитыАкта);
КонецПроцедуры

&НаСервереБезКонтекста
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Функция ПолучитьРеквизитыПоручения(ПоручениеЭкспедитору)

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПоручениеЭкспедитору.Пункт КАК Заявитель,
		|	Партнеры.РСК_СНИЛС КАК СНИЛС,
		|	ПОДСТРОКА(ЕСТЬNULL(КонтактыАдрес.Представление, """"), 1, 150) КАК Адрес,
		|	ПОДСТРОКА(ЕСТЬNULL(КонтактыАдресРег.Представление, """"), 1, 150) КАК АдресРегистрации,
		|	ПОДСТРОКА(ЕСТЬNULL(КонтактыТелефон.Представление, """"), 1, 150) КАК Телефон,
		|	ПоручениеЭкспедитору.РСК_ТСР КАК ТСР,
		|	ПоручениеЭкспедитору.РСК_Количество КАК Количество,
		|	ПоручениеЭкспедитору.РСК_Цена КАК Цена,
		|	ПоручениеЭкспедитору.РСК_Сумма КАК Сумма,
		|	ПоручениеЭкспедитору.Комментарий КАК Комментарий,
		|	ПоручениеЭкспедитору.РСК_НомерНаправления КАК НомерНаправления,
		|	ПоручениеЭкспедитору.ЗонаДоставки КАК Район,
		|	Партнеры.ДатаРождения КАК ДатаРождения,
		|	ПоручениеЭкспедитору.РСК_ДатаНаправления КАК ДатаНаправления,
		|	ПоручениеЭкспедитору.РСК_НомерРеестра КАК НомерРеестра,
		|	ПоручениеЭкспедитору.РСК_ДатаРеестра КАК ДатаРеестра,
		|	ПоручениеЭкспедитору.РСК_СтатусАктаВыдачиТСР КАК СтатусАкта,
		|	ПоручениеЭкспедитору.РСК_Номенклатура КАК Номенклатура,
		|	ПоручениеЭкспедитору.РСК_Характеристика КАК ХарактеристикаНоменклатуры,
		|	ЕСТЬNULL(ПоручениеЭкспедиторуОснования.Основание, ЗНАЧЕНИЕ(Документ.ЗаказКлиента.ПустаяСсылка)) КАК Заказ,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(ДопРеквизитТребуетсяДоставка.Значение, ЛОЖЬ) КАК БУЛЕВО) КАК ТребуетсяДоставка
		|ИЗ
		|	Документ.ПоручениеЭкспедитору КАК ПоручениеЭкспедитору
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Партнеры КАК Партнеры
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партнеры.КонтактнаяИнформация КАК КонтактыАдресРег
		|			ПО (КонтактыАдресРег.Вид.ИдентификаторДляФормул = ""АдресРегистрации"")
		|				И Партнеры.Ссылка = КонтактыАдресРег.Ссылка
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партнеры.КонтактнаяИнформация КАК КонтактыТелефон
		|			ПО Партнеры.Ссылка = КонтактыТелефон.Ссылка
		|				И (КонтактыТелефон.ВидДляСписка = &ВидТелефон)
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партнеры.ДополнительныеРеквизиты КАК ДопРеквизитТребуетсяДоставка
		|			ПО Партнеры.Ссылка = ДопРеквизитТребуетсяДоставка.Ссылка
		|				И (ДопРеквизитТребуетсяДоставка.Свойство.Имя = ""ТребуетсяДоставка"")
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партнеры.КонтактнаяИнформация КАК КонтактыАдрес
		|			ПО Партнеры.Ссылка = КонтактыАдрес.Ссылка
		|				И (КонтактыАдрес.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресПартнера))
		|		ПО ПоручениеЭкспедитору.Пункт = Партнеры.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоручениеЭкспедитору.Основания КАК ПоручениеЭкспедиторуОснования
		|		ПО ПоручениеЭкспедитору.Ссылка = ПоручениеЭкспедиторуОснования.Ссылка
		|			И (ПоручениеЭкспедиторуОснования.НомерСтроки = 1)
		|ГДЕ
		|	ПоручениеЭкспедитору.Ссылка = &ПоручениеЭкспедитору
		|";
	Запрос.УстановитьПараметр("ПоручениеЭкспедитору", ПоручениеЭкспедитору);
	Запрос.УстановитьПараметр("ВидТелефон", Справочники.ВидыКонтактнойИнформации.ТелефонПартнера);
	Возврат РСК_ВызовСервера.ЗапросВСтруктуру(Запрос);

КонецФункции

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура РСК_РСК_ТерриториальнаяГруппаПриИзмененииПосле(Элемент)
	Если ЗначениеЗаполнено(Объект.РСК_ТерриториальнаяГруппа) Тогда
		Объект.Склад = РСК_ВызовСервера.ЗначениеРеквизитаОбъекта(Объект.РСК_ТерриториальнаяГруппа, "РСК_СкладВыдачиТСР");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура РСК_тзАктыКомментарийПриИзмененииПосле(Элемент)
	ТД = Элементы.тзАкты.ТекущиеДанные;
	РСК_ВызовСервера.ИзменитьЗначениеРеквизита(ТД.Акт, "Комментарий", ТД.Комментарий);
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура РСК_Водитель1ПриИзмененииПосле(Элемент)
	ВодительПриИзмененииНаСервере();
	Если ЗначениеЗаполнено(Объект.Водитель) Тогда
		Объект.ТранспортноеСредство = РСК_ВызовСервера.ЗначениеРеквизитаОбъекта(
			Объект.Водитель,
			"РСК_ОсновноеТранспортноеСредство"
		);
		ТранспортноеСредствоПриИзмененииНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура РСК_ТранспортноеСредство1ПриИзмененииПосле(Элемент)
	ТранспортноеСредствоПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура РСК_ОбновитьТаблицыТСРПосле(Команда)
	ОбновитьТаблицыТСР();
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура РСК_ПослеЗаписиПосле(ПараметрыЗаписи)
	ОбновитьТаблицыТСР();
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура РСК_ПечататьГруппуАктовПосле(Команда = Неопределено, Только1Сторонние = Ложь)
	ТабДок = ПечатьАктаНаСервере(Только1Сторонние);	
	//Типовая часть вывода в стандартное окно++
	ИдентификаторПечатнойФормы = "ПФ_MXL_ПакетнаяПечатьАктовВыдачиТСР";
	НазваниеПечатнойФормы = НСтр("ru = 'Пакетная печать. Акты выдачи ТСР'");
	
	Если Не ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.Печать") Тогда
		ТабДок.Показать(НазваниеПечатнойФормы);
		ДокументыПечатались = Истина;
		Возврат;
	КонецЕсли;     
	МодульУправлениеПечатьюКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеПечатьюКлиент");     
	КоллекцияПечатныхФорм = МодульУправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм(ИдентификаторПечатнойФормы);
	ПечатнаяФорма = МодульУправлениеПечатьюКлиент.ОписаниеПечатнойФормы(КоллекцияПечатныхФорм, ИдентификаторПечатнойФормы);
	ПечатнаяФорма.СинонимМакета = НазваниеПечатнойФормы;
	ПечатнаяФорма.ТабличныйДокумент = ТабДок;
	ПечатнаяФорма.ИмяФайлаПечатнойФормы = НазваниеПечатнойФормы;
	
	ОбластиОбъектов = Новый СписокЗначений;
	МодульУправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм, ОбластиОбъектов);
	
	ДокументыПечатались = Истина;	
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура РСК_ПечататьГруппуАктов2сторонПосле(Команда)
	ТабДок = ПечатьАкта2СторонняяНаСервере();	
	ИдентификаторПечатнойФормы = "ПФ_MXL_ПакетнаяПечатьАктовВыдачиТСР";
	НазваниеПечатнойФормы = НСтр("ru = 'Пакетная печать. Акты выдачи ТСР'");
	
	Если Не ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.Печать") Тогда
		ТабДок.Показать(НазваниеПечатнойФормы);
		ДокументыПечатались = Истина;
		Возврат;
	КонецЕсли;     
	МодульУправлениеПечатьюКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеПечатьюКлиент");     
	КоллекцияПечатныхФорм = МодульУправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм(ИдентификаторПечатнойФормы);
	ПечатнаяФорма = МодульУправлениеПечатьюКлиент.ОписаниеПечатнойФормы(КоллекцияПечатныхФорм, ИдентификаторПечатнойФормы);
	ПечатнаяФорма.СинонимМакета = НазваниеПечатнойФормы;
	ПечатнаяФорма.ТабличныйДокумент = ТабДок;
	ПечатнаяФорма.ИмяФайлаПечатнойФормы = НазваниеПечатнойФормы;
	
	ОбластиОбъектов = Новый СписокЗначений;
	МодульУправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм, ОбластиОбъектов);
	
	ДокументыПечатались = Истина;
	
	РСК_ПечататьГруппуАктовПосле(,Истина);
	
КонецПроцедуры

&НаСервере
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Функция ПечатьАктаНаСервере(Только1Сторонние)
	МассивДокументов = Новый Массив;
	МассивКонтрактовБезПечатнойФормы = Новый Массив;

	Если Только1Сторонние Тогда
		ТЗДляПечати = ПолучитьОтсортированныйСписокАктов().Скопировать(Новый Структура("Двусторонняя", Ложь));
	Иначе
		ТЗДляПечати = ПолучитьОтсортированныйСписокАктов();
	КонецЕсли;
	ТекущийИндексМассива = -1;
	Для Каждого ТекДанные из ТЗДляПечати Цикл	
		ТекущийИндексМассива = ТекущийИндексМассива +1;
		
		Если НЕ ЗначениеЗаполнено(ТекДанные.ПечатнаяФормаАкта) Тогда 
			Если МассивКонтрактовБезПечатнойФормы.Найти(ТекДанные.Контракт) = Неопределено Тогда
				ОбщегоНазначения.СообщитьПользователю(
					"Печатная форма акта в заказе не указана! (дважды щёлкните по этой строке)",
					ТекДанные.Контракт,
					"РСК_ПечатнаяФормаАкта"
				);
				МассивКонтрактовБезПечатнойФормы.Добавить(ТекДанные.Контракт);
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		ОбъектыНазначения = Новый Массив;
		ОбъектыНазначения.Добавить(ТекДанные.Акт);
		
		МассивПечатныхФорм = РСК_ВызовСервера.ПечатьЧужойФормыНаСервере(ОбъектыНазначения, ТекДанные.ПечатнаяФормаАкта);
		ТабДок = МассивПечатныхФорм[0].ТабличныйДокумент;
		
		МассивДокументов.Добавить(ТабДок);
		Если ТекущийИндексМассива <> 0 И ТекущийИндексМассива+1 <> ТЗДляПечати.Количество()Тогда      
			Если ТЗДляПечати[ТекущийИндексМассива].Район <> ТЗДляПечати[ТекущийИндексМассива+1].Район Тогда
				ТабДокРайона = ПолучитьТабДокРайона(ТЗДляПечати[ТекущийИндексМассива-1].Район,ТабДок.ШиринаТаблицы);
				ТабДокРайона.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктПриема_ПередачиТовара";
				Попытка
					ЗаполнитьЗначенияСвойств(ТабДокРайона,ТабДок);
				Исключение
				КонецПопытки;
				МассивДокументов.Добавить(ТабДокРайона);
			КонецЕсли;
		КонецЕсли;
		Если ТекущийИндексМассива+1 = ТЗДляПечати.Количество() Тогда
			ТабДокРайона = ПолучитьТабДокРайона(ТЗДляПечати[ТекущийИндексМассива].Район,ТабДок.ШиринаТаблицы);
			ТабДокРайона.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктПриема_ПередачиТовара";
			Попытка
				ЗаполнитьЗначенияСвойств(ТабДокРайона,ТабДок);
			Исключение
			КонецПопытки;	
			МассивДокументов.Добавить(ТабДокРайона);
		КонецЕсли
	КонецЦикла;
	
	ТабДок = РСК_ВызовСервера.СлепитьАкты(МассивДокументов);
	Возврат ТабДок;
КонецФункции

&НаСервере
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Функция ПечатьАкта2СторонняяНаСервере()
	ТабДокПечать = Новый ТабличныйДокумент;
	МассивКонтрактовБезПечатнойФормы = Новый Массив;
	ТЗДляПечати = ПолучитьОтсортированныйСписокАктов().Скопировать(Новый Структура("Двусторонняя", Истина));
	ТекущийИндексМассива = -1;
	Для Каждого ТекДанные из ТЗДляПечати Цикл
		
		НомерСтрокиНачало = ТабДокПечать.ВысотаТаблицы + 1;
		ТекущийИндексМассива = ТекущийИндексМассива +1;
		
		Если НЕ ЗначениеЗаполнено(ТекДанные.ПечатнаяФормаАкта) Тогда 
			Если МассивКонтрактовБезПечатнойФормы.Найти(ТекДанные.Контракт) = Неопределено Тогда
				ОбщегоНазначения.СообщитьПользователю(
					"Печатная форма акта в заказе не указана! (дважды щёлкните по этой строке)",
					ТекДанные.Контракт,
					"РСК_ПечатнаяФормаАкта"
				);
				МассивКонтрактовБезПечатнойФормы.Добавить(ТекДанные.Контракт);
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		ОбъектыНазначения = Новый Массив;
		ОбъектыНазначения.Добавить(ТекДанные.Акт);
		
		МассивПечатныхФорм = РСК_ВызовСервера.ПечатьЧужойФормыНаСервере(ОбъектыНазначения,ТекДанные.ПечатнаяФормаАкта);
		ТабДок = МассивПечатныхФорм[0].ТабличныйДокумент;
		ВывестиОбласть(ТабДокПечать, ТабДок);
		Если ТекущийИндексМассива <> 0 И ТекущийИндексМассива+1 <> ТЗДляПечати.Количество()Тогда      
			Если ТЗДляПечати[ТекущийИндексМассива].Район <> ТЗДляПечати[ТекущийИндексМассива+1].Район Тогда
				ТабДокРайона = ПолучитьТабДокРайона(ТЗДляПечати[ТекущийИндексМассива-1].Район,ТабДок.ШиринаТаблицы);
				ТабДокРайона.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктПриема_ПередачиТовара";
				Попытка
					ЗаполнитьЗначенияСвойств(ТабДокРайона,ТабДок);
				Исключение
				КонецПопытки;
				ВывестиОбласть(ТабДокПечать, ТабДокРайона);
				ТабДокРайона = ПолучитьТабДокРайона(ТЗДляПечати[ТекущийИндексМассива].Район,ТабДок.ШиринаТаблицы, Истина);
				ВывестиОбласть(ТабДокПечать, ТабДокРайона);
			КонецЕсли;
		КонецЕсли;
		Если ТекущийИндексМассива+1 = ТЗДляПечати.Количество() Тогда
			ТабДокРайона = ПолучитьТабДокРайона(ТЗДляПечати[ТекущийИндексМассива].Район,ТабДок.ШиринаТаблицы);
			ТабДокРайона.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктПриема_ПередачиТовара";
			Попытка
				ЗаполнитьЗначенияСвойств(ТабДокРайона,ТабДок);
			Исключение
			КонецПопытки;	
			ВывестиОбласть(ТабДокПечать, ТабДокРайона);
			ТабДокРайона = ПолучитьТабДокРайона(ТЗДляПечати[ТекущийИндексМассива].Район,ТабДок.ШиринаТаблицы, Истина);
			ВывестиОбласть(ТабДокПечать, ТабДокРайона);
		КонецЕсли;
		ТабДокПечать.ДвусторонняяПечать = ТипДвустороннейПечати.ПереворотВлево;
		ЗадатьОбластьПечатиДокумента(ТабДокПечать, НомерСтрокиНачало, ТекДанные.Акт);
	КонецЦикла;
	
	ТабДокПечать.АвтоМасштаб = Истина;
	Возврат ТабДокПечать;
КонецФункции	

&НаСервере
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Функция ПолучитьОтсортированныйСписокАктов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоручениеЭкспедитору.Ссылка КАК Акт,
		|	ПоручениеЭкспедитору.РСК_СтатусАктаВыдачиТСР КАК СтатусАкта,
		|	ПоручениеЭкспедитору.ЗонаДоставки КАК Район,
		|	ПоручениеЭкспедитору.Пункт КАК Пункт,
		|	ПоручениеЭкспедиторуОснования.Основание КАК Контракт,
		|	ЗаказКлиента.РСК_ПечатнаяФормаАкта КАК ПечатнаяФормаАкта,
		|	ВЫБОР
		|		КОГДА ЗаказКлиента.РСК_ПечатнаяФормаАкта ССЫЛКА Справочник.ДополнительныеОтчетыИОбработки
		|			ТОГДА ЕСТЬNULL(ПОДСТРОКА(ДополнительныеОтчетыИОбработки.Комментарий, 1, 20), """") ПОДОБНО ""%2х сторонняя%""
		|		КОГДА ЗаказКлиента.РСК_ПечатнаяФормаАкта ССЫЛКА Справочник.РСК_ВариантыМакетовПечатныхФорм
		|			ТОГДА ЕСТЬNULL(ПОДСТРОКА(ОригинальныеПФ.Комментарий, 1, 20), """") ПОДОБНО ""%2х сторонняя%""
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Двусторонняя
		|ИЗ
		|	Документ.ПоручениеЭкспедитору КАК ПоручениеЭкспедитору
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоручениеЭкспедитору.Основания КАК ПоручениеЭкспедиторуОснования
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК ЗаказКлиента
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДополнительныеОтчетыИОбработки КАК ДополнительныеОтчетыИОбработки
		|				ПО ЗаказКлиента.РСК_ПечатнаяФормаАкта = ДополнительныеОтчетыИОбработки.Ссылка
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РСК_ВариантыМакетовПечатныхФорм КАК РСК_ВариантыМакетовПечатныхФорм
		|					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДополнительныеОтчетыИОбработки КАК ОригинальныеПФ
		|					ПО РСК_ВариантыМакетовПечатныхФорм.ВнешняяПечатнаяФорма = ОригинальныеПФ.Ссылка
		|				ПО ЗаказКлиента.РСК_ПечатнаяФормаАкта = РСК_ВариантыМакетовПечатныхФорм.Ссылка
		|			ПО ПоручениеЭкспедиторуОснования.Основание = ЗаказКлиента.Ссылка
		|		ПО ПоручениеЭкспедитору.Ссылка = ПоручениеЭкспедиторуОснования.Ссылка
		|			И (ПоручениеЭкспедиторуОснования.НомерСтроки = 1)
		|ГДЕ
		|	ПоручениеЭкспедитору.Ссылка В(&МассивАктов)
		|	И ПоручениеЭкспедитору.РСК_СтатусАктаВыдачиТСР <> ЗНАЧЕНИЕ(Перечисление.РСК_СтатусыАктовВыдачи.Возврат)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Район,
		|	Пункт
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("МассивАктов", тзАкты.Выгрузить().ВыгрузитьКолонку("Акт"));
	
	Возврат Запрос.Выполнить().Выгрузить();

	
КонецФункции

&НаСервере
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Функция ПолучитьТабДокРайона(ТекущийРайон,ШиринаТаблицы, ВывестиПустой = Ложь)
	
	ТабДокРайона = Новый ТабличныйДокумент;
	ОбластьВывода = ТабДокРайона.ПолучитьОбласть(3,1,3,10);
	ОбластьВывода.Область(3,1,3,10).Объединить();
	ОбластьЗаполнения = ОбластьВывода.Область(3,1,3,10);
	ОбластьЗаполнения.Параметр = "Район";
	ОбластьЗаполнения.Заполнение = ТипЗаполненияОбластиТабличногоДокумента.Параметр;
	ШрифтГруппировки = Новый Шрифт(,10,ИСТИНА); 
	ОбластьЗаполнения.Шрифт =  ШрифтГруппировки;
	ОбластьЗаполнения.РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
	ОбластьВывода.Параметры.Район = Строка(ТекущийРайон)+", "+"Загрузочная ведомость №"+Объект.Номер+" от "+Формат(Объект.Дата,"ДФ=dd.MM.yyyy")+", "+Объект.Водитель;  
	
	Если ВывестиПустой Тогда
	
		ОбластьВывода.Параметры.Район = "";
	
	КонецЕсли; 
	
	ТабДокРайона.Вывести(ОбластьВывода);
	ТабДокРайона.АвтоМасштаб = Ложь;
	
	Возврат ТабДокРайона
	
КонецФункции

&НаСервереБезКонтекста
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура ВывестиОбласть(ТабДокПечать, ТабДок)

ТабДокПечать.Вывести(ТабДок);	
ТабДокПечать.ВывестиГоризонтальныйРазделительСтраниц();

КонецПроцедуры // ()

&НаСервереБезКонтекста
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ТекДанныеАкт)
	
	ОбъектыПечати = Новый СписокЗначений;

	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, ТекДанныеАкт);

КонецПроцедуры 

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура РСК_ПечатьДляВодителяПосле(Команда)
	ПараметрыОткрытия = РСК_ВызовСервера.ПолучитьПараметрыОткрытияПечатнойФормы(
		Объект.Ссылка, 
		"Загрузочная ведомость для водителя"
	);
	ОткрытьФорму("ОбщаяФорма.ПечатьДокументов", ПараметрыОткрытия);
КонецПроцедуры

&НаКлиенте
Процедура РСК_ПечатьСписокНоменклатурыПоКонтрактамДляЗагрузочнойВедомостиТСРПосле(Команда)
	ПараметрыОткрытия = РСК_ВызовСервера.ПолучитьПараметрыОткрытияПечатнойФормы(
		Объект.Ссылка, 
		"Список номенклатуры по контрактам для загрузочной ведомости ТСР"
	);
	ОткрытьФорму("ОбщаяФорма.ПечатьДокументов", ПараметрыОткрытия);
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 25.07.2022 Задача 19208
//e1cib/data/Документ.Задание?ref=b240f4f00342a1014b20d05d81910626
&НаКлиенте
Процедура ВыполнитьРассылкуСМС(Команда)
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ДокументОснование",Объект.Ссылка);
	ОткрытьФорму("РегистрСведений.РСК_СообщенияСМС.Форма.ФормаГрупповойОтправкиСМССообщений",СтруктураПараметров,ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура РСК_МаршрутПриИзмененииПосле(Элемент)
	
	//++РС Консалт Назаров М.Ю. 8 августа 2022 г. 5:54:00                  
	РассчитатПоказателиУтилизации();	
	//--РС Консалт Назаров М.Ю. 8 августа 2022 г. 5:54:00
	
КонецПроцедуры      

//++РС Консалт Назаров М.Ю. 8 августа 2022 г. 5:57:40                  
&НаСервере
Процедура РассчитатПоказателиУтилизации()
	
	//++ РС Консалт: Трофимов Евгений 05.10.2022 Тикет 20813
	//e1cib/data/Документ.Задание?ref=9d64d502600ef82a4fec68672dd7df3b
	Если НЕ ЗначениеЗаполнено(Объект.ТранспортноеСредство) Тогда
		Возврат;
	КонецЕсли;
	//-- КонецТикета 20813	
	
	ВесИтог = Объект.Маршрут.Итог("Вес"); 
	ОбъемИтог = Объект.Маршрут.Итог("Объем");
	
	ГрузоподъемностьКГ = Объект.ТранспортноеСредство.ГрузоподъемностьВТоннах * 1000;
	Если ГрузоподъемностьКГ = 0 Тогда
		УтилизацияВес = 0;
	Иначе
		УтилизацияВес = (ВесИтог / ГрузоподъемностьКГ) * 100;			
	КонецЕсли; 
	
	ВместимостьВКубическихМетрах = Объект.ТранспортноеСредство.ВместимостьВКубическихМетрах;
	Если ВместимостьВКубическихМетрах = 0 Тогда
		УтилизацияОбъем = 0;
	Иначе
		УтилизацияОбъем = (ОбъемИтог / Объект.ТранспортноеСредство.ВместимостьВКубическихМетрах) * 100;			
	КонецЕсли;
	
	РС_УтилизацияВес = УтилизацияВес;
	РС_УтилизацияОбъем = УтилизацияОбъем;
	
КонецПроцедуры
//--РС Консалт Назаров М.Ю. 8 августа 2022 г. 5:57:40

//++ РС Консалт: Трофимов Евгений 13.10.2022 Тикет 20965
//e1cib/data/Документ.Задание?ref=bdc83380f664d5bb4898b38b648fea97
&НаКлиенте
Процедура РСК_ЗагрузкаАдресПриИзмененииПосле(Элемент)
	ИмяРеквизитаАдресаДоставки = "Адрес";
	ТекущиеДанные = Элементы.Загрузка.ТекущиеДанные;
	
	ДоставкаТоваровКлиент.ПриИзмененииПредставленияАдреса(
	    Элемент,
		ТекущиеДанные[ИмяРеквизитаАдресаДоставки],
		ТекущиеДанные[ИмяРеквизитаАдресаДоставки + "ЗначенияПолей"]);
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 13.10.2022 Тикет 20965
//e1cib/data/Документ.Задание?ref=bdc83380f664d5bb4898b38b648fea97
&НаКлиенте
Процедура РСК_ЗагрузкаАдресНачалоВыбораПосле(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ИмяРеквизитаАдресаДоставки = "Адрес";
	ТекущиеДанные = Элементы.Загрузка.ТекущиеДанные;
	
	ДоставкаТоваровКлиент.ОткрытьФормуВыбораАдресаИОбработатьРезультат(
	    Элемент,
		ТекущиеДанные,
		ИмяРеквизитаАдресаДоставки,
		СтандартнаяОбработка);
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 13.10.2022 Тикет 20965
//e1cib/data/Документ.Задание?ref=bdc83380f664d5bb4898b38b648fea97
&НаКлиенте
Процедура РСК_ЗагрузкаАдресОчисткаПосле(Элемент, СтандартнаяОбработка)
	ИмяРеквизитаАдресаДоставки = "Адрес";
	ТекущиеДанные = Элементы.Загрузка.ТекущиеДанные;
	
	ДоставкаТоваровКлиент.ОчиститьПредставлениеАдреса(
		ТекущиеДанные[ИмяРеквизитаАдресаДоставки],
		ТекущиеДанные[ИмяРеквизитаАдресаДоставки + "ЗначенияПолей"]);
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 13.10.2022 Тикет 20965
//e1cib/data/Документ.Задание?ref=bdc83380f664d5bb4898b38b648fea97
&НаКлиенте
Процедура РСК_ЗагрузкаАдресОткрытиеПосле(Элемент, СтандартнаяОбработка)
	АдресПриИзменении(Элемент);
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 13.10.2022 Тикет 20965
//e1cib/data/Документ.Задание?ref=bdc83380f664d5bb4898b38b648fea97
&НаКлиенте
Процедура РСК_ВыгрузкаАдресПриИзмененииПосле(Элемент)
	ИмяРеквизитаАдресаДоставки = "Адрес";
	ТекущиеДанные = Элементы.Выгрузка.ТекущиеДанные;
	
	ДоставкаТоваровКлиент.ПриИзмененииПредставленияАдреса(
	    Элемент,
		ТекущиеДанные[ИмяРеквизитаАдресаДоставки],
		ТекущиеДанные[ИмяРеквизитаАдресаДоставки + "ЗначенияПолей"]);
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 13.10.2022 Тикет 20965
//e1cib/data/Документ.Задание?ref=bdc83380f664d5bb4898b38b648fea97
&НаКлиенте
Процедура РСК_ВыгрузкаАдресНачалоВыбораПосле(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ИмяРеквизитаАдресаДоставки = "Адрес";
	ТекущиеДанные = Элементы.Выгрузка.ТекущиеДанные;
	
	ДоставкаТоваровКлиент.ОткрытьФормуВыбораАдресаИОбработатьРезультат(
	    Элемент,
		ТекущиеДанные,
		ИмяРеквизитаАдресаДоставки,
		СтандартнаяОбработка);
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 13.10.2022 Тикет 20965
//e1cib/data/Документ.Задание?ref=bdc83380f664d5bb4898b38b648fea97
&НаКлиенте
Процедура РСК_ВыгрузкаАдресОчисткаПосле(Элемент, СтандартнаяОбработка)
	ИмяРеквизитаАдресаДоставки = "Адрес";
	ТекущиеДанные = Элементы.Выгрузка.ТекущиеДанные;
	
	ДоставкаТоваровКлиент.ОчиститьПредставлениеАдреса(
		ТекущиеДанные[ИмяРеквизитаАдресаДоставки],
		ТекущиеДанные[ИмяРеквизитаАдресаДоставки + "ЗначенияПолей"]);
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 13.10.2022 Тикет 20965
//e1cib/data/Документ.Задание?ref=bdc83380f664d5bb4898b38b648fea97
&НаКлиенте
Процедура РСК_ВыгрузкаАдресОткрытиеПосле(Элемент, СтандартнаяОбработка)
	АдресПриИзменении(Элемент);
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокНакладных()
	
	//++РС Консалт: Минаков А.С. Задача 21223
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРаспоряжений.Распоряжение КАК Распоряжение,
	|	ТаблицаРаспоряжений.РСК_Транзитная КАК Транзитная,
	|	ТаблицаРаспоряжений.Склад КАК Склад
	|ПОМЕСТИТЬ ТаблицаРаспоряжений
	|ИЗ
	|	&ТаблицаРаспоряжений КАК ТаблицаРаспоряжений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРаспоряжений.Склад КАК Склад,
	|	ТаблицаРаспоряжений.Распоряжение КАК Распоряжение,
	|	МАКСИМУМ(ДанныеДокумента.Ссылка) КАК Накладная
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаРаспоряжений КАК ТаблицаРаспоряжений
	|		ПО (ДанныеДокумента.Ссылка.Проведен)
	|			И (НАЧАЛОПЕРИОДА(ДанныеДокумента.Ссылка.Дата, ДЕНЬ) = &ДатаОтгрузки ИЛИ НЕ ДанныеДокумента.Ссылка.РеализацияПоЗаказам)
	|			И ДанныеДокумента.Склад = ТаблицаРаспоряжений.Склад
	|			И (НЕ ТаблицаРаспоряжений.Транзитная)
	|			И (ВЫБОР
	|				КОГДА ДанныеДокумента.Ссылка.РеализацияПоЗаказам
	|					ТОГДА ДанныеДокумента.ЗаказКлиента
	|				ИНАЧЕ ДанныеДокумента.Ссылка
	|			КОНЕЦ = ТаблицаРаспоряжений.Распоряжение)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРаспоряжений.Склад,
	|	ТаблицаРаспоряжений.Распоряжение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРаспоряжений.Склад,
	|	ТаблицаРаспоряжений.Распоряжение,
	|	МАКСИМУМ(ДанныеДокумента.Ссылка)
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаРаспоряжений КАК ТаблицаРаспоряжений
	|		ПО (ДанныеДокумента.Ссылка.Проведен)
	|			И ДанныеДокумента.Ссылка.СкладОтправитель = ТаблицаРаспоряжений.Склад
	|			И (НЕ ТаблицаРаспоряжений.Транзитная)
	|			И (НАЧАЛОПЕРИОДА(ДанныеДокумента.Ссылка.Дата, ДЕНЬ) = &ДатаОтгрузки ИЛИ НЕ ДанныеДокумента.Ссылка.ПеремещениеПоЗаказам)
	|			И (ВЫБОР
	|				КОГДА ДанныеДокумента.Ссылка.ПеремещениеПоЗаказам
	|					ТОГДА ДанныеДокумента.ЗаказНаПеремещение
	|				ИНАЧЕ ДанныеДокумента.Ссылка
	|			КОНЕЦ = ТаблицаРаспоряжений.Распоряжение)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРаспоряжений.Склад,
	|	ТаблицаРаспоряжений.Распоряжение");
	
	ДатаОтгрузки = НачалоДня(?(ЗначениеЗаполнено(Объект.ДатаВремяРейсаПланС), Объект.ДатаВремяРейсаПланС, ТекущаяДата()));	
	ТаблицаРаспоряжений = Объект.Распоряжения.Выгрузить(, "Распоряжение, Склад, РСК_Транзитная");
		
	Запрос.УстановитьПараметр("ДатаОтгрузки", ДатаОтгрузки);
	Запрос.УстановитьПараметр("ТаблицаРаспоряжений", ТаблицаРаспоряжений);
	
	СтруктураПоиска = Новый Структура("Распоряжение, Склад");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, Выборка);
		НайденныеСтроки = Объект.Распоряжения.НайтиСтроки(СтруктураПоиска);
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			НайденнаяСтрока.РСК_Накладная = Выборка.Накладная
		КонецЦикла		
	КонецЦикла;	
	
	ОбновитьИтоговыйВесОбъемЗаполненность(ЭтаФорма)
	//++РС Консалт: Минаков А.С. Задача 21223
	
КонецПроцедуры

&НаКлиенте
Процедура РСК_СоздатьНакладные(Команда)
	
	//++РС Консалт: Минаков А.С. Задача 21223
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат
	КонецЕсли;
	
	ОбновитьСписокНакладных();
	
	СписокЗаказовКлиента = Новый Массив;
	СписокЗаказовНаПеремещение = Новый Массив;
	
	ПараметрыОбновленияОрдера = РСК_ВызовСервера.ПараметрыОбновленияОрдера();
	
	ДатаОтгрузки = ?(ЗначениеЗаполнено(Объект.ДатаВремяРейсаПланС), Объект.ДатаВремяРейсаПланС, ТекущаяДата());
 	
	Для Каждого ДанныеСтроки Из Объект.Распоряжения Цикл
		
		Если ЗначениеЗаполнено(ДанныеСтроки.РСК_Накладная) Тогда
			Продолжить
		КонецЕсли;		
		
		ПараметрыОбновленияОрдера.ЗаданиеНаПеревозку = Объект.Ссылка;
		ПараметрыОбновленияОрдера.Распоряжение = ДанныеСтроки.Распоряжение;
		ПараметрыОбновленияОрдера.Склад = ДанныеСтроки.Склад;
		ПараметрыОбновленияОрдера.ДатаОтгрузки = ДатаОтгрузки;
		ПараметрыОбновленияОрдера.ЗаполнитьЗадание = Истина;
		ПараметрыОбновленияОрдера.НовыйСтатус = "КОтгрузке";
		ПараметрыОбновленияОрдера.ИсключаемыеСтатусы = "КОтгрузке,Отгружен";
		ПараметрыОбновленияОрдера.ЗаполнитьПоОтбору = Истина;
		
		Отказ = Ложь;
		РСК_ВызовСервера.ВыполнитьПроверкуИзменениеОрдера(ПараметрыОбновленияОрдера, Отказ);
		Если Отказ Тогда
			Продолжить
		КонецЕсли;
		
		Если ТипЗнч(ДанныеСтроки.Распоряжение) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
			СписокЗаказовКлиента.Добавить(Новый Структура("ДокументОснование, Склад", ДанныеСтроки.Распоряжение, ДанныеСтроки.Склад))	
		ИначеЕсли ТипЗнч(ДанныеСтроки.Распоряжение) = Тип("ДокументСсылка.ЗаказНаПеремещение") Тогда
			СписокЗаказовНаПеремещение.Добавить(ДанныеСтроки.Распоряжение)	
		КонецЕсли
	КонецЦикла;
	
	СоздатьНакладныеНаСервере(СписокЗаказовНаПеремещение, СписокЗаказовКлиента)
	//++РС Консалт: Минаков А.С. Задача 21223
	
КонецПроцедуры

&НаСервере
Процедура СоздатьНакладныеНаСервере(СписокЗаказовНаПеремещение, СписокЗаказовКлиента)
	
	//++РС Консалт: Минаков А.С. Задача 21223
	УстановитьПривилегированныйРежим(Истина);
	ДатаОтгрузки = ?(ЗначениеЗаполнено(Объект.ДатаВремяРейсаПланС), Объект.ДатаВремяРейсаПланС, ТекущаяДата());
	
	Если СписокЗаказовНаПеремещение.Количество() Тогда		
		ПолеОшибки = "Объект.РаспоряженияНаОтгрузку";
		СписокОшибок = Неопределено;
		ГруппировкиРаспоряжений = Новый Массив;
		ИмяОформляемогоДокумента = "ПеремещениеТоваров";
		КлючевыеПоляШапки = "ХозяйственнаяОперация, Организация, ОрганизацияПолучатель, СкладОтправитель, СкладПолучатель, Подразделение, ВариантПриемкиТоваров";
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ЗаказНаПеремещение.Ссылка КАК Ссылка,
		|	ЗаказНаПеремещение.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ЗаказНаПеремещение.СкладОтправитель КАК СкладОтправитель,
		|	ЗаказНаПеремещение.СкладПолучатель КАК СкладПолучатель
		|ИЗ
		|	Документ.ЗаказНаПеремещение КАК ЗаказНаПеремещение
		|ГДЕ
		|	ЗаказНаПеремещение.Ссылка В (&Распоряжения)
		|ИТОГИ ПО
		|	ХозяйственнаяОперация,
		|	СкладОтправитель,
		|	СкладПолучатель");
		
		Запрос.УстановитьПараметр("Распоряжения", СписокЗаказовНаПеремещение);
		
		ВыборкаХозяйственнаяОперация = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаХозяйственнаяОперация.Следующий() Цикл
			ХозяйственнаяОперация = ВыборкаХозяйственнаяОперация.ХозяйственнаяОперация;
			ВыборкаСкладОтправитель = ВыборкаХозяйственнаяОперация.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаСкладОтправитель.Следующий() Цикл
				СкладОтправитель = ВыборкаСкладОтправитель.СкладОтправитель;
				ВыборкаСкладПолучатель = ВыборкаСкладОтправитель.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаСкладПолучатель.Следующий() Цикл 
					СкладПолучатель = ВыборкаСкладПолучатель.СкладПолучатель;
					МассивЗаказов = Новый Массив;
					Выборка = ВыборкаСкладПолучатель.Выбрать();
					Пока Выборка.Следующий() Цикл
						МассивДоп = Новый Массив;
						МассивДоп.Добавить(Выборка.Ссылка);
						МассивЗаказов.Добавить(МассивДоп)	 
					КонецЦикла
				КонецЦикла
			КонецЦикла;
			
			ЗаполнятьПоОрдеру = СкладыСервер.ИспользоватьОрдернуюСхемуПриОтгрузке(СкладОтправитель, ДатаОтгрузки);
			
			ПоляЗаполнения = Новый Структура("ЗаполнятьПоОрдеру, Отправитель, Получатель, Склад, ХозяйственнаяОперация, Дата",
			ЗаполнятьПоОрдеру, СкладОтправитель, СкладПолучатель, СкладОтправитель, ХозяйственнаяОперация, ДатаОтгрузки); 
			
			ГруппировкиРаспоряжений.Добавить(Новый Структура("ИмяОформляемогоДокумента, КлючевыеПоляШапки, МассивЗаказов, Обработчик, ПоляЗаполнения",
			ИмяОформляемогоДокумента, КлючевыеПоляШапки, МассивЗаказов,, ПоляЗаполнения)) 
				
		КонецЦикла;	 
		
		НакладныеСервер.СформироватьДокументыПоРаспоряжениям(ГруппировкиРаспоряжений, СписокОшибок, ПолеОшибки)	
	КонецЕсли;
	
	Если СписокЗаказовКлиента.Количество() Тогда
		ПараметрыФормирования = ПродажиСервер.НовыеПараметрыОформленияКомплектаДокументов();
		ПараметрыФормирования.СоздаватьДокументПродажи = Истина;
		ПараметрыФормирования.СохраненыНастройкиОформления = Истина;
		ПараметрыФормирования.Вставить("ПоОрдерам");
		ПараметрыФормирования.Вставить("ДатаДокумента", ДатаОтгрузки);
		
		Для Каждого СтруктураЗаказКлиента Из СписокЗаказовКлиента Цикл
			
			ЗаполнятьПоОрдеру = СкладыСервер.ИспользоватьОрдернуюСхемуПриОтгрузке(СтруктураЗаказКлиента.Склад, ДатаОтгрузки);
			Если ЗаполнятьПоОрдеру Тогда
				ПараметрыФормирования.ПоОрдерам = Истина;
				СостояниеОрдера = 3
			Иначе
				ПараметрыФормирования.ПоОрдерам = Ложь;
				СостояниеОрдера = 1
			КонецЕсли;
			
			Ключ = Новый Структура;
			Ключ.Вставить("ДокументОснование", СтруктураЗаказКлиента.ДокументОснование);
			Ключ.Вставить("Склад", СтруктураЗаказКлиента.Склад);
			
			Значение = Новый Структура("СостояниеНакладной, СостояниеОрдера", 1, СостояниеОрдера);
			
			СоответствиеРаспоряжений = Новый Соответствие;
			СоответствиеРаспоряжений.Вставить(Ключ, Значение);
			
			ПродажиСервер.ОформитьНакладнуюНаСервере(СоответствиеРаспоряжений, ПараметрыФормирования)	
		КонецЦикла
	КонецЕсли;
	УстановитьПривилегированныйРежим(Ложь);
	
	ПриИзмененииСтатусаИПерезаполнении(Истина);
	
	ОбновитьИтоговыйВесОбъемЗаполненность(ЭтаФорма)
	//++РС Консалт: Минаков А.С. Задача 21223
		
КонецПроцедуры

&НаКлиенте
Процедура РСК_ПечатьКомплектаДокументовВместо(Команда)
	
	//++РС Консалт: Минаков А.С. Задача 21223	
	СписокРеализаций = Новый Массив;
	ЮрЛица = Новый Массив;
	ФизЛица = Новый Массив;
	
	Для Каждого ДанныеСтроки Из Объект.Распоряжения Цикл
		Если ЗначениеЗаполнено(ДанныеСтроки.РСК_Накладная) Тогда
			Если ТипЗнч(ДанныеСтроки.РСК_Накладная) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
				Если СписокРеализаций.Найти(ДанныеСтроки.РСК_Накладная) = Неопределено Тогда 
					СписокРеализаций.Добавить(ДанныеСтроки.РСК_Накладная)
				КонецЕсли;
				
				ЮрФизЛицо = ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(ДанныеСтроки.РСК_Накладная, "Контрагент.ЮрФизЛицо");
				
				Если ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ФизЛицо") Тогда 
					Если ФизЛица.Найти(ДанныеСтроки.РСК_Накладная) = Неопределено Тогда
						ФизЛица.Добавить(ДанныеСтроки.РСК_Накладная)
					КонецЕсли
				Иначе
					Если ЮрЛица.Найти(ДанныеСтроки.РСК_Накладная) = Неопределено Тогда
						ЮрЛица.Добавить(ДанныеСтроки.РСК_Накладная)
					КонецЕсли
				КонецЕсли
			КонецЕсли
		КонецЕсли
	КонецЦикла;
	
	ПечатьКомплектаДокументовЗавершение(СписокРеализаций, ЮрЛица, ФизЛица)
	//++РС Консалт: Минаков А.С. Задача 21223
			
КонецПроцедуры

&НаКлиенте
Процедура РСК_ПечатьКомплектаДокументовВыделенныеВместо(Команда)
	
	//++РС Консалт: Минаков А.С. Задача 21223
	СписокРеализаций = Новый Массив;
	ЮрЛица = Новый Массив;
	ФизЛица = Новый Массив;
	
	Для Каждого ИДЭлемента Из Элементы.Маршрут.ВыделенныеСтроки Цикл;
		ДанныеСтрокиМаршрут = Элементы.Маршрут.ДанныеСтроки(ИДЭлемента);
		НайденныеСтроки = Объект.Распоряжения.НайтиСтроки(Новый Структура("КлючСвязи", ДанныеСтрокиМаршрут.КлючСвязи));
		Для Каждого ДанныеСтроки Из НайденныеСтроки Цикл
			Если ЗначениеЗаполнено(ДанныеСтроки.РСК_Накладная) Тогда
				Если ТипЗнч(ДанныеСтроки.РСК_Накладная) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
					Если СписокРеализаций.Найти(ДанныеСтроки.РСК_Накладная) = Неопределено Тогда 
						СписокРеализаций.Добавить(ДанныеСтроки.РСК_Накладная)
					КонецЕсли;
					
					ЮрФизЛицо = ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(ДанныеСтроки.РСК_Накладная, "Контрагент.ЮрФизЛицо");
					
					Если ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ФизЛицо") Тогда 
						Если ФизЛица.Найти(ДанныеСтроки.РСК_Накладная) = Неопределено Тогда
							ФизЛица.Добавить(ДанныеСтроки.РСК_Накладная)
						КонецЕсли
					Иначе
						Если ЮрЛица.Найти(ДанныеСтроки.РСК_Накладная) = Неопределено Тогда
							ЮрЛица.Добавить(ДанныеСтроки.РСК_Накладная)
						КонецЕсли
					КонецЕсли
				КонецЕсли
			КонецЕсли
		КонецЦикла
	КонецЦикла;
	
	ПечатьКомплектаДокументовЗавершение(СписокРеализаций, ЮрЛица, ФизЛица) 
	//++РС Консалт: Минаков А.С. Задача 21223
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьКомплектаДокументовЗавершение(СписокРеализаций, ЮрЛица, ФизЛица)
	
	//++РС Консалт: Минаков А.С. Задача 21223
	ПФ_ТоварныйЧек = реа_ОбщийСерверПовтИсп.ПолучитьПредопределенноеЗначение("ПФ_ТоварныйЧек");
	ПФ_ПамяткаВодителю = реа_ОбщийСерверПовтИсп.ПолучитьПредопределенноеЗначение("ПФ_ПамяткаВодителю");
	
	Если СписокРеализаций.Количество() Тогда
		МодульУправлениеПечатьюСлужебныйКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеПечатьюСлужебныйКлиент");
		
		Если ФизЛица.Количество() Тогда
			МодульУправлениеПечатьюСлужебныйКлиент.ВыполнитьОткрытиеПечатнойФормы(
			ПФ_ТоварныйЧек,
			"Товарный чек",
			ФизЛица,
			ЭтаФорма,
			Истина)	
		КонецЕсли;
		
		Если ЮрЛица.Количество() Тогда			
			УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Обработка.ПечатьОбщихФорм", "УПД", ЮрЛица, ЭтаФорма, Новый Структура("РС_Копии", 3))		
		КонецЕсли		
	КонецЕсли
	//++РС Консалт: Минаков А.С. Задача 21223
	
КонецПроцедуры	

&НаСервере
Функция ПоместитьКомплектПечатныхФормВоВременноеХранилищеСервер(Отбор)
	
	//++РС Консалт: Минаков А.С. Задача 21223
	Возврат ПоместитьВоВременноеХранилище(КомплектПечатныхФорм.Выгрузить(КомплектПечатныхФорм.НайтиСтроки(Новый Структура("ВидДокумента", Отбор))))
	//++РС Консалт: Минаков А.С. Задача 21223
	
КонецФункции

&НаСервере
&ИзменениеИКонтроль("ТекстЗапросаИзмененныеДобавленныеСтрокиРаспоряжений")
Функция РСК_ТекстЗапросаИзмененныеДобавленныеСтрокиРаспоряжений()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИсходнаяТаблица.НомерСтроки,
	|	ИсходнаяТаблица.Распоряжение,
	|	ИсходнаяТаблица.Склад,
	|	ИсходнаяТаблица.Вес,
	|	ИсходнаяТаблица.Объем
	|ПОМЕСТИТЬ ИсходнаяТаблица
	|ИЗ
	|	&ИсходнаяТаблица КАК ИсходнаяТаблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодобранныеРаспоряжения.Распоряжение,
	|	ПодобранныеРаспоряжения.Вес,
	|	ПодобранныеРаспоряжения.Объем,
	|	ПодобранныеРаспоряжения.Перевозчик,
	|	ПодобранныеРаспоряжения.ПолучательОтправитель,
	|	ПодобранныеРаспоряжения.ВремяС,
	|	ПодобранныеРаспоряжения.ВремяПо,
	|	ПодобранныеРаспоряжения.ДополнительнаяИнформация,
	|	ПодобранныеРаспоряжения.Склад,
	|	ПодобранныеРаспоряжения.Адрес,
	|	ПодобранныеРаспоряжения.АдресЗначенияПолей,
	|	ПодобранныеРаспоряжения.Зона
	|ПОМЕСТИТЬ ПодобранныеРаспоряжения
	|ИЗ
	|	&ПодобранныеРаспоряжения КАК ПодобранныеРаспоряжения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсходныеТовары.Распоряжение,
	|	ИсходныеТовары.Склад,
	|	ИсходныеТовары.ПолучательОтправитель,
	|	ИсходныеТовары.Номенклатура,
	|	ИсходныеТовары.Характеристика,
	|	ИсходныеТовары.Назначение,
	|	ИсходныеТовары.Серия,
	|	ИсходныеТовары.Количество,
	|	ИсходныеТовары.ВсеТовары
	|ПОМЕСТИТЬ ИсходныеТовары
	|ИЗ
	|	&ИсходныеТовары КАК ИсходныеТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодобранныеТовары.Распоряжение,
	|	ПодобранныеТовары.Склад,
	|	ПодобранныеТовары.ПолучательОтправитель,
	|	ПодобранныеТовары.Номенклатура,
	|	ПодобранныеТовары.Характеристика,
	|	ПодобранныеТовары.Назначение,
	|	ПодобранныеТовары.Серия,
	|	ПодобранныеТовары.Количество,
	|	ПодобранныеТовары.ВсеТовары
	|ПОМЕСТИТЬ ПодобранныеТовары
	|ИЗ
	|	&ПодобранныеТовары КАК ПодобранныеТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РаспоряженияСвернутые.Распоряжение,
	|	РаспоряженияСвернутые.Склад,
	|	СУММА(РаспоряженияСвернутые.Вес) КАК Вес,
	|	СУММА(РаспоряженияСвернутые.Объем) КАК Объем,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ИсходнаяТаблица.Распоряжение ЕСТЬ NULL 
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ) КАК ИзмененнаяСтрока
	|ПОМЕСТИТЬ РаспоряженияСвернутые
	|ИЗ
	|	ПодобранныеРаспоряжения КАК РаспоряженияСвернутые
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИсходнаяТаблица КАК ИсходнаяТаблица
	|		ПО (ИсходнаяТаблица.Распоряжение = РаспоряженияСвернутые.Распоряжение)
	|			И (ИсходнаяТаблица.Склад = РаспоряженияСвернутые.Склад)
	|
	|СГРУППИРОВАТЬ ПО
	|	РаспоряженияСвернутые.Склад,
	|	РаспоряженияСвернутые.Распоряжение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИзмененныеСтроки.Вес,
	|	ИзмененныеСтроки.Объем,
	|	ИсходнаяТаблица.НомерСтроки
	|ИЗ
	|	РаспоряженияСвернутые КАК ИзмененныеСтроки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИсходнаяТаблица КАК ИсходнаяТаблица
	|		ПО (ИсходнаяТаблица.Распоряжение = ИзмененныеСтроки.Распоряжение)
	|			И (ИсходнаяТаблица.Склад = ИзмененныеСтроки.Склад)
	|ГДЕ
	|	ИзмененныеСтроки.ИзмененнаяСтрока
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДобавляемыеСтроки.Распоряжение,
	|	РаспоряженияСвернутые.Вес,
	|	ДобавляемыеСтроки.Объем,
	|	ДобавляемыеСтроки.Перевозчик,
	|	ДобавляемыеСтроки.ПолучательОтправитель,
	|	ДобавляемыеСтроки.ВремяС,
	|	ДобавляемыеСтроки.ВремяПо,
	|	ДобавляемыеСтроки.ДополнительнаяИнформация,
	|	ДобавляемыеСтроки.Склад,
	|	ДобавляемыеСтроки.Адрес,
	|	ДобавляемыеСтроки.АдресЗначенияПолей,
	|	ДобавляемыеСтроки.Зона,
	#Вставка
	//++РС Консалт: Минаков А.С. Задача 21223
	|	ЕСТЬNULL(Накладные.Накладная, НЕОПРЕДЕЛЕНО) КАК РСК_Накладная,
	//++РС Консалт: Минаков А.С. Задача 21223
	#КонецВставки
	|	ДобавляемыеСтроки.Распоряжение Ссылка Документ.ПоручениеЭкспедитору КАК ЭтоПоручениеЭкспедитору
	|ИЗ
	|	ПодобранныеРаспоряжения КАК ДобавляемыеСтроки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РаспоряженияСвернутые КАК РаспоряженияСвернутые
	|		ПО (РаспоряженияСвернутые.Распоряжение = ДобавляемыеСтроки.Распоряжение)
	|			И (РаспоряженияСвернутые.Склад = ДобавляемыеСтроки.Склад)
	|			И (НЕ РаспоряженияСвернутые.ИзмененнаяСтрока)
	#Вставка
	//++РС Консалт: Минаков А.С. Задача 21223
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ПодобранныеРаспоряжения.Распоряжение КАК Распоряжение,
	|			ПодобранныеРаспоряжения.Склад КАК Склад,
	|			МАКСИМУМ(ДанныеДокумента.Ссылка) КАК Накладная
	|		ИЗ
	|			Документ.РеализацияТоваровУслуг КАК ДанныеДокумента
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПодобранныеРаспоряжения КАК ПодобранныеРаспоряжения
	|				ПО (ДанныеДокумента.Проведен)
	|					И (НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата, ДЕНЬ) = &ДатаОтгрузки)
	|					И (ДанныеДокумента.Склад = ПодобранныеРаспоряжения.Склад)
	|					И (ВЫБОР
	|						КОГДА ДанныеДокумента.РеализацияПоЗаказам
	|							ТОГДА ДанныеДокумента.ЗаказКлиента
	|						ИНАЧЕ ДанныеДокумента.Ссылка
	|					КОНЕЦ = ПодобранныеРаспоряжения.Распоряжение)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПодобранныеРаспоряжения.Распоряжение,
	|			ПодобранныеРаспоряжения.Склад
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ПодобранныеРаспоряжения.Распоряжение,
	|			ПодобранныеРаспоряжения.Склад,
	|			МАКСИМУМ(ДанныеДокумента.Ссылка)
	|		ИЗ
	|			Документ.ПеремещениеТоваров КАК ДанныеДокумента
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПодобранныеРаспоряжения КАК ПодобранныеРаспоряжения
	|				ПО (ДанныеДокумента.Проведен)
	|					И (НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата, ДЕНЬ) = &ДатаОтгрузки)
	|					И (ДанныеДокумента.СкладОтправитель = ПодобранныеРаспоряжения.Склад)
	|					И (ВЫБОР
	|						КОГДА ДанныеДокумента.ПеремещениеПоЗаказам
	|							ТОГДА ДанныеДокумента.ЗаказНаПеремещение
	|						ИНАЧЕ ДанныеДокумента.Ссылка
	|					КОНЕЦ = ПодобранныеРаспоряжения.Распоряжение)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПодобранныеРаспоряжения.Распоряжение,
	|			ПодобранныеРаспоряжения.Склад) КАК Накладные
	|		ПО ДобавляемыеСтроки.Распоряжение = Накладные.Распоряжение
	|			И ДобавляемыеСтроки.Склад = Накладные.Склад
	//++РС Консалт: Минаков А.С. Задача 21223
	#КонецВставки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодобранныеТовары.Распоряжение,
	|	ПодобранныеТовары.Склад,
	|	ПодобранныеТовары.ПолучательОтправитель,
	|	ПодобранныеТовары.Номенклатура,
	|	ПодобранныеТовары.Характеристика,
	|	ПодобранныеТовары.Назначение,
	|	ПодобранныеТовары.Серия,
	|	ПодобранныеТовары.Количество,
	|	ПодобранныеТовары.ВсеТовары
	|ИЗ
	|	ПодобранныеТовары КАК ПодобранныеТовары";

	Возврат ТекстЗапроса;

КонецФункции

&НаСервереБезКонтекста
Функция ТекстЗапросаИзмененныеДобавленныеСтрокиТранзит()
	
	//++ РС Консалт: Минаков А.С. Задача 20226
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИсходнаяТаблица.НомерСтроки,
	|	ИсходнаяТаблица.Распоряжение,
	|	ИсходнаяТаблица.Склад,
	|	ИсходнаяТаблица.Вес,
	|	ИсходнаяТаблица.Объем
	|ПОМЕСТИТЬ ИсходнаяТаблица
	|ИЗ
	|	&ИсходнаяТаблица КАК ИсходнаяТаблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодобранныеРаспоряжения.Распоряжение,
	|	ПодобранныеРаспоряжения.Вес,
	|	ПодобранныеРаспоряжения.Объем,
	|	ПодобранныеРаспоряжения.Перевозчик,
	|	ПодобранныеРаспоряжения.ПолучательОтправитель,
	|	ПодобранныеРаспоряжения.ВремяС,
	|	ПодобранныеРаспоряжения.ВремяПо,
	|	ПодобранныеРаспоряжения.ДополнительнаяИнформация,
	|	ПодобранныеРаспоряжения.Склад,
	|	ПодобранныеРаспоряжения.Адрес,
	|	ПодобранныеРаспоряжения.АдресЗначенияПолей,
	|	ПодобранныеРаспоряжения.Зона,
	|	ПодобранныеРаспоряжения.РСК_Накладная,
	|	ПодобранныеРаспоряжения.РСК_Транзитная
	|ПОМЕСТИТЬ ПодобранныеРаспоряжения
	|ИЗ
	|	&ПодобранныеРаспоряжения КАК ПодобранныеРаспоряжения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсходныеТовары.Распоряжение,
	|	ИсходныеТовары.Склад,
	|	ИсходныеТовары.ПолучательОтправитель,
	|	ИсходныеТовары.Номенклатура,
	|	ИсходныеТовары.Характеристика,
	|	ИсходныеТовары.Назначение,
	|	ИсходныеТовары.Серия,
	|	ИсходныеТовары.Количество,
	|	ИсходныеТовары.ВсеТовары
	|ПОМЕСТИТЬ ИсходныеТовары
	|ИЗ
	|	&ИсходныеТовары КАК ИсходныеТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодобранныеТовары.Распоряжение,
	|	ПодобранныеТовары.Склад,
	|	ПодобранныеТовары.ПолучательОтправитель,
	|	ПодобранныеТовары.Номенклатура,
	|	ПодобранныеТовары.Характеристика,
	|	ПодобранныеТовары.Назначение,
	|	ПодобранныеТовары.Серия,
	|	ПодобранныеТовары.Количество,
	|	ПодобранныеТовары.ВсеТовары
	|ПОМЕСТИТЬ ПодобранныеТовары
	|ИЗ
	|	&ПодобранныеТовары КАК ПодобранныеТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РаспоряженияСвернутые.Распоряжение,
	|	РаспоряженияСвернутые.Склад,
	|	СУММА(РаспоряженияСвернутые.Вес) КАК Вес,
	|	СУММА(РаспоряженияСвернутые.Объем) КАК Объем,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ИсходнаяТаблица.Распоряжение ЕСТЬ NULL 
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ) КАК ИзмененнаяСтрока
	|ПОМЕСТИТЬ РаспоряженияСвернутые
	|ИЗ
	|	ПодобранныеРаспоряжения КАК РаспоряженияСвернутые
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИсходнаяТаблица КАК ИсходнаяТаблица
	|		ПО (ИсходнаяТаблица.Распоряжение = РаспоряженияСвернутые.Распоряжение)
	|			И (ИсходнаяТаблица.Склад = РаспоряженияСвернутые.Склад)
	|
	|СГРУППИРОВАТЬ ПО
	|	РаспоряженияСвернутые.Склад,
	|	РаспоряженияСвернутые.Распоряжение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИзмененныеСтроки.Вес,
	|	ИзмененныеСтроки.Объем,
	|	ИсходнаяТаблица.НомерСтроки
	|ИЗ
	|	РаспоряженияСвернутые КАК ИзмененныеСтроки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИсходнаяТаблица КАК ИсходнаяТаблица
	|		ПО (ИсходнаяТаблица.Распоряжение = ИзмененныеСтроки.Распоряжение)
	|			И (ИсходнаяТаблица.Склад = ИзмененныеСтроки.Склад)
	|ГДЕ
	|	ИзмененныеСтроки.ИзмененнаяСтрока
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДобавляемыеСтроки.Распоряжение,
	|	РаспоряженияСвернутые.Вес,
	|	ДобавляемыеСтроки.Объем,
	|	ДобавляемыеСтроки.Перевозчик,
	|	ДобавляемыеСтроки.ПолучательОтправитель,
	|	ДобавляемыеСтроки.ВремяС,
	|	ДобавляемыеСтроки.ВремяПо,
	|	ДобавляемыеСтроки.ДополнительнаяИнформация,
	|	ДобавляемыеСтроки.Склад,
	|	ДобавляемыеСтроки.Адрес,
	|	ДобавляемыеСтроки.АдресЗначенияПолей,
	|	ДобавляемыеСтроки.Зона,
	|	ДобавляемыеСтроки.РСК_Накладная,
	|	ДобавляемыеСтроки.РСК_Транзитная,
	|	ДобавляемыеСтроки.Распоряжение Ссылка Документ.ПоручениеЭкспедитору КАК ЭтоПоручениеЭкспедитору
	|ИЗ
	|	ПодобранныеРаспоряжения КАК ДобавляемыеСтроки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РаспоряженияСвернутые КАК РаспоряженияСвернутые
	|		ПО (РаспоряженияСвернутые.Распоряжение = ДобавляемыеСтроки.Распоряжение)
	|			И (РаспоряженияСвернутые.Склад = ДобавляемыеСтроки.Склад)
	|			И (НЕ РаспоряженияСвернутые.ИзмененнаяСтрока)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодобранныеТовары.Распоряжение,
	|	ПодобранныеТовары.Склад,
	|	ПодобранныеТовары.ПолучательОтправитель,
	|	ПодобранныеТовары.Номенклатура,
	|	ПодобранныеТовары.Характеристика,
	|	ПодобранныеТовары.Назначение,
	|	ПодобранныеТовары.Серия,
	|	ПодобранныеТовары.Количество,
	|	ПодобранныеТовары.ВсеТовары
	|ИЗ
	|	ПодобранныеТовары КАК ПодобранныеТовары";

	Возврат ТекстЗапроса;
	//++ РС Консалт: Минаков А.С. Задача 20226

КонецФункции

&НаСервере
&ИзменениеИКонтроль("ПослеПодбораРаспоряженийСервер")
Процедура РСК_ПослеПодбораРаспоряженийСервер(СтруктураВозврата)

	Распоряжения = ПолучитьИзВременногоХранилища(СтруктураВозврата.АдресРаспоряжений);
	Товары = ПолучитьИзВременногоХранилища(СтруктураВозврата.АдресТоваров);
	
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	Если СтруктураВозврата.Свойство("Транзит") Тогда
		Запрос = Новый Запрос(ТекстЗапросаИзмененныеДобавленныеСтрокиТранзит());
	Иначе
		#КонецВставки
		Запрос = Новый Запрос(ТекстЗапросаИзмененныеДобавленныеСтрокиРаспоряжений());
		#Вставка
	КонецЕсли;	
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	Запрос.УстановитьПараметр("ИсходнаяТаблица",Объект.Распоряжения.Выгрузить());
	Запрос.УстановитьПараметр("ПодобранныеРаспоряжения", Распоряжения);
	Запрос.УстановитьПараметр("ИсходныеТовары", ТоварыКДоставке.Выгрузить());
	Запрос.УстановитьПараметр("ПодобранныеТовары", Товары);
	#Вставка
	//++РС Консалт: Минаков А.С. Задача 21223
	Запрос.УстановитьПараметр("ДатаОтгрузки", ?(ЗначениеЗаполнено(Объект.ДатаВремяРейсаПланС), НачалоДня(Объект.ДатаВремяРейсаПланС), НачалоДня(ТекущаяДатаСеанса())));
	//++РС Консалт: Минаков А.С. Задача 21223
	#КонецВставки

	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Модифицированность = Не РезультатЗапроса[5].Пустой()
	Или Не РезультатЗапроса[6].Пустой()
	Или Не РезультатЗапроса[7].Пустой();

	ИзмененныеДобавленныеСтроки = Новый Массив;
	СтрокаМаршрута = Неопределено;

	СтруктураПоиска = Новый Структура("Распоряжение,Склад");

	ВыборкаИзмененныеСтроки = РезультатЗапроса[5].Выбрать();

	Пока ВыборкаИзмененныеСтроки.Следующий() Цикл

		СтрокаРаспоряжений = Объект.Распоряжения[ВыборкаИзмененныеСтроки.НомерСтроки - 1];
		ИзменениеВес = ВыборкаИзмененныеСтроки.Вес - СтрокаРаспоряжений.Вес;
		ИзменениеОбъем = ВыборкаИзмененныеСтроки.Объем - СтрокаРаспоряжений.Объем;
		ЗаполнитьЗначенияСвойств(СтрокаРаспоряжений, ВыборкаИзмененныеСтроки);
		ИзменитьВесОбъемМаршрута(СтрокаРаспоряжений.КлючСвязи, ИзменениеВес, ИзменениеОбъем);

		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаРаспоряжений);
		// Товары будут заново добавлены, удалим строки до изменения
		Для Каждого СтрокаТовары Из ТоварыКДоставке.НайтиСтроки(СтруктураПоиска) Цикл
			ТоварыКДоставке.Удалить(СтрокаТовары);
		КонецЦикла;
		ИзмененныеДобавленныеСтроки.Добавить(СтрокаРаспоряжений);
	КонецЦикла;

	ВыборкаДобавляемыеСтроки = РезультатЗапроса[6].Выбрать();
	Пока ВыборкаДобавляемыеСтроки.Следующий() Цикл

		СтрокаРаспоряжений = Объект.Распоряжения.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаРаспоряжений, ВыборкаДобавляемыеСтроки);
		#Вставка
		//++ РС Консалт: Минаков А.С. Задача 20226
		СтрокаРаспоряжений.Доставлено = Истина;
		//++ РС Консалт: Минаков А.С. Задача 20226
		#КонецВставки

		СтрокаМаршрута = ДоставкаТоваров.ДобавитьИзменитьПунктПоРеквизитамДоставки(
		Объект.Маршрут, ВыборкаДобавляемыеСтроки, Объект.ДатаВремяРейсаПланС);
		#Вставка
		//++ РС Консалт: Минаков А.С. Задача 20226
		СтрокаМаршрута.Доставлено = Истина;
		//++ РС Консалт: Минаков А.С. Задача 20226
		#КонецВставки

		СтрокаРаспоряжений.КлючСвязи = СтрокаМаршрута.КлючСвязи;

		ИзмененныеДобавленныеСтроки.Добавить(СтрокаРаспоряжений);

	КонецЦикла;

	ТоварыИзмененныхИДобавленныхРаспоряжений = РезультатЗапроса[7].Выгрузить();
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТоварыИзмененныхИДобавленныхРаспоряжений, ТоварыКДоставке);

	ОбновитьИтоговыйВесОбъемЗаполненность(ЭтаФорма);

	ОбновитьСкладыПогрузки();
	ЗаполнитьСлужебныеРеквизитыМаршрута();
	ДоставкаТоваров.ЗаполнитьПризнакДоставляетсяПолностью(ТоварыИзмененныхИДобавленныхРаспоряжений,
	Объект.Распоряжения, ИзмененныеДобавленныеСтроки);

	Если СтрокаМаршрута <> Неопределено Тогда
		Элементы.Маршрут.ТекущаяСтрока = СтрокаМаршрута.ПолучитьИдентификатор();
	КонецЕсли;

КонецПроцедуры

&НаСервере
&Вместо("ЗаполнитьПоРасходнымОрдерамНаСервере")
Функция РСК_ЗаполнитьПоРасходнымОрдерамНаСервере()
	
	//++РС Консалт: Минаков А.С. Задача 21223
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ДатаОтгрузки = ?(ЗначениеЗаполнено(Объект.ДатаВремяРейсаПланС), Объект.ДатаВремяРейсаПланС, ТекущаяДата());
		
		ПараметрыОбновленияОрдера = РСК_ВызовСервера.ПараметрыОбновленияОрдера();
		
		Для Каждого ДанныеСтроки Из Объект.Распоряжения Цикл
			
			Если ДанныеСтроки.РСК_Транзитная Тогда
				Продолжить
			КонецЕсли;	
			
			ПараметрыОбновленияОрдера.ЗаданиеНаПеревозку = Объект.Ссылка;
			ПараметрыОбновленияОрдера.Распоряжение = ДанныеСтроки.Распоряжение;
			ПараметрыОбновленияОрдера.Склад = ДанныеСтроки.Склад;
			ПараметрыОбновленияОрдера.ДатаОтгрузки = ДатаОтгрузки;
			ПараметрыОбновленияОрдера.ЗаполнитьЗадание = Истина;
			ПараметрыОбновленияОрдера.НовыйСтатус = "КОтгрузке";
			ПараметрыОбновленияОрдера.ИсключаемыеСтатусы = "КОтгрузке,Отгружен";
			ПараметрыОбновленияОрдера.ЗаполнитьПоОтбору = Истина;
			
			РСК_ВызовСервера.ВыполнитьПроверкуИзменениеОрдера(ПараметрыОбновленияОрдера, Ложь)
		КонецЦикла
	КонецЕсли;	
	//++РС Консалт: Минаков А.С. Задача 21223
	
	Результат = ПродолжитьВызов();
	
	//++РС Консалт: Минаков А.С. Задача 21223
	ОбновитьСписокНакладных();	
	//++РС Консалт: Минаков А.С. Задача 21223
	Возврат Результат
	
КонецФункции

&НаСервере
&ИзменениеИКонтроль("ПослеРедактированияРаспоряженийСервер")
Процедура РСК_ПослеРедактированияРаспоряженийСервер(Результат)

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТоварыКДоставке.Распоряжение,
	|	ТоварыКДоставке.Склад,
	|	ТоварыКДоставке.ПолучательОтправитель,
	|	ТоварыКДоставке.Номенклатура,
	|	ТоварыКДоставке.Характеристика,
	|	ТоварыКДоставке.Назначение,
	|	ТоварыКДоставке.Серия,
	|	ТоварыКДоставке.Количество,
	|	ТоварыКДоставке.ВсеТовары
	|ПОМЕСТИТЬ ТоварыКДоставке
	|ИЗ
	|	&ТоварыКДоставке КАК ТоварыКДоставке
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКДоставке.Распоряжение,
	|	ТоварыКДоставке.Склад,
	|	ТоварыКДоставке.ПолучательОтправитель,
	|	ТоварыКДоставке.Номенклатура,
	|	ТоварыКДоставке.Характеристика,
	|	ТоварыКДоставке.Назначение,
	|	ТоварыКДоставке.Серия,
	|	ТоварыКДоставке.Количество,
	|	ТоварыКДоставке.ВсеТовары
	|ПОМЕСТИТЬ ТоварыКДоставкеОтредактированные
	|ИЗ
	|	&ТоварыКДоставкеОтредактированные КАК ТоварыКДоставке
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Распоряжения.КлючСвязи,
	|	Распоряжения.Распоряжение,
	|	Распоряжения.Вес,
	|	Распоряжения.Объем,
	|	Распоряжения.Перевозчик,
	|	Распоряжения.ПолучательОтправитель,
	|	Распоряжения.ВремяС,
	|	Распоряжения.ВремяПо,
	|	Распоряжения.ДополнительнаяИнформация,
	|	Распоряжения.Доставлено,
	|	Распоряжения.Склад,
	|	Распоряжения.ДоставляетсяПолностью
	#Вставка
	//++РС Консалт: Минаков А.С. Задача
	|	,Распоряжения.РСК_Накладная КАК РСК_Накладная,
	|	Распоряжения.РСК_Транзитная КАК РСК_Транзитная
	//++РС Консалт: Минаков А.С. Задача
	#КонецВставки
	|ПОМЕСТИТЬ Распоряжения
	|ИЗ
	|	&Распоряжения КАК Распоряжения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Распоряжения.КлючСвязи,
	|	Распоряжения.Распоряжение,
	|	Распоряжения.Вес,
	|	Распоряжения.Объем,
	|	Распоряжения.Перевозчик,
	|	Распоряжения.ПолучательОтправитель,
	|	Распоряжения.ВремяС,
	|	Распоряжения.ВремяПо,
	|	Распоряжения.ДополнительнаяИнформация,
	|	Распоряжения.Доставлено,
	|	Распоряжения.Склад,
	|	Распоряжения.ДоставляетсяПолностью
	#Вставка
	//++РС Консалт: Минаков А.С. Задача
	|	,Распоряжения.РСК_Накладная КАК РСК_Накладная,
	|	Распоряжения.РСК_Транзитная КАК РСК_Транзитная
	//++РС Консалт: Минаков А.С. Задача
	#КонецВставки
	|ПОМЕСТИТЬ РаспоряженияОтредактированные
	|ИЗ
	|	&РаспоряженияОтредактированные КАК Распоряжения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РаспоряженияОтредактированные.КлючСвязи,
	|	РаспоряженияОтредактированные.Распоряжение,
	|	РаспоряженияОтредактированные.Перевозчик,
	|	РаспоряженияОтредактированные.ПолучательОтправитель,
	|	РаспоряженияОтредактированные.ВремяС,
	|	РаспоряженияОтредактированные.ВремяПо,
	|	РаспоряженияОтредактированные.ДополнительнаяИнформация,
	|	РаспоряженияОтредактированные.Склад,
	|	РаспоряженияОтредактированные.Вес КАК Вес,
	|	РаспоряженияОтредактированные.Объем КАК Объем,
	|	РаспоряженияОтредактированные.Доставлено КАК Доставлено,
	|	РаспоряженияОтредактированные.ДоставляетсяПолностью КАК ДоставляетсяПолностью
	#Вставка
	//++РС Консалт: Минаков А.С. Задача
	|	,РаспоряженияОтредактированные.РСК_Накладная КАК РСК_Накладная,
	|	РаспоряженияОтредактированные.РСК_Транзитная КАК РСК_Транзитная
	//++РС Консалт: Минаков А.С. Задача
	#КонецВставки
	|ПОМЕСТИТЬ РаспоряженияРезультат
	|ИЗ
	|	РаспоряженияОтредактированные КАК РаспоряженияОтредактированные
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Распоряжения.КлючСвязи,
	|	Распоряжения.Распоряжение,
	|	Распоряжения.Перевозчик,
	|	Распоряжения.ПолучательОтправитель,
	|	Распоряжения.ВремяС,
	|	Распоряжения.ВремяПо,
	|	Распоряжения.ДополнительнаяИнформация,
	|	Распоряжения.Склад,
	|	Распоряжения.Вес,
	|	Распоряжения.Объем,
	|	Распоряжения.Доставлено,
	|	Распоряжения.ДоставляетсяПолностью
	#Вставка
	//++РС Консалт: Минаков А.С. Задача
	|	,Распоряжения.РСК_Накладная КАК РСК_Накладная,
	|	Распоряжения.РСК_Транзитная КАК РСК_Транзитная
	//++РС Консалт: Минаков А.С. Задача
	#КонецВставки
	|ИЗ
	|	Распоряжения КАК Распоряжения
	|ГДЕ
	|	Распоряжения.КлючСвязи <> &КлючСвязи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УдаленныеРаспоряжения.Распоряжение
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Распоряжения.Распоряжение КАК Распоряжение,
	|		1 КАК ПолеСворачивания
	|	ИЗ
	|		Распоряжения КАК Распоряжения
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		РаспоряженияРезультат.Распоряжение,
	|		-1
	|	ИЗ
	|		РаспоряженияРезультат КАК РаспоряженияРезультат) КАК УдаленныеРаспоряжения
	|
	|СГРУППИРОВАТЬ ПО
	|	УдаленныеРаспоряжения.Распоряжение
	|
	|ИМЕЮЩИЕ
	|	СУММА(УдаленныеРаспоряжения.ПолеСворачивания) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РаспоряженияРезультат.КлючСвязи,
	|	РаспоряженияРезультат.Распоряжение,
	|	РаспоряженияРезультат.Перевозчик,
	|	РаспоряженияРезультат.ПолучательОтправитель,
	|	РаспоряженияРезультат.ВремяС,
	|	РаспоряженияРезультат.ВремяПо,
	|	РаспоряженияРезультат.ДополнительнаяИнформация,
	|	РаспоряженияРезультат.Склад,
	|	РаспоряженияРезультат.Вес,
	|	РаспоряженияРезультат.Объем,
	|	РаспоряженияРезультат.Доставлено,
	|	РаспоряженияРезультат.ДоставляетсяПолностью
	#Вставка
	//++РС Консалт: Минаков А.С. Задача
	|	,РаспоряженияРезультат.РСК_Накладная КАК РСК_Накладная,
	|	РаспоряженияРезультат.РСК_Транзитная КАК РСК_Транзитная
	//++РС Консалт: Минаков А.С. Задача
	#КонецВставки
	|ИЗ
	|	РаспоряженияРезультат КАК РаспоряженияРезультат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(РаспоряженияОтредактированные.Вес) КАК Вес,
	|	СУММА(РаспоряженияОтредактированные.Объем) КАК Объем,
	|	МИНИМУМ(РаспоряженияОтредактированные.Доставлено) КАК Доставлено,
	|	КОЛИЧЕСТВО(*) КАК КоличествоРаспоряжений
	|ИЗ
	|	РаспоряженияОтредактированные КАК РаспоряженияОтредактированные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКДоставке.Распоряжение,
	|	ТоварыКДоставке.Склад,
	|	ТоварыКДоставке.ПолучательОтправитель,
	|	ТоварыКДоставке.Номенклатура,
	|	ТоварыКДоставке.Характеристика,
	|	ТоварыКДоставке.Назначение,
	|	ТоварыКДоставке.Серия,
	|	ТоварыКДоставке.Количество,
	|	ТоварыКДоставке.ВсеТовары
	|ИЗ
	|	ТоварыКДоставке КАК ТоварыКДоставке
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Распоряжения КАК Распоряжения
	|		ПО (Распоряжения.Распоряжение = ТоварыКДоставке.Распоряжение)
	|			И (Распоряжения.Склад = ТоварыКДоставке.Склад)
	|ГДЕ
	|	Распоряжения.КлючСвязи <> &КлючСвязи
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыКДоставкеОтредактированные.Распоряжение,
	|	ТоварыКДоставкеОтредактированные.Склад,
	|	ТоварыКДоставкеОтредактированные.ПолучательОтправитель,
	|	ТоварыКДоставкеОтредактированные.Номенклатура,
	|	ТоварыКДоставкеОтредактированные.Характеристика,
	|	ТоварыКДоставкеОтредактированные.Назначение,
	|	ТоварыКДоставкеОтредактированные.Серия,
	|	ТоварыКДоставкеОтредактированные.Количество,
	|	ТоварыКДоставкеОтредактированные.ВсеТовары
	|ИЗ
	|	ТоварыКДоставкеОтредактированные КАК ТоварыКДоставкеОтредактированные";

	Запрос = Новый Запрос(ТекстЗапроса);

	СтрокаПункт = Объект.Маршрут.НайтиПоИдентификатору(Элементы.Маршрут.ТекущаяСтрока);

	Запрос.УстановитьПараметр("РаспоряженияОтредактированные", ПолучитьИзВременногоХранилища(Результат.АдресРаспоряжений));
	Запрос.УстановитьПараметр("ТоварыКДоставкеОтредактированные", ПолучитьИзВременногоХранилища(Результат.АдресТоваровКДоставке));
	Запрос.УстановитьПараметр("ТоварыКДоставке", ТоварыКДоставке.Выгрузить());
	Запрос.УстановитьПараметр("Распоряжения", Объект.Распоряжения.Выгрузить());
	Запрос.УстановитьПараметр("КлючСвязи", СтрокаПункт.КлючСвязи);

	РезультатЗапроса = Запрос.ВыполнитьПакет();

	ВГраница = РезультатЗапроса.ВГраница();

	Выборка = РезультатЗапроса[ВГраница-1].Выбрать();
	Выборка.Следующий();
	Если Выборка.КоличествоРаспоряжений = 0 Тогда
		Объект.Маршрут.Удалить(СтрокаПункт);
	Иначе
		ЗаполнитьЗначенияСвойств(СтрокаПункт,Выборка);
	КонецЕсли;

	Объект.Распоряжения.Загрузить(РезультатЗапроса[ВГраница-2].Выгрузить());

	ТоварыКДоставке.Загрузить(РезультатЗапроса[ВГраница].Выгрузить());
	ДоставкаТоваров.ЗаполнитьПризнакДоставляетсяПолностью(ТоварыКДоставке.Выгрузить(), Объект.Распоряжения);

	ЗаполнитьСлужебныеРеквизитыМаршрута();
	ОбновитьИтоговыйВесОбъемЗаполненность(ЭтаФорма);
	ОбновитьСкладыПогрузки();

КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("ЗаполнитьСлужебныеРеквизитыМаршрута")
Процедура РСК_ЗаполнитьСлужебныеРеквизитыМаршрута(ОбновляемыеСтроки)

	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц; 
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Распоряжения.Распоряжение КАК Распоряжение,
	|	Распоряжения.Склад КАК Склад,
	|	Распоряжения.Перевозчик КАК Перевозчик,
	|	Распоряжения.ПолучательОтправитель КАК ПолучательОтправитель,
	|	Распоряжения.КлючСвязи КАК КлючСвязи,
	|	Распоряжения.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Распоряжения
	|ИЗ
	|	&Распоряжения КАК Распоряжения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Маршрут.Адрес КАК Адрес,
	|	Маршрут.АдресЗначенияПолей КАК АдресЗначенияПолей,
	|	Маршрут.НомерСтроки КАК НомерСтроки,
	|	Маршрут.КлючСвязи КАК КлючСвязи
	|ПОМЕСТИТЬ Маршрут
	|ИЗ
	|	&Маршрут КАК Маршрут
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку,
	|	Распоряжения.Распоряжение КАК Распоряжение,
	|	Распоряжения.Склад КАК Склад,
	|	Распоряжения.Перевозчик КАК ПеревозчикПартнер,
	#Удаление
	|	Распоряжения.ПолучательОтправитель КАК ПолучательОтправитель,
	#КонецУдаления
	#Вставка
	//++ РС Консалт: Минаков А.С. Задача 20226
	|	ВЫБОР КОГДА Распоряжения.Распоряжение.Контрагент ЕСТЬ NULL ТОГДА Распоряжения.ПолучательОтправитель ИНАЧЕ Распоряжения.Распоряжение.Контрагент КОНЕЦ КАК ПолучательОтправитель, 
	//++ РС Консалт: Минаков А.С. Задача 20226
	#КонецВставки
	|	Распоряжения.НомерСтроки КАК НомерСтрокиРаспоряжений,
	|	Маршрут.Адрес КАК АдресДоставки,
	|	Маршрут.АдресЗначенияПолей КАК АдресДоставкиЗначенияПолей,
	|	Маршрут.НомерСтроки КАК НомерСтрокиМаршрута
	|ПОМЕСТИТЬ РаспоряженияМаршрут
	|ИЗ
	|	Маршрут КАК Маршрут
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Распоряжения КАК Распоряжения
	|		ПО Маршрут.КлючСвязи = Распоряжения.КлючСвязи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РаспоряженияМаршрут.НомерСтрокиРаспоряжений КАК НомерСтрокиРаспоряжений,
	|	МАКСИМУМ(РаспоряженияМаршрут.НомерСтрокиМаршрута) КАК НомерСтрокиМаршрута,
	|	МАКСИМУМ(РаспоряженияМаршрут.ПеревозчикПартнер) КАК Перевозчик,
	|	МАКСИМУМ(РаспоряженияМаршрут.ПолучательОтправитель) КАК ПолучательОтправитель
	|ИЗ
	|	РаспоряженияМаршрут КАК РаспоряженияМаршрут
	|
	|СГРУППИРОВАТЬ ПО
	|	РаспоряженияМаршрут.НомерСтрокиРаспоряжений
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиМаршрута,
	|	НомерСтрокиРаспоряжений,
	|	МАКСИМУМ(РаспоряженияМаршрут.ПеревозчикПартнер),
	|	МАКСИМУМ(РаспоряженияМаршрут.ПолучательОтправитель)";

	Запрос.УстановитьПараметр("Распоряжения", Объект.Распоряжения.Выгрузить());
	Если ОбновляемыеСтроки = Неопределено Тогда
		Запрос.УстановитьПараметр("Маршрут", Объект.Маршрут.Выгрузить());
	Иначе
		Запрос.УстановитьПараметр("Маршрут", Объект.Маршрут.Выгрузить(ОбновляемыеСтроки));
	КонецЕсли;

	Запрос.УстановитьПараметр("ЗаданиеНаПеревозку",	Объект.Ссылка);

	Результат = Запрос.Выполнить().Выбрать();
	ШаблонСПеревозчиком = НСтр("ru = '%Перевозчик% (для %ПолучателиОтправители%)';
	|en = '%Перевозчик% (for %ПолучателиОтправители%)'");
	Пока Результат.СледующийПоЗначениюПоля("НомерСтрокиМаршрута") Цикл

		СтрокаМаршрута = Объект.Маршрут[Результат.НомерСтрокиМаршрута - 1];
		ПолучателиОтправителиПоПункту = "";
		КоличествоРаспоряжений = 0;

		Пока Результат.СледующийПоЗначениюПоля("Перевозчик") Цикл

			ПолучателиОтправителиПоПеревозчику = "";
			Пока Результат.СледующийПоЗначениюПоля("ПолучательОтправитель") Цикл

				Пока Результат.Следующий() Цикл
					КоличествоРаспоряжений = КоличествоРаспоряжений + 1;
				КонецЦикла;

				ПолучателиОтправителиПоПеревозчику = ПолучателиОтправителиПоПеревозчику + Результат.ПолучательОтправитель + "," + " ";
			КонецЦикла;
			ПолучателиОтправителиПоПеревозчику = Лев(ПолучателиОтправителиПоПеревозчику, СтрДлина(ПолучателиОтправителиПоПеревозчику)-2);
			Если ЗначениеЗаполнено(Результат.Перевозчик) Тогда
				ПолучателиОтправителиПоПеревозчику = СтрЗаменить(ШаблонСПеревозчиком, "%ПолучателиОтправители%", ПолучателиОтправителиПоПеревозчику);
				ПолучателиОтправителиПоПеревозчику = СтрЗаменить(ПолучателиОтправителиПоПеревозчику, "%Перевозчик%", Результат.Перевозчик);
			КонецЕсли;
			ПолучателиОтправителиПоПункту = ПолучателиОтправителиПоПункту + ПолучателиОтправителиПоПеревозчику + "," + " ";
		КонецЦикла;

		СтрокаМаршрута.ПолучателиОтправители = ПолучателиОтправителиПоПункту
		+ СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(КоличествоРаспоряжений, НСтр("ru = 'распоряжение, распоряжения, распоряжений';
		|en = 'reference, reference, references'"))
		+ НСтр("ru = '...';
		|en = '...'");

		СтрокаМаршрута.ВремяСБезДаты   = ДоставкаТоваровКлиентСервер.ВремяБезДаты(СтрокаМаршрута.ВремяС);
		СтрокаМаршрута.ВремяПоБезДаты  = ДоставкаТоваровКлиентСервер.ВремяБезДаты(СтрокаМаршрута.ВремяПо);

	КонецЦикла;

	ЗаполнитьСлужебныеРеквизитыМаршрутаЛокализация(МенеджерВременныхТаблиц);

КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 07.11.2022 Тикет 21731
//e1cib/data/Документ.Задание?ref=b103112bebd786a8445289b23ad52d81
Процедура РСК_УпорядочитьПоВозрастаниюПосле(Команда)
	ТЭ = Элементы.тзАкты.ТекущийЭлемент;
	Если ТЭ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ПолеДляСортировки = СтрЗаменить(ТЭ.Имя, "тзАкты", "");
	тзАкты.Сортировать(ПолеДляСортировки + " ВОЗР");
	ИзменитьПорядокРаспоряженийНаСервере();
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 07.11.2022 Тикет 21731
//e1cib/data/Документ.Задание?ref=b103112bebd786a8445289b23ad52d81
&НаКлиенте
Процедура РСК_УпорядочитьПоУбываниюПосле(Команда)
	ТЭ = Элементы.тзАкты.ТекущийЭлемент;
	Если ТЭ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ПолеДляСортировки = СтрЗаменить(ТЭ.Имя, "тзАкты", "");
	тзАкты.Сортировать(ПолеДляСортировки + " УБЫВ");
	ИзменитьПорядокРаспоряженийНаСервере();
КонецПроцедуры

&НаСервере
//++ РС Консалт: Трофимов Евгений 07.11.2022 Тикет 21731
//e1cib/data/Документ.Задание?ref=b103112bebd786a8445289b23ad52d81
Процедура ИзменитьПорядокРаспоряженийНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПоручениеЭкспедитору.Ссылка КАК Распоряжение,
		|	МАКСИМУМ(ПоручениеЭкспедитору.Пункт) КАК ПолучательОтправитель,
		|	МАКСИМУМ(ПоручениеЭкспедитору.Склад) КАК Склад,
		|	МАКСИМУМ(ПОДСТРОКА(ЕСТЬNULL(ПартнерыКонтактнаяИнформация.Представление, """"), 1, 150)) КАК Адрес,
		|	МАКСИМУМ(ПоручениеЭкспедитору.ЗонаДоставки) КАК Зона
		|ИЗ
		|	Документ.ПоручениеЭкспедитору КАК ПоручениеЭкспедитору
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партнеры.КонтактнаяИнформация КАК ПартнерыКонтактнаяИнформация
		|		ПО ПоручениеЭкспедитору.Пункт = ПартнерыКонтактнаяИнформация.Ссылка
		|			И (ПартнерыКонтактнаяИнформация.Тип = &ТипАдрес)
		|ГДЕ
		|	ПоручениеЭкспедитору.Ссылка В(&МассивПоручений)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоручениеЭкспедитору.Ссылка";
	Запрос.УстановитьПараметр("ТипАдрес", Перечисления.ТипыКонтактнойИнформации.Адрес);
	Запрос.УстановитьПараметр("МассивПоручений", тзАкты.Выгрузить().ВыгрузитьКолонку("Акт"));
	Выборка = Запрос.Выполнить().Выбрать();
	Объект.Маршрут.Очистить();
	Объект.Распоряжения.Очистить();
	Для Каждого Стр Из тзАкты Цикл
		Выборка.Сбросить();
		Выборка.НайтиСледующий(Стр.Акт, "Распоряжение");
		КлючСвязи = Строка(Новый УникальныйИдентификатор());
			
		НовСтр = Объект.Маршрут.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Выборка);
		НовСтр.ВремяС = Объект.ДатаВремяРейсаПланС;
		НовСтр.ВремяПо = Объект.ДатаВремяРейсаПланПо;
		НовСтр.КлючСвязи = КлючСвязи;

		НовСтр = Объект.Распоряжения.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Выборка);
		НовСтр.КлючСвязи = КлючСвязи;
		НовСтр.ДоставляетсяПолностью = Истина;
	КонецЦикла;
	
	Модифицированность = Истина;	

КонецПроцедуры

&НаКлиенте
Процедура РСК_ПеренестиВДругуюЗагрузочнуюВедомостьПосле(Команда)
	//++ РС Консалт: Трофимов Евгений 10.11.2022 Задача 21774
	//e1cib/data/Документ.Задание?ref=965d336b23679ef348b8eb7aa54d9bdf
	ВыбранныеСтроки = тзАкты.НайтиСтроки(Новый Структура("Выбран", Истина));
	Если ВыбранныеСтроки.Количество() = 0 Тогда
		ПоказатьПредупреждение(,"Не выбрано ни одного акта");
		Возврат;
	КонецЕсли;
	Акты = Новый СписокЗначений;
	Для Каждого Стр Из ВыбранныеСтроки Цикл
		Акты.Добавить(Стр.Акт);
	КонецЦикла;
	Парам = Новый Структура("Акты", Акты);
	ОткрытьФорму("Документ.ЗаданиеНаПеревозку.Форма.РСК_ПереносАктовВДругуюЗагрузочнуюВедомость",Парам,ЭтаФорма);
	//-- КонецЗадачи 21774
КонецПроцедуры

&НаКлиенте
Процедура РСК_ВключитьВОтчетПоВыдачеПосле(Команда)
	//++ РС Консалт: Трофимов Евгений 30.11.2022 Задача 22184
	//e1cib/data/Документ.Задание?ref=bad28d29de103210439d8f3b1785bb2b
	ВыбранныеСтроки = тзАкты.НайтиСтроки(Новый Структура("Выбран", Истина));
	Если ВыбранныеСтроки.Количество() = 0 Тогда
		ПоказатьПредупреждение(,"Не выбрано ни одного акта");
		Возврат;
	КонецЕсли;
	Акты = Новый Массив;
	Для Каждого Стр Из ВыбранныеСтроки Цикл
		Акты.Добавить(Стр.Акт);
	КонецЦикла;
	Парам = Новый Структура("МассивАктов", Акты);
	ОткрытьФорму("Документ.РСК_ОтчетПоВыдачеТСР.Форма.ФормаДокумента", Парам, ЭтаФорма);
	//-- КонецЗадачи 22184	
КонецПроцедуры

&НаСервере
&После("УстановитьУсловноеОформление")
Процедура РСК_УстановитьУсловноеОформление()
	//++ РС Консалт: Трофимов Евгений 10.11.2022 Задача 21815
	//e1cib/data/Документ.Задание?ref=a894ff240508daa54c201185fb9bd77d
	//Полянская Ольга: Надо выделить цветом акты в следующих статусах : 
	//"Отгружен"-синий, "Выдан"-светло-зеленый, " В отчете"-темно-зеленый, остальные статусы оставить в системном цвете
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.тзАкты.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("тзАкты.СтатусАкта");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.РСК_СтатусыАктовВыдачи.Отгружен;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", Новый Цвет(204, 255, 255));  //голубой
	
	// -- -- -- -- 
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.тзАкты.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("тзАкты.СтатусАкта");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.РСК_СтатусыАктовВыдачи.Выдан;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", Новый Цвет(204, 255, 204));  //светло-зелёный
	
	// -- -- -- -- 
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.тзАкты.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("тзАкты.СтатусАкта");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.РСК_СтатусыАктовВыдачи.ВОтчете;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", Новый Цвет(153, 204, 0));  //темно-зеленый
	
	// -- -- -- -- 
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.тзАкты.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("тзАкты.СтатусАкта");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.РСК_СтатусыАктовВыдачи.Аннулирован;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", Новый Цвет(230, 230, 230));  //серый
	
	//-- КонецЗадачи 21815	
КонецПроцедуры

&НаКлиенте
Процедура РСК_ПодборАктаПосле(Команда)
	//++ РС Консалт: Трофимов Евгений 10.11.2022 Задача 21814
	//e1cib/data/Документ.Задание?ref=ac7b016dccdc4bc749e0e31726137427
	
	НастройкиКомпоновки = Новый НастройкиКомпоновкиДанных;
	ЭлементОтбора = НастройкиКомпоновки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
	ЭлементОтбора.Использование  = Истина;
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Ссылка");
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
	ЭлементОтбора.ПравоеЗначение = ПолучитьСписокНевыбранныхАктов();
	
	Если ЗначениеЗаполнено(Объект.РСК_ТерриториальнаяГруппа) Тогда
		ЭлементОтбора = НастройкиКомпоновки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
		ЭлементОтбора.Использование  = Истина;
		ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Заказ.реа_ТерриториальнаяГруппа");
		ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = Объект.РСК_ТерриториальнаяГруппа;
	КонецЕсли;
	
	Парам = Новый Структура;
	Парам.Вставить("РежимВыбора", Истина);
	Парам.Вставить("МножественныйВыбор", Ложь);
	Парам.Вставить("ЗакрыватьПриВыборе", Ложь);
	Парам.Вставить("ФиксированныеНастройки", НастройкиКомпоновки);
	
	ОткрытьФорму(
		"Документ.ПоручениеЭкспедитору.Форма.РСК_ФормаПодбораАктовВыдачиТСР",
		Парам,
		ЭтаФорма,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
	
	//-- КонецЗадачи 21814	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокНевыбранныхАктов()
	//++ РС Консалт: Трофимов Евгений 10.11.2022 Задача 21814
	//e1cib/data/Документ.Задание?ref=ac7b016dccdc4bc749e0e31726137427
	
	СписокНевыбранных = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаданиеНаПеревозкуРаспоряжения.Распоряжение КАК Распоряжение
		|ПОМЕСТИТЬ ИспользованныеРаспоряжения
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|ГДЕ
		|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка.РСК_ВыдачаТСР
		|	И НЕ ЗаданиеНаПеревозкуРаспоряжения.Ссылка.ПометкаУдаления
		|	И ЗаданиеНаПеревозкуРаспоряжения.Ссылка <> &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПоручениеЭкспедитору.Ссылка КАК ПоручениеЭкспедитору
		|ИЗ
		|	Документ.ПоручениеЭкспедитору.Основания КАК ПоручениеЭкспедиторуОснования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоручениеЭкспедитору КАК ПоручениеЭкспедитору
		|		ПО ПоручениеЭкспедиторуОснования.Ссылка = ПоручениеЭкспедитору.Ссылка
		|			И (ПоручениеЭкспедиторуОснования.НомерСтроки = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ИспользованныеРаспоряжения КАК ИспользованныеРаспоряжения
		|		ПО ПоручениеЭкспедиторуОснования.Ссылка = ИспользованныеРаспоряжения.Распоряжение
		|ГДЕ
		|	ПоручениеЭкспедитору.РСК_АктВыдачиТСР
		|	И НЕ ПоручениеЭкспедитору.ПометкаУдаления
		|	И ИспользованныеРаспоряжения.Распоряжение ЕСТЬ NULL
		|	И ПоручениеЭкспедитору.РСК_СтатусАктаВыдачиТСР В(&МассивСтатусыАктовВыдачи)
		|	И НЕ ПоручениеЭкспедитору.Ссылка В (&МассивВыбранныхРаспоряжений)";
	
	МассивСтатусыАктовВыдачи = Новый Массив;
	МассивСтатусыАктовВыдачи.Добавить(Перечисления.РСК_СтатусыАктовВыдачи.Создан);
	МассивСтатусыАктовВыдачи.Добавить(Перечисления.РСК_СтатусыАктовВыдачи.Подготовлен);
	МассивСтатусыАктовВыдачи.Добавить(Перечисления.РСК_СтатусыАктовВыдачи.ТребуетсяЗамена);
	Запрос.УстановитьПараметр("МассивСтатусыАктовВыдачи", МассивСтатусыАктовВыдачи);
	Запрос.УстановитьПараметр("МассивВыбранныхРаспоряжений", Объект.Распоряжения.Выгрузить().ВыгрузитьКолонку("Распоряжение"));
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	СписокНевыбранных.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ПоручениеЭкспедитору"));		
	Возврат СписокНевыбранных;
	
	//-- КонецЗадачи 21814	
КонецФункции // ПолучитьСписокНевыбранныхАктов()

&НаКлиенте
Процедура РСК_ДобавитьТранзитВместо(Команда)
	
	//++ РС Консалт: Минаков А.С. Задача 20226
	ОчиститьСообщения();
	
	Если ПроверитьБлокировкуЗадания() Тогда
		
		Если Не ЗначениеЗаполнено(Склад) Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Перед подбором транзита необходимо указать склад.'"));
			Возврат
		КонецЕсли;
		
		ОткрытьФормуПодбораТранзита()
		
	КонецЕсли
	//++ РС Консалт: Минаков А.С. Задача 20226
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуПодбораТранзита()
	
	//++ РС Консалт: Минаков А.С. Задача 20226
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Склад", Склад);
	ПараметрыФормы.Вставить("ЗаданиеНаПеревозку", Объект.Ссылка);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПодбораРаспоряжений", ЭтотОбъект);
	ОткрытьФорму("Документ.ЗаданиеНаПеревозку.Форма.РСК_ФормаПодбораТранзита", ПараметрыФормы,
		ЭтаФорма,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца)
	//++ РС Консалт: Минаков А.С. Задача 20226	
	
КонецПроцедуры

//++ РС Консалт: Трофимов Евгений 04.02.2023 Задача 23088
//e1cib/data/Документ.Задание?ref=abf6db76aafd7de84ef44e63a771c2e5
&НаКлиенте
Процедура РСК_ПечатьОтчетОДоставкеПосле(Команда)
	ПараметрыОткрытия = РСК_ВызовСервера.ПолучитьПараметрыОткрытияПечатнойФормы(
		Объект.Ссылка, 
		"Отчет о доставке"
	);
	ОткрытьФорму("ОбщаяФорма.ПечатьДокументов", ПараметрыОткрытия);
КонецПроцедуры


//++ РС Консалт: Минаков А.С. Задача 20226
ОтветПередЗаписью = Ложь
//++ РС Консалт: Минаков А.С. Задача 20226

	

