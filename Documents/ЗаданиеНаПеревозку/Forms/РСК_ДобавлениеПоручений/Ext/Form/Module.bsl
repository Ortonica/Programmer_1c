
&НаСервере
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Параметры.Свойство("АдресХраненияУжеВыбранных", АдресХраненияУжеВыбранных);
	ОбновитьДеревоПоручений();
КонецПроцедуры

&НаСервере
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура ОбновитьДеревоПоручений()

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаданиеНаПеревозкуРаспоряжения.Распоряжение КАК Распоряжение
		|ПОМЕСТИТЬ ИспользованныеРаспоряжения
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|ГДЕ
		|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка.РСК_ВыдачаТСР
		|	И НЕ ЗаданиеНаПеревозкуРаспоряжения.Ссылка.ПометкаУдаления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказКлиента.реа_ТерриториальнаяГруппа КАК ТерГруппа,
		|	ПоручениеЭкспедитору.ЗонаДоставки КАК Район,
		|	ПоручениеЭкспедитору.Ссылка КАК ПоручениеЭкспедитору,
		|	ПоручениеЭкспедитору.Пункт КАК Заявитель,
		|	Партнеры.РСК_СНИЛС КАК СНИЛС,
		|	ПоручениеЭкспедитору.РСК_НомерНаправления КАК НомерНаправления,
		|	ПоручениеЭкспедитору.РСК_ДатаНаправления КАК ДатаНаправления,
		|	ПОДСТРОКА(ЕСТЬNULL(КонтактМетаРегистрации.Представление, """"), 1, 150) КАК АдресРегистрации,
		|	ПОДСТРОКА(ЕСТЬNULL(КонтактМестаЖительства.Представление, """"), 1, 150) КАК АдресМестожительства,
		|	ПОДСТРОКА(ЕСТЬNULL(КонтактТелефон.Представление, """"), 1, 150) КАК Телефон,
		|	ПоручениеЭкспедитору.РСК_ТСР КАК ТСР,
		|	ПоручениеЭкспедитору.РСК_Номенклатура КАК Номенклатура,
		|	ПоручениеЭкспедитору.РСК_Количество КАК Количество,
		|	ПОДСТРОКА(Партнеры.Комментарий, 1, 150) КАК Комментарий
		|ИЗ
		|	Документ.ПоручениеЭкспедитору.Основания КАК ПоручениеЭкспедиторуОснования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоручениеЭкспедитору КАК ПоручениеЭкспедитору
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Партнеры КАК Партнеры
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партнеры.КонтактнаяИнформация КАК КонтактМестаЖительства
		|				ПО Партнеры.Ссылка = КонтактМестаЖительства.Ссылка
		|					И (КонтактМестаЖительства.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
		|					И (КонтактМестаЖительства.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресПартнера))
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партнеры.КонтактнаяИнформация КАК КонтактТелефон
		|				ПО Партнеры.Ссылка = КонтактТелефон.Ссылка
		|					И (КонтактТелефон.ВидДляСписка = &ВидТелефон)
		|			ПО ПоручениеЭкспедитору.Пункт = Партнеры.Ссылка
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партнеры.КонтактнаяИнформация КАК КонтактМетаРегистрации
		|			ПО (КонтактМетаРегистрации.Вид.ИдентификаторДляФормул = ""АдресРегистрации"")
		|				И ПоручениеЭкспедитору.Пункт = КонтактМетаРегистрации.Ссылка
		|		ПО ПоручениеЭкспедиторуОснования.Ссылка = ПоручениеЭкспедитору.Ссылка
		|			И (ПоручениеЭкспедиторуОснования.НомерСтроки = 1)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК ЗаказКлиента
		|		ПО ПоручениеЭкспедиторуОснования.Основание = ЗаказКлиента.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ИспользованныеРаспоряжения КАК ИспользованныеРаспоряжения
		|		ПО ПоручениеЭкспедиторуОснования.Ссылка = ИспользованныеРаспоряжения.Распоряжение
		|ГДЕ
		|	ПоручениеЭкспедитору.РСК_АктВыдачиТСР
		|	И НЕ ПоручениеЭкспедитору.ПометкаУдаления
		|	И ИспользованныеРаспоряжения.Распоряжение ЕСТЬ NULL
		|	И ПоручениеЭкспедитору.РСК_СтатусАктаВыдачиТСР В(&МассивСтатусыАктовВыдачи)
		|	И НЕ ПоручениеЭкспедитору.Ссылка В (&МассивВыбранныхРаспоряжений)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТерГруппа,
		|	Район,
		|	Заявитель
		|ИТОГИ ПО
		|	ТерГруппа,
		|	Район
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	МассивСтатусыАктовВыдачи = Новый Массив;
	МассивСтатусыАктовВыдачи.Добавить(Перечисления.РСК_СтатусыАктовВыдачи.Создан);
	МассивСтатусыАктовВыдачи.Добавить(Перечисления.РСК_СтатусыАктовВыдачи.Подготовлен);
	МассивСтатусыАктовВыдачи.Добавить(Перечисления.РСК_СтатусыАктовВыдачи.ТребуетсяЗамена);
	Запрос.УстановитьПараметр("МассивСтатусыАктовВыдачи", МассивСтатусыАктовВыдачи);
	Запрос.УстановитьПараметр("МассивВыбранныхРаспоряжений", ПолучитьИзВременногоХранилища(АдресХраненияУжеВыбранных));
	Запрос.УстановитьПараметр("ВидТелефон", Справочники.ВидыКонтактнойИнформации.ТелефонПартнера);
	
	Рез = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	Рез.Колонки.Вставить(0,"Пометка", Новый ОписаниеТипов("Число"));

	
	// Создание Реквизита формы типа ДанныеФормыДерево
	Если НЕ Элементы.Найти("ДеревоНаФорму") = Неопределено Тогда
		МассивУдаляемыхРеквизитов = Новый Массив; 
		МассивУдаляемыхРеквизитов.Добавить("ДеревоНаФорму"); 
		ИзменитьРеквизиты(, МассивУдаляемыхРеквизитов);
		ЭтаФорма.Элементы.Удалить(ЭтаФорма.Элементы.ДеревоНаФорму);
		
	    МассивДобавляемыхРеквизитов = Новый Массив;
	    МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("ДеревоНаФорму", Новый ОписаниеТипов("ДеревоЗначений")));
	    Для Каждого Колонка Из Рез.Колонки Цикл
	        МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "ДеревоНаФорму"));
		КонецЦикла;
	    ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
	Иначе
	    МассивДобавляемыхРеквизитов = Новый Массив;
	    МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("ДеревоНаФорму", Новый ОписаниеТипов("ДеревоЗначений")));
	    Для Каждого Колонка Из Рез.Колонки Цикл
	        МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "ДеревоНаФорму"));
		КонецЦикла;
	    ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
	КонецЕсли;
	
		

    // Преобразование объекта прикладного типа ДеревоЗначений
    // в реквизит управляемой формы (данные формы)
    ЗначениеВРеквизитФормы(Рез, "ДеревоНаФорму");
	
	 // Создание элемента формы типа ТаблицаФормы для отображения дерева
    ЭлементДерево = Элементы.Добавить("ДеревоНаФорму", Тип("ТаблицаФормы"));
    ЭлементДерево.ПутьКДанным = "ДеревоНаФорму";
    ЭлементДерево.Отображение = ОтображениеТаблицы.Дерево;
	ЭлементДерево.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;

    Для Каждого Колонка Из Рез.Колонки Цикл
        НовыйЭлемент = Элементы.Добавить(Колонка.Имя, Тип("ПолеФормы"), ЭлементДерево);
        НовыйЭлемент.ПутьКДанным = "ДеревоНаФорму." + Колонка.Имя;
		Если Колонка.Имя = "Пометка" Тогда
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
            НовыйЭлемент.ТриСостояния = Истина;
            НовыйЭлемент.УстановитьДействие("ПриИзменении", "ФлажокПриИзменении");
		Иначе
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		КонецЕсли;
    КонецЦикла;	

КонецПроцедуры // ОбновитьДеревоПоручений()

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура ФлажокПриИзменении(Элемент)
    ИДТекущейСтроки = Элементы["ДеревоНаФорму"].ТекущаяСтрока;
    Если ИДТекущейСтроки <> Неопределено Тогда
        ЭлементКоллекции = ЭтаФорма["ДеревоНаФорму"].НайтиПоИдентификатору(
            ИДТекущейСтроки);
        Если ЭлементКоллекции.Пометка = 2 Тогда
            ЭлементКоллекции.Пометка = 0;
        КонецЕсли;
        УстановкаФлажков(ЭлементКоллекции, ЭлементКоллекции.Пометка);
        Родитель = ЭлементКоллекции.ПолучитьРодителя();
        Пока Родитель <> Неопределено Цикл
            Родитель.Пометка = ?(УстановленноДляВсех(ЭлементКоллекции),
                ЭлементКоллекции.Пометка, 2);
            ЭлементКоллекции = Родитель;
            Родитель = ЭлементКоллекции.ПолучитьРодителя();
        КонецЦикла;
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура УстановкаФлажков(ЭлементКоллекции, ЗначениеПометки)
    ПодчинЭлементы = ЭлементКоллекции.ПолучитьЭлементы();
    Для Каждого ТекЭлемент Из ПодчинЭлементы Цикл
        ТекЭлемент.Пометка = ЗначениеПометки;
        УстановкаФлажков(ТекЭлемент, ТекЭлемент.Пометка);
    КонецЦикла;
КонецПроцедуры

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Функция УстановленноДляВсех(ЭлементКоллекции)
    СоседниеЭлементы =
        ЭлементКоллекции.ПолучитьРодителя().ПолучитьЭлементы();
    Для Каждого ТекЭлемент Из СоседниеЭлементы Цикл
        Если ТекЭлемент.Пометка <> ЭлементКоллекции.Пометка Тогда
            Возврат Ложь;
        КонецЕсли;
    КонецЦикла;
    Возврат Истина;
КонецФункции

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Функция ОбойтиДеревоРекурсивно(ЭлементыДерева,массивДоков)
	Для Каждого ЭлДерева Из ЭлементыДерева Цикл
		Пометка = ЭлДерева.Пометка;
		Если Пометка = 1 И Не ЭлДерева.ПоручениеЭкспедитору = NULL Тогда
			МассивДоков.Добавить(ЭлДерева.ПоручениеЭкспедитору);
		КонецЕсли;
        ОбойтиДеревоРекурсивно(ЭлДерева.ПолучитьЭлементы(),массивДоков);
	КонецЦикла;
	Возврат МассивДоков;
КонецФункции

&НаКлиенте
//++ РС Консалт: Трофимов Евгений 05.07.2022 Задача 17531
//e1cib/data/Документ.Задание?ref=bb163964a2ac42cd49116e65acb2bf5c
Процедура ПеренестиПорученияВЗаданиеНаПеревозку(Команда)
	МассивВыбранныхСсылок = Новый Массив;
	ВсеЭл = ЭтаФорма["ДеревоНаФорму"].ПолучитьЭлементы();
	МассивДоков = ОбойтиДеревоРекурсивно(ВсеЭл, МассивВыбранныхСсылок);
	Закрыть(МассивДоков);
КонецПроцедуры

