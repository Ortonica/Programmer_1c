
&ИзменениеИКонтроль("ТаблицаСостоянийЗаказов")
Функция РСК_ТаблицаСостоянийЗаказов(МассивСсылок)

	СоотвествиеТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивСсылок);

	ПервыйЗапрос = Истина;
	ТекстЗапросаВременныхТаблиц = ТекстЗапросаДляРасчетаДатСобытийСостоянийЗаказов()
	+ ТекстЗапросаДляРасчетаСостоянийОбеспеченияЗаказа()
	+ ТекстЗапросаРезервПревышаетОстатки()
	+ ТекстЗапросаЧастичноВНаличии()
	+ ТекстЗапросаДляРасчетаРасхожденийОрдерНакладная()
	//++ НЕ УТКА
	+ ТекстЗапросаДляРасчетаУслугДавальцуКОформлению()
	//-- НЕ УТКА
	+ ТекстЗапросаДопустимыхОтклонения(СоотвествиеТипов)
	+ ТекстЗапросаРасчетов()
	#Вставка
	//++РС Консалт: Минаков А.С. Задача 23304 
	+ ТекстЗапросаОплатыПоПрочимПорядкамРасчетов()
	//++РС Консалт: Минаков А.С. Задача 23304
	#КонецВставки
	;

	ТекстЗапроса = "";

	Для Каждого ТипДокумента Из СоотвествиеТипов Цикл

		Если Не ПервыйЗапрос Тогда 
			ТекстЗапроса = ТекстЗапроса + 
			" ОБЪЕДИНИТЬ ВСЕ ";
		КонецЕсли;
		Если ТипДокумента.Ключ = "Документ.ЗаказКлиента"
			//++ НЕ УТКА
			Или ТипДокумента.Ключ = "Документ.ЗаказДавальца"
			//-- НЕ УТКА
			Или ТипДокумента.Ключ = "Документ.ЗаявкаНаВозвратТоваровОтКлиента" Тогда

			МенеджерОбъекта             = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ТипДокумента.Ключ);
			ТекстЗапроса                = ТекстЗапроса + МенеджерОбъекта.ТекстЗапросаДляРасчетаСостоянийЗаказов();

			ПервыйЗапрос = Ложь;
		КонецЕсли;
	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапросаВременныхТаблиц + ТекстЗапроса;
	Запрос.УстановитьПараметр("МассивЗаказов", МассивСсылок);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("МенеджерСоздаетОрдера", Константы.РежимФормированияРасходныхОрдеров.Получить() = Перечисления.РежимыФормированияРасходныхОрдеров.Менеджером);
	Запрос.УстановитьПараметр("КонтролироватьЗакрытиеЗаказа", 
	ПолучитьФункциональнуюОпцию("НеЗакрыватьЗаказыКлиентовБезПолнойОплаты")
	ИЛИ ПолучитьФункциональнуюОпцию("НеЗакрыватьЗаказыКлиентовБезПолнойОтгрузки"));

	//++ НЕ УТКА
	Запрос.УстановитьПараметр("КонтролироватьЗакрытиеЗаказаДавальца", 
	ПолучитьФункциональнуюОпцию("НеЗакрыватьЗаказыДавальцевБезПолнойОплаты")
	ИЛИ ПолучитьФункциональнуюОпцию("НеЗакрыватьЗаказыДавальцевБезПолнойОтработки"));
	//-- НЕ УТКА

	Запрос.УстановитьПараметр("ИспользоватьРасширенныеВозможностиЗаказаКлиента", 
	ПолучитьФункциональнуюОпцию("ИспользоватьРасширенныеВозможностиЗаказаКлиента"));

	Запрос.УстановитьПараметр("МерныеТипыВеличин", Справочники.УпаковкиЕдиницыИзмерения.МерныеТипыЕдиницИзмерений());
	Запрос.УстановитьПараметр("ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров",
	Константы.ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров.Получить());

	ГраницыОборотов = ОбщегоНазначенияУТ.ГраницыОборотовРегистра("ЗаказыКлиентов",
	"ЗаказКлиента В (&МассивЗаказов)",
	Запрос.Параметры);

	Запрос.УстановитьПараметр("НачПериодЗаказыКлиентов", ГраницыОборотов.МинимальнаяДата);
	Запрос.УстановитьПараметр("КонПериодЗаказыКлиентов", ГраницыОборотов.МаксимальнаяДата);

	ГраницыОборотов = ОбщегоНазначенияУТ.ГраницыОборотовРегистра("ТоварыКОтгрузке",
	"ДокументОтгрузки В (&МассивЗаказов)",
	Запрос.Параметры);

	Запрос.УстановитьПараметр("НачПериодТоварыКОтгрузке", ГраницыОборотов.МинимальнаяДата);
	Запрос.УстановитьПараметр("КонПериодТоварыКОтгрузке", ГраницыОборотов.МаксимальнаяДата);

	ТаблицаСостояний = Запрос.Выполнить().Выгрузить();

	Возврат ТаблицаСостояний;

КонецФункции

Функция ТекстЗапросаОплатыПоПрочимПорядкамРасчетов()
	
	//++РС Консалт: Минаков А.С. Задача 23304	
	ТекстЗапроса =
	"
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеализацияТоваровУслуг.ЗаказКлиента КАК ЗаказКлиента,
	|	ПоступлениеБезналичныхДенежныхСредств.Ссылка КАК Регистратор
	|ПОМЕСТИТЬ ВтРегистраторы
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ПоступлениеБезналичныхДенежныхСредств
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО (РеализацияТоваровУслуг.ЗаказКлиента В (&МассивЗаказов))
	|			И (ПоступлениеБезналичныхДенежныхСредств.Ссылка.Проведен)
	|			И (РеализацияТоваровУслуг.Проведен)
	|			И ПоступлениеБезналичныхДенежныхСредств.ОснованиеПлатежа = РеализацияТоваровУслуг.Ссылка
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеализацияТоваровУслуг.ЗаказКлиента,
	|	РасчетыСКлиентами.Регистратор
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами КАК РасчетыСКлиентами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО (РеализацияТоваровУслуг.ЗаказКлиента В (&МассивЗаказов))
	|			И (РеализацияТоваровУслуг.Проведен)
	|			И РасчетыСКлиентами.ОбъектРасчетов.Объект = РеализацияТоваровУслуг.Ссылка
	|			И (ТИПЗНАЧЕНИЯ(РасчетыСКлиентами.Регистратор) В (ТИП(Документ.ВзаимозачетЗадолженности), ТИП(Документ.СписаниеБезналичныхДенежныхСредств)))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтРегистраторы.ЗаказКлиента КАК ЗаказКлиента,
	|	СУММА(РасчетыСКлиентами.КОплате) КАК КОплатеРасход
	|ПОМЕСТИТЬ ОплаченоПоЗаказамПрочиеПорядкиРасчетов
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами КАК РасчетыСКлиентами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРегистраторы КАК ВтРегистраторы
	|		ПО РасчетыСКлиентами.Регистратор = ВтРегистраторы.Регистратор
	|			И (РасчетыСКлиентами.Активность)
	|			И (РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|			И (РасчетыСКлиентами.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереносПлатежаМеждуФилиалами))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтРегистраторы.ЗаказКлиента
	|;
	|";
	
	Возврат ТекстЗапроса
	//++РС Консалт: Минаков А.С. Задача 23304
	
КонецФункции	
